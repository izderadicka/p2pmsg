{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6","program":"/home/ivan/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"blocking\"","--cfg","feature=\"default\"","--cfg","feature=\"dns\"","--cfg","feature=\"fnv\"","--cfg","feature=\"fs\"","--cfg","feature=\"full\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"io-driver\"","--cfg","feature=\"io-std\"","--cfg","feature=\"io-util\"","--cfg","feature=\"iovec\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"libc\"","--cfg","feature=\"macros\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"mio-named-pipes\"","--cfg","feature=\"mio-uds\"","--cfg","feature=\"net\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"process\"","--cfg","feature=\"rt-core\"","--cfg","feature=\"rt-threaded\"","--cfg","feature=\"rt-util\"","--cfg","feature=\"signal\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"slab\"","--cfg","feature=\"stream\"","--cfg","feature=\"sync\"","--cfg","feature=\"tcp\"","--cfg","feature=\"time\"","--cfg","feature=\"tokio-macros\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","--cfg","feature=\"winapi\"","-C","metadata=01eef97be216f0c9","-C","extra-filename=-01eef97be216f0c9","--out-dir","/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps","-L","dependency=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps","--extern","bytes=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libbytes-9c355a2175b06898.rmeta","--extern","fnv=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libfnv-c256c77f48548345.rmeta","--extern","futures_core=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libfutures_core-a432bea2d7cd63a6.rmeta","--extern","iovec=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libiovec-571ec38ef5d87315.rmeta","--extern","lazy_static=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/liblazy_static-53227e43dc577199.rmeta","--extern","libc=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/liblibc-526ac77dd875e440.rmeta","--extern","memchr=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libmemchr-9ffb1f310d7197d3.rmeta","--extern","mio=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libmio-0dd36d8b23463729.rmeta","--extern","mio_uds=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libmio_uds-abd6d0ddffe98a22.rmeta","--extern","num_cpus=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libnum_cpus-d3d765a61277edeb.rmeta","--extern","pin_project_lite=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libpin_project_lite-616a31c8039d1192.rmeta","--extern","signal_hook_registry=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libsignal_hook_registry-3f8421a1e8edd418.rmeta","--extern","slab=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libslab-6d31b7d62c494fb2.rmeta","--extern","tokio_macros=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libtokio_macros-bf5ab1ef5c2592fb.so","--cap-lints","allow","--error-format=json","--sysroot","/home/ivan/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libtokio-01eef97be216f0c9.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[18144510547798979,13530961230373979696]},"crate_root":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src","external_crates":[{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7827686636389194820,15662552692549508232]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","num":2,"id":{"name":"core","disambiguator":[8347428267238659886,10332094417061409504]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1363863465332800457,13848166988694336684]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12137614861726203495,15548133240156816566]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18056567842020430853,9313265962764064672]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17764581655047699045,8969240834890926963]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15105272547384731958,12075926336353145446]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18440455352970948901,15112185841299963639]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1364483041201605089,13268241566818872575]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14006621007583817116,4233624759020785085]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8672076995780005164,5844773395501633050]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[7980643601488589141,11238545750628155236]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[812282429613043422,12768483485645190371]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[16394268894339983760,18168038129299562657]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/try_join.rs","num":15,"id":{"name":"pin_project_lite","disambiguator":[18213178548997251024,1214920409436207200]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","num":16,"id":{"name":"bytes","disambiguator":[8357608236844742768,7778654025855472338]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/registry.rs","num":17,"id":{"name":"lazy_static","disambiguator":[9624401844497911781,4010866964393368059]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/platform.rs","num":18,"id":{"name":"mio","disambiguator":[11655758392788147812,2835185744843380184]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/platform.rs","num":19,"id":{"name":"net2","disambiguator":[7135259341378153903,1977570785548374052]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/ucred.rs","num":20,"id":{"name":"libc","disambiguator":[11675790186593603424,10926210964032055403]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/platform.rs","num":21,"id":{"name":"cfg_if","disambiguator":[6506699003559749933,1747892758779358380]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","num":22,"id":{"name":"iovec","disambiguator":[17701805990258064496,8735184238658594634]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","num":23,"id":{"name":"slab","disambiguator":[12219235850092579412,5778732648905521594]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/platform.rs","num":24,"id":{"name":"log","disambiguator":[14539691802802531194,8422554641718189063]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","num":25,"id":{"name":"mio_uds","disambiguator":[13977025636210316017,7657197205971982383]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","num":26,"id":{"name":"futures_core","disambiguator":[12488506343877259468,12744302483260328354]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","num":27,"id":{"name":"fnv","disambiguator":[1421088219513783535,9764086174914670488]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","num":28,"id":{"name":"tokio_macros","disambiguator":[11078576331405029133,5807142549688085677]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_until.rs","num":29,"id":{"name":"memchr","disambiguator":[6827091138237897929,13858733323875644729]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/mod.rs","num":30,"id":{"name":"num_cpus","disambiguator":[222165588890650472,17192722038879285505]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","num":31,"id":{"name":"signal_hook_registry","disambiguator":[3835173650074247621,13597142518217434980]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","num":32,"id":{"name":"arc_swap","disambiguator":[1487722849342492784,1793201308306916135]}}],"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":0,"byte_end":9229,"line_start":1,"line_end":279,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":650},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7979905,"byte_end":7979915,"line_start":28,"line_end":28,"column_start":27,"column_end":37},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":660},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7979968,"byte_end":7979982,"line_start":31,"line_end":31,"column_start":31,"column_end":45},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":691},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7980015,"byte_end":7980019,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":771},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7980062,"byte_end":7980071,"line_start":37,"line_end":37,"column_start":26,"column_end":35},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":783},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7980112,"byte_end":7980120,"line_start":40,"line_end":40,"column_start":25,"column_end":33},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":1017},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7980169,"byte_end":7980180,"line_start":43,"line_end":43,"column_start":29,"column_end":40},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":819},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/os/unix/mod.rs","byte_start":8009365,"byte_end":8009372,"line_start":4,"line_end":4,"column_start":24,"column_end":31},"alias_span":null,"name":"symlink","value":"","parent":{"krate":0,"index":814}},{"kind":"Use","ref_id":{"krate":0,"index":831},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7980226,"byte_end":7980230,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":855},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7980272,"byte_end":7980280,"line_start":51,"line_end":51,"column_start":26,"column_end":34},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":1038},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7980282,"byte_end":7980290,"line_start":51,"line_end":51,"column_start":36,"column_end":44},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":1024},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7980292,"byte_end":7980299,"line_start":51,"line_end":51,"column_start":46,"column_end":53},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":894},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7980343,"byte_end":7980352,"line_start":54,"line_end":54,"column_start":26,"column_end":35},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":905},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7980405,"byte_end":7980419,"line_start":57,"line_end":57,"column_start":31,"column_end":45},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":915},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7980464,"byte_end":7980474,"line_start":60,"line_end":60,"column_start":27,"column_end":37},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":925},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7980527,"byte_end":7980541,"line_start":63,"line_end":63,"column_start":31,"column_end":45},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":935},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7980588,"byte_end":7980599,"line_start":66,"line_end":66,"column_start":28,"column_end":39},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":945},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7980636,"byte_end":7980642,"line_start":69,"line_end":69,"column_start":23,"column_end":29},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":957},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7980697,"byte_end":7980712,"line_start":72,"line_end":72,"column_start":32,"column_end":47},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":968},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7980769,"byte_end":7980785,"line_start":75,"line_end":75,"column_start":33,"column_end":49},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":979},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7980820,"byte_end":7980825,"line_start":78,"line_end":78,"column_start":22,"column_end":27},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":645}},{"kind":"Use","ref_id":{"krate":0,"index":147},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29522,"byte_end":29534,"line_start":162,"line_end":162,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":176},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29579,"byte_end":29588,"line_start":165,"line_end":165,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":207},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29633,"byte_end":29642,"line_start":168,"line_end":168,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":232},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29689,"byte_end":29699,"line_start":171,"line_end":171,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":1432},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29795,"byte_end":29806,"line_start":177,"line_end":177,"column_start":27,"column_end":38},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":1436},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29857,"byte_end":29869,"line_start":180,"line_end":180,"column_start":27,"column_end":39},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":1481},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29925,"byte_end":29931,"line_start":185,"line_end":185,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":1482},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29933,"byte_end":29939,"line_start":185,"line_end":185,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":1486},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29978,"byte_end":29983,"line_start":188,"line_end":188,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":1487},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29985,"byte_end":29990,"line_start":188,"line_end":188,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":1491},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30031,"byte_end":30037,"line_start":191,"line_end":191,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":1492},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30039,"byte_end":30045,"line_start":191,"line_end":191,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":1612},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30101,"byte_end":30106,"line_start":196,"line_end":196,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":1606},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30108,"byte_end":30116,"line_start":196,"line_end":196,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":1609},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30118,"byte_end":30127,"line_start":196,"line_end":196,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":1614},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30180,"byte_end":30184,"line_start":199,"line_end":199,"column_start":25,"column_end":29},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":2355},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30240,"byte_end":30244,"line_start":203,"line_end":203,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":2378},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30246,"byte_end":30251,"line_start":203,"line_end":203,"column_start":15,"column_end":20},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":2541},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30253,"byte_end":30259,"line_start":203,"line_end":203,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":2556},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30261,"byte_end":30265,"line_start":203,"line_end":203,"column_start":30,"column_end":34},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":2281},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30267,"byte_end":30282,"line_start":203,"line_end":203,"column_start":36,"column_end":51},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":2289},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30284,"byte_end":30296,"line_start":203,"line_end":203,"column_start":53,"column_end":65},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":1685},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30298,"byte_end":30310,"line_start":203,"line_end":203,"column_start":67,"column_end":79},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":2325},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30312,"byte_end":30325,"line_start":203,"line_end":203,"column_start":81,"column_end":94},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":9299},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30327,"byte_end":30336,"line_start":203,"line_end":203,"column_start":96,"column_end":105},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":9293},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30346,"byte_end":30355,"line_start":204,"line_end":204,"column_start":9,"column_end":18},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":9222},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30357,"byte_end":30366,"line_start":204,"line_end":204,"column_start":20,"column_end":29},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":2360},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30368,"byte_end":30372,"line_start":204,"line_end":204,"column_start":31,"column_end":35},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":2376},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30374,"byte_end":30379,"line_start":204,"line_end":204,"column_start":37,"column_end":42},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":9164},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30381,"byte_end":30386,"line_start":204,"line_end":204,"column_start":44,"column_end":49},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":2542},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30388,"byte_end":30394,"line_start":204,"line_end":204,"column_start":51,"column_end":57},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":2554},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30396,"byte_end":30400,"line_start":204,"line_end":204,"column_start":59,"column_end":63},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":8690},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30402,"byte_end":30407,"line_start":204,"line_end":204,"column_start":65,"column_end":70},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":8644},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30409,"byte_end":30413,"line_start":204,"line_end":204,"column_start":72,"column_end":76},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":1,"index":2481},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30568,"byte_end":30573,"line_start":209,"line_end":209,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":1,"index":6536},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30575,"byte_end":30584,"line_start":209,"line_end":209,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":1,"index":2479},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":30586,"byte_end":30592,"line_start":209,"line_end":209,"column_start":41,"column_end":47},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":138}},{"kind":"Use","ref_id":{"krate":0,"index":280},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55959,"byte_end":55972,"line_start":26,"line_end":26,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":269}},{"kind":"Use","ref_id":{"krate":0,"index":2918},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/mod.rs","byte_start":8224822,"byte_end":8224830,"line_start":7,"line_end":7,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":2720}},{"kind":"Use","ref_id":{"krate":0,"index":2924},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/mod.rs","byte_start":8224860,"byte_end":8224868,"line_start":10,"line_end":10,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2720}},{"kind":"Use","ref_id":{"krate":0,"index":2931},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/mod.rs","byte_start":8224870,"byte_end":8224879,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2720}},{"kind":"Use","ref_id":{"krate":0,"index":2916},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":56030,"byte_end":56041,"line_start":30,"line_end":30,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":269}},{"kind":"Use","ref_id":{"krate":0,"index":2938},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":56068,"byte_end":56077,"line_start":31,"line_end":31,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":269}},{"kind":"Use","ref_id":{"krate":0,"index":3074},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/mod.rs","byte_start":8266426,"byte_end":8266434,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":2940}},{"kind":"Use","ref_id":{"krate":0,"index":3069},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/mod.rs","byte_start":8266436,"byte_end":8266444,"line_start":7,"line_end":7,"column_start":27,"column_end":35},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":2940}},{"kind":"Use","ref_id":{"krate":0,"index":3079},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/mod.rs","byte_start":8266446,"byte_end":8266458,"line_start":7,"line_end":7,"column_start":37,"column_end":49},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2940}},{"kind":"Use","ref_id":{"krate":0,"index":3067},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":56135,"byte_end":56144,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":269}},{"kind":"Use","ref_id":{"krate":0,"index":3328},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/mod.rs","byte_start":8287218,"byte_end":8287226,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3085}},{"kind":"Use","ref_id":{"krate":0,"index":3336},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/mod.rs","byte_start":8287321,"byte_end":8287329,"line_start":12,"line_end":12,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3085}},{"kind":"Use","ref_id":{"krate":0,"index":3343},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/mod.rs","byte_start":8287331,"byte_end":8287340,"line_start":12,"line_end":12,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3085}},{"kind":"Use","ref_id":{"krate":0,"index":3352},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/mod.rs","byte_start":8287429,"byte_end":8287434,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":3085}},{"kind":"Use","ref_id":{"krate":0,"index":3326},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":56206,"byte_end":56218,"line_start":41,"line_end":41,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":269}},{"kind":"Use","ref_id":{"krate":0,"index":3334},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":56248,"byte_end":56260,"line_start":42,"line_end":42,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":269}},{"kind":"Use","ref_id":{"krate":0,"index":3350},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":56288,"byte_end":56298,"line_start":43,"line_end":43,"column_start":27,"column_end":37},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":269}},{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":86881,"byte_end":86885,"line_start":16,"line_end":16,"column_start":21,"column_end":25},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":474}},{"kind":"Use","ref_id":{"krate":0,"index":147},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":86887,"byte_end":86899,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":474}},{"kind":"Use","ref_id":{"krate":0,"index":176},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":86901,"byte_end":86910,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":474}},{"kind":"Use","ref_id":{"krate":0,"index":232},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":86912,"byte_end":86922,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":474}},{"kind":"Use","ref_id":{"krate":0,"index":2281},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":86987,"byte_end":87002,"line_start":20,"line_end":20,"column_start":25,"column_end":40},"alias_span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":87006,"byte_end":87007,"line_start":20,"line_end":20,"column_start":44,"column_end":45},"name":"_","value":"","parent":{"krate":0,"index":474}},{"kind":"Use","ref_id":{"krate":0,"index":2289},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":87009,"byte_end":87021,"line_start":20,"line_end":20,"column_start":47,"column_end":59},"alias_span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":87025,"byte_end":87026,"line_start":20,"line_end":20,"column_start":63,"column_end":64},"name":"_","value":"","parent":{"krate":0,"index":474}},{"kind":"Use","ref_id":{"krate":0,"index":1685},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":87028,"byte_end":87040,"line_start":20,"line_end":20,"column_start":66,"column_end":78},"alias_span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":87044,"byte_end":87045,"line_start":20,"line_end":20,"column_start":82,"column_end":83},"name":"_","value":"","parent":{"krate":0,"index":474}},{"kind":"Use","ref_id":{"krate":0,"index":2325},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":87047,"byte_end":87060,"line_start":20,"line_end":20,"column_start":85,"column_end":98},"alias_span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":87064,"byte_end":87065,"line_start":20,"line_end":20,"column_start":102,"column_end":103},"name":"_","value":"","parent":{"krate":0,"index":474}},{"kind":"Use","ref_id":{"krate":0,"index":495},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":94705,"byte_end":94712,"line_start":208,"line_end":208,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":0,"index":4165},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":94864,"byte_end":94870,"line_start":219,"line_end":219,"column_start":23,"column_end":29},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":0,"index":4765},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479819,"byte_end":8479825,"line_start":47,"line_end":47,"column_start":17,"column_end":23},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":4760}},{"kind":"Use","ref_id":{"krate":0,"index":4950},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8516631,"byte_end":8516635,"line_start":8,"line_end":8,"column_start":16,"column_end":20},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":4941}},{"kind":"Use","ref_id":{"krate":0,"index":5013},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8516637,"byte_end":8516641,"line_start":8,"line_end":8,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":4941}},{"kind":"Use","ref_id":{"krate":26,"index":68},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8516718,"byte_end":8516724,"line_start":16,"line_end":16,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":4941}},{"kind":"Use","ref_id":{"krate":0,"index":6035},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8523061,"byte_end":8523068,"line_start":20,"line_end":20,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":5027}},{"kind":"Use","ref_id":{"krate":0,"index":6047},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8523070,"byte_end":8523087,"line_start":20,"line_end":20,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":5027}},{"kind":"Use","ref_id":{"krate":0,"index":5270},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8560167,"byte_end":8560174,"line_start":42,"line_end":42,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":5169}},{"kind":"Use","ref_id":{"krate":0,"index":5264},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8560176,"byte_end":8560184,"line_start":42,"line_end":42,"column_start":34,"column_end":42},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":5169}},{"kind":"Use","ref_id":{"krate":0,"index":5255},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8560186,"byte_end":8560192,"line_start":42,"line_end":42,"column_start":44,"column_end":50},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":5169}},{"kind":"Use","ref_id":{"krate":0,"index":5531},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8560270,"byte_end":8560287,"line_start":49,"line_end":49,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":5169}},{"kind":"Use","ref_id":{"krate":0,"index":5525},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8560289,"byte_end":8560306,"line_start":49,"line_end":49,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":5169}},{"kind":"Use","ref_id":{"krate":0,"index":5516},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8560308,"byte_end":8560323,"line_start":49,"line_end":49,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":5169}},{"kind":"Use","ref_id":{"krate":0,"index":6139},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8523169,"byte_end":8523174,"line_start":27,"line_end":27,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":5027}},{"kind":"Use","ref_id":{"krate":0,"index":5594},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8523176,"byte_end":8523186,"line_start":27,"line_end":27,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":5027}},{"kind":"Use","ref_id":{"krate":0,"index":6259},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8523288,"byte_end":8523297,"line_start":33,"line_end":33,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":5027}},{"kind":"Use","ref_id":{"krate":0,"index":6263},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8523299,"byte_end":8523314,"line_start":33,"line_end":33,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":5027}},{"kind":"Use","ref_id":{"krate":0,"index":6334},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8710133,"byte_end":8710147,"line_start":212,"line_end":212,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":6322}},{"kind":"Use","ref_id":{"krate":0,"index":6327},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8710199,"byte_end":8710213,"line_start":215,"line_end":215,"column_start":27,"column_end":41},"alias_span":null,"name":"block_in_place","value":"","parent":{"krate":0,"index":6322}},{"kind":"Use","ref_id":{"krate":0,"index":6857},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8710359,"byte_end":8710368,"line_start":225,"line_end":225,"column_start":26,"column_end":35},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":6322}},{"kind":"Use","ref_id":{"krate":0,"index":6859},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8710539,"byte_end":8710549,"line_start":232,"line_end":232,"column_start":25,"column_end":35},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":6322}},{"kind":"Use","ref_id":{"krate":0,"index":6867},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8710712,"byte_end":8710717,"line_start":243,"line_end":243,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":6322}},{"kind":"Use","ref_id":{"krate":0,"index":6875},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8710897,"byte_end":8710906,"line_start":254,"line_end":254,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":6322}},{"kind":"Use","ref_id":{"krate":0,"index":6957},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8710961,"byte_end":8710972,"line_start":259,"line_end":259,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":6322}},{"kind":"Use","ref_id":{"krate":0,"index":6943},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8710974,"byte_end":8710982,"line_start":259,"line_end":259,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":6322}},{"kind":"Use","ref_id":{"krate":0,"index":6867},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8919,"byte_end":8924,"line_start":257,"line_end":257,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7487},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8818098,"byte_end":8818108,"line_start":79,"line_end":79,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":7004}},{"kind":"Use","ref_id":{"krate":0,"index":7093},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8818138,"byte_end":8818147,"line_start":82,"line_end":82,"column_start":17,"column_end":26},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":7004}},{"kind":"Use","ref_id":{"krate":0,"index":7092},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8818149,"byte_end":8818160,"line_start":82,"line_end":82,"column_start":28,"column_end":39},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":7004}},{"kind":"Use","ref_id":{"krate":0,"index":7529},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8818162,"byte_end":8818167,"line_start":82,"line_end":82,"column_start":41,"column_end":46},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":7004}},{"kind":"Use","ref_id":{"krate":0,"index":7597},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8818221,"byte_end":8818226,"line_start":87,"line_end":87,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":7004}},{"kind":"Use","ref_id":{"krate":0,"index":7609},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8818265,"byte_end":8818272,"line_start":90,"line_end":90,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":7004}},{"kind":"Use","ref_id":{"krate":0,"index":7348},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8818308,"byte_end":8818316,"line_start":93,"line_end":93,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":7004}},{"kind":"Use","ref_id":{"krate":0,"index":7349},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8818318,"byte_end":8818329,"line_start":93,"line_end":93,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":7004}},{"kind":"Use","ref_id":{"krate":0,"index":7627},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8818331,"byte_end":8818339,"line_start":93,"line_end":93,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":7004}},{"kind":"Use","ref_id":{"krate":0,"index":7375},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8818389,"byte_end":8818396,"line_start":97,"line_end":97,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":7004}},{"kind":"Use","ref_id":{"krate":0,"index":7377},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8818398,"byte_end":8818408,"line_start":97,"line_end":97,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":7004}},{"kind":"Use","ref_id":{"krate":0,"index":7632},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8818410,"byte_end":8818417,"line_start":97,"line_end":97,"column_start":40,"column_end":47},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":7004}},{"kind":"Use","ref_id":{"krate":0,"index":7639},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8818419,"byte_end":8818426,"line_start":97,"line_end":97,"column_start":49,"column_end":56},"alias_span":null,"name":"Elapsed","value":"","parent":{"krate":0,"index":7004}},{"kind":"Use","ref_id":{"krate":0,"index":7657},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8818485,"byte_end":8818493,"line_start":101,"line_end":101,"column_start":24,"column_end":32},"alias_span":null,"name":"throttle","value":"","parent":{"krate":0,"index":7004}},{"kind":"Use","ref_id":{"krate":0,"index":8075},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8818495,"byte_end":8818503,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":7004}},{"kind":"Use","ref_id":{"krate":2,"index":31690},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8818612,"byte_end":8818620,"line_start":111,"line_end":111,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":7004}},{"kind":"Use","ref_id":{"krate":28,"index":13},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":9075,"byte_end":9079,"line_start":268,"line_end":268,"column_start":27,"column_end":31},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":14},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":9107,"byte_end":9111,"line_start":269,"line_end":269,"column_start":27,"column_end":31},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":0,"byte_end":9229,"line_start":1,"line_end":279,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":645},{"krate":0,"index":44},{"krate":0,"index":138},{"krate":0,"index":269},{"krate":0,"index":329},{"krate":0,"index":428},{"krate":0,"index":474},{"krate":0,"index":3486},{"krate":0,"index":480},{"krate":0,"index":4760},{"krate":0,"index":4941},{"krate":0,"index":5027},{"krate":0,"index":6322},{"krate":0,"index":6323},{"krate":0,"index":7004},{"krate":0,"index":644},{"krate":0,"index":8034},{"krate":0,"index":8035}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":55,"byte_end":94,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":95,"byte_end":201,"line_start":3,"line_end":8,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":202,"byte_end":245,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"! A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":403,"byte_end":475,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":476,"byte_end":479,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":480,"byte_end":560,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"! applications with the Rust programming language. At a high level, it","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":561,"byte_end":633,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"! provides a few major components:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":634,"byte_end":670,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":671,"byte_end":674,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":675,"byte_end":742,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"!   [synchronization primitives and channels][sync] and [timeouts, delays, and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":743,"byte_end":823,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"!   intervals][time].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":824,"byte_end":847,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"! * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":848,"byte_end":935,"line_start":25,"line_end":25,"column_start":1,"column_end":88}},{"value":"!   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":936,"byte_end":1009,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"! * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1010,"byte_end":1088,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"!   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1089,"byte_end":1169,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"!   IOCP, etc...), and a high performance timer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1170,"byte_end":1220,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1221,"byte_end":1224,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! Guide level documentation is found on the [website].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1225,"byte_end":1281,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1282,"byte_end":1285,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! [tasks]: #working-with-tasks","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1286,"byte_end":1318,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"! [sync]: crate::sync","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1319,"byte_end":1342,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"! [time]: crate::time","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1343,"byte_end":1366,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"! [io]: #asynchronous-io","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1367,"byte_end":1393,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"! [net]: crate::net","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1394,"byte_end":1415,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"! [fs]: crate::fs","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1416,"byte_end":1435,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"! [process]: crate::process","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1436,"byte_end":1465,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"! [signal]: crate::signal","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1466,"byte_end":1493,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"! [fs]: crate::fs","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1494,"byte_end":1513,"line_start":41,"line_end":41,"column_start":1,"column_end":20}},{"value":"! [runtime]: crate::runtime","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1514,"byte_end":1543,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"! [website]: https://tokio.rs/docs/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1544,"byte_end":1581,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1582,"byte_end":1585,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! # A Tour of Tokio","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1586,"byte_end":1607,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1608,"byte_end":1611,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1612,"byte_end":1691,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"! essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1692,"byte_end":1765,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"! section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1766,"byte_end":1845,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"! their uses.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1846,"byte_end":1861,"line_start":50,"line_end":50,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1862,"byte_end":1865,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! Note that Tokio uses [Cargo feature flags][features] to allow users to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1866,"byte_end":1940,"line_start":52,"line_end":52,"column_start":1,"column_end":75}},{"value":"! control what features are present, so that unused code can be eliminated.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":1941,"byte_end":2018,"line_start":53,"line_end":53,"column_start":1,"column_end":78}},{"value":"! This documentation also lists what feature flags are necessary to enable each API.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2019,"byte_end":2105,"line_start":54,"line_end":54,"column_start":1,"column_end":87}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2106,"byte_end":2109,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2110,"byte_end":2182,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"! enabling the `full` feature flag:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2183,"byte_end":2220,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2221,"byte_end":2224,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2225,"byte_end":2236,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2237,"byte_end":2289,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2290,"byte_end":2297,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2298,"byte_end":2301,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! [features]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2302,"byte_end":2394,"line_start":63,"line_end":63,"column_start":1,"column_end":93}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2395,"byte_end":2398,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! ## Working With Tasks","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2399,"byte_end":2424,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2425,"byte_end":2428,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2429,"byte_end":2505,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"! units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2506,"byte_end":2589,"line_start":68,"line_end":68,"column_start":1,"column_end":84}},{"value":"! important tools for working with tasks:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2590,"byte_end":2633,"line_start":69,"line_end":69,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2634,"byte_end":2637,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2638,"byte_end":2717,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"!   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2718,"byte_end":2801,"line_start":72,"line_end":72,"column_start":1,"column_end":84}},{"value":"! * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2802,"byte_end":2880,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"!   task context.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2881,"byte_end":2900,"line_start":74,"line_end":74,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2901,"byte_end":2904,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! The [`tokio::task`] module is present only when the \"rt-core\" feature flag","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2905,"byte_end":2983,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"! is enabled.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":2984,"byte_end":2999,"line_start":77,"line_end":77,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3000,"byte_end":3003,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3004,"byte_end":3047,"line_start":79,"line_end":79,"column_start":1,"column_end":44}},{"value":"! [`tokio::task`]: crate::task","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3048,"byte_end":3080,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"! [`spawn`]: crate::task::spawn()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3081,"byte_end":3116,"line_start":81,"line_end":81,"column_start":1,"column_end":36}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3117,"byte_end":3160,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"! [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3161,"byte_end":3214,"line_start":83,"line_end":83,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3215,"byte_end":3218,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3219,"byte_end":3297,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"! needing to communicate or share data. These include:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3298,"byte_end":3354,"line_start":86,"line_end":86,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3355,"byte_end":3358,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3359,"byte_end":3432,"line_start":88,"line_end":88,"column_start":1,"column_end":74}},{"value":"!   between tasks,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3433,"byte_end":3453,"line_start":89,"line_end":89,"column_start":1,"column_end":21}},{"value":"! * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3454,"byte_end":3529,"line_start":90,"line_end":90,"column_start":1,"column_end":76}},{"value":"!   value,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3530,"byte_end":3542,"line_start":91,"line_end":91,"column_start":1,"column_end":13}},{"value":"! * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3543,"byte_end":3623,"line_start":92,"line_end":92,"column_start":1,"column_end":81}},{"value":"!   beginning a computation.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3624,"byte_end":3654,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3655,"byte_end":3658,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3659,"byte_end":3735,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"! enabled.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3736,"byte_end":3748,"line_start":96,"line_end":96,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3749,"byte_end":3752,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! [`tokio::sync`]: crate::sync","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3753,"byte_end":3785,"line_start":98,"line_end":98,"column_start":1,"column_end":33}},{"value":"! [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3786,"byte_end":3819,"line_start":99,"line_end":99,"column_start":1,"column_end":34}},{"value":"! [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3820,"byte_end":3857,"line_start":100,"line_end":100,"column_start":1,"column_end":38}},{"value":"! [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3858,"byte_end":3895,"line_start":101,"line_end":101,"column_start":1,"column_end":38}},{"value":"! [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3896,"byte_end":3927,"line_start":102,"line_end":102,"column_start":1,"column_end":32}},{"value":"! [`watch`]: crate::sync::watch","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3928,"byte_end":3961,"line_start":103,"line_end":103,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3962,"byte_end":3965,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":3966,"byte_end":4037,"line_start":105,"line_end":105,"column_start":1,"column_end":72}},{"value":"! scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4038,"byte_end":4118,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"! tasks, [delaying][delay] work to run in the future, or [repeating an operation at an","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4119,"byte_end":4207,"line_start":107,"line_end":107,"column_start":1,"column_end":89}},{"value":"! interval][interval].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4208,"byte_end":4232,"line_start":108,"line_end":108,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4233,"byte_end":4236,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4237,"byte_end":4312,"line_start":110,"line_end":110,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4313,"byte_end":4316,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! [`tokio::time`]: crate::time","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4317,"byte_end":4349,"line_start":112,"line_end":112,"column_start":1,"column_end":33}},{"value":"! [delay]: crate::time::delay_for()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4350,"byte_end":4387,"line_start":113,"line_end":113,"column_start":1,"column_end":38}},{"value":"! [interval]: crate::time::interval()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4388,"byte_end":4427,"line_start":114,"line_end":114,"column_start":1,"column_end":40}},{"value":"! [timeout]: crate::time::timeout()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4428,"byte_end":4465,"line_start":115,"line_end":115,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4466,"byte_end":4469,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4470,"byte_end":4548,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"! applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4549,"byte_end":4633,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"! Tokio runtime. In use-cases where manual control over the runtime is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4634,"byte_end":4706,"line_start":119,"line_end":119,"column_start":1,"column_end":73}},{"value":"! required, the [`tokio::runtime`] module provides APIs for configuring and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4707,"byte_end":4784,"line_start":120,"line_end":120,"column_start":1,"column_end":78}},{"value":"! managing runtimes.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4785,"byte_end":4807,"line_start":121,"line_end":121,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4808,"byte_end":4811,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! Using the runtime requires the \"rt-core\" or \"rt-threaded\" feature flags, to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4812,"byte_end":4891,"line_start":123,"line_end":123,"column_start":1,"column_end":80}},{"value":"! enable the basic [single-threaded scheduler][rt-core] and the [thread-pool","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4892,"byte_end":4970,"line_start":124,"line_end":124,"column_start":1,"column_end":79}},{"value":"! scheduler][rt-threaded], respectively. See the [`runtime` module","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":4971,"byte_end":5039,"line_start":125,"line_end":125,"column_start":1,"column_end":69}},{"value":"! documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5040,"byte_end":5118,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"! flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5119,"byte_end":5189,"line_start":127,"line_end":127,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5190,"byte_end":5193,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! [main]: attr.main.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5194,"byte_end":5220,"line_start":129,"line_end":129,"column_start":1,"column_end":27}},{"value":"! [`tokio::runtime`]: crate::runtime","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5221,"byte_end":5259,"line_start":130,"line_end":130,"column_start":1,"column_end":39}},{"value":"! [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5260,"byte_end":5300,"line_start":131,"line_end":131,"column_start":1,"column_end":41}},{"value":"! [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5301,"byte_end":5341,"line_start":132,"line_end":132,"column_start":1,"column_end":41}},{"value":"! [rt-core]: runtime/index.html#basic-scheduler","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5342,"byte_end":5391,"line_start":133,"line_end":133,"column_start":1,"column_end":50}},{"value":"! [rt-threaded]: runtime/index.html#threaded-scheduler","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5392,"byte_end":5448,"line_start":134,"line_end":134,"column_start":1,"column_end":57}},{"value":"! [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5449,"byte_end":5504,"line_start":135,"line_end":135,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5505,"byte_end":5508,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! ## Asynchronous IO","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5509,"byte_end":5531,"line_start":137,"line_end":137,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5532,"byte_end":5535,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"! As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5536,"byte_end":5615,"line_start":139,"line_end":139,"column_start":1,"column_end":80}},{"value":"! to perform input and output asynchronously.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5616,"byte_end":5663,"line_start":140,"line_end":140,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5664,"byte_end":5667,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"! The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5668,"byte_end":5747,"line_start":142,"line_end":142,"column_start":1,"column_end":80}},{"value":"! the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5748,"byte_end":5828,"line_start":143,"line_end":143,"column_start":1,"column_end":81}},{"value":"! when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5829,"byte_end":5909,"line_start":144,"line_end":144,"column_start":1,"column_end":81}},{"value":"! functions for working with these traits, forming as an asynchronous","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5910,"byte_end":5981,"line_start":145,"line_end":145,"column_start":1,"column_end":72}},{"value":"! counterpart to [`std::io`]. When the \"io-driver\" feature flag is enabled, it","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":5982,"byte_end":6062,"line_start":146,"line_end":146,"column_start":1,"column_end":81}},{"value":"! also provides utilities for library authors implementing I/O resources.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6063,"byte_end":6138,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6139,"byte_end":6142,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"! Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6143,"byte_end":6223,"line_start":149,"line_end":149,"column_start":1,"column_end":81}},{"value":"! with the operating system asynchronously. These include:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6224,"byte_end":6284,"line_start":150,"line_end":150,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6285,"byte_end":6288,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"! * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6289,"byte_end":6368,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"!   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6369,"byte_end":6438,"line_start":153,"line_end":153,"column_start":1,"column_end":70}},{"value":"! * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6439,"byte_end":6516,"line_start":154,"line_end":154,"column_start":1,"column_end":78}},{"value":"!   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6517,"byte_end":6573,"line_start":155,"line_end":155,"column_start":1,"column_end":57}},{"value":"! * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6574,"byte_end":6654,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"!   (enabled by the \"signal\" feature flag),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6655,"byte_end":6700,"line_start":157,"line_end":157,"column_start":1,"column_end":46}},{"value":"! * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6701,"byte_end":6780,"line_start":158,"line_end":158,"column_start":1,"column_end":80}},{"value":"!   the \"process\" feature flag).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6781,"byte_end":6815,"line_start":159,"line_end":159,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6816,"byte_end":6819,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! [`tokio::io`]: crate::io","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6820,"byte_end":6848,"line_start":161,"line_end":161,"column_start":1,"column_end":29}},{"value":"! [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6849,"byte_end":6888,"line_start":162,"line_end":162,"column_start":1,"column_end":40}},{"value":"! [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6889,"byte_end":6930,"line_start":163,"line_end":163,"column_start":1,"column_end":42}},{"value":"! [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6931,"byte_end":6976,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"! [`std::io`]: std::io","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":6977,"byte_end":7001,"line_start":165,"line_end":165,"column_start":1,"column_end":25}},{"value":"! [`tokio::net`]: crate::net","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7002,"byte_end":7032,"line_start":166,"line_end":166,"column_start":1,"column_end":31}},{"value":"! [TCP]: crate::net::tcp","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7033,"byte_end":7059,"line_start":167,"line_end":167,"column_start":1,"column_end":27}},{"value":"! [UDP]: crate::net::udp","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7060,"byte_end":7086,"line_start":168,"line_end":168,"column_start":1,"column_end":27}},{"value":"! [UDS]: crate::net::unix","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7087,"byte_end":7114,"line_start":169,"line_end":169,"column_start":1,"column_end":28}},{"value":"! [`tokio::fs`]: crate::fs","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7115,"byte_end":7143,"line_start":170,"line_end":170,"column_start":1,"column_end":29}},{"value":"! [`std::fs`]: std::fs","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7144,"byte_end":7168,"line_start":171,"line_end":171,"column_start":1,"column_end":25}},{"value":"! [`tokio::signal`]: crate::signal","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7169,"byte_end":7205,"line_start":172,"line_end":172,"column_start":1,"column_end":37}},{"value":"! [`tokio::process`]: crate::process","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7206,"byte_end":7244,"line_start":173,"line_end":173,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7245,"byte_end":7248,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7249,"byte_end":7263,"line_start":175,"line_end":175,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7264,"byte_end":7267,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"! A simple TCP echo server:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7268,"byte_end":7297,"line_start":177,"line_end":177,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7298,"byte_end":7301,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7302,"byte_end":7315,"line_start":179,"line_end":179,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7316,"byte_end":7348,"line_start":180,"line_end":180,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7349,"byte_end":7375,"line_start":181,"line_end":181,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7376,"byte_end":7379,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7380,"byte_end":7398,"line_start":183,"line_end":183,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7399,"byte_end":7462,"line_start":184,"line_end":184,"column_start":1,"column_end":64}},{"value":"!     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7463,"byte_end":7533,"line_start":185,"line_end":185,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7534,"byte_end":7537,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7538,"byte_end":7552,"line_start":187,"line_end":187,"column_start":1,"column_end":15}},{"value":"!         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7553,"byte_end":7612,"line_start":188,"line_end":188,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7613,"byte_end":7616,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7617,"byte_end":7654,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"!             let mut buf = [0; 1024];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7655,"byte_end":7695,"line_start":191,"line_end":191,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7696,"byte_end":7699,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"!             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7700,"byte_end":7780,"line_start":193,"line_end":193,"column_start":1,"column_end":81}},{"value":"!             loop {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7781,"byte_end":7803,"line_start":194,"line_end":194,"column_start":1,"column_end":23}},{"value":"!                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7804,"byte_end":7867,"line_start":195,"line_end":195,"column_start":1,"column_end":64}},{"value":"!                     // socket closed","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7868,"byte_end":7908,"line_start":196,"line_end":196,"column_start":1,"column_end":41}},{"value":"!                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7909,"byte_end":7959,"line_start":197,"line_end":197,"column_start":1,"column_end":51}},{"value":"!                     Ok(n) => n,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7960,"byte_end":7995,"line_start":198,"line_end":198,"column_start":1,"column_end":36}},{"value":"!                     Err(e) => {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":7996,"byte_end":8031,"line_start":199,"line_end":199,"column_start":1,"column_end":36}},{"value":"!                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8032,"byte_end":8115,"line_start":200,"line_end":200,"column_start":1,"column_end":84}},{"value":"!                         return;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8116,"byte_end":8151,"line_start":201,"line_end":201,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8152,"byte_end":8177,"line_start":202,"line_end":202,"column_start":1,"column_end":26}},{"value":"!                 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8178,"byte_end":8200,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8201,"byte_end":8204,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"!                 // Write the data back","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8205,"byte_end":8247,"line_start":205,"line_end":205,"column_start":1,"column_end":43}},{"value":"!                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8248,"byte_end":8320,"line_start":206,"line_end":206,"column_start":1,"column_end":73}},{"value":"!                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8321,"byte_end":8399,"line_start":207,"line_end":207,"column_start":1,"column_end":79}},{"value":"!                     return;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8400,"byte_end":8431,"line_start":208,"line_end":208,"column_start":1,"column_end":32}},{"value":"!                 }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8432,"byte_end":8453,"line_start":209,"line_end":209,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8454,"byte_end":8471,"line_start":210,"line_end":210,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8472,"byte_end":8487,"line_start":211,"line_end":211,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8488,"byte_end":8497,"line_start":212,"line_end":212,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8498,"byte_end":8503,"line_start":213,"line_end":213,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8504,"byte_end":8511,"line_start":214,"line_end":214,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":645},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":826},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":884},{"krate":0,"index":888},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":992}],"decl_id":null,"docs":" Asynchronous file and standard stream adaptation.","sig":null,"attributes":[{"value":"cfg(feature = \"fs\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":11303,"byte_end":11325,"line_start":83,"line_end":83,"column_start":13,"column_end":35}},{"value":"cfg(not (loom))","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7978598,"byte_end":7978616,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! Asynchronous file and standard stream adaptation.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7978618,"byte_end":7978671,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7978672,"byte_end":7978675,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module contains utility methods and adapter types for input/output to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7978676,"byte_end":7978754,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"! files or standard streams (`Stdin`, `Stdout`, `Stderr`), and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7978755,"byte_end":7978819,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"! filesystem manipulation, for use within (and only within) a Tokio runtime.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7978820,"byte_end":7978898,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7978899,"byte_end":7978902,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! Tasks run by *worker* threads should not block, as this could delay","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7978903,"byte_end":7978974,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"! servicing reactor events. Portable filesystem operations are blocking,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7978975,"byte_end":7979049,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"! however. This module offers adapters which use a `blocking` annotation","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7979050,"byte_end":7979124,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"! to inform the runtime that a blocking operation is required. When","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7979125,"byte_end":7979194,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"! necessary, this allows the runtime to convert the current thread from a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7979195,"byte_end":7979270,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"! *worker* to a *backup* thread, where blocking is acceptable.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7979271,"byte_end":7979335,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7979336,"byte_end":7979339,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! ## Usage","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7979340,"byte_end":7979352,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7979353,"byte_end":7979356,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Where possible, users should prefer the provided asynchronous-specific","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7979357,"byte_end":7979431,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"! traits such as [`AsyncRead`], or methods returning a `Future` or `Poll`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7979432,"byte_end":7979507,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"! type. Adaptions also extend to traits like `std::io::Read` where methods","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7979508,"byte_end":7979584,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"! return `std::io::Result`. Be warned that these adapted methods may return","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7979585,"byte_end":7979662,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"! `std::io::ErrorKind::WouldBlock` if a *worker* thread can not be converted","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7979663,"byte_end":7979741,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"! to a *backup* thread immediately.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7979742,"byte_end":7979779,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7979780,"byte_end":7979783,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: https://docs.rs/tokio-io/0.1/tokio_io/trait.AsyncRead.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7979784,"byte_end":7979861,"line_start":25,"line_end":25,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":650},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/create_dir.rs","byte_start":7981670,"byte_end":7981680,"line_start":11,"line_end":11,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"fn (path: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty directory at the provided path","sig":null,"attributes":[{"value":"/ Creates a new, empty directory at the provided path","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/create_dir.rs","byte_start":7981469,"byte_end":7981524,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/create_dir.rs","byte_start":7981525,"byte_end":7981528,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir`][std]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/create_dir.rs","byte_start":7981529,"byte_end":7981589,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/create_dir.rs","byte_start":7981590,"byte_end":7981593,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: https://doc.rust-lang.org/std/fs/fn.create_dir.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/create_dir.rs","byte_start":7981594,"byte_end":7981656,"line_start":10,"line_end":10,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":660},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/create_dir_all.rs","byte_start":7982130,"byte_end":7982144,"line_start":12,"line_end":12,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"fn (path: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Recursively create a directory and all of its parent components if they\n are missing.","sig":null,"attributes":[{"value":"/ Recursively create a directory and all of its parent components if they","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/create_dir_all.rs","byte_start":7981884,"byte_end":7981959,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ are missing.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/create_dir_all.rs","byte_start":7981960,"byte_end":7981976,"line_start":7,"line_end":7,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/create_dir_all.rs","byte_start":7981977,"byte_end":7981980,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir_all`][std]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/create_dir_all.rs","byte_start":7981981,"byte_end":7982045,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/create_dir_all.rs","byte_start":7982046,"byte_end":7982049,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: https://doc.rust-lang.org/std/fs/fn.create_dir_all.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/create_dir_all.rs","byte_start":7982050,"byte_end":7982116,"line_start":11,"line_end":11,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":691},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983945,"byte_end":7983949,"line_start":65,"line_end":65,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694}],"decl_id":null,"docs":" A reference to an open file on the filesystem.","sig":null,"attributes":[{"value":"/ A reference to an open file on the filesystem.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7982747,"byte_end":7982797,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7982798,"byte_end":7982801,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::File`][std] for usage from the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7982802,"byte_end":7982880,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ Tokio runtime.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7982881,"byte_end":7982899,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7982900,"byte_end":7982903,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ An instance of a `File` can be read and/or written depending on what options","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7982904,"byte_end":7982984,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ it was opened with. Files also implement Seek to alter the logical cursor","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7982985,"byte_end":7983062,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ that the file contains internally.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983063,"byte_end":7983101,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983102,"byte_end":7983105,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Files are automatically closed when they go out of scope.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983106,"byte_end":7983167,"line_start":30,"line_end":30,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983168,"byte_end":7983171,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [std]: https://doc.rust-lang.org/std/fs/struct.File.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983172,"byte_end":7983232,"line_start":32,"line_end":32,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983233,"byte_end":7983236,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983237,"byte_end":7983251,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983252,"byte_end":7983255,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Create a new file and asynchronously write bytes to it:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983256,"byte_end":7983315,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983316,"byte_end":7983319,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983320,"byte_end":7983333,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983334,"byte_end":7983358,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983359,"byte_end":7983385,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983386,"byte_end":7983389,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983390,"byte_end":7983435,"line_start":42,"line_end":42,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983436,"byte_end":7983486,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983487,"byte_end":7983531,"line_start":44,"line_end":44,"column_start":1,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983532,"byte_end":7983544,"line_start":45,"line_end":45,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983545,"byte_end":7983552,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983553,"byte_end":7983560,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983561,"byte_end":7983564,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a buffer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983565,"byte_end":7983610,"line_start":49,"line_end":49,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983611,"byte_end":7983614,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983615,"byte_end":7983628,"line_start":51,"line_end":51,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983629,"byte_end":7983653,"line_start":52,"line_end":52,"column_start":1,"column_end":25}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983654,"byte_end":7983680,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983681,"byte_end":7983684,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983685,"byte_end":7983730,"line_start":55,"line_end":55,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983731,"byte_end":7983779,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983780,"byte_end":7983783,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let mut contents = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983784,"byte_end":7983814,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983815,"byte_end":7983858,"line_start":59,"line_end":59,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983859,"byte_end":7983862,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983863,"byte_end":7983904,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983905,"byte_end":7983917,"line_start":62,"line_end":62,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983918,"byte_end":7983925,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7983926,"byte_end":7983933,"line_start":64,"line_end":64,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985286,"byte_end":7985290,"line_start":117,"line_end":117,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"fn (path: impl AsRef<Path>) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open a file in read-only mode.","sig":null,"attributes":[{"value":"/ Attempts to open a file in read-only mode.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984464,"byte_end":7984510,"line_start":89,"line_end":89,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984515,"byte_end":7984518,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984523,"byte_end":7984564,"line_start":91,"line_end":91,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984569,"byte_end":7984572,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: struct.OpenOptions.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984577,"byte_end":7984621,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984626,"byte_end":7984629,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984634,"byte_end":7984646,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984651,"byte_end":7984654,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if called from outside of the Tokio","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984659,"byte_end":7984733,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ runtime or if path does not already exist. Other errors may also be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984738,"byte_end":7984809,"line_start":98,"line_end":98,"column_start":5,"column_end":76}},{"value":"/ returned according to OpenOptions::open.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984814,"byte_end":7984858,"line_start":99,"line_end":99,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984863,"byte_end":7984866,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984871,"byte_end":7984885,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984890,"byte_end":7984893,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984898,"byte_end":7984911,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984916,"byte_end":7984940,"line_start":104,"line_end":104,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984945,"byte_end":7984971,"line_start":105,"line_end":105,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984976,"byte_end":7984979,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984984,"byte_end":7985029,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985034,"byte_end":7985082,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985087,"byte_end":7985090,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985095,"byte_end":7985125,"line_start":110,"line_end":110,"column_start":5,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985130,"byte_end":7985173,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985178,"byte_end":7985181,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985186,"byte_end":7985227,"line_start":113,"line_end":113,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985232,"byte_end":7985244,"line_start":114,"line_end":114,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985249,"byte_end":7985256,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985261,"byte_end":7985268,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986343,"byte_end":7986349,"line_start":152,"line_end":152,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"fn (path: impl AsRef<Path>) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985487,"byte_end":7985523,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985528,"byte_end":7985531,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985536,"byte_end":7985612,"line_start":126,"line_end":126,"column_start":5,"column_end":81}},{"value":"/ it if it does.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985617,"byte_end":7985635,"line_start":127,"line_end":127,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985640,"byte_end":7985643,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985648,"byte_end":7985689,"line_start":129,"line_end":129,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985694,"byte_end":7985697,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: struct.OpenOptions.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985702,"byte_end":7985746,"line_start":131,"line_end":131,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985751,"byte_end":7985754,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985759,"byte_end":7985771,"line_start":133,"line_end":133,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985776,"byte_end":7985779,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Results in an error if called from outside of the Tokio runtime or if","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985784,"byte_end":7985857,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ the underlying [`create`] call results in an error.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985862,"byte_end":7985917,"line_start":136,"line_end":136,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985922,"byte_end":7985925,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ [`create`]: https://doc.rust-lang.org/std/fs/struct.File.html#method.create","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7985930,"byte_end":7986009,"line_start":138,"line_end":138,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986014,"byte_end":7986017,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986022,"byte_end":7986036,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986041,"byte_end":7986044,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986049,"byte_end":7986062,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986067,"byte_end":7986091,"line_start":143,"line_end":143,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986096,"byte_end":7986122,"line_start":144,"line_end":144,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986127,"byte_end":7986130,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986135,"byte_end":7986180,"line_start":146,"line_end":146,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986185,"byte_end":7986235,"line_start":147,"line_end":147,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986240,"byte_end":7986284,"line_start":148,"line_end":148,"column_start":5,"column_end":49}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986289,"byte_end":7986301,"line_start":149,"line_end":149,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986306,"byte_end":7986313,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986318,"byte_end":7986325,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987032,"byte_end":7987040,"line_start":171,"line_end":171,"column_start":12,"column_end":20},"name":"from_std","qualname":"<File>::from_std","value":"fn (std: sys::File) -> File","parent":null,"children":[],"decl_id":null,"docs":" Convert a [`std::fs::File`][std] to a [`tokio_fs::File`][file].","sig":null,"attributes":[{"value":"/ Convert a [`std::fs::File`][std] to a [`tokio_fs::File`][file].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986562,"byte_end":7986629,"line_start":158,"line_end":158,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986634,"byte_end":7986637,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ [std]: https://doc.rust-lang.org/std/fs/struct.File.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986642,"byte_end":7986702,"line_start":160,"line_end":160,"column_start":5,"column_end":65}},{"value":"/ [file]: struct.File.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986707,"byte_end":7986735,"line_start":161,"line_end":161,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986740,"byte_end":7986743,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986748,"byte_end":7986762,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986767,"byte_end":7986770,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986775,"byte_end":7986788,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ // This line could block. It is not recommended to do this on the Tokio","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986793,"byte_end":7986868,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ // runtime.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986873,"byte_end":7986888,"line_start":167,"line_end":167,"column_start":5,"column_end":20}},{"value":"/ let std_file = std::fs::File::open(\"foo.txt\").unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986893,"byte_end":7986952,"line_start":168,"line_end":168,"column_start":5,"column_end":64}},{"value":"/ let file = tokio::fs::File::from_std(std_file);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7986957,"byte_end":7987008,"line_start":169,"line_end":169,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987013,"byte_end":7987020,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987740,"byte_end":7987744,"line_start":198,"line_end":198,"column_start":18,"column_end":22},"name":"seek","qualname":"<File>::seek","value":"fn (&mut self, mut pos: SeekFrom) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Seek to an offset, in bytes, in a stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987230,"byte_end":7987275,"line_start":179,"line_end":179,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987280,"byte_end":7987283,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987288,"byte_end":7987302,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987307,"byte_end":7987310,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987315,"byte_end":7987328,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987333,"byte_end":7987357,"line_start":184,"line_end":184,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987362,"byte_end":7987388,"line_start":185,"line_end":185,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987393,"byte_end":7987396,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987401,"byte_end":7987427,"line_start":187,"line_end":187,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987432,"byte_end":7987435,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987440,"byte_end":7987485,"line_start":189,"line_end":189,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987490,"byte_end":7987538,"line_start":190,"line_end":190,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987543,"byte_end":7987584,"line_start":191,"line_end":191,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987589,"byte_end":7987592,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987597,"byte_end":7987634,"line_start":193,"line_end":193,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987639,"byte_end":7987681,"line_start":194,"line_end":194,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987686,"byte_end":7987698,"line_start":195,"line_end":195,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987703,"byte_end":7987710,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7987715,"byte_end":7987722,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989273,"byte_end":7989281,"line_start":254,"line_end":254,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to sync all OS-internal metadata to disk.","sig":null,"attributes":[{"value":"/ Attempts to sync all OS-internal metadata to disk.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7988729,"byte_end":7988783,"line_start":236,"line_end":236,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7988788,"byte_end":7988791,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to ensure that all in-core data reaches the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7988796,"byte_end":7988870,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ filesystem before returning.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7988875,"byte_end":7988907,"line_start":239,"line_end":239,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7988912,"byte_end":7988915,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7988920,"byte_end":7988934,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7988939,"byte_end":7988942,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7988947,"byte_end":7988960,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7988965,"byte_end":7988989,"line_start":244,"line_end":244,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7988994,"byte_end":7989020,"line_start":245,"line_end":245,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989025,"byte_end":7989028,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989033,"byte_end":7989078,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989083,"byte_end":7989133,"line_start":248,"line_end":248,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989138,"byte_end":7989182,"line_start":249,"line_end":249,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989187,"byte_end":7989214,"line_start":250,"line_end":250,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989219,"byte_end":7989231,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989236,"byte_end":7989243,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989248,"byte_end":7989255,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990210,"byte_end":7990219,"line_start":283,"line_end":283,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This function is similar to `sync_all`, except that it may not\n synchronize file metadata to the filesystem.","sig":null,"attributes":[{"value":"/ This function is similar to `sync_all`, except that it may not","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989448,"byte_end":7989514,"line_start":261,"line_end":261,"column_start":5,"column_end":71}},{"value":"/ synchronize file metadata to the filesystem.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989519,"byte_end":7989567,"line_start":262,"line_end":262,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989572,"byte_end":7989575,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize content, but don't","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989580,"byte_end":7989655,"line_start":264,"line_end":264,"column_start":5,"column_end":80}},{"value":"/ need the metadata on disk. The goal of this method is to reduce disk","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989660,"byte_end":7989732,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ operations.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989737,"byte_end":7989752,"line_start":266,"line_end":266,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989757,"byte_end":7989760,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of `sync_all`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989765,"byte_end":7989843,"line_start":268,"line_end":268,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989848,"byte_end":7989851,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989856,"byte_end":7989870,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989875,"byte_end":7989878,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989883,"byte_end":7989896,"line_start":272,"line_end":272,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989901,"byte_end":7989925,"line_start":273,"line_end":273,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989930,"byte_end":7989956,"line_start":274,"line_end":274,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989961,"byte_end":7989964,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7989969,"byte_end":7990014,"line_start":276,"line_end":276,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990019,"byte_end":7990069,"line_start":277,"line_end":277,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990074,"byte_end":7990118,"line_start":278,"line_end":278,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990123,"byte_end":7990151,"line_start":279,"line_end":279,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990156,"byte_end":7990168,"line_start":280,"line_end":280,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990173,"byte_end":7990180,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990185,"byte_end":7990192,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7991232,"byte_end":7991239,"line_start":315,"line_end":315,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"fn (&mut self, size: u64) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the underlying file, updating the size of this file to become size.","sig":null,"attributes":[{"value":"/ Truncates or extends the underlying file, updating the size of this file to become size.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990387,"byte_end":7990479,"line_start":290,"line_end":290,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990484,"byte_end":7990487,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ If the size is less than the current file's size, then the file will be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990492,"byte_end":7990567,"line_start":292,"line_end":292,"column_start":5,"column_end":80}},{"value":"/ shrunk. If it is greater than the current file's size, then the file","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990572,"byte_end":7990644,"line_start":293,"line_end":293,"column_start":5,"column_end":77}},{"value":"/ will be extended to size and have all of the intermediate data filled in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990649,"byte_end":7990725,"line_start":294,"line_end":294,"column_start":5,"column_end":81}},{"value":"/ with 0s.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990730,"byte_end":7990742,"line_start":295,"line_end":295,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990747,"byte_end":7990750,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990755,"byte_end":7990767,"line_start":297,"line_end":297,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990772,"byte_end":7990775,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the file is not opened for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990780,"byte_end":7990848,"line_start":299,"line_end":299,"column_start":5,"column_end":73}},{"value":"/ writing.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990853,"byte_end":7990865,"line_start":300,"line_end":300,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990870,"byte_end":7990873,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990878,"byte_end":7990892,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990897,"byte_end":7990900,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990905,"byte_end":7990918,"line_start":304,"line_end":304,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990923,"byte_end":7990947,"line_start":305,"line_end":305,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990952,"byte_end":7990978,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990983,"byte_end":7990986,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7990991,"byte_end":7991036,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7991041,"byte_end":7991091,"line_start":309,"line_end":309,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7991096,"byte_end":7991140,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7991145,"byte_end":7991173,"line_start":311,"line_end":311,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7991178,"byte_end":7991190,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7991195,"byte_end":7991202,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7991207,"byte_end":7991214,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7992725,"byte_end":7992733,"line_start":371,"line_end":371,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"fn (&self) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Queries metadata about the underlying file.","sig":null,"attributes":[{"value":"/ Queries metadata about the underlying file.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7992339,"byte_end":7992386,"line_start":356,"line_end":356,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7992391,"byte_end":7992394,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7992399,"byte_end":7992413,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7992418,"byte_end":7992421,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7992426,"byte_end":7992439,"line_start":360,"line_end":360,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7992444,"byte_end":7992468,"line_start":361,"line_end":361,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7992473,"byte_end":7992476,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7992481,"byte_end":7992526,"line_start":363,"line_end":363,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7992531,"byte_end":7992575,"line_start":364,"line_end":364,"column_start":5,"column_end":49}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7992580,"byte_end":7992622,"line_start":365,"line_end":365,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7992627,"byte_end":7992630,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", metadata);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7992635,"byte_end":7992666,"line_start":367,"line_end":367,"column_start":5,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7992671,"byte_end":7992683,"line_start":368,"line_end":368,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7992688,"byte_end":7992695,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7992700,"byte_end":7992707,"line_start":370,"line_end":370,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993357,"byte_end":7993366,"line_start":391,"line_end":391,"column_start":18,"column_end":27},"name":"try_clone","qualname":"<File>::try_clone","value":"fn (&self) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `File` instance that shares the same underlying file handle\n as the existing `File` instance. Reads, writes, and seeks will affect both\n File instances simultaneously.","sig":null,"attributes":[{"value":"/ Create a new `File` instance that shares the same underlying file handle","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7992861,"byte_end":7992937,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/ as the existing `File` instance. Reads, writes, and seeks will affect both","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7992942,"byte_end":7993020,"line_start":377,"line_end":377,"column_start":5,"column_end":83}},{"value":"/ File instances simultaneously.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993025,"byte_end":7993059,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993064,"byte_end":7993067,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993072,"byte_end":7993086,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993091,"byte_end":7993094,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993099,"byte_end":7993112,"line_start":382,"line_end":382,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993117,"byte_end":7993141,"line_start":383,"line_end":383,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993146,"byte_end":7993149,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993154,"byte_end":7993199,"line_start":385,"line_end":385,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993204,"byte_end":7993248,"line_start":386,"line_end":386,"column_start":5,"column_end":49}},{"value":"/ let file_clone = file.try_clone().await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993253,"byte_end":7993298,"line_start":387,"line_end":387,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993303,"byte_end":7993315,"line_start":388,"line_end":388,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993320,"byte_end":7993327,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993332,"byte_end":7993339,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994059,"byte_end":7994067,"line_start":413,"line_end":413,"column_start":18,"column_end":26},"name":"into_std","qualname":"<File>::into_std","value":"fn (mut self) -> sys::File","parent":null,"children":[],"decl_id":null,"docs":" Destructures `File` into a [`std::fs::File`][std]. This function is\n async to allow any in-flight operations to complete.","sig":null,"attributes":[{"value":"/ Destructures `File` into a [`std::fs::File`][std]. This function is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993545,"byte_end":7993616,"line_start":397,"line_end":397,"column_start":5,"column_end":76}},{"value":"/ async to allow any in-flight operations to complete.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993621,"byte_end":7993677,"line_start":398,"line_end":398,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993682,"byte_end":7993685,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Use `File::try_into_std` to attempt conversion immediately.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993690,"byte_end":7993753,"line_start":400,"line_end":400,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993758,"byte_end":7993761,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993766,"byte_end":7993780,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993785,"byte_end":7993788,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993793,"byte_end":7993806,"line_start":404,"line_end":404,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993811,"byte_end":7993835,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993840,"byte_end":7993843,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993848,"byte_end":7993893,"line_start":407,"line_end":407,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993898,"byte_end":7993948,"line_start":408,"line_end":408,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.into_std().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7993953,"byte_end":7994000,"line_start":409,"line_end":409,"column_start":5,"column_end":52}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994005,"byte_end":7994017,"line_start":410,"line_end":410,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994022,"byte_end":7994029,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994034,"byte_end":7994041,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994728,"byte_end":7994740,"line_start":436,"line_end":436,"column_start":12,"column_end":24},"name":"try_into_std","qualname":"<File>::try_into_std","value":"fn (mut self) -> Result<sys::File, Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to immediately destructure `File` into a [`std::fs::File`][std].","sig":null,"attributes":[{"value":"/ Tries to immediately destructure `File` into a [`std::fs::File`][std].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994211,"byte_end":7994285,"line_start":418,"line_end":418,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994290,"byte_end":7994293,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994298,"byte_end":7994310,"line_start":420,"line_end":420,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994315,"byte_end":7994318,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ This function will return an error containing the file if some","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994323,"byte_end":7994389,"line_start":422,"line_end":422,"column_start":5,"column_end":71}},{"value":"/ operation is in-flight.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994394,"byte_end":7994421,"line_start":423,"line_end":423,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994426,"byte_end":7994429,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994434,"byte_end":7994448,"line_start":425,"line_end":425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994453,"byte_end":7994456,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994461,"byte_end":7994474,"line_start":427,"line_end":427,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994479,"byte_end":7994503,"line_start":428,"line_end":428,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994508,"byte_end":7994511,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994516,"byte_end":7994561,"line_start":430,"line_end":430,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994566,"byte_end":7994616,"line_start":431,"line_end":431,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.try_into_std().unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994621,"byte_end":7994675,"line_start":432,"line_end":432,"column_start":5,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994680,"byte_end":7994692,"line_start":433,"line_end":433,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994697,"byte_end":7994704,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994709,"byte_end":7994716,"line_start":435,"line_end":435,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7996018,"byte_end":7996033,"line_start":475,"line_end":475,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"fn (&self, perm: Permissions) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the underlying file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the underlying file.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7994993,"byte_end":7995044,"line_start":446,"line_end":446,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995049,"byte_end":7995052,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995057,"byte_end":7995089,"line_start":448,"line_end":448,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995094,"byte_end":7995097,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This function currently corresponds to the `fchmod` function on Unix and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995102,"byte_end":7995178,"line_start":450,"line_end":450,"column_start":5,"column_end":81}},{"value":"/ the `SetFileInformationByHandle` function on Windows. Note that, this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995183,"byte_end":7995256,"line_start":451,"line_end":451,"column_start":5,"column_end":78}},{"value":"/ [may change in the future][changes].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995261,"byte_end":7995301,"line_start":452,"line_end":452,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995306,"byte_end":7995309,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995314,"byte_end":7995399,"line_start":454,"line_end":454,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995404,"byte_end":7995407,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995412,"byte_end":7995424,"line_start":456,"line_end":456,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995429,"byte_end":7995432,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the user lacks permission change","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995437,"byte_end":7995511,"line_start":458,"line_end":458,"column_start":5,"column_end":79}},{"value":"/ attributes on the underlying file. It may also return an error in other","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995516,"byte_end":7995591,"line_start":459,"line_end":459,"column_start":5,"column_end":80}},{"value":"/ os-specific unspecified cases.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995596,"byte_end":7995630,"line_start":460,"line_end":460,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995635,"byte_end":7995638,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995643,"byte_end":7995657,"line_start":462,"line_end":462,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995662,"byte_end":7995665,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995670,"byte_end":7995683,"line_start":464,"line_end":464,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995688,"byte_end":7995712,"line_start":465,"line_end":465,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995717,"byte_end":7995720,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995725,"byte_end":7995770,"line_start":467,"line_end":467,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995775,"byte_end":7995819,"line_start":468,"line_end":468,"column_start":5,"column_end":49}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995824,"byte_end":7995881,"line_start":469,"line_end":469,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995886,"byte_end":7995915,"line_start":470,"line_end":470,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995920,"byte_end":7995959,"line_start":471,"line_end":471,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995964,"byte_end":7995976,"line_start":472,"line_end":472,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995981,"byte_end":7995988,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7995993,"byte_end":7996000,"line_start":474,"line_end":474,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":771},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/hard_link.rs","byte_start":8005185,"byte_end":8005194,"line_start":14,"line_end":14,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"fn (src: impl AsRef<Path>, dst: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new hard link on the filesystem.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/hard_link.rs","byte_start":8004834,"byte_end":8004880,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/hard_link.rs","byte_start":8004881,"byte_end":8004884,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that systems","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/hard_link.rs","byte_start":8004885,"byte_end":8004964,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ often require these two paths to both be located on the same filesystem.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/hard_link.rs","byte_start":8004965,"byte_end":8005041,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/hard_link.rs","byte_start":8005042,"byte_end":8005045,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::hard_link`][std]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/hard_link.rs","byte_start":8005046,"byte_end":8005105,"line_start":11,"line_end":11,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/hard_link.rs","byte_start":8005106,"byte_end":8005109,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [std]: https://doc.rust-lang.org/std/fs/fn.hard_link.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/hard_link.rs","byte_start":8005110,"byte_end":8005171,"line_start":13,"line_end":13,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":783},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/metadata.rs","byte_start":8005546,"byte_end":8005554,"line_start":8,"line_end":8,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"fn (path: impl AsRef<Path>) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Queries the file system metadata for a path.\n","sig":null,"attributes":[{"value":"/ Queries the file system metadata for a path.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/metadata.rs","byte_start":8005484,"byte_end":8005532,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1017},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006190,"byte_end":8006201,"line_start":16,"line_end":16,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" Options and flags which can be used to configure how a file is opened.","sig":null,"attributes":[{"value":"/ Options and flags which can be used to configure how a file is opened.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8005765,"byte_end":8005839,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8005840,"byte_end":8005843,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::OpenOptions`] for usage from","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8005844,"byte_end":8005920,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ the Tokio runtime.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8005921,"byte_end":8005943,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8005944,"byte_end":8005947,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `From<std::fs::OpenOptions>` is implemented for more advanced configuration","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8005948,"byte_end":8006027,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ than the methods provided here.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006028,"byte_end":8006063,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006064,"byte_end":8006067,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::OpenOptions`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006068,"byte_end":8006154,"line_start":14,"line_end":14,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006594,"byte_end":8006597,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"fn () -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank new set of options ready for configuration.","sig":null,"attributes":[{"value":"/ Creates a blank new set of options ready for configuration.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006249,"byte_end":8006312,"line_start":19,"line_end":19,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006317,"byte_end":8006320,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006325,"byte_end":8006370,"line_start":21,"line_end":21,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006375,"byte_end":8006378,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006383,"byte_end":8006397,"line_start":23,"line_end":23,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006402,"byte_end":8006405,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006410,"byte_end":8006423,"line_start":25,"line_end":25,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006428,"byte_end":8006459,"line_start":26,"line_end":26,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006464,"byte_end":8006467,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ let mut options = OpenOptions::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006472,"byte_end":8006513,"line_start":28,"line_end":28,"column_start":5,"column_end":46}},{"value":"/ let future = options.read(true).open(\"foo.txt\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006518,"byte_end":8006570,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006575,"byte_end":8006582,"line_start":30,"line_end":30,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006833,"byte_end":8006837,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"fn (&mut self, read: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" See the underlying [`read`] call for details.","sig":null,"attributes":[{"value":"/ See the underlying [`read`] call for details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006677,"byte_end":8006726,"line_start":35,"line_end":35,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006731,"byte_end":8006734,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ [`read`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html#method.read","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006739,"byte_end":8006821,"line_start":37,"line_end":37,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8007093,"byte_end":8007098,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"fn (&mut self, write: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" See the underlying [`write`] call for details.","sig":null,"attributes":[{"value":"/ See the underlying [`write`] call for details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006934,"byte_end":8006984,"line_start":43,"line_end":43,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006989,"byte_end":8006992,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`write`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html#method.write","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006997,"byte_end":8007081,"line_start":45,"line_end":45,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8007360,"byte_end":8007366,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"fn (&mut self, append: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" See the underlying [`append`] call for details.","sig":null,"attributes":[{"value":"/ See the underlying [`append`] call for details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8007198,"byte_end":8007249,"line_start":51,"line_end":51,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8007254,"byte_end":8007257,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`append`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html#method.append","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8007262,"byte_end":8007348,"line_start":53,"line_end":53,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8007637,"byte_end":8007645,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"fn (&mut self, truncate: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" See the underlying [`truncate`] call for details.","sig":null,"attributes":[{"value":"/ See the underlying [`truncate`] call for details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8007469,"byte_end":8007522,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8007527,"byte_end":8007530,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`truncate`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html#method.truncate","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8007535,"byte_end":8007625,"line_start":61,"line_end":61,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8007916,"byte_end":8007922,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"fn (&mut self, create: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" See the underlying [`create`] call for details.","sig":null,"attributes":[{"value":"/ See the underlying [`create`] call for details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8007754,"byte_end":8007805,"line_start":67,"line_end":67,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8007810,"byte_end":8007813,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ [`create`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html#method.create","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8007818,"byte_end":8007904,"line_start":69,"line_end":69,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8008199,"byte_end":8008209,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"fn (&mut self, create_new: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" See the underlying [`create_new`] call for details.","sig":null,"attributes":[{"value":"/ See the underlying [`create_new`] call for details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8008025,"byte_end":8008080,"line_start":75,"line_end":75,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8008085,"byte_end":8008088,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`create_new`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html#method.create_new","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8008093,"byte_end":8008187,"line_start":77,"line_end":77,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8008690,"byte_end":8008694,"line_start":91,"line_end":91,"column_start":18,"column_end":22},"name":"open","qualname":"<OpenOptions>::open","value":"fn (&self, path: impl AsRef<Path>) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file at `path` with the options specified by `self`.","sig":null,"attributes":[{"value":"/ Opens a file at `path` with the options specified by `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8008324,"byte_end":8008388,"line_start":83,"line_end":83,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8008393,"byte_end":8008396,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8008401,"byte_end":8008413,"line_start":85,"line_end":85,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8008418,"byte_end":8008421,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ `OpenOptionsFuture` results in an error if called from outside of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8008426,"byte_end":8008499,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ Tokio runtime or if the underlying [`open`] call results in an error.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8008504,"byte_end":8008577,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8008582,"byte_end":8008585,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [`open`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html#method.open","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8008590,"byte_end":8008672,"line_start":90,"line_end":90,"column_start":5,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":813},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/os/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::fs::os","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/os/mod.rs","parent":null,"children":[{"krate":0,"index":814}],"decl_id":null,"docs":" OS-specific functionality.\n","sig":null,"attributes":[{"value":"! OS-specific functionality.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/os/mod.rs","byte_start":8009165,"byte_end":8009195,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":814},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/os/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::fs::os::unix","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/os/unix/mod.rs","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":825}],"decl_id":null,"docs":" Unix-specific extensions to primitives in the `tokio_fs` module.\n","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/os/mod.rs","byte_start":8009197,"byte_end":8009209,"line_start":3,"line_end":3,"column_start":1,"column_end":13}},{"value":"! Unix-specific extensions to primitives in the `tokio_fs` module.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/os/unix/mod.rs","byte_start":8009259,"byte_end":8009327,"line_start":1,"line_end":1,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":819},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/os/unix/symlink.rs","byte_start":8009719,"byte_end":8009726,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"symlink","qualname":"::fs::os::unix::symlink::symlink","value":"fn (src: impl AsRef<Path>, dst: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new symbolic link on the filesystem.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/os/unix/symlink.rs","byte_start":8009436,"byte_end":8009486,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/os/unix/symlink.rs","byte_start":8009487,"byte_end":8009490,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a symbolic link pointing to the `src` path.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/os/unix/symlink.rs","byte_start":8009491,"byte_end":8009561,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/os/unix/symlink.rs","byte_start":8009562,"byte_end":8009565,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::os::unix::fs::symlink`][std]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/os/unix/symlink.rs","byte_start":8009566,"byte_end":8009633,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/os/unix/symlink.rs","byte_start":8009634,"byte_end":8009637,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [std]: https://doc.rust-lang.org/std/os/unix/fs/fn.symlink.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/os/unix/symlink.rs","byte_start":8009638,"byte_end":8009705,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":831},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read.rs","byte_start":8010432,"byte_end":8010436,"line_start":21,"line_end":21,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"fn (path: impl AsRef<Path>) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will open a file for reading and read the entire\n contents into a buffer and return said buffer.","sig":null,"attributes":[{"value":"/ Creates a future which will open a file for reading and read the entire","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read.rs","byte_start":8009994,"byte_end":8010069,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents into a buffer and return said buffer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read.rs","byte_start":8010070,"byte_end":8010120,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read.rs","byte_start":8010121,"byte_end":8010124,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::read`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read.rs","byte_start":8010125,"byte_end":8010177,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read.rs","byte_start":8010178,"byte_end":8010181,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read.rs","byte_start":8010182,"byte_end":8010196,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read.rs","byte_start":8010197,"byte_end":8010200,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read.rs","byte_start":8010201,"byte_end":8010214,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read.rs","byte_start":8010215,"byte_end":8010233,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read.rs","byte_start":8010234,"byte_end":8010237,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read.rs","byte_start":8010238,"byte_end":8010283,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let contents = fs::read(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read.rs","byte_start":8010284,"byte_end":8010330,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ println!(\"foo.txt contains {} bytes\", contents.len());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read.rs","byte_start":8010331,"byte_end":8010389,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read.rs","byte_start":8010390,"byte_end":8010402,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read.rs","byte_start":8010403,"byte_end":8010410,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read.rs","byte_start":8010411,"byte_end":8010418,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":855},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011022,"byte_end":8011030,"line_start":18,"line_end":18,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"fn (path: impl AsRef<Path>) -> io::Result<ReadDir>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8010874,"byte_end":8010931,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8010932,"byte_end":8010935,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_dir`](std::fs::read_dir)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8010936,"byte_end":8011008,"line_start":17,"line_end":17,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1024},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011842,"byte_end":8011849,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream of the entries in a directory.","sig":null,"attributes":[{"value":"/ Stream of the entries in a directory.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011224,"byte_end":8011265,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011266,"byte_end":8011269,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This stream is returned from the [`read_dir`] function of this module and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011270,"byte_end":8011347,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will yield instances of [`DirEntry`]. Through a [`DirEntry`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011348,"byte_end":8011412,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/ information like the entry's path and possibly other metadata can be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011413,"byte_end":8011485,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ learned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011486,"byte_end":8011498,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011499,"byte_end":8011502,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011503,"byte_end":8011515,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011516,"byte_end":8011519,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This [`Stream`] will return an [`Err`] if there's some sort of intermittent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011520,"byte_end":8011599,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ IO error during iteration.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011600,"byte_end":8011630,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011631,"byte_end":8011634,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: read_dir","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011635,"byte_end":8011661,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ [`DirEntry`]: DirEntry","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011662,"byte_end":8011688,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011689,"byte_end":8011726,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ [`Err`]: std::result::Result::Err","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011727,"byte_end":8011764,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8011782,"byte_end":8011830,"line_start":42,"line_end":42,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8012103,"byte_end":8012113,"line_start":53,"line_end":53,"column_start":18,"column_end":28},"name":"next_entry","qualname":"<ReadDir>::next_entry","value":"fn (&mut self) -> io::Result<Option<DirEntry>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next entry in the directory stream.\n","sig":null,"attributes":[{"value":"/ Returns the next entry in the directory stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8012034,"byte_end":8012085,"line_start":52,"line_end":52,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8012285,"byte_end":8012300,"line_start":59,"line_end":59,"column_start":12,"column_end":27},"name":"poll_next_entry","qualname":"<ReadDir>::poll_next_entry","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<io::Result<Option<DirEntry>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1038},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014061,"byte_end":8014069,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::read_dir::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" Entries returned by the [`ReadDir`] stream.","sig":null,"attributes":[{"value":"/ Entries returned by the [`ReadDir`] stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8013605,"byte_end":8013652,"line_start":100,"line_end":100,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8013653,"byte_end":8013656,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`ReadDir`]: struct.ReadDir.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8013657,"byte_end":8013693,"line_start":102,"line_end":102,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8013694,"byte_end":8013697,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirEntry`] for usage from the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8013698,"byte_end":8013775,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ Tokio runtime.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8013776,"byte_end":8013794,"line_start":105,"line_end":105,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8013795,"byte_end":8013798,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ An instance of `DirEntry` represents an entry inside of a directory on the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8013799,"byte_end":8013877,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ filesystem. Each entry can be inspected via methods to learn about the full","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8013878,"byte_end":8013957,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ path or possibly other metadata through per-platform extension traits.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8013958,"byte_end":8014032,"line_start":109,"line_end":109,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014901,"byte_end":8014905,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"fn (&self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to the file that this entry represents.","sig":null,"attributes":[{"value":"/ Returns the full path to the file that this entry represents.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014116,"byte_end":8014181,"line_start":114,"line_end":114,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014186,"byte_end":8014189,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path to `read_dir`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014194,"byte_end":8014265,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ with the filename of this entry.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014270,"byte_end":8014306,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014311,"byte_end":8014314,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014319,"byte_end":8014333,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014338,"byte_end":8014341,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014346,"byte_end":8014359,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014364,"byte_end":8014382,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014387,"byte_end":8014390,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014395,"byte_end":8014440,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014445,"byte_end":8014492,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014497,"byte_end":8014500,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014505,"byte_end":8014562,"line_start":127,"line_end":127,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014567,"byte_end":8014606,"line_start":128,"line_end":128,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014611,"byte_end":8014616,"line_start":129,"line_end":129,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014621,"byte_end":8014633,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014638,"byte_end":8014645,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014650,"byte_end":8014657,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014662,"byte_end":8014665,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This prints output like:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014670,"byte_end":8014698,"line_start":134,"line_end":134,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014703,"byte_end":8014706,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014711,"byte_end":8014722,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/ \"./whatever.txt\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014727,"byte_end":8014747,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ \"./foo.html\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014752,"byte_end":8014768,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/ \"./hello_world.rs\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014773,"byte_end":8014795,"line_start":139,"line_end":139,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014800,"byte_end":8014807,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014812,"byte_end":8014815,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ The exact text, of course, depends on what files you have in `.`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014820,"byte_end":8014889,"line_start":142,"line_end":142,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015425,"byte_end":8015434,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"fn (&self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare file name of this directory entry without any other\n leading path component.","sig":null,"attributes":[{"value":"/ Returns the bare file name of this directory entry without any other","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014959,"byte_end":8015031,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ leading path component.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015036,"byte_end":8015063,"line_start":148,"line_end":148,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015068,"byte_end":8015071,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015076,"byte_end":8015090,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015095,"byte_end":8015098,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015103,"byte_end":8015110,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015115,"byte_end":8015133,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015138,"byte_end":8015141,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015146,"byte_end":8015191,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015196,"byte_end":8015243,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015248,"byte_end":8015251,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015256,"byte_end":8015313,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.file_name());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015318,"byte_end":8015362,"line_start":159,"line_end":159,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015367,"byte_end":8015372,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015377,"byte_end":8015389,"line_start":161,"line_end":161,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015394,"byte_end":8015401,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015406,"byte_end":8015413,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016530,"byte_end":8016538,"line_start":198,"line_end":198,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"fn (&self) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Return the metadata for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Return the metadata for the file that this entry points at.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015494,"byte_end":8015557,"line_start":168,"line_end":168,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015562,"byte_end":8015565,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015570,"byte_end":8015640,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015645,"byte_end":8015657,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015662,"byte_end":8015665,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015670,"byte_end":8015702,"line_start":173,"line_end":173,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015707,"byte_end":8015710,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ On Windows this function is cheap to call (no extra system calls","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015715,"byte_end":8015783,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/ needed), but on Unix platforms this function is the equivalent of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015788,"byte_end":8015857,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/ calling `symlink_metadata` on the path.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015862,"byte_end":8015905,"line_start":177,"line_end":177,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015910,"byte_end":8015913,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015918,"byte_end":8015932,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015937,"byte_end":8015940,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015945,"byte_end":8015952,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015957,"byte_end":8015975,"line_start":182,"line_end":182,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015980,"byte_end":8015983,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8015988,"byte_end":8016033,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016038,"byte_end":8016085,"line_start":185,"line_end":185,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016090,"byte_end":8016093,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016098,"byte_end":8016155,"line_start":187,"line_end":187,"column_start":5,"column_end":62}},{"value":"/     if let Ok(metadata) = entry.metadata().await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016160,"byte_end":8016214,"line_start":188,"line_end":188,"column_start":5,"column_end":59}},{"value":"/         // Now let's show our entry's permissions!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016219,"byte_end":8016273,"line_start":189,"line_end":189,"column_start":5,"column_end":59}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), metadata.permissions());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016278,"byte_end":8016351,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/     } else {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016356,"byte_end":8016372,"line_start":191,"line_end":191,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016377,"byte_end":8016447,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016452,"byte_end":8016461,"line_start":193,"line_end":193,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016466,"byte_end":8016471,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016476,"byte_end":8016488,"line_start":195,"line_end":195,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016493,"byte_end":8016500,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016505,"byte_end":8016512,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017721,"byte_end":8017730,"line_start":233,"line_end":233,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"fn (&self) -> io::Result<FileType>","parent":null,"children":[],"decl_id":null,"docs":" Return the file type for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Return the file type for the file that this entry points at.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016664,"byte_end":8016728,"line_start":203,"line_end":203,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016733,"byte_end":8016736,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016741,"byte_end":8016811,"line_start":205,"line_end":205,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016816,"byte_end":8016828,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016833,"byte_end":8016836,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016841,"byte_end":8016873,"line_start":208,"line_end":208,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016878,"byte_end":8016881,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ On Windows and most Unix platforms this function is free (no extra","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016886,"byte_end":8016956,"line_start":210,"line_end":210,"column_start":5,"column_end":75}},{"value":"/ system calls needed), but some Unix platforms may require the equivalent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8016961,"byte_end":8017037,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/ call to `symlink_metadata` to learn about the target file type.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017042,"byte_end":8017109,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017114,"byte_end":8017117,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017122,"byte_end":8017136,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017141,"byte_end":8017144,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017149,"byte_end":8017156,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017161,"byte_end":8017179,"line_start":217,"line_end":217,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017184,"byte_end":8017187,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017192,"byte_end":8017237,"line_start":219,"line_end":219,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017242,"byte_end":8017289,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017294,"byte_end":8017297,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017302,"byte_end":8017359,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/     if let Ok(file_type) = entry.file_type().await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017364,"byte_end":8017420,"line_start":223,"line_end":223,"column_start":5,"column_end":61}},{"value":"/         // Now let's show our entry's file type!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017425,"byte_end":8017477,"line_start":224,"line_end":224,"column_start":5,"column_end":57}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), file_type);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017482,"byte_end":8017542,"line_start":225,"line_end":225,"column_start":5,"column_end":65}},{"value":"/     } else {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017547,"byte_end":8017563,"line_start":226,"line_end":226,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017568,"byte_end":8017638,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017643,"byte_end":8017652,"line_start":228,"line_end":228,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017657,"byte_end":8017662,"line_start":229,"line_end":229,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017667,"byte_end":8017679,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017684,"byte_end":8017691,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017696,"byte_end":8017703,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":894},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_link.rs","byte_start":8018211,"byte_end":8018220,"line_start":11,"line_end":11,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"fn (path: impl AsRef<Path>) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_link.rs","byte_start":8018029,"byte_end":8018099,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_link.rs","byte_start":8018100,"byte_end":8018103,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_link`][std]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_link.rs","byte_start":8018104,"byte_end":8018163,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_link.rs","byte_start":8018164,"byte_end":8018167,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read_link","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_link.rs","byte_start":8018168,"byte_end":8018197,"line_start":10,"line_end":10,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":905},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_to_string.rs","byte_start":8018879,"byte_end":8018893,"line_start":21,"line_end":21,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"fn (path: impl AsRef<Path>) -> io::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will open a file for reading and read the entire\n contents into a string and return said string.","sig":null,"attributes":[{"value":"/ Creates a future which will open a file for reading and read the entire","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_to_string.rs","byte_start":8018421,"byte_end":8018496,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents into a string and return said string.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_to_string.rs","byte_start":8018497,"byte_end":8018547,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_to_string.rs","byte_start":8018548,"byte_end":8018551,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::read_to_string`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_to_string.rs","byte_start":8018552,"byte_end":8018614,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_to_string.rs","byte_start":8018615,"byte_end":8018618,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_to_string.rs","byte_start":8018619,"byte_end":8018633,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_to_string.rs","byte_start":8018634,"byte_end":8018637,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_to_string.rs","byte_start":8018638,"byte_end":8018651,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_to_string.rs","byte_start":8018652,"byte_end":8018670,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_to_string.rs","byte_start":8018671,"byte_end":8018674,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_to_string.rs","byte_start":8018675,"byte_end":8018720,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let contents = fs::read_to_string(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_to_string.rs","byte_start":8018721,"byte_end":8018777,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/ println!(\"foo.txt contains {} bytes\", contents.len());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_to_string.rs","byte_start":8018778,"byte_end":8018836,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_to_string.rs","byte_start":8018837,"byte_end":8018849,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_to_string.rs","byte_start":8018850,"byte_end":8018857,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_to_string.rs","byte_start":8018858,"byte_end":8018865,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":915},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_dir.rs","byte_start":8019241,"byte_end":8019251,"line_start":9,"line_end":9,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"fn (path: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes an existing, empty directory.","sig":null,"attributes":[{"value":"/ Removes an existing, empty directory.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_dir.rs","byte_start":8019105,"byte_end":8019146,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_dir.rs","byte_start":8019147,"byte_end":8019150,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir`](std::fs::remove_dir)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_dir.rs","byte_start":8019151,"byte_end":8019227,"line_start":8,"line_end":8,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":925},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_dir_all.rs","byte_start":8019694,"byte_end":8019708,"line_start":11,"line_end":11,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"fn (path: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory at this path, after removing all its contents. Use carefully!","sig":null,"attributes":[{"value":"/ Removes a directory at this path, after removing all its contents. Use carefully!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_dir_all.rs","byte_start":8019455,"byte_end":8019540,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_dir_all.rs","byte_start":8019541,"byte_end":8019544,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir_all`][std]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_dir_all.rs","byte_start":8019545,"byte_end":8019609,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_dir_all.rs","byte_start":8019610,"byte_end":8019613,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: https://doc.rust-lang.org/std/fs/fn.remove_dir_all.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_dir_all.rs","byte_start":8019614,"byte_end":8019680,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":935},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_file.rs","byte_start":8020277,"byte_end":8020288,"line_start":15,"line_end":15,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"fn (path: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a file from the filesystem.","sig":null,"attributes":[{"value":"/ Removes a file from the filesystem.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_file.rs","byte_start":8019916,"byte_end":8019955,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_file.rs","byte_start":8019956,"byte_end":8019959,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that there is no","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_file.rs","byte_start":8019960,"byte_end":8019985,"line_start":8,"line_end":8,"column_start":1,"column_end":26}},{"value":"/ guarantee that the file is immediately deleted (e.g. depending on","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_file.rs","byte_start":8019986,"byte_end":8020055,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ platform, other open file descriptors may prevent immediate removal).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_file.rs","byte_start":8020056,"byte_end":8020129,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_file.rs","byte_start":8020130,"byte_end":8020133,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_file`][std]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_file.rs","byte_start":8020134,"byte_end":8020195,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_file.rs","byte_start":8020196,"byte_end":8020199,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std]: https://doc.rust-lang.org/std/fs/fn.remove_file.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/remove_file.rs","byte_start":8020200,"byte_end":8020263,"line_start":14,"line_end":14,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":945},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/rename.rs","byte_start":8020755,"byte_end":8020761,"line_start":12,"line_end":12,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"fn (from: impl AsRef<Path>, to: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Rename a file or directory to a new name, replacing the original file if\n `to` already exists.","sig":null,"attributes":[{"value":"/ Rename a file or directory to a new name, replacing the original file if","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/rename.rs","byte_start":8020493,"byte_end":8020569,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ `to` already exists.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/rename.rs","byte_start":8020570,"byte_end":8020594,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/rename.rs","byte_start":8020595,"byte_end":8020598,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This will not work if the new name is on a different mount point.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/rename.rs","byte_start":8020599,"byte_end":8020668,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/rename.rs","byte_start":8020669,"byte_end":8020672,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::rename`](std::fs::rename)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/rename.rs","byte_start":8020673,"byte_end":8020741,"line_start":11,"line_end":11,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":957},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/set_permissions.rs","byte_start":8021266,"byte_end":8021281,"line_start":12,"line_end":12,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"fn (path: impl AsRef<Path>, perm: Permissions) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions found on a file or a directory.","sig":null,"attributes":[{"value":"/ Changes the permissions found on a file or a directory.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/set_permissions.rs","byte_start":8021051,"byte_end":8021110,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/set_permissions.rs","byte_start":8021111,"byte_end":8021114,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::set_permissions`][std]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/set_permissions.rs","byte_start":8021115,"byte_end":8021180,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/set_permissions.rs","byte_start":8021181,"byte_end":8021184,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: https://doc.rust-lang.org/std/fs/fn.set_permissions.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/set_permissions.rs","byte_start":8021185,"byte_end":8021252,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":968},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/symlink_metadata.rs","byte_start":8021739,"byte_end":8021755,"line_start":12,"line_end":12,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"fn (path: impl AsRef<Path>) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Queries the file system metadata for a path.","sig":null,"attributes":[{"value":"/ Queries the file system metadata for a path.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/symlink_metadata.rs","byte_start":8021533,"byte_end":8021581,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/symlink_metadata.rs","byte_start":8021582,"byte_end":8021585,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::symlink_metadata`][std]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/symlink_metadata.rs","byte_start":8021586,"byte_end":8021652,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/symlink_metadata.rs","byte_start":8021653,"byte_end":8021656,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: https://doc.rust-lang.org/std/fs/fn.symlink_metadata.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/symlink_metadata.rs","byte_start":8021657,"byte_end":8021725,"line_start":11,"line_end":11,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":979},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/write.rs","byte_start":8022325,"byte_end":8022330,"line_start":20,"line_end":20,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"fn <C> (path: impl AsRef<Path>, contents: C) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that will open a file for writing and write the entire\n contents of `contents` to it.","sig":null,"attributes":[{"value":"/ Creates a future that will open a file for writing and write the entire","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/write.rs","byte_start":8021959,"byte_end":8022034,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents of `contents` to it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/write.rs","byte_start":8022035,"byte_end":8022068,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/write.rs","byte_start":8022069,"byte_end":8022072,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::write`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/write.rs","byte_start":8022073,"byte_end":8022126,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/write.rs","byte_start":8022127,"byte_end":8022130,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/write.rs","byte_start":8022131,"byte_end":8022145,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/write.rs","byte_start":8022146,"byte_end":8022149,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/write.rs","byte_start":8022150,"byte_end":8022163,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/write.rs","byte_start":8022164,"byte_end":8022182,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/write.rs","byte_start":8022183,"byte_end":8022186,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/write.rs","byte_start":8022187,"byte_end":8022232,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ fs::write(\"foo.txt\", b\"Hello world!\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/write.rs","byte_start":8022233,"byte_end":8022282,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/write.rs","byte_start":8022283,"byte_end":8022295,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/write.rs","byte_start":8022296,"byte_end":8022303,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/write.rs","byte_start":8022304,"byte_end":8022311,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1056},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/ready.rs","byte_start":20540,"byte_end":20545,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/ready.rs","byte_start":20305,"byte_end":20352,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/ready.rs","byte_start":20353,"byte_end":20356,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/ready.rs","byte_start":20357,"byte_end":20434,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/ready.rs","byte_start":20503,"byte_end":20528,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":138},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1120},{"krate":0,"index":139},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":268},{"krate":0,"index":1209},{"krate":0,"index":1312},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1395},{"krate":0,"index":1441},{"krate":0,"index":1452},{"krate":0,"index":1455},{"krate":0,"index":1464},{"krate":0,"index":1467},{"krate":0,"index":1478},{"krate":0,"index":1496},{"krate":0,"index":1561},{"krate":0,"index":1565},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1602},{"krate":0,"index":2664}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"! Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":23299,"byte_end":23376,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":23377,"byte_end":23380,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":23381,"byte_end":23452,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"! defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":23453,"byte_end":23533,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":23534,"byte_end":23608,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":23609,"byte_end":23612,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # AsyncRead and AsyncWrite","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":23613,"byte_end":23643,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":23644,"byte_end":23647,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":23648,"byte_end":23728,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"! [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":23729,"byte_end":23806,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"! input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":23807,"byte_end":23884,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"! _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":23885,"byte_end":23965,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"! type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":23966,"byte_end":24044,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":24045,"byte_end":24110,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":24111,"byte_end":24114,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Another difference is that [`AsyncRead`] and [`AsyncWrite`] only contain","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":24115,"byte_end":24191,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"! core methods needed to provide asynchronous reading and writing","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":24192,"byte_end":24259,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"! functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":24260,"byte_end":24339,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"! and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":24340,"byte_end":24414,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"! implemented for all values that implement [`AsyncRead`] and [`AsyncWrite`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":24415,"byte_end":24493,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"! respectively.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":24494,"byte_end":24511,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":24512,"byte_end":24515,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! End users will rarely interact directly with [`AsyncRead`] and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":24516,"byte_end":24582,"line_start":25,"line_end":25,"column_start":1,"column_end":67}},{"value":"! [`AsyncWrite`]. Instead, they will use the async functions defined in the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":24583,"byte_end":24660,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"! extension traits. Library authors are expected to implement [`AsyncRead`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":24661,"byte_end":24738,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"! and [`AsyncWrite`] in order to provide types that behave like byte streams.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":24739,"byte_end":24818,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":24819,"byte_end":24822,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! Even with these differences, Tokio's [`AsyncRead`] and [`AsyncWrite`] traits","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":24823,"byte_end":24903,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"! can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":24904,"byte_end":24979,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"! `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":24980,"byte_end":25060,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"! and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25061,"byte_end":25132,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"! `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25133,"byte_end":25202,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25203,"byte_end":25206,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! For example, the standard library documentation introduces `Read` by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25207,"byte_end":25279,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"! [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25280,"byte_end":25360,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"! can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25361,"byte_end":25414,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25415,"byte_end":25418,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25419,"byte_end":25432,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25433,"byte_end":25473,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"! use tokio::fs::File;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25474,"byte_end":25498,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25499,"byte_end":25502,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25503,"byte_end":25521,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25522,"byte_end":25561,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"!     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25562,"byte_end":25611,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"!     let mut buffer = [0; 10];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25612,"byte_end":25645,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25646,"byte_end":25649,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     // read up to 10 bytes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25650,"byte_end":25680,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"!     let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25681,"byte_end":25724,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25725,"byte_end":25728,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"!     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25729,"byte_end":25779,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"!     Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25780,"byte_end":25794,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25795,"byte_end":25800,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25801,"byte_end":25808,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25809,"byte_end":25812,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! [`File`]: crate::fs::File","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25813,"byte_end":25842,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"! [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25843,"byte_end":25883,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"! [`std::fs::File`]: std::fs::File","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25884,"byte_end":25920,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"! [std_example]: https://doc.rust-lang.org/std/io/index.html#read-and-write","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25921,"byte_end":25998,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":25999,"byte_end":26002,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! ## Buffered Readers and Writers","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26003,"byte_end":26038,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26039,"byte_end":26042,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26043,"byte_end":26124,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"! making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26125,"byte_end":26199,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"! `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26200,"byte_end":26278,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"! and therefore, `tokio::io` does as well.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26279,"byte_end":26323,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26324,"byte_end":26327,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26328,"byte_end":26398,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"! [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26399,"byte_end":26477,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"! wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26478,"byte_end":26556,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"! of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26557,"byte_end":26634,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26635,"byte_end":26638,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26639,"byte_end":26714,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"! extra methods to any async reader:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26715,"byte_end":26753,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26754,"byte_end":26757,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26758,"byte_end":26771,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26772,"byte_end":26826,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"! use tokio::fs::File;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26827,"byte_end":26851,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26852,"byte_end":26855,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26856,"byte_end":26874,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26875,"byte_end":26914,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"!     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26915,"byte_end":26960,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"!     let mut reader = BufReader::new(f);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":26961,"byte_end":27004,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"!     let mut buffer = String::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27005,"byte_end":27044,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27045,"byte_end":27048,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"!     // read a line into buffer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27049,"byte_end":27083,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"!     reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27084,"byte_end":27129,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27130,"byte_end":27133,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"!     println!(\"{}\", buffer);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27134,"byte_end":27165,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"!     Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27166,"byte_end":27180,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27181,"byte_end":27186,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27187,"byte_end":27194,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27195,"byte_end":27198,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27199,"byte_end":27280,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"! to [`write`](crate::io::AsyncWriteExt::write):","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27281,"byte_end":27331,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27332,"byte_end":27335,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27336,"byte_end":27349,"line_start":98,"line_end":98,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27350,"byte_end":27402,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"! use tokio::fs::File;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27403,"byte_end":27427,"line_start":100,"line_end":100,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27428,"byte_end":27431,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27432,"byte_end":27450,"line_start":102,"line_end":102,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27451,"byte_end":27490,"line_start":103,"line_end":103,"column_start":1,"column_end":40}},{"value":"!     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27491,"byte_end":27538,"line_start":104,"line_end":104,"column_start":1,"column_end":48}},{"value":"!     {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27539,"byte_end":27548,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"!         let mut writer = BufWriter::new(f);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27549,"byte_end":27596,"line_start":106,"line_end":106,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27597,"byte_end":27600,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"!         // write a byte to the buffer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27601,"byte_end":27642,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"!         writer.write(&[42u8]).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27643,"byte_end":27684,"line_start":109,"line_end":109,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27685,"byte_end":27688,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"!     } // the buffer is flushed once writer goes out of scope","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27689,"byte_end":27753,"line_start":111,"line_end":111,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27754,"byte_end":27757,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27758,"byte_end":27772,"line_start":113,"line_end":113,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27773,"byte_end":27778,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27779,"byte_end":27786,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27787,"byte_end":27790,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! [stdbuf]: https://doc.rust-lang.org/std/io/index.html#bufreader-and-bufwriter","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27791,"byte_end":27872,"line_start":117,"line_end":117,"column_start":1,"column_end":82}},{"value":"! [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27873,"byte_end":27915,"line_start":118,"line_end":118,"column_start":1,"column_end":43}},{"value":"! [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27916,"byte_end":27961,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"! [`BufReader`]: crate::io::BufReader","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":27962,"byte_end":28001,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"! [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28002,"byte_end":28041,"line_start":121,"line_end":121,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28042,"byte_end":28045,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28046,"byte_end":28090,"line_start":123,"line_end":123,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28091,"byte_end":28094,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! Because they are traits, we can implement `AsyncRead` and `AsyncWrite` for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28095,"byte_end":28173,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"! our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28174,"byte_end":28253,"line_start":126,"line_end":126,"column_start":1,"column_end":80}},{"value":"! non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28254,"byte_end":28328,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"! other words, these types must never block the thread, and instead the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28329,"byte_end":28402,"line_start":128,"line_end":128,"column_start":1,"column_end":74}},{"value":"! current task is notified when the I/O resource is ready.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28403,"byte_end":28463,"line_start":129,"line_end":129,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28464,"byte_end":28467,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! # Standard input and output","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28468,"byte_end":28499,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28500,"byte_end":28503,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28504,"byte_end":28584,"line_start":133,"line_end":133,"column_start":1,"column_end":81}},{"value":"! These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28585,"byte_end":28661,"line_start":134,"line_end":134,"column_start":1,"column_end":77}},{"value":"! implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28662,"byte_end":28709,"line_start":135,"line_end":135,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28710,"byte_end":28713,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28714,"byte_end":28787,"line_start":137,"line_end":137,"column_start":1,"column_end":74}},{"value":"! context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28788,"byte_end":28864,"line_start":138,"line_end":138,"column_start":1,"column_end":77}},{"value":"! function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28865,"byte_end":28941,"line_start":139,"line_end":139,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28942,"byte_end":28945,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! [input]: fn.stdin.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28946,"byte_end":28972,"line_start":141,"line_end":141,"column_start":1,"column_end":27}},{"value":"! [output]: fn.stdout.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":28973,"byte_end":29001,"line_start":142,"line_end":142,"column_start":1,"column_end":29}},{"value":"! [error]: fn.stderr.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29002,"byte_end":29029,"line_start":143,"line_end":143,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29030,"byte_end":29033,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! # `std` re-exports","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29034,"byte_end":29056,"line_start":145,"line_end":145,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29057,"byte_end":29060,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! Additionally, [`Error`], [`ErrorKind`], and [`Result`] are re-exported","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29061,"byte_end":29135,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"! from `std::io` for ease of use.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29136,"byte_end":29171,"line_start":148,"line_end":148,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29172,"byte_end":29175,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29176,"byte_end":29215,"line_start":150,"line_end":150,"column_start":1,"column_end":40}},{"value":"! [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29216,"byte_end":29257,"line_start":151,"line_end":151,"column_start":1,"column_end":42}},{"value":"! [`Error`]: struct.Error.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29258,"byte_end":29290,"line_start":152,"line_end":152,"column_start":1,"column_end":33}},{"value":"! [`ErrorKind`]: enum.ErrorKind.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29291,"byte_end":29329,"line_start":153,"line_end":153,"column_start":1,"column_end":39}},{"value":"! [`Result`]: type.Result.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29330,"byte_end":29362,"line_start":154,"line_end":154,"column_start":1,"column_end":33}},{"value":"! [`Read`]: std::io::Read","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29363,"byte_end":29390,"line_start":155,"line_end":155,"column_start":1,"column_end":28}},{"value":"! [`Write`]: std::io::Write","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/mod.rs","byte_start":29391,"byte_end":29420,"line_start":156,"line_end":156,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":147},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31313,"byte_end":31325,"line_start":13,"line_end":13,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"decl_id":null,"docs":" Read bytes asynchronously.","sig":null,"attributes":[{"value":"/ Read bytes asynchronously.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31041,"byte_end":31071,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31072,"byte_end":31075,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait inherits from `std::io::BufRead` and indicates that an I/O object is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31076,"byte_end":31159,"line_start":10,"line_end":10,"column_start":1,"column_end":84}},{"value":"/ **non-blocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31160,"byte_end":31236,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ bytes are unavailable instead of blocking the current thread.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31237,"byte_end":31302,"line_start":12,"line_end":12,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":32422,"byte_end":32435,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Attempt to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempt to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31343,"byte_end":31427,"line_start":14,"line_end":14,"column_start":5,"column_end":89}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31432,"byte_end":31473,"line_start":15,"line_end":15,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31478,"byte_end":31481,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31486,"byte_end":31533,"line_start":17,"line_end":17,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31538,"byte_end":31541,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31546,"byte_end":31605,"line_start":19,"line_end":19,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31610,"byte_end":31668,"line_start":20,"line_end":20,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31673,"byte_end":31754,"line_start":21,"line_end":21,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31759,"byte_end":31785,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31790,"byte_end":31793,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31798,"byte_end":31869,"line_start":24,"line_end":24,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31874,"byte_end":31936,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31941,"byte_end":32012,"line_start":26,"line_end":26,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":32017,"byte_end":32098,"line_start":27,"line_end":27,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":32103,"byte_end":32179,"line_start":28,"line_end":28,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":32184,"byte_end":32235,"line_start":29,"line_end":29,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":32240,"byte_end":32243,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":32248,"byte_end":32319,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":32324,"byte_end":32327,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":32332,"byte_end":32371,"line_start":33,"line_end":33,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":32376,"byte_end":32414,"line_start":34,"line_end":34,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":33338,"byte_end":33345,"line_start":52,"line_end":52,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"fn (self: Pin<&mut Self>, amt: usize) -> ()","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":32513,"byte_end":32587,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":32592,"byte_end":32659,"line_start":38,"line_end":38,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":32664,"byte_end":32667,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":32672,"byte_end":32743,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":32748,"byte_end":32817,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":32822,"byte_end":32896,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":32901,"byte_end":32978,"line_start":43,"line_end":43,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":32983,"byte_end":33053,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":33058,"byte_end":33111,"line_start":45,"line_end":45,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":33116,"byte_end":33119,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":33124,"byte_end":33196,"line_start":47,"line_end":47,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":33201,"byte_end":33223,"line_start":48,"line_end":48,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":33228,"byte_end":33231,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":33236,"byte_end":33275,"line_start":50,"line_end":50,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":33280,"byte_end":33330,"line_start":51,"line_end":51,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":176},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36597,"byte_end":36606,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"decl_id":null,"docs":" Read bytes from a source.","sig":null,"attributes":[{"value":"/ Read bytes from a source.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35017,"byte_end":35046,"line_start":8,"line_end":8,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35047,"byte_end":35050,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35051,"byte_end":35130,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35131,"byte_end":35205,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35206,"byte_end":35285,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35286,"byte_end":35363,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35364,"byte_end":35375,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35376,"byte_end":35379,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35380,"byte_end":35457,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35458,"byte_end":35476,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35477,"byte_end":35480,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately read","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35481,"byte_end":35557,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35558,"byte_end":35634,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35635,"byte_end":35654,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35655,"byte_end":35658,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35659,"byte_end":35724,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35725,"byte_end":35805,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35806,"byte_end":35885,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35886,"byte_end":35959,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":35960,"byte_end":36033,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36034,"byte_end":36055,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36056,"byte_end":36059,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36060,"byte_end":36144,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36145,"byte_end":36169,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36170,"byte_end":36173,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36174,"byte_end":36247,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36248,"byte_end":36327,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36328,"byte_end":36331,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36332,"byte_end":36397,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36398,"byte_end":36419,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36420,"byte_end":36423,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36424,"byte_end":36463,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36464,"byte_end":36500,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36501,"byte_end":36540,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36541,"byte_end":36586,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38245,"byte_end":38273,"line_start":77,"line_end":77,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::io::async_read::AsyncRead::prepare_uninitialized_buffer","value":"fn (&self, buf: &mut [MaybeUninit<u8>]) -> bool","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36613,"byte_end":36687,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36692,"byte_end":36741,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36746,"byte_end":36749,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36754,"byte_end":36827,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36832,"byte_end":36903,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36908,"byte_end":36982,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":36987,"byte_end":37063,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37068,"byte_end":37106,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37111,"byte_end":37114,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37119,"byte_end":37195,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37200,"byte_end":37274,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37279,"byte_end":37356,"line_start":55,"line_end":55,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37361,"byte_end":37393,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37398,"byte_end":37401,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37406,"byte_end":37479,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37484,"byte_end":37552,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37557,"byte_end":37613,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37618,"byte_end":37653,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37658,"byte_end":37661,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37666,"byte_end":37742,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37747,"byte_end":37822,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ or `poll_read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37827,"byte_end":37904,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ correct value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37909,"byte_end":37927,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37932,"byte_end":37935,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`poll_read_buf`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37940,"byte_end":37991,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":37996,"byte_end":37999,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38004,"byte_end":38016,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38021,"byte_end":38024,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Implementations that return `false` must never read from data slices","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38029,"byte_end":38101,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ that they did not write to.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38106,"byte_end":38137,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38142,"byte_end":38145,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: std::io::Read","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38150,"byte_end":38181,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ [`poll_read_buf`]: #method.poll_read_buf","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38186,"byte_end":38230,"line_start":76,"line_end":76,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38780,"byte_end":38789,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Attempt to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempt to read from the `AsyncRead` into `buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38411,"byte_end":38463,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38468,"byte_end":38471,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38476,"byte_end":38534,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38539,"byte_end":38542,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38547,"byte_end":38606,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38611,"byte_end":38669,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38674,"byte_end":38741,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38746,"byte_end":38772,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":39249,"byte_end":39262,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"poll_read_buf","qualname":"::io::async_read::AsyncRead::poll_read_buf","value":"fn <B> (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &mut B) -> Poll<io::Result<usize>>","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Pull some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pull some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38914,"byte_end":38989,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ how many bytes were read.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":38994,"byte_end":39023,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":39028,"byte_end":39031,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":39036,"byte_end":39111,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":39116,"byte_end":39192,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":39197,"byte_end":39241,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":207},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42007,"byte_end":42016,"line_start":11,"line_end":11,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":41750,"byte_end":41780,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":41781,"byte_end":41784,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the `std::io::Seek` trait, but integrates","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":41785,"byte_end":41857,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":41858,"byte_end":41928,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike `Seek::seek`, will not block the calling thread.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":41929,"byte_end":41996,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42353,"byte_end":42363,"line_start":19,"line_end":19,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, position: SeekFrom) -> Poll<io::Result<()>>","parent":{"krate":0,"index":207},"children":[],"decl_id":null,"docs":" Attempt to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempt to seek to an offset, in bytes, in a stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42023,"byte_end":42079,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42084,"byte_end":42087,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42092,"byte_end":42165,"line_start":14,"line_end":14,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42170,"byte_end":42196,"line_start":15,"line_end":15,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42201,"byte_end":42204,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42209,"byte_end":42284,"line_start":17,"line_end":17,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42289,"byte_end":42345,"line_start":18,"line_end":18,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42945,"byte_end":42958,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":207},"children":[],"decl_id":null,"docs":" Wait for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Wait for a seek operation to complete.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42489,"byte_end":42531,"line_start":25,"line_end":25,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42536,"byte_end":42539,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42544,"byte_end":42593,"line_start":27,"line_end":27,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42598,"byte_end":42668,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42673,"byte_end":42734,"line_start":29,"line_end":29,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42739,"byte_end":42742,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42747,"byte_end":42759,"line_start":31,"line_end":31,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42764,"byte_end":42767,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42772,"byte_end":42828,"line_start":33,"line_end":33,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42833,"byte_end":42836,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42841,"byte_end":42853,"line_start":35,"line_end":35,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42858,"byte_end":42861,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Calling this method without calling `start_seek` first is an error.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":42866,"byte_end":42937,"line_start":37,"line_end":37,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":232},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46157,"byte_end":46167,"line_start":37,"line_end":37,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":44632,"byte_end":44664,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":44665,"byte_end":44668,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from `std::io::Write` and indicates that an I/O object is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":44669,"byte_end":44749,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":44750,"byte_end":44825,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":44826,"byte_end":44893,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":44894,"byte_end":44897,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_write` function will return one of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":44898,"byte_end":44976,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ the following:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":44977,"byte_end":44995,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":44996,"byte_end":44999,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45000,"byte_end":45071,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45072,"byte_end":45086,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45087,"byte_end":45090,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45091,"byte_end":45159,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45160,"byte_end":45240,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45241,"byte_end":45320,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45321,"byte_end":45394,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45395,"byte_end":45468,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45469,"byte_end":45490,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45491,"byte_end":45494,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45495,"byte_end":45579,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45580,"byte_end":45604,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45605,"byte_end":45608,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `write` method only works in the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45609,"byte_end":45683,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45684,"byte_end":45763,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45764,"byte_end":45767,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  `Write::flush` method works","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45768,"byte_end":45846,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45847,"byte_end":45925,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":45926,"byte_end":46004,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46005,"byte_end":46084,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46085,"byte_end":46146,"line_start":36,"line_end":36,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46551,"byte_end":46561,"line_start":46,"line_end":46,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &[u8]) -> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46174,"byte_end":46228,"line_start":38,"line_end":38,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46233,"byte_end":46236,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46241,"byte_end":46302,"line_start":40,"line_end":40,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46307,"byte_end":46310,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46315,"byte_end":46377,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46382,"byte_end":46440,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46445,"byte_end":46512,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46517,"byte_end":46543,"line_start":45,"line_end":45,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":47101,"byte_end":47111,"line_start":61,"line_end":61,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" Attempt to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempt to flush the object, ensuring that any buffered data reach","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46689,"byte_end":46759,"line_start":52,"line_end":52,"column_start":5,"column_end":75}},{"value":"/ their destination.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46764,"byte_end":46786,"line_start":53,"line_end":53,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46791,"byte_end":46794,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46799,"byte_end":46845,"line_start":55,"line_end":55,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46850,"byte_end":46853,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46858,"byte_end":46922,"line_start":57,"line_end":57,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46927,"byte_end":46985,"line_start":58,"line_end":58,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":46990,"byte_end":47058,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":47063,"byte_end":47093,"line_start":60,"line_end":60,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":50397,"byte_end":50410,"line_start":121,"line_end":121,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":47193,"byte_end":47267,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":47272,"byte_end":47320,"line_start":64,"line_end":64,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":47325,"byte_end":47328,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":47333,"byte_end":47404,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":47409,"byte_end":47485,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":47490,"byte_end":47566,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":47571,"byte_end":47646,"line_start":69,"line_end":69,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":47651,"byte_end":47722,"line_start":70,"line_end":70,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":47727,"byte_end":47803,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":47808,"byte_end":47836,"line_start":72,"line_end":72,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":47841,"byte_end":47844,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":47849,"byte_end":47910,"line_start":74,"line_end":74,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":47915,"byte_end":47986,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":47991,"byte_end":48063,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":48068,"byte_end":48143,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":48148,"byte_end":48221,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":48226,"byte_end":48301,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":48306,"byte_end":48378,"line_start":80,"line_end":80,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":48383,"byte_end":48394,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":48399,"byte_end":48402,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":48407,"byte_end":48481,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":48486,"byte_end":48558,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":48563,"byte_end":48632,"line_start":85,"line_end":85,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":48637,"byte_end":48705,"line_start":86,"line_end":86,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":48710,"byte_end":48771,"line_start":87,"line_end":87,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":48776,"byte_end":48779,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":48784,"byte_end":48802,"line_start":89,"line_end":89,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":48807,"byte_end":48810,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":48815,"byte_end":48885,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":48890,"byte_end":48893,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":48898,"byte_end":48961,"line_start":93,"line_end":93,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":48966,"byte_end":49035,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":49040,"byte_end":49115,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":49120,"byte_end":49193,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":49198,"byte_end":49249,"line_start":97,"line_end":97,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":49254,"byte_end":49257,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":49262,"byte_end":49332,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":49337,"byte_end":49412,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":49417,"byte_end":49489,"line_start":101,"line_end":101,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":49494,"byte_end":49564,"line_start":102,"line_end":102,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":49569,"byte_end":49644,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":49649,"byte_end":49652,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":49657,"byte_end":49738,"line_start":105,"line_end":105,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":49743,"byte_end":49818,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":49823,"byte_end":49890,"line_start":107,"line_end":107,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":49895,"byte_end":49898,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":49903,"byte_end":49915,"line_start":109,"line_end":109,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":49920,"byte_end":49923,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":49928,"byte_end":49999,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":50004,"byte_end":50070,"line_start":112,"line_end":112,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":50075,"byte_end":50149,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":50154,"byte_end":50218,"line_start":114,"line_end":114,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":50223,"byte_end":50262,"line_start":115,"line_end":115,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":50267,"byte_end":50270,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":50275,"byte_end":50287,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":50292,"byte_end":50295,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":50300,"byte_end":50375,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":50380,"byte_end":50389,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":50697,"byte_end":50711,"line_start":127,"line_end":127,"column_start":8,"column_end":22},"name":"poll_write_buf","qualname":"::io::async_write::AsyncWrite::poll_write_buf","value":"fn <B> (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &mut B) -> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" Write a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Write a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":50492,"byte_end":50565,"line_start":123,"line_end":123,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":50570,"byte_end":50573,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":50578,"byte_end":50652,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":50657,"byte_end":50689,"line_start":126,"line_end":126,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1432},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8061315,"byte_end":8061326,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"PollEvented","qualname":"::io::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1435}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::io::Read`] and/or\n [`std::io::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":11634,"byte_end":11663,"line_start":99,"line_end":99,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8063210,"byte_end":8063213,"line_start":169,"line_end":169,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"fn (io: E) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8063130,"byte_end":8063198,"line_start":168,"line_end":168,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8063654,"byte_end":8063661,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"fn (&self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8063540,"byte_end":8063614,"line_start":181,"line_end":181,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8063619,"byte_end":8063642,"line_start":182,"line_end":182,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8063837,"byte_end":8063844,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"fn (&mut self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8063722,"byte_end":8063797,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8063802,"byte_end":8063825,"line_start":188,"line_end":188,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8064380,"byte_end":8064390,"line_start":201,"line_end":201,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"fn (mut self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8063913,"byte_end":8063962,"line_start":193,"line_end":193,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8063967,"byte_end":8063970,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8063975,"byte_end":8064049,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8064054,"byte_end":8064129,"line_start":196,"line_end":196,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8064134,"byte_end":8064137,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8064142,"byte_end":8064217,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8064222,"byte_end":8064298,"line_start":199,"line_end":199,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8064303,"byte_end":8064368,"line_start":200,"line_end":200,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8065372,"byte_end":8065387,"line_start":228,"line_end":228,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"fn (&self, cx: &mut Context<'_>, mask: mio::Ready) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Check the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Check the I/O resource's read readiness state.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8064538,"byte_end":8064588,"line_start":207,"line_end":207,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8064593,"byte_end":8064596,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8064601,"byte_end":8064674,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8064679,"byte_end":8064750,"line_start":210,"line_end":210,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8064755,"byte_end":8064830,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8064835,"byte_end":8064842,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8064847,"byte_end":8064850,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Poll::Pending` is returned","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8064855,"byte_end":8064931,"line_start":214,"line_end":214,"column_start":5,"column_end":81}},{"value":"/ and the current task is notified once a new event is received.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8064936,"byte_end":8065002,"line_start":215,"line_end":215,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8065007,"byte_end":8065010,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8065015,"byte_end":8065088,"line_start":217,"line_end":217,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8065093,"byte_end":8065137,"line_start":218,"line_end":218,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8065142,"byte_end":8065145,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: #method.clear_read_ready","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8065150,"byte_end":8065200,"line_start":220,"line_end":220,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8065205,"byte_end":8065208,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8065213,"byte_end":8065225,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8065230,"byte_end":8065233,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8065238,"byte_end":8065266,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8065271,"byte_end":8065274,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8065279,"byte_end":8065311,"line_start":226,"line_end":226,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8065316,"byte_end":8065360,"line_start":227,"line_end":227,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8066363,"byte_end":8066379,"line_start":258,"line_end":258,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"fn (&self, cx: &mut Context<'_>, ready: mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8065764,"byte_end":8065840,"line_start":243,"line_end":243,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8065845,"byte_end":8065909,"line_start":244,"line_end":244,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8065914,"byte_end":8065917,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8065922,"byte_end":8065984,"line_start":246,"line_end":246,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` until a new read readiness event has been received.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8065989,"byte_end":8066060,"line_start":247,"line_end":247,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8066065,"byte_end":8066068,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8066073,"byte_end":8066148,"line_start":249,"line_end":249,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8066153,"byte_end":8066185,"line_start":250,"line_end":250,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8066190,"byte_end":8066193,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8066198,"byte_end":8066210,"line_start":252,"line_end":252,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8066215,"byte_end":8066218,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8066223,"byte_end":8066251,"line_start":254,"line_end":254,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8066256,"byte_end":8066259,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8066264,"byte_end":8066302,"line_start":256,"line_end":256,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8066307,"byte_end":8066351,"line_start":257,"line_end":257,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8067647,"byte_end":8067663,"line_start":294,"line_end":294,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"fn (&self, cx: &mut Context<'_>) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Check the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Check the I/O resource's write readiness state.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8066904,"byte_end":8066955,"line_start":275,"line_end":275,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8066960,"byte_end":8066963,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8066968,"byte_end":8067037,"line_start":277,"line_end":277,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8067042,"byte_end":8067085,"line_start":278,"line_end":278,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8067090,"byte_end":8067093,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Async::NotReady` is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8067098,"byte_end":8067168,"line_start":280,"line_end":280,"column_start":5,"column_end":75}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8067173,"byte_end":8067248,"line_start":281,"line_end":281,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8067253,"byte_end":8067256,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8067261,"byte_end":8067335,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8067340,"byte_end":8067385,"line_start":284,"line_end":284,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8067390,"byte_end":8067393,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: #method.clear_write_ready","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8067398,"byte_end":8067450,"line_start":286,"line_end":286,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8067455,"byte_end":8067458,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8067463,"byte_end":8067475,"line_start":288,"line_end":288,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8067480,"byte_end":8067483,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8067488,"byte_end":8067516,"line_start":290,"line_end":290,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8067521,"byte_end":8067524,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8067529,"byte_end":8067586,"line_start":292,"line_end":292,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8067591,"byte_end":8067635,"line_start":293,"line_end":293,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8068512,"byte_end":8068529,"line_start":316,"line_end":316,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"fn (&self, cx: &mut Context<'_>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8067939,"byte_end":8068016,"line_start":304,"line_end":304,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8068021,"byte_end":8068086,"line_start":305,"line_end":305,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8068091,"byte_end":8068094,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8068099,"byte_end":8068175,"line_start":307,"line_end":307,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8068180,"byte_end":8068225,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8068230,"byte_end":8068233,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8068238,"byte_end":8068313,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new write readiness event has been received.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8068318,"byte_end":8068392,"line_start":311,"line_end":311,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8068397,"byte_end":8068400,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8068405,"byte_end":8068417,"line_start":313,"line_end":313,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8068422,"byte_end":8068425,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8068430,"byte_end":8068500,"line_start":315,"line_end":315,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1436},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8072758,"byte_end":8072770,"line_start":41,"line_end":41,"column_start":16,"column_end":28},"name":"Registration","qualname":"::io::registration::Registration","value":"Registration {  }","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1438}],"decl_id":null,"docs":" Associates an I/O resource with the reactor instance that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":11634,"byte_end":11663,"line_start":99,"line_end":99,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8073111,"byte_end":8073114,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<Registration>::new","value":"fn <T> (io: &T) -> io::Result<Registration>","parent":null,"children":[],"decl_id":null,"docs":" Register the I/O resource with the default reactor.","sig":null,"attributes":[{"value":"/ Register the I/O resource with the default reactor.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8072890,"byte_end":8072945,"line_start":50,"line_end":50,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8072950,"byte_end":8072953,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8072958,"byte_end":8072970,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8072975,"byte_end":8072978,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8072983,"byte_end":8073035,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8073040,"byte_end":8073099,"line_start":55,"line_end":55,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8074322,"byte_end":8074332,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registration>::deregister","value":"fn <T> (&mut self, io: &T) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Deregister the I/O resource from the reactor it is associated with.","sig":null,"attributes":[{"value":"/ Deregister the I/O resource from the reactor it is associated with.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8073547,"byte_end":8073618,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8073623,"byte_end":8073626,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the I/O resource associated with the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8073631,"byte_end":8073707,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ registration is dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8073712,"byte_end":8073740,"line_start":76,"line_end":76,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8073745,"byte_end":8073748,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8073753,"byte_end":8073828,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8073833,"byte_end":8073909,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8073914,"byte_end":8073979,"line_start":80,"line_end":80,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8073984,"byte_end":8073987,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8073992,"byte_end":8074004,"line_start":82,"line_end":82,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8074009,"byte_end":8074012,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ If the deregistration was successful, `Ok` is returned. Any calls to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8074017,"byte_end":8074089,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ `Reactor::turn` that happen after a successful call to `deregister` will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8074094,"byte_end":8074170,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/ no longer result in notifications getting sent for this registration.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8074175,"byte_end":8074248,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8074253,"byte_end":8074256,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ `Err` is returned if an error is encountered.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8074261,"byte_end":8074310,"line_start":88,"line_end":88,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8076074,"byte_end":8076089,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<Registration>::poll_read_ready","value":"fn (&self, cx: &mut Context<'_>) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Poll for events on the I/O resource's read readiness stream.","sig":null,"attributes":[{"value":"/ Poll for events on the I/O resource's read readiness stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8074635,"byte_end":8074699,"line_start":100,"line_end":100,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8074704,"byte_end":8074707,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new read readiness event since the last","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8074712,"byte_end":8074786,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ call to `poll_read_ready`, it is returned. If it has not, the current","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8074791,"byte_end":8074864,"line_start":103,"line_end":103,"column_start":5,"column_end":78}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8074869,"byte_end":8074919,"line_start":104,"line_end":104,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8074924,"byte_end":8074927,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8074932,"byte_end":8075005,"line_start":106,"line_end":106,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075010,"byte_end":8075085,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075090,"byte_end":8075126,"line_start":108,"line_end":108,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075131,"byte_end":8075134,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Ensure that [`register`] has been called first.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075139,"byte_end":8075190,"line_start":110,"line_end":110,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075195,"byte_end":8075198,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075203,"byte_end":8075221,"line_start":112,"line_end":112,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075226,"byte_end":8075229,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075234,"byte_end":8075279,"line_start":114,"line_end":114,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075284,"byte_end":8075287,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075292,"byte_end":8075367,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075372,"byte_end":8075433,"line_start":117,"line_end":117,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075438,"byte_end":8075441,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075446,"byte_end":8075521,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_read_ready`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075526,"byte_end":8075573,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075578,"byte_end":8075581,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075586,"byte_end":8075662,"line_start":122,"line_end":122,"column_start":5,"column_end":81}},{"value":"/   error. This error either represents a permanent internal error **or**","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075667,"byte_end":8075742,"line_start":123,"line_end":123,"column_start":5,"column_end":80}},{"value":"/   the fact that [`register`] was not called first.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075747,"byte_end":8075801,"line_start":124,"line_end":124,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075806,"byte_end":8075809,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`register`]: #method.register","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075814,"byte_end":8075848,"line_start":126,"line_end":126,"column_start":5,"column_end":39}},{"value":"/ [edge-triggered]: https://docs.rs/mio/0.6/mio/struct.Poll.html#edge-triggered-and-level-triggered","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075853,"byte_end":8075954,"line_start":127,"line_end":127,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075959,"byte_end":8075962,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075967,"byte_end":8075979,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075984,"byte_end":8075987,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8075992,"byte_end":8076062,"line_start":131,"line_end":131,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8076687,"byte_end":8076702,"line_start":147,"line_end":147,"column_start":12,"column_end":27},"name":"take_read_ready","qualname":"<Registration>::take_read_ready","value":"fn (&self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending read readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending read readiness event.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8076331,"byte_end":8076376,"line_start":140,"line_end":140,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8076381,"byte_end":8076384,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_read_ready`] **except** that it","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8076389,"byte_end":8076461,"line_start":142,"line_end":142,"column_start":5,"column_end":77}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8076466,"byte_end":8076541,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8076546,"byte_end":8076614,"line_start":144,"line_end":144,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8076619,"byte_end":8076622,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: #method.poll_read_ready","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8076627,"byte_end":8076675,"line_start":146,"line_end":146,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8078247,"byte_end":8078263,"line_start":183,"line_end":183,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<Registration>::poll_write_ready","value":"fn (&self, cx: &mut Context<'_>) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Poll for events on the I/O resource's write readiness stream.","sig":null,"attributes":[{"value":"/ Poll for events on the I/O resource's write readiness stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8076804,"byte_end":8076869,"line_start":151,"line_end":151,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8076874,"byte_end":8076877,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new write readiness event since the last","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8076882,"byte_end":8076957,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ call to `poll_write_ready`, it is returned. If it has not, the current","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8076962,"byte_end":8077036,"line_start":154,"line_end":154,"column_start":5,"column_end":79}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077041,"byte_end":8077091,"line_start":155,"line_end":155,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077096,"byte_end":8077099,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077104,"byte_end":8077177,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077182,"byte_end":8077257,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077262,"byte_end":8077298,"line_start":159,"line_end":159,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077303,"byte_end":8077306,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Ensure that [`register`] has been called first.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077311,"byte_end":8077362,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077367,"byte_end":8077370,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077375,"byte_end":8077393,"line_start":163,"line_end":163,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077398,"byte_end":8077401,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077406,"byte_end":8077451,"line_start":165,"line_end":165,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077456,"byte_end":8077459,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077464,"byte_end":8077539,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077544,"byte_end":8077605,"line_start":168,"line_end":168,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077610,"byte_end":8077613,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077618,"byte_end":8077693,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_write_ready`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077698,"byte_end":8077746,"line_start":171,"line_end":171,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077751,"byte_end":8077754,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077759,"byte_end":8077835,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/   error. This error either represents a permanent internal error **or**","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077840,"byte_end":8077915,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/   the fact that [`register`] was not called first.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077920,"byte_end":8077974,"line_start":175,"line_end":175,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077979,"byte_end":8077982,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ [`register`]: #method.register","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8077987,"byte_end":8078021,"line_start":177,"line_end":177,"column_start":5,"column_end":39}},{"value":"/ [edge-triggered]: https://docs.rs/mio/0.6/mio/struct.Poll.html#edge-triggered-and-level-triggered","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8078026,"byte_end":8078127,"line_start":178,"line_end":178,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8078132,"byte_end":8078135,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8078140,"byte_end":8078152,"line_start":180,"line_end":180,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8078157,"byte_end":8078160,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8078165,"byte_end":8078235,"line_start":182,"line_end":182,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8078866,"byte_end":8078882,"line_start":198,"line_end":198,"column_start":12,"column_end":28},"name":"take_write_ready","qualname":"<Registration>::take_write_ready","value":"fn (&self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending write readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending write readiness event.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8078506,"byte_end":8078552,"line_start":191,"line_end":191,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8078557,"byte_end":8078560,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_write_ready`] **except** that it","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8078565,"byte_end":8078638,"line_start":193,"line_end":193,"column_start":5,"column_end":78}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8078643,"byte_end":8078718,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8078723,"byte_end":8078791,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8078796,"byte_end":8078799,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_ready`]: #method.poll_write_ready","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8078804,"byte_end":8078854,"line_start":197,"line_end":197,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1482},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/stderr.rs","byte_start":8084387,"byte_end":8084393,"line_start":20,"line_end":20,"column_start":16,"column_end":22},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"Stderr {  }","parent":null,"children":[{"krate":0,"index":1483}],"decl_id":null,"docs":" A handle to the standard error stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":11997,"byte_end":12023,"line_start":118,"line_end":118,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1481},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/stderr.rs","byte_start":8084644,"byte_end":8084650,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"stderr","qualname":"::io::stderr::stderr","value":"fn () -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":11997,"byte_end":12023,"line_start":118,"line_end":118,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1487},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/stdin.rs","byte_start":8086256,"byte_end":8086261,"line_start":26,"line_end":26,"column_start":16,"column_end":21},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"Stdin {  }","parent":null,"children":[{"krate":0,"index":1488}],"decl_id":null,"docs":" A handle to the standard input stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":11997,"byte_end":12023,"line_start":118,"line_end":118,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1486},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/stdin.rs","byte_start":8086513,"byte_end":8086518,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"stdin","qualname":"::io::stdin::stdin","value":"fn () -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":11997,"byte_end":12023,"line_start":118,"line_end":118,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1492},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/stdout.rs","byte_start":8087402,"byte_end":8087408,"line_start":20,"line_end":20,"column_start":16,"column_end":22},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"Stdout {  }","parent":null,"children":[{"krate":0,"index":1493}],"decl_id":null,"docs":" A handle to the standard output stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":11997,"byte_end":12023,"line_start":118,"line_end":118,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1491},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/stdout.rs","byte_start":8087658,"byte_end":8087664,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"stdout","qualname":"::io::stdout::stdout","value":"fn () -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":11997,"byte_end":12023,"line_start":118,"line_end":118,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1606},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8088949,"byte_end":8088957,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1608}],"decl_id":null,"docs":" The readable half of a value returned from `split`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1609},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8089075,"byte_end":8089084,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1611}],"decl_id":null,"docs":" The writable half of a value returned from `split`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1612},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8089388,"byte_end":8089393,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"fn <T> (stream: T) -> (ReadHalf<T>, WriteHalf<T>)","parent":null,"children":[],"decl_id":null,"docs":" Split a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8090143,"byte_end":8090150,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"fn (self, wr: WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunite with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunite with a previously split `WriteHalf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8089916,"byte_end":8089964,"line_start":64,"line_end":64,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8089969,"byte_end":8089972,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8089977,"byte_end":8089989,"line_start":66,"line_end":66,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8089994,"byte_end":8089997,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8090002,"byte_end":8090076,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8090081,"byte_end":8090131,"line_start":69,"line_end":69,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1614},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/seek.rs","byte_start":8093679,"byte_end":8093683,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":1617},{"krate":0,"index":1618}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/seek.rs","byte_start":8093516,"byte_end":8093582,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/seek.rs","byte_start":8093600,"byte_end":8093667,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":2281},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_buf_read_ext.rs","byte_start":8096641,"byte_end":8096656,"line_start":9,"line_end":9,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2282},{"krate":0,"index":2284},{"krate":0,"index":2286},{"krate":0,"index":2287}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2282},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_buf_read_ext.rs","byte_start":8099355,"byte_end":8099365,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"fn <'a> (&'a mut self, byte: u8, buf: &'a mut Vec<u8>) -> ReadUntil<'a, Self>","parent":{"krate":0,"index":2281},"children":[],"decl_id":null,"docs":" Read all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_buf_read_ext.rs","byte_start":8102255,"byte_end":8102264,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"fn <'a> (&'a mut self, buf: &'a mut String) -> ReadLine<'a, Self>","parent":{"krate":0,"index":2281},"children":[],"decl_id":null,"docs":" Read all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_buf_read_ext.rs","byte_start":8103664,"byte_end":8103669,"line_start":198,"line_end":198,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"fn (self, byte: u8) -> Split<Self>","parent":{"krate":0,"index":2281},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2287},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_buf_read_ext.rs","byte_start":8105519,"byte_end":8105524,"line_start":247,"line_end":247,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"fn (self) -> Lines<Self>","parent":{"krate":0,"index":2281},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2289},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8107597,"byte_end":8107609,"line_start":60,"line_end":60,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2294},{"krate":0,"index":2297},{"krate":0,"index":2304},{"krate":0,"index":2306},{"krate":0,"index":2308},{"krate":0,"index":2310},{"krate":0,"index":2312},{"krate":0,"index":2314},{"krate":0,"index":2316},{"krate":0,"index":2318},{"krate":0,"index":2320},{"krate":0,"index":2322},{"krate":0,"index":2299},{"krate":0,"index":2301},{"krate":0,"index":2303}],"decl_id":null,"docs":" Read bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8108728,"byte_end":8108733,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"fn <R> (self, next: R) -> Chain<Self, R>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Create a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8111559,"byte_end":8111563,"line_start":158,"line_end":158,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> Read<'a, Self>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Pull some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2294},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8113864,"byte_end":8113872,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"fn <'a, B> (&'a mut self, buf: &'a mut B) -> ReadBuf<'a, Self, B>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Pull some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2297},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8116095,"byte_end":8116105,"line_start":282,"line_end":282,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> ReadExact<'a, Self>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Read the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8117542,"byte_end":8117549,"line_start":326,"line_end":326,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"fn <'a> (&'a mut self) -> ReadU8<&'a mut Self>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2306},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8118838,"byte_end":8118845,"line_start":364,"line_end":364,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"fn <'a> (&'a mut self) -> ReadI8<&'a mut Self>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2308},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8120176,"byte_end":8120184,"line_start":402,"line_end":402,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"fn <'a> (&'a mut self) -> ReadU16<&'a mut Self>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8121524,"byte_end":8121532,"line_start":440,"line_end":440,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"fn <'a> (&'a mut self) -> ReadI16<&'a mut Self>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2312},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8122813,"byte_end":8122821,"line_start":477,"line_end":477,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"fn <'a> (&'a mut self) -> ReadU32<&'a mut Self>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2314},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8124116,"byte_end":8124124,"line_start":515,"line_end":515,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"fn <'a> (&'a mut self) -> ReadI32<&'a mut Self>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8125487,"byte_end":8125495,"line_start":554,"line_end":554,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"fn <'a> (&'a mut self) -> ReadU64<&'a mut Self>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2318},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8126788,"byte_end":8126796,"line_start":591,"line_end":591,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"fn <'a> (&'a mut self) -> ReadI64<&'a mut Self>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2320},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8128256,"byte_end":8128265,"line_start":631,"line_end":631,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"fn <'a> (&'a mut self) -> ReadU128<&'a mut Self>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2322},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8129659,"byte_end":8129668,"line_start":671,"line_end":671,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"fn <'a> (&'a mut self) -> ReadI128<&'a mut Self>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8131278,"byte_end":8131289,"line_start":717,"line_end":717,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"fn <'a> (&'a mut self, buf: &'a mut Vec<u8>) -> ReadToEnd<'a, Self>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Read all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8132856,"byte_end":8132870,"line_start":764,"line_end":764,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"fn <'a> (&'a mut self, dst: &'a mut String) -> ReadToString<'a, Self>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Read all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8134048,"byte_end":8134052,"line_start":798,"line_end":798,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"fn (self, limit: u64) -> Take<Self>","parent":{"krate":0,"index":2289},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1685},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134401,"byte_end":8134413,"line_start":6,"line_end":6,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":1686}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134319,"byte_end":8134390,"line_start":5,"line_end":5,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8135130,"byte_end":8135134,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"fn (&mut self, pos: SeekFrom) -> Seek<'_, Self>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134431,"byte_end":8134500,"line_start":7,"line_end":7,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134505,"byte_end":8134558,"line_start":8,"line_end":8,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134563,"byte_end":8134566,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134571,"byte_end":8134648,"line_start":10,"line_end":10,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134653,"byte_end":8134675,"line_start":11,"line_end":11,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134680,"byte_end":8134683,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134688,"byte_end":8134702,"line_start":13,"line_end":13,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134707,"byte_end":8134710,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134715,"byte_end":8134728,"line_start":15,"line_end":15,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134733,"byte_end":8134757,"line_start":16,"line_end":16,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134762,"byte_end":8134788,"line_start":17,"line_end":17,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134793,"byte_end":8134796,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134801,"byte_end":8134827,"line_start":19,"line_end":19,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134832,"byte_end":8134835,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134840,"byte_end":8134885,"line_start":21,"line_end":21,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134890,"byte_end":8134938,"line_start":22,"line_end":22,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134943,"byte_end":8134984,"line_start":23,"line_end":23,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134989,"byte_end":8134992,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134997,"byte_end":8135034,"line_start":25,"line_end":25,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8135039,"byte_end":8135081,"line_start":26,"line_end":26,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8135086,"byte_end":8135098,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8135103,"byte_end":8135110,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8135115,"byte_end":8135122,"line_start":29,"line_end":29,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2325},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8137214,"byte_end":8137227,"line_start":62,"line_end":62,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2326},{"krate":0,"index":2328},{"krate":0,"index":2331},{"krate":0,"index":2335},{"krate":0,"index":2337},{"krate":0,"index":2339},{"krate":0,"index":2341},{"krate":0,"index":2343},{"krate":0,"index":2345},{"krate":0,"index":2347},{"krate":0,"index":2349},{"krate":0,"index":2351},{"krate":0,"index":2353},{"krate":0,"index":2333},{"krate":0,"index":2334}],"decl_id":null,"docs":" Write bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2326},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8139068,"byte_end":8139073,"line_start":109,"line_end":109,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"fn <'a> (&'a mut self, src: &'a [u8]) -> Write<'a, Self>","parent":{"krate":0,"index":2325},"children":[],"decl_id":null,"docs":" Write a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2328},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8141874,"byte_end":8141883,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"fn <'a, B> (&'a mut self, src: &'a mut B) -> WriteBuf<'a, Self, B>","parent":{"krate":0,"index":2325},"children":[],"decl_id":null,"docs":" Write a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2331},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8143217,"byte_end":8143226,"line_start":222,"line_end":222,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"fn <'a> (&'a mut self, src: &'a [u8]) -> WriteAll<'a, Self>","parent":{"krate":0,"index":2325},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8144626,"byte_end":8144634,"line_start":265,"line_end":265,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"fn <'a> (&'a mut self, n: u8) -> WriteU8<&'a mut Self>","parent":{"krate":0,"index":2325},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8145895,"byte_end":8145903,"line_start":302,"line_end":302,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"fn <'a> (&'a mut self, n: i8) -> WriteI8<&'a mut Self>","parent":{"krate":0,"index":2325},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8147218,"byte_end":8147227,"line_start":340,"line_end":340,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"fn <'a> (&'a mut self, n: u16) -> WriteU16<&'a mut Self>","parent":{"krate":0,"index":2325},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2341},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8148540,"byte_end":8148549,"line_start":378,"line_end":378,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"fn <'a> (&'a mut self, n: i16) -> WriteI16<&'a mut Self>","parent":{"krate":0,"index":2325},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8149889,"byte_end":8149898,"line_start":416,"line_end":416,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"fn <'a> (&'a mut self, n: u32) -> WriteU32<&'a mut Self>","parent":{"krate":0,"index":2325},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8151233,"byte_end":8151242,"line_start":454,"line_end":454,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"fn <'a> (&'a mut self, n: i32) -> WriteI32<&'a mut Self>","parent":{"krate":0,"index":2325},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2347},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8152619,"byte_end":8152628,"line_start":492,"line_end":492,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"fn <'a> (&'a mut self, n: u64) -> WriteU64<&'a mut Self>","parent":{"krate":0,"index":2325},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2349},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8154015,"byte_end":8154024,"line_start":530,"line_end":530,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"fn <'a> (&'a mut self, n: i64) -> WriteI64<&'a mut Self>","parent":{"krate":0,"index":2325},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8155479,"byte_end":8155489,"line_start":570,"line_end":570,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"fn <'a> (&'a mut self, n: u128) -> WriteU128<&'a mut Self>","parent":{"krate":0,"index":2325},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2353},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8156879,"byte_end":8156889,"line_start":610,"line_end":610,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"fn <'a> (&'a mut self, n: i128) -> WriteI128<&'a mut Self>","parent":{"krate":0,"index":2325},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2333},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8157905,"byte_end":8157910,"line_start":643,"line_end":643,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"fn (&mut self) -> Flush<'_, Self>","parent":{"krate":0,"index":2325},"children":[],"decl_id":null,"docs":" Flush this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2334},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8159130,"byte_end":8159138,"line_start":680,"line_end":680,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"fn (&mut self) -> Shutdown<'_, Self>","parent":{"krate":0,"index":2325},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9299},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8160531,"byte_end":8160540,"line_start":28,"line_end":28,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":9301},{"krate":0,"index":9302},{"krate":0,"index":9303},{"krate":0,"index":9304}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8160876,"byte_end":8160879,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"fn (inner: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8160734,"byte_end":8160826,"line_start":38,"line_end":38,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8160831,"byte_end":8160864,"line_start":39,"line_end":39,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8161041,"byte_end":8161054,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"fn (capacity: usize, inner: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8160964,"byte_end":8161029,"line_start":44,"line_end":44,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8161730,"byte_end":8161737,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8161593,"byte_end":8161639,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8161644,"byte_end":8161647,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8161652,"byte_end":8161718,"line_start":66,"line_end":66,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8161929,"byte_end":8161936,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8161784,"byte_end":8161838,"line_start":71,"line_end":71,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8161843,"byte_end":8161846,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8161851,"byte_end":8161917,"line_start":73,"line_end":73,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8162147,"byte_end":8162158,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8161995,"byte_end":8162056,"line_start":78,"line_end":78,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8162061,"byte_end":8162064,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8162069,"byte_end":8162135,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8162389,"byte_end":8162399,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8162238,"byte_end":8162301,"line_start":85,"line_end":85,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8162306,"byte_end":8162309,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8162314,"byte_end":8162377,"line_start":87,"line_end":87,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8162603,"byte_end":8162609,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8162443,"byte_end":8162499,"line_start":92,"line_end":92,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8162504,"byte_end":8162507,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8162512,"byte_end":8162591,"line_start":94,"line_end":94,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":9293},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8166650,"byte_end":8166659,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":9295}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8166937,"byte_end":8166940,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"fn (stream: RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wrap a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wrap a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8166784,"byte_end":8166840,"line_start":27,"line_end":27,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8166845,"byte_end":8166848,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8166853,"byte_end":8166925,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8167217,"byte_end":8167224,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"fn (&self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8167072,"byte_end":8167122,"line_start":36,"line_end":36,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8167127,"byte_end":8167130,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8167135,"byte_end":8167205,"line_start":38,"line_end":38,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8167444,"byte_end":8167451,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"fn (&mut self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8167291,"byte_end":8167349,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8167354,"byte_end":8167357,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8167362,"byte_end":8167432,"line_start":45,"line_end":45,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8167686,"byte_end":8167697,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8167526,"byte_end":8167591,"line_start":50,"line_end":50,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8167596,"byte_end":8167599,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8167604,"byte_end":8167674,"line_start":52,"line_end":52,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8167961,"byte_end":8167971,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"fn (self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8167806,"byte_end":8167873,"line_start":57,"line_end":57,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8167878,"byte_end":8167881,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8167886,"byte_end":8167949,"line_start":59,"line_end":59,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9222},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8171805,"byte_end":8171814,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":9224},{"krate":0,"index":9225},{"krate":0,"index":9226}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1828},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8172122,"byte_end":8172125,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"fn (inner: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8171980,"byte_end":8172072,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8172077,"byte_end":8172110,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1829},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8172287,"byte_end":8172300,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"fn (cap: usize, inner: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8172210,"byte_end":8172275,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1831},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8173382,"byte_end":8173389,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8173324,"byte_end":8173370,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1832},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8173580,"byte_end":8173587,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8173436,"byte_end":8173490,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8173495,"byte_end":8173498,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8173503,"byte_end":8173568,"line_start":92,"line_end":92,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1833},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8173797,"byte_end":8173808,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8173646,"byte_end":8173707,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8173712,"byte_end":8173715,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8173720,"byte_end":8173785,"line_start":99,"line_end":99,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1834},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8174039,"byte_end":8174049,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8173888,"byte_end":8173951,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8173956,"byte_end":8173959,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8173964,"byte_end":8174027,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1835},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8174161,"byte_end":8174167,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8174093,"byte_end":8174149,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":9173},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8176800,"byte_end":8176805,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":9176},{"krate":0,"index":9177},{"krate":0,"index":9178}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8025933,"byte_end":8025944,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8177246,"byte_end":8177253,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"fn (&self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8177172,"byte_end":8177234,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1871},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8177585,"byte_end":8177592,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"fn (&mut self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8177322,"byte_end":8177392,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8177397,"byte_end":8177400,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8177405,"byte_end":8177478,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8177483,"byte_end":8177556,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8177561,"byte_end":8177573,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8177951,"byte_end":8177962,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8177681,"byte_end":8177758,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8177763,"byte_end":8177766,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8177771,"byte_end":8177844,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8177849,"byte_end":8177922,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8177927,"byte_end":8177939,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8178159,"byte_end":8178169,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn (self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8178091,"byte_end":8178147,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2360},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/copy.rs","byte_start":8180445,"byte_end":8180449,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::util::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370}],"decl_id":null,"docs":" A future that asynchronously copies the entire contents of a reader into a\n writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/copy.rs","byte_start":8180362,"byte_end":8180429,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":2355},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/copy.rs","byte_start":8181746,"byte_end":8181750,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"copy","qualname":"::io::util::copy::copy","value":"fn <'a, R, W> (reader: &'a mut R, writer: &'a mut W) -> Copy<'a, R, W>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2376},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/empty.rs","byte_start":8184534,"byte_end":8184539,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2377}],"decl_id":null,"docs":"\n This struct is generally created by calling [`empty`]. Please see\n the documentation of [`empty()`][`empty`] for more details.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2378},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/empty.rs","byte_start":8185216,"byte_end":8185221,"line_start":42,"line_end":42,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"fn () -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2379},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/flush.rs","byte_start":8186262,"byte_end":8186267,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":2382}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9164},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8187383,"byte_end":8187388,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":9166},{"krate":0,"index":9167},{"krate":0,"index":9168},{"krate":0,"index":9169}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8025933,"byte_end":8025944,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1953},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8188235,"byte_end":8188244,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"fn (&mut self) -> io::Result<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8187745,"byte_end":8187785,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8187790,"byte_end":8187793,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8187798,"byte_end":8187812,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8187817,"byte_end":8187820,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8187825,"byte_end":8187832,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8187837,"byte_end":8187871,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8187876,"byte_end":8187911,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8187916,"byte_end":8187919,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8187924,"byte_end":8188007,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8188012,"byte_end":8188052,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8188057,"byte_end":8188060,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8188065,"byte_end":8188118,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8188123,"byte_end":8188166,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8188171,"byte_end":8188176,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8188181,"byte_end":8188193,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8188198,"byte_end":8188205,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8188210,"byte_end":8188217,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1960},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8188478,"byte_end":8188492,"line_start":69,"line_end":69,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2387},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read.rs","byte_start":8190422,"byte_end":8190426,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":2390},{"krate":0,"index":2391}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read.rs","byte_start":8190339,"byte_end":8190406,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2396},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_buf.rs","byte_start":8191470,"byte_end":8191477,"line_start":21,"line_end":21,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":2400},{"krate":0,"index":2401}],"decl_id":null,"docs":" Future returned by [`read_buf`](AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_buf.rs","byte_start":8191387,"byte_end":8191454,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2407},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_exact.rs","byte_start":8192753,"byte_end":8192762,"line_start":31,"line_end":31,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_exact.rs","byte_start":8192670,"byte_end":8192737,"line_start":30,"line_end":30,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":9092},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_int.rs","byte_start":8197061,"byte_end":8197067,"line_start":111,"line_end":111,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":9094}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9059},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_int.rs","byte_start":8197083,"byte_end":8197089,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":9061}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9014},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_int.rs","byte_start":8197105,"byte_end":8197112,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":9016},{"krate":0,"index":9017},{"krate":0,"index":9019}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8969},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_int.rs","byte_start":8197137,"byte_end":8197144,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":8971},{"krate":0,"index":8972},{"krate":0,"index":8974}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8924},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_int.rs","byte_start":8197169,"byte_end":8197176,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":8926},{"krate":0,"index":8927},{"krate":0,"index":8929}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8879},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_int.rs","byte_start":8197201,"byte_end":8197209,"line_start":117,"line_end":117,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":8881},{"krate":0,"index":8882},{"krate":0,"index":8884}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8834},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_int.rs","byte_start":8197237,"byte_end":8197244,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":8836},{"krate":0,"index":8837},{"krate":0,"index":8839}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8789},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_int.rs","byte_start":8197269,"byte_end":8197276,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":8791},{"krate":0,"index":8792},{"krate":0,"index":8794}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8744},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_int.rs","byte_start":8197301,"byte_end":8197308,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":8746},{"krate":0,"index":8747},{"krate":0,"index":8749}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8699},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_int.rs","byte_start":8197333,"byte_end":8197341,"line_start":122,"line_end":122,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":8701},{"krate":0,"index":8702},{"krate":0,"index":8704}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2497},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_line.rs","byte_start":8197770,"byte_end":8197778,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2503}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_line.rs","byte_start":8197687,"byte_end":8197754,"line_start":14,"line_end":14,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2508},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_to_end.rs","byte_start":8199827,"byte_end":8199836,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_to_end.rs","byte_start":8199697,"byte_end":8199764,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2519},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_to_string.rs","byte_start":8202820,"byte_end":8202832,"line_start":13,"line_end":13,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_to_string.rs","byte_start":8202737,"byte_end":8202804,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2530},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_until.rs","byte_start":8204969,"byte_end":8204978,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_until.rs","byte_start":8204886,"byte_end":8204953,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2542},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/repeat.rs","byte_start":8207277,"byte_end":8207283,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2543}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2541},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/repeat.rs","byte_start":8207963,"byte_end":8207969,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"fn (byte: u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2546},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/shutdown.rs","byte_start":8208733,"byte_end":8208741,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":2549}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2554},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/sink.rs","byte_start":8209883,"byte_end":8209887,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2555}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2556},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/sink.rs","byte_start":8210559,"byte_end":8210563,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"fn () -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8690},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8211808,"byte_end":8211813,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":8692},{"krate":0,"index":8693},{"krate":0,"index":8694},{"krate":0,"index":8695}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8025933,"byte_end":8025944,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212674,"byte_end":8212686,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"fn (&mut self) -> io::Result<Option<Vec<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212162,"byte_end":8212205,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212210,"byte_end":8212213,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212218,"byte_end":8212232,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212237,"byte_end":8212240,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212245,"byte_end":8212252,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212257,"byte_end":8212291,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212296,"byte_end":8212331,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212336,"byte_end":8212339,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212344,"byte_end":8212427,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212432,"byte_end":8212479,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212484,"byte_end":8212487,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212492,"byte_end":8212554,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212559,"byte_end":8212605,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212610,"byte_end":8212615,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212620,"byte_end":8212632,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212637,"byte_end":8212644,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212649,"byte_end":8212656,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2180},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212924,"byte_end":8212941,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8644},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8214415,"byte_end":8214419,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8646},{"krate":0,"index":8647}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8025933,"byte_end":8025944,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8215009,"byte_end":8215014,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8214706,"byte_end":8214759,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8214764,"byte_end":8214810,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8214815,"byte_end":8214818,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8214823,"byte_end":8214833,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8214838,"byte_end":8214841,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8214846,"byte_end":8214923,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8214928,"byte_end":8214997,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8215333,"byte_end":8215342,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"fn (&mut self, limit: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8215062,"byte_end":8215133,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8215138,"byte_end":8215212,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8215217,"byte_end":8215292,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8215297,"byte_end":8215321,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8215465,"byte_end":8215472,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8215407,"byte_end":8215453,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2206},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8215764,"byte_end":8215771,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8215519,"byte_end":8215573,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8215578,"byte_end":8215581,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8215586,"byte_end":8215659,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8215664,"byte_end":8215736,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8215741,"byte_end":8215752,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8216082,"byte_end":8216093,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8215830,"byte_end":8215891,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8215896,"byte_end":8215899,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8215904,"byte_end":8215977,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8215982,"byte_end":8216054,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8216059,"byte_end":8216070,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2208},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8216239,"byte_end":8216249,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8216173,"byte_end":8216227,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2557},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write.rs","byte_start":8218179,"byte_end":8218184,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":2560},{"krate":0,"index":2561}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write.rs","byte_start":8218096,"byte_end":8218163,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2566},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write_all.rs","byte_start":8219080,"byte_end":8219088,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":2569},{"krate":0,"index":2570}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write_all.rs","byte_start":8218997,"byte_end":8219064,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2575},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write_buf.rs","byte_start":8220471,"byte_end":8220479,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":2579},{"krate":0,"index":2580}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12200,"byte_end":12227,"line_start":128,"line_end":128,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write_buf.rs","byte_start":8220388,"byte_end":8220455,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8574},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write_int.rs","byte_start":8224286,"byte_end":8224293,"line_start":110,"line_end":110,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":8576},{"krate":0,"index":8577}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8537},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write_int.rs","byte_start":8224309,"byte_end":8224316,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":8539},{"krate":0,"index":8540}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8492},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write_int.rs","byte_start":8224332,"byte_end":8224340,"line_start":113,"line_end":113,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":8494},{"krate":0,"index":8495},{"krate":0,"index":8497}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8447},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write_int.rs","byte_start":8224365,"byte_end":8224373,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":8449},{"krate":0,"index":8450},{"krate":0,"index":8452}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8402},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write_int.rs","byte_start":8224398,"byte_end":8224406,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":8404},{"krate":0,"index":8405},{"krate":0,"index":8407}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8357},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write_int.rs","byte_start":8224431,"byte_end":8224440,"line_start":116,"line_end":116,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":8359},{"krate":0,"index":8360},{"krate":0,"index":8362}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8312},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write_int.rs","byte_start":8224468,"byte_end":8224476,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":8314},{"krate":0,"index":8315},{"krate":0,"index":8317}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8267},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write_int.rs","byte_start":8224501,"byte_end":8224509,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":8269},{"krate":0,"index":8270},{"krate":0,"index":8272}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8222},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write_int.rs","byte_start":8224534,"byte_end":8224542,"line_start":120,"line_end":120,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":8224},{"krate":0,"index":8225},{"krate":0,"index":8227}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8177},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write_int.rs","byte_start":8224567,"byte_end":8224576,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":8179},{"krate":0,"index":8180},{"krate":0,"index":8182}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":269},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":328},{"krate":0,"index":2720},{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":2940},{"krate":0,"index":3066},{"krate":0,"index":3085},{"krate":0,"index":3323},{"krate":0,"index":3324},{"krate":0,"index":3325}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not (loom))","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":54988,"byte_end":55006,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55008,"byte_end":55046,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55047,"byte_end":55050,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55051,"byte_end":55134,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"! library, which can be used to implement networking protocols.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55135,"byte_end":55200,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55201,"byte_end":55204,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Organization","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55205,"byte_end":55223,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55224,"byte_end":55227,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55228,"byte_end":55316,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"! * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55317,"byte_end":55386,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"! * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55387,"byte_end":55475,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"! Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55476,"byte_end":55534,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"! * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55535,"byte_end":55598,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"! over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55599,"byte_end":55664,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55666,"byte_end":55669,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55670,"byte_end":55714,"line_start":18,"line_end":18,"column_start":1,"column_end":45}},{"value":"! [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55715,"byte_end":55755,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"! [`UdpSocket`]: struct.UdpSocket.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55756,"byte_end":55796,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"! [`UnixListener`]: struct.UnixListener.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55797,"byte_end":55843,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"! [`UnixStream`]: struct.UnixStream.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55844,"byte_end":55886,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"! [`UnixDatagram`]: struct.UnixDatagram.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55887,"byte_end":55933,"line_start":23,"line_end":23,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":280},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":57123,"byte_end":57136,"line_start":23,"line_end":23,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Convert or resolve without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Convert or resolve without blocking to one or more `SocketAddr` values.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":56421,"byte_end":56496,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":56497,"byte_end":56500,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":56501,"byte_end":56510,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":56511,"byte_end":56514,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":56515,"byte_end":56592,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":56593,"byte_end":56664,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`dns`** feature flag.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":56665,"byte_end":56692,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":56693,"byte_end":56696,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":56697,"byte_end":56710,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":56711,"byte_end":56714,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":56715,"byte_end":56792,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":56793,"byte_end":56839,"line_start":17,"line_end":17,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":56840,"byte_end":56843,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. Users of Tokio should","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":56844,"byte_end":56920,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ only use `ToSocketAddrs` in trait bounds and __must not__ attempt to call","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":56921,"byte_end":56998,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ the functions directly or reference associated types. Changing these is not","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":56999,"byte_end":57078,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ considered a breaking change.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":57079,"byte_end":57112,"line_start":22,"line_end":22,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":324},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":62450,"byte_end":62467,"line_start":224,"line_end":224,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":325},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":62483,"byte_end":62487,"line_start":225,"line_end":225,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":326},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":62548,"byte_end":62554,"line_start":226,"line_end":226,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":62626,"byte_end":62641,"line_start":228,"line_end":228,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"fn (&self) -> Self::Future","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2703},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":62778,"byte_end":62783,"line_start":235,"line_end":235,"column_start":13,"column_end":18},"name":"Ready","qualname":"::net::addr::sealed::MaybeReady::Ready","value":"MaybeReady::Ready(Option<SocketAddr>)","parent":{"krate":0,"index":2702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2706},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":62817,"byte_end":62825,"line_start":236,"line_end":236,"column_start":13,"column_end":21},"name":"Blocking","qualname":"::net::addr::sealed::MaybeReady::Blocking","value":"MaybeReady::Blocking(JoinHandle<io::Result<vec::IntoIter<SocketAddr>>>)","parent":{"krate":0,"index":2702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2702},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":62753,"byte_end":62763,"line_start":234,"line_end":234,"column_start":18,"column_end":28},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"MaybeReady::{Ready, Blocking}","parent":null,"children":[{"krate":0,"index":2703},{"krate":0,"index":2706}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":11111,"byte_end":11134,"line_start":73,"line_end":73,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2712},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":62978,"byte_end":62981,"line_start":242,"line_end":242,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":2711},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2715},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":63025,"byte_end":63029,"line_start":243,"line_end":243,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":2711},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2711},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":62954,"byte_end":62963,"line_start":241,"line_end":241,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"OneOrMore::{One, More}","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2715}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":11111,"byte_end":11134,"line_start":73,"line_end":73,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":2720},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":2721},{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2785},{"krate":0,"index":2786},{"krate":0,"index":2813},{"krate":0,"index":2816},{"krate":0,"index":2913}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":14935,"byte_end":14958,"line_start":266,"line_end":266,"column_start":13,"column_end":36}},{"value":"! TCP utility types","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/mod.rs","byte_start":8224703,"byte_end":8224724,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2916},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8225848,"byte_end":8225859,"line_start":37,"line_end":37,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":2917}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":14935,"byte_end":14958,"line_start":266,"line_end":266,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2738},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8227061,"byte_end":8227065,"line_start":75,"line_end":75,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"fn <A> (addr: A) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener which will be bound to the specified address.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8225942,"byte_end":8226017,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226022,"byte_end":8226025,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226030,"byte_end":8226091,"line_start":45,"line_end":45,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226096,"byte_end":8226099,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226104,"byte_end":8226179,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226184,"byte_end":8226260,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226265,"byte_end":8226276,"line_start":49,"line_end":49,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226281,"byte_end":8226284,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of `ToSocketAddrs` trait.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226289,"byte_end":8226358,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226363,"byte_end":8226366,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226371,"byte_end":8226447,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226452,"byte_end":8226525,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226530,"byte_end":8226603,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226608,"byte_end":8226660,"line_start":56,"line_end":56,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226665,"byte_end":8226668,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226673,"byte_end":8226687,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226692,"byte_end":8226695,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226700,"byte_end":8226713,"line_start":60,"line_end":60,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226718,"byte_end":8226750,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226755,"byte_end":8226758,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226763,"byte_end":8226779,"line_start":63,"line_end":63,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226784,"byte_end":8226787,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226792,"byte_end":8226810,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226815,"byte_end":8226854,"line_start":66,"line_end":66,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226859,"byte_end":8226922,"line_start":67,"line_end":67,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226927,"byte_end":8226930,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226935,"byte_end":8226962,"line_start":69,"line_end":69,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226967,"byte_end":8226970,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8226975,"byte_end":8227002,"line_start":71,"line_end":71,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8227007,"byte_end":8227021,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8227026,"byte_end":8227031,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8227036,"byte_end":8227043,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228634,"byte_end":8228640,"line_start":127,"line_end":127,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"fn (&mut self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accept a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accept a new incoming connection from this listener.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8227780,"byte_end":8227836,"line_start":100,"line_end":100,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8227841,"byte_end":8227844,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8227849,"byte_end":8227924,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8227929,"byte_end":8227999,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228004,"byte_end":8228033,"line_start":104,"line_end":104,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228038,"byte_end":8228041,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: ../struct.TcpStream.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228046,"byte_end":8228089,"line_start":106,"line_end":106,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228094,"byte_end":8228097,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228102,"byte_end":8228116,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228121,"byte_end":8228124,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228129,"byte_end":8228142,"line_start":110,"line_end":110,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228147,"byte_end":8228179,"line_start":111,"line_end":111,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228184,"byte_end":8228187,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228192,"byte_end":8228208,"line_start":113,"line_end":113,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228213,"byte_end":8228216,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228221,"byte_end":8228239,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228244,"byte_end":8228283,"line_start":116,"line_end":116,"column_start":5,"column_end":44}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228288,"byte_end":8228358,"line_start":117,"line_end":117,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228363,"byte_end":8228366,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228371,"byte_end":8228410,"line_start":119,"line_end":119,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228415,"byte_end":8228485,"line_start":120,"line_end":120,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228490,"byte_end":8228553,"line_start":121,"line_end":121,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228558,"byte_end":8228567,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228572,"byte_end":8228575,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228580,"byte_end":8228594,"line_start":124,"line_end":124,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228599,"byte_end":8228604,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228609,"byte_end":8228616,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2748},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8228797,"byte_end":8228808,"line_start":132,"line_end":132,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231327,"byte_end":8231335,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"fn (listener: net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Create a new TCP listener from the standard library's TCP listener.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8229655,"byte_end":8229726,"line_start":160,"line_end":160,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8229731,"byte_end":8229734,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8229739,"byte_end":8229809,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8229814,"byte_end":8229890,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8229895,"byte_end":8229939,"line_start":164,"line_end":164,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8229944,"byte_end":8229947,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8229952,"byte_end":8230027,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230032,"byte_end":8230108,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230113,"byte_end":8230178,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230183,"byte_end":8230238,"line_start":169,"line_end":169,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230243,"byte_end":8230246,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230251,"byte_end":8230322,"line_start":171,"line_end":171,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230327,"byte_end":8230402,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230407,"byte_end":8230446,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230451,"byte_end":8230454,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230459,"byte_end":8230522,"line_start":175,"line_end":175,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230527,"byte_end":8230530,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230535,"byte_end":8230608,"line_start":177,"line_end":177,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230613,"byte_end":8230644,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230649,"byte_end":8230652,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230657,"byte_end":8230730,"line_start":180,"line_end":180,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230735,"byte_end":8230810,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230815,"byte_end":8230888,"line_start":182,"line_end":182,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230893,"byte_end":8230920,"line_start":183,"line_end":183,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230925,"byte_end":8230928,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230933,"byte_end":8230947,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230952,"byte_end":8230955,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230960,"byte_end":8230978,"line_start":187,"line_end":187,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8230983,"byte_end":8231009,"line_start":188,"line_end":188,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231014,"byte_end":8231046,"line_start":189,"line_end":189,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231051,"byte_end":8231054,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231059,"byte_end":8231077,"line_start":191,"line_end":191,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231082,"byte_end":8231133,"line_start":192,"line_end":192,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231138,"byte_end":8231209,"line_start":193,"line_end":193,"column_start":5,"column_end":76}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231214,"byte_end":8231274,"line_start":194,"line_end":194,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231279,"byte_end":8231293,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231298,"byte_end":8231303,"line_start":196,"line_end":196,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231308,"byte_end":8231315,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2752},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232419,"byte_end":8232429,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231693,"byte_end":8231754,"line_start":209,"line_end":209,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231759,"byte_end":8231762,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231767,"byte_end":8231840,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231845,"byte_end":8231879,"line_start":212,"line_end":212,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231884,"byte_end":8231887,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231892,"byte_end":8231906,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231911,"byte_end":8231914,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231919,"byte_end":8231937,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231942,"byte_end":8231974,"line_start":217,"line_end":217,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231979,"byte_end":8231982,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8231987,"byte_end":8232003,"line_start":219,"line_end":219,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232008,"byte_end":8232063,"line_start":220,"line_end":220,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232068,"byte_end":8232071,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232076,"byte_end":8232094,"line_start":222,"line_end":222,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232099,"byte_end":8232138,"line_start":223,"line_end":223,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232143,"byte_end":8232209,"line_start":224,"line_end":224,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232214,"byte_end":8232217,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232222,"byte_end":8232264,"line_start":226,"line_end":226,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232269,"byte_end":8232358,"line_start":227,"line_end":227,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232363,"byte_end":8232366,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232371,"byte_end":8232385,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232390,"byte_end":8232395,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232400,"byte_end":8232407,"line_start":231,"line_end":231,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233785,"byte_end":8233793,"line_start":270,"line_end":270,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"fn (&mut self) -> Incoming<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232515,"byte_end":8232589,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232594,"byte_end":8232597,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232602,"byte_end":8232678,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232683,"byte_end":8232752,"line_start":239,"line_end":239,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232757,"byte_end":8232786,"line_start":240,"line_end":240,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232791,"byte_end":8232794,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232799,"byte_end":8232811,"line_start":242,"line_end":242,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232816,"byte_end":8232819,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232824,"byte_end":8232899,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232904,"byte_end":8232979,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8232984,"byte_end":8233058,"line_start":246,"line_end":246,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233063,"byte_end":8233138,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233143,"byte_end":8233151,"line_start":248,"line_end":248,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233156,"byte_end":8233159,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233164,"byte_end":8233178,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233183,"byte_end":8233186,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233191,"byte_end":8233204,"line_start":252,"line_end":252,"column_start":5,"column_end":18}},{"value":"/ use tokio::{net::TcpListener, stream::StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233209,"byte_end":8233262,"line_start":253,"line_end":253,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233267,"byte_end":8233270,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233275,"byte_end":8233293,"line_start":255,"line_end":255,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233298,"byte_end":8233319,"line_start":256,"line_end":256,"column_start":5,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await.unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233324,"byte_end":8233402,"line_start":257,"line_end":257,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233407,"byte_end":8233454,"line_start":258,"line_end":258,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233459,"byte_end":8233462,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233467,"byte_end":8233523,"line_start":260,"line_end":260,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233528,"byte_end":8233554,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233559,"byte_end":8233590,"line_start":262,"line_end":262,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233595,"byte_end":8233639,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233644,"byte_end":8233661,"line_start":264,"line_end":264,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233666,"byte_end":8233719,"line_start":265,"line_end":265,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233724,"byte_end":8233737,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233742,"byte_end":8233751,"line_start":267,"line_end":267,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233756,"byte_end":8233761,"line_start":268,"line_end":268,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233766,"byte_end":8233773,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2754},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234474,"byte_end":8234477,"line_start":297,"line_end":297,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233862,"byte_end":8233920,"line_start":274,"line_end":274,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233925,"byte_end":8233928,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233933,"byte_end":8233993,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8233998,"byte_end":8234001,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234006,"byte_end":8234038,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234043,"byte_end":8234046,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234051,"byte_end":8234065,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234070,"byte_end":8234073,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234078,"byte_end":8234091,"line_start":282,"line_end":282,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234096,"byte_end":8234128,"line_start":283,"line_end":283,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234133,"byte_end":8234136,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234141,"byte_end":8234157,"line_start":285,"line_end":285,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234162,"byte_end":8234165,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234170,"byte_end":8234188,"line_start":287,"line_end":287,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234193,"byte_end":8234232,"line_start":288,"line_end":288,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234237,"byte_end":8234299,"line_start":289,"line_end":289,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234304,"byte_end":8234307,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234312,"byte_end":8234369,"line_start":291,"line_end":291,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234374,"byte_end":8234414,"line_start":292,"line_end":292,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234419,"byte_end":8234422,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234427,"byte_end":8234440,"line_start":294,"line_end":294,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234445,"byte_end":8234450,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234455,"byte_end":8234462,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2755},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8235116,"byte_end":8235123,"line_start":322,"line_end":322,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234549,"byte_end":8234607,"line_start":301,"line_end":301,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234612,"byte_end":8234615,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234620,"byte_end":8234696,"line_start":303,"line_end":303,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234701,"byte_end":8234722,"line_start":304,"line_end":304,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234727,"byte_end":8234730,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234735,"byte_end":8234749,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234754,"byte_end":8234757,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234762,"byte_end":8234775,"line_start":308,"line_end":308,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234780,"byte_end":8234812,"line_start":309,"line_end":309,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234817,"byte_end":8234820,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234825,"byte_end":8234841,"line_start":311,"line_end":311,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234846,"byte_end":8234849,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234854,"byte_end":8234872,"line_start":313,"line_end":313,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234877,"byte_end":8234916,"line_start":314,"line_end":314,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234921,"byte_end":8234984,"line_start":315,"line_end":315,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234989,"byte_end":8234992,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8234997,"byte_end":8235055,"line_start":317,"line_end":317,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8235060,"byte_end":8235063,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8235068,"byte_end":8235082,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8235087,"byte_end":8235092,"line_start":320,"line_end":320,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8235097,"byte_end":8235104,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2918},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/incoming.rs","byte_start":8237052,"byte_end":8237060,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":2920}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/incoming.rs","byte_start":8236850,"byte_end":8236926,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/incoming.rs","byte_start":8236927,"byte_end":8236974,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/incoming.rs","byte_start":8236975,"byte_end":8237023,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2781},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/incoming.rs","byte_start":8237277,"byte_end":8237288,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"fn (mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2924},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/split.rs","byte_start":8238471,"byte_end":8238479,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a `TcpStream`.\n","sig":null,"attributes":[{"value":"/ Read half of a `TcpStream`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/split.rs","byte_start":8238411,"byte_end":8238442,"line_start":21,"line_end":21,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2931},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/split.rs","byte_start":8238718,"byte_end":8238727,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a `TcpStream`.","sig":null,"attributes":[{"value":"/ Write half of a `TcpStream`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/split.rs","byte_start":8238501,"byte_end":8238533,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/split.rs","byte_start":8238534,"byte_end":8238537,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Note that in the `AsyncWrite` implemenation of `TcpStreamWriteHalf`,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/split.rs","byte_start":8238538,"byte_end":8238610,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ `poll_shutdown` actually shuts down the TCP stream in the write direction.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/split.rs","byte_start":8238611,"byte_end":8238689,"line_start":28,"line_end":28,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":2938},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8241560,"byte_end":8241569,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":2939}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":14935,"byte_end":14958,"line_start":266,"line_end":266,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2846},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242651,"byte_end":8242658,"line_start":79,"line_end":79,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"fn <A> (addr: A) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8241648,"byte_end":8241692,"line_start":51,"line_end":51,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8241697,"byte_end":8241700,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8241705,"byte_end":8241775,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/ `ToSocketAddrs` trait can be supplied for the address.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8241780,"byte_end":8241838,"line_start":54,"line_end":54,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8241843,"byte_end":8241846,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8241851,"byte_end":8241927,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8241932,"byte_end":8242001,"line_start":57,"line_end":57,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242006,"byte_end":8242082,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242087,"byte_end":8242146,"line_start":59,"line_end":59,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242151,"byte_end":8242154,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242159,"byte_end":8242173,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242178,"byte_end":8242181,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242186,"byte_end":8242199,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242204,"byte_end":8242234,"line_start":64,"line_end":64,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242239,"byte_end":8242265,"line_start":65,"line_end":65,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242270,"byte_end":8242296,"line_start":66,"line_end":66,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242301,"byte_end":8242304,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242309,"byte_end":8242327,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242332,"byte_end":8242383,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242388,"byte_end":8242416,"line_start":70,"line_end":70,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242421,"byte_end":8242490,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242495,"byte_end":8242498,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242503,"byte_end":8242530,"line_start":73,"line_end":73,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242535,"byte_end":8242584,"line_start":74,"line_end":74,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242589,"byte_end":8242592,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242597,"byte_end":8242611,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242616,"byte_end":8242621,"line_start":77,"line_end":77,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8242626,"byte_end":8242633,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2856},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244750,"byte_end":8244758,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"fn (stream: net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Create a new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244124,"byte_end":8244182,"line_start":124,"line_end":124,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244187,"byte_end":8244190,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream created by the standard library","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244195,"byte_end":8244270,"line_start":126,"line_end":126,"column_start":5,"column_end":80}},{"value":"/ to a TCP stream ready to be used with the provided event loop handle.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244275,"byte_end":8244348,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244353,"byte_end":8244356,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244361,"byte_end":8244375,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244380,"byte_end":8244383,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244388,"byte_end":8244406,"line_start":131,"line_end":131,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244411,"byte_end":8244437,"line_start":132,"line_end":132,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244442,"byte_end":8244472,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244477,"byte_end":8244480,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244485,"byte_end":8244503,"line_start":135,"line_end":135,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244508,"byte_end":8244559,"line_start":136,"line_end":136,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244564,"byte_end":8244638,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244643,"byte_end":8244697,"line_start":138,"line_end":138,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244702,"byte_end":8244716,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244721,"byte_end":8244726,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8244731,"byte_end":8244738,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2857},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8245152,"byte_end":8245163,"line_start":152,"line_end":152,"column_start":18,"column_end":29},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"fn (stream: net::TcpStream, addr: &SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2861},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246311,"byte_end":8246321,"line_start":186,"line_end":186,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8245912,"byte_end":8245971,"line_start":172,"line_end":172,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8245976,"byte_end":8245979,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8245984,"byte_end":8245998,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246003,"byte_end":8246006,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246011,"byte_end":8246024,"line_start":176,"line_end":176,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246029,"byte_end":8246059,"line_start":177,"line_end":177,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246064,"byte_end":8246067,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246072,"byte_end":8246136,"line_start":179,"line_end":179,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246141,"byte_end":8246202,"line_start":180,"line_end":180,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246207,"byte_end":8246210,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246215,"byte_end":8246258,"line_start":182,"line_end":182,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246263,"byte_end":8246275,"line_start":183,"line_end":183,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246280,"byte_end":8246287,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246292,"byte_end":8246299,"line_start":185,"line_end":185,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2862},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246810,"byte_end":8246819,"line_start":204,"line_end":204,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246407,"byte_end":8246471,"line_start":190,"line_end":190,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246476,"byte_end":8246479,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246484,"byte_end":8246498,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246503,"byte_end":8246506,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246511,"byte_end":8246524,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246529,"byte_end":8246559,"line_start":195,"line_end":195,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246564,"byte_end":8246567,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246572,"byte_end":8246636,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246641,"byte_end":8246702,"line_start":198,"line_end":198,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246707,"byte_end":8246710,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246715,"byte_end":8246757,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246762,"byte_end":8246774,"line_start":201,"line_end":201,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246779,"byte_end":8246786,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246791,"byte_end":8246798,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2863},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247976,"byte_end":8247985,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"fn (&mut self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246904,"byte_end":8246978,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8246983,"byte_end":8247056,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247061,"byte_end":8247075,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247080,"byte_end":8247083,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247088,"byte_end":8247106,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247111,"byte_end":8247114,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247119,"byte_end":8247144,"line_start":214,"line_end":214,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247149,"byte_end":8247152,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247157,"byte_end":8247208,"line_start":216,"line_end":216,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247213,"byte_end":8247296,"line_start":217,"line_end":217,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247301,"byte_end":8247356,"line_start":218,"line_end":218,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247361,"byte_end":8247364,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247369,"byte_end":8247381,"line_start":220,"line_end":220,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247386,"byte_end":8247389,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247394,"byte_end":8247469,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247474,"byte_end":8247477,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247482,"byte_end":8247496,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247501,"byte_end":8247504,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247509,"byte_end":8247522,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247527,"byte_end":8247545,"line_start":227,"line_end":227,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247550,"byte_end":8247580,"line_start":228,"line_end":228,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247585,"byte_end":8247588,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247593,"byte_end":8247626,"line_start":230,"line_end":230,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247631,"byte_end":8247634,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247639,"byte_end":8247657,"line_start":232,"line_end":232,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247662,"byte_end":8247701,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247706,"byte_end":8247775,"line_start":234,"line_end":234,"column_start":5,"column_end":74}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247780,"byte_end":8247810,"line_start":235,"line_end":235,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247815,"byte_end":8247818,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247823,"byte_end":8247845,"line_start":237,"line_end":237,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247850,"byte_end":8247892,"line_start":238,"line_end":238,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247897,"byte_end":8247915,"line_start":239,"line_end":239,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247920,"byte_end":8247923,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247928,"byte_end":8247942,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247947,"byte_end":8247952,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8247957,"byte_end":8247964,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2864},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249530,"byte_end":8249534,"line_start":289,"line_end":289,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8248472,"byte_end":8248542,"line_start":257,"line_end":257,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8248547,"byte_end":8248616,"line_start":258,"line_end":258,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8248621,"byte_end":8248660,"line_start":259,"line_end":259,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8248665,"byte_end":8248668,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8248673,"byte_end":8248747,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8248752,"byte_end":8248812,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8248817,"byte_end":8248820,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8248825,"byte_end":8248839,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8248844,"byte_end":8248847,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8248852,"byte_end":8248865,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8248870,"byte_end":8248900,"line_start":267,"line_end":267,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8248905,"byte_end":8248931,"line_start":268,"line_end":268,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8248936,"byte_end":8248962,"line_start":269,"line_end":269,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8248967,"byte_end":8248970,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8248975,"byte_end":8248993,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8248998,"byte_end":8249049,"line_start":272,"line_end":272,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249054,"byte_end":8249082,"line_start":273,"line_end":273,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249087,"byte_end":8249156,"line_start":274,"line_end":274,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249161,"byte_end":8249164,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249169,"byte_end":8249198,"line_start":276,"line_end":276,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249203,"byte_end":8249232,"line_start":277,"line_end":277,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249237,"byte_end":8249240,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249245,"byte_end":8249272,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249277,"byte_end":8249321,"line_start":280,"line_end":280,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249326,"byte_end":8249329,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249334,"byte_end":8249358,"line_start":282,"line_end":282,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249363,"byte_end":8249419,"line_start":283,"line_end":283,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249424,"byte_end":8249463,"line_start":284,"line_end":284,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249468,"byte_end":8249471,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249476,"byte_end":8249490,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249495,"byte_end":8249500,"line_start":287,"line_end":287,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249505,"byte_end":8249512,"line_start":288,"line_end":288,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250403,"byte_end":8250411,"line_start":317,"line_end":317,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249648,"byte_end":8249714,"line_start":293,"line_end":293,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249719,"byte_end":8249722,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249727,"byte_end":8249799,"line_start":295,"line_end":295,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249804,"byte_end":8249873,"line_start":296,"line_end":296,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249878,"byte_end":8249911,"line_start":297,"line_end":297,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249916,"byte_end":8249919,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249924,"byte_end":8249938,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249943,"byte_end":8249946,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249951,"byte_end":8249964,"line_start":301,"line_end":301,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8249969,"byte_end":8249999,"line_start":302,"line_end":302,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250004,"byte_end":8250030,"line_start":303,"line_end":303,"column_start":5,"column_end":31}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250035,"byte_end":8250062,"line_start":304,"line_end":304,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250067,"byte_end":8250070,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250075,"byte_end":8250093,"line_start":306,"line_end":306,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250098,"byte_end":8250149,"line_start":307,"line_end":307,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250154,"byte_end":8250182,"line_start":308,"line_end":308,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250187,"byte_end":8250252,"line_start":309,"line_end":309,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250257,"byte_end":8250260,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/     // Shutdown the stream","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250265,"byte_end":8250295,"line_start":311,"line_end":311,"column_start":5,"column_end":35}},{"value":"/     stream.shutdown(Shutdown::Write)?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250300,"byte_end":8250342,"line_start":312,"line_end":312,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250347,"byte_end":8250350,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250355,"byte_end":8250369,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250374,"byte_end":8250379,"line_start":315,"line_end":315,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250384,"byte_end":8250391,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2869},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251034,"byte_end":8251041,"line_start":339,"line_end":339,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250505,"byte_end":8250567,"line_start":321,"line_end":321,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250572,"byte_end":8250575,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250580,"byte_end":8250644,"line_start":323,"line_end":323,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250649,"byte_end":8250652,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: #method.set_nodelay","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250657,"byte_end":8250697,"line_start":325,"line_end":325,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250702,"byte_end":8250705,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250710,"byte_end":8250724,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250729,"byte_end":8250732,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250737,"byte_end":8250750,"line_start":329,"line_end":329,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250755,"byte_end":8250785,"line_start":330,"line_end":330,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250790,"byte_end":8250793,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250798,"byte_end":8250862,"line_start":332,"line_end":332,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250867,"byte_end":8250928,"line_start":333,"line_end":333,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250933,"byte_end":8250936,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250941,"byte_end":8250981,"line_start":335,"line_end":335,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8250986,"byte_end":8250998,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251003,"byte_end":8251010,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251015,"byte_end":8251022,"line_start":338,"line_end":338,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251848,"byte_end":8251859,"line_start":363,"line_end":363,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"fn (&self, nodelay: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251118,"byte_end":8251180,"line_start":343,"line_end":343,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251185,"byte_end":8251188,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251193,"byte_end":8251262,"line_start":345,"line_end":345,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251267,"byte_end":8251340,"line_start":346,"line_end":346,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251345,"byte_end":8251418,"line_start":347,"line_end":347,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251423,"byte_end":8251498,"line_start":348,"line_end":348,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251503,"byte_end":8251521,"line_start":349,"line_end":349,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251526,"byte_end":8251529,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251534,"byte_end":8251548,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251553,"byte_end":8251556,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251561,"byte_end":8251574,"line_start":353,"line_end":353,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251579,"byte_end":8251609,"line_start":354,"line_end":354,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251614,"byte_end":8251617,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251622,"byte_end":8251686,"line_start":356,"line_end":356,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251691,"byte_end":8251752,"line_start":357,"line_end":357,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251757,"byte_end":8251760,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251765,"byte_end":8251795,"line_start":359,"line_end":359,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251800,"byte_end":8251812,"line_start":360,"line_end":360,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251817,"byte_end":8251824,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251829,"byte_end":8251836,"line_start":362,"line_end":362,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2871},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252525,"byte_end":8252541,"line_start":385,"line_end":385,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8251960,"byte_end":8252020,"line_start":367,"line_end":367,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252025,"byte_end":8252028,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252033,"byte_end":8252106,"line_start":369,"line_end":369,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252111,"byte_end":8252114,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: #tymethod.set_recv_buffer_size","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252119,"byte_end":8252179,"line_start":371,"line_end":371,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252184,"byte_end":8252187,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252192,"byte_end":8252206,"line_start":373,"line_end":373,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252211,"byte_end":8252214,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252219,"byte_end":8252232,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252237,"byte_end":8252267,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252272,"byte_end":8252275,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252280,"byte_end":8252344,"line_start":378,"line_end":378,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252349,"byte_end":8252410,"line_start":379,"line_end":379,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252415,"byte_end":8252418,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.recv_buffer_size()?);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252423,"byte_end":8252472,"line_start":381,"line_end":381,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252477,"byte_end":8252489,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252494,"byte_end":8252501,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252506,"byte_end":8252513,"line_start":384,"line_end":384,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2872},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253133,"byte_end":8253153,"line_start":406,"line_end":406,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252628,"byte_end":8252688,"line_start":389,"line_end":389,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252693,"byte_end":8252696,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252701,"byte_end":8252773,"line_start":391,"line_end":391,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252778,"byte_end":8252798,"line_start":392,"line_end":392,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252803,"byte_end":8252806,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252811,"byte_end":8252825,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252830,"byte_end":8252833,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252838,"byte_end":8252851,"line_start":396,"line_end":396,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252856,"byte_end":8252886,"line_start":397,"line_end":397,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252891,"byte_end":8252894,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252899,"byte_end":8252963,"line_start":399,"line_end":399,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8252968,"byte_end":8253029,"line_start":400,"line_end":400,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253034,"byte_end":8253037,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ stream.set_recv_buffer_size(100)?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253042,"byte_end":8253080,"line_start":402,"line_end":402,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253085,"byte_end":8253097,"line_start":403,"line_end":403,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253102,"byte_end":8253109,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253114,"byte_end":8253121,"line_start":405,"line_end":405,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2873},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254105,"byte_end":8254121,"line_start":437,"line_end":437,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253258,"byte_end":8253318,"line_start":410,"line_end":410,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253323,"byte_end":8253326,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253331,"byte_end":8253399,"line_start":412,"line_end":412,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253404,"byte_end":8253407,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer`]: #tymethod.set_send_buffer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253412,"byte_end":8253462,"line_start":414,"line_end":414,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253467,"byte_end":8253470,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253475,"byte_end":8253489,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253494,"byte_end":8253497,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253502,"byte_end":8253578,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253583,"byte_end":8253621,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253626,"byte_end":8253629,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253634,"byte_end":8253700,"line_start":421,"line_end":421,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253705,"byte_end":8253708,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: #tymethod.set_keepalive","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253713,"byte_end":8253759,"line_start":423,"line_end":423,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253764,"byte_end":8253767,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253772,"byte_end":8253786,"line_start":425,"line_end":425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253791,"byte_end":8253794,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253799,"byte_end":8253812,"line_start":427,"line_end":427,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253817,"byte_end":8253847,"line_start":428,"line_end":428,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253852,"byte_end":8253855,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253860,"byte_end":8253924,"line_start":430,"line_end":430,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253929,"byte_end":8253990,"line_start":431,"line_end":431,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8253995,"byte_end":8253998,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.send_buffer_size()?);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254003,"byte_end":8254052,"line_start":433,"line_end":433,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254057,"byte_end":8254069,"line_start":434,"line_end":434,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254074,"byte_end":8254081,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254086,"byte_end":8254093,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2874},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254710,"byte_end":8254730,"line_start":458,"line_end":458,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254208,"byte_end":8254268,"line_start":441,"line_end":441,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254273,"byte_end":8254276,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254281,"byte_end":8254355,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254360,"byte_end":8254375,"line_start":444,"line_end":444,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254380,"byte_end":8254383,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254388,"byte_end":8254402,"line_start":446,"line_end":446,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254407,"byte_end":8254410,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254415,"byte_end":8254428,"line_start":448,"line_end":448,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254433,"byte_end":8254463,"line_start":449,"line_end":449,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254468,"byte_end":8254471,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254476,"byte_end":8254540,"line_start":451,"line_end":451,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254545,"byte_end":8254606,"line_start":452,"line_end":452,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254611,"byte_end":8254614,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ stream.set_send_buffer_size(100)?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254619,"byte_end":8254657,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254662,"byte_end":8254674,"line_start":455,"line_end":455,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254679,"byte_end":8254686,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254691,"byte_end":8254698,"line_start":457,"line_end":457,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2875},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255431,"byte_end":8255440,"line_start":481,"line_end":481,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254835,"byte_end":8254911,"line_start":462,"line_end":462,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254916,"byte_end":8254954,"line_start":463,"line_end":463,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254959,"byte_end":8254962,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8254967,"byte_end":8255033,"line_start":465,"line_end":465,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255038,"byte_end":8255041,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: #tymethod.set_keepalive","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255046,"byte_end":8255092,"line_start":467,"line_end":467,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255097,"byte_end":8255100,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255105,"byte_end":8255119,"line_start":469,"line_end":469,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255124,"byte_end":8255127,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255132,"byte_end":8255145,"line_start":471,"line_end":471,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255150,"byte_end":8255180,"line_start":472,"line_end":472,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255185,"byte_end":8255188,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255193,"byte_end":8255257,"line_start":474,"line_end":474,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255262,"byte_end":8255323,"line_start":475,"line_end":475,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255328,"byte_end":8255331,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.keepalive()?);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255336,"byte_end":8255378,"line_start":477,"line_end":477,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255383,"byte_end":8255395,"line_start":478,"line_end":478,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255400,"byte_end":8255407,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255412,"byte_end":8255419,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256471,"byte_end":8256484,"line_start":510,"line_end":510,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"fn (&self, keepalive: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255531,"byte_end":8255605,"line_start":485,"line_end":485,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255610,"byte_end":8255613,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255618,"byte_end":8255685,"line_start":487,"line_end":487,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255690,"byte_end":8255764,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255769,"byte_end":8255831,"line_start":489,"line_end":489,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255836,"byte_end":8255839,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255844,"byte_end":8255918,"line_start":491,"line_end":491,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8255923,"byte_end":8255998,"line_start":492,"line_end":492,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256003,"byte_end":8256027,"line_start":493,"line_end":493,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256032,"byte_end":8256035,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256040,"byte_end":8256103,"line_start":495,"line_end":495,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256108,"byte_end":8256142,"line_start":496,"line_end":496,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256147,"byte_end":8256150,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256155,"byte_end":8256169,"line_start":498,"line_end":498,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256174,"byte_end":8256177,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256182,"byte_end":8256195,"line_start":500,"line_end":500,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256200,"byte_end":8256230,"line_start":501,"line_end":501,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256235,"byte_end":8256238,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256243,"byte_end":8256307,"line_start":503,"line_end":503,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256312,"byte_end":8256373,"line_start":504,"line_end":504,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256378,"byte_end":8256381,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ stream.set_keepalive(None)?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256386,"byte_end":8256418,"line_start":506,"line_end":506,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256423,"byte_end":8256435,"line_start":507,"line_end":507,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256440,"byte_end":8256447,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256452,"byte_end":8256459,"line_start":509,"line_end":509,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2877},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257114,"byte_end":8257117,"line_start":532,"line_end":532,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256603,"byte_end":8256661,"line_start":514,"line_end":514,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256666,"byte_end":8256669,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256674,"byte_end":8256734,"line_start":516,"line_end":516,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256739,"byte_end":8256742,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #tymethod.set_ttl","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256747,"byte_end":8256781,"line_start":518,"line_end":518,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256786,"byte_end":8256789,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256794,"byte_end":8256808,"line_start":520,"line_end":520,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256813,"byte_end":8256816,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256821,"byte_end":8256834,"line_start":522,"line_end":522,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256839,"byte_end":8256869,"line_start":523,"line_end":523,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256874,"byte_end":8256877,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256882,"byte_end":8256946,"line_start":525,"line_end":525,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8256951,"byte_end":8257012,"line_start":526,"line_end":526,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257017,"byte_end":8257020,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257025,"byte_end":8257061,"line_start":528,"line_end":528,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257066,"byte_end":8257078,"line_start":529,"line_end":529,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257083,"byte_end":8257090,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257095,"byte_end":8257102,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2878},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257684,"byte_end":8257691,"line_start":553,"line_end":553,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257189,"byte_end":8257247,"line_start":536,"line_end":536,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257252,"byte_end":8257255,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257260,"byte_end":8257336,"line_start":538,"line_end":538,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257341,"byte_end":8257362,"line_start":539,"line_end":539,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257367,"byte_end":8257370,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257375,"byte_end":8257389,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257394,"byte_end":8257397,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257402,"byte_end":8257415,"line_start":543,"line_end":543,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257420,"byte_end":8257450,"line_start":544,"line_end":544,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257455,"byte_end":8257458,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257463,"byte_end":8257527,"line_start":546,"line_end":546,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257532,"byte_end":8257593,"line_start":547,"line_end":547,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257598,"byte_end":8257601,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257606,"byte_end":8257631,"line_start":549,"line_end":549,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257636,"byte_end":8257648,"line_start":550,"line_end":550,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257653,"byte_end":8257660,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257665,"byte_end":8257672,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2879},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258332,"byte_end":8258338,"line_start":576,"line_end":576,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257779,"byte_end":8257851,"line_start":557,"line_end":557,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257856,"byte_end":8257867,"line_start":558,"line_end":558,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257872,"byte_end":8257875,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257880,"byte_end":8257943,"line_start":560,"line_end":560,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257948,"byte_end":8257951,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: #tymethod.set_linger","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8257956,"byte_end":8257996,"line_start":562,"line_end":562,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258001,"byte_end":8258004,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258009,"byte_end":8258023,"line_start":564,"line_end":564,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258028,"byte_end":8258031,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258036,"byte_end":8258049,"line_start":566,"line_end":566,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258054,"byte_end":8258084,"line_start":567,"line_end":567,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258089,"byte_end":8258092,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258097,"byte_end":8258161,"line_start":569,"line_end":569,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258166,"byte_end":8258227,"line_start":570,"line_end":570,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258232,"byte_end":8258235,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258240,"byte_end":8258279,"line_start":572,"line_end":572,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258284,"byte_end":8258296,"line_start":573,"line_end":573,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258301,"byte_end":8258308,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258313,"byte_end":8258320,"line_start":575,"line_end":575,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2880},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8259280,"byte_end":8259290,"line_start":604,"line_end":604,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"fn (&self, dur: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the `SO_LINGER`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258426,"byte_end":8258496,"line_start":580,"line_end":580,"column_start":5,"column_end":75}},{"value":"/ option.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258501,"byte_end":8258512,"line_start":581,"line_end":581,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258517,"byte_end":8258520,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258525,"byte_end":8258600,"line_start":583,"line_end":583,"column_start":5,"column_end":80}},{"value":"/ and the stream is closed. If `SO_LINGER` is set, the system","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258605,"byte_end":8258668,"line_start":584,"line_end":584,"column_start":5,"column_end":68}},{"value":"/ shall block the process until it can transmit the data or until the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258673,"byte_end":8258744,"line_start":585,"line_end":585,"column_start":5,"column_end":76}},{"value":"/ time expires.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258749,"byte_end":8258766,"line_start":586,"line_end":586,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258771,"byte_end":8258774,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ If `SO_LINGER` is not specified, and the stream is closed, the system","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258779,"byte_end":8258852,"line_start":588,"line_end":588,"column_start":5,"column_end":78}},{"value":"/ handles the call in a way that allows the process to continue as quickly","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258857,"byte_end":8258933,"line_start":589,"line_end":589,"column_start":5,"column_end":81}},{"value":"/ as possible.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258938,"byte_end":8258954,"line_start":590,"line_end":590,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258959,"byte_end":8258962,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258967,"byte_end":8258981,"line_start":592,"line_end":592,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258986,"byte_end":8258989,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8258994,"byte_end":8259007,"line_start":594,"line_end":594,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8259012,"byte_end":8259042,"line_start":595,"line_end":595,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8259047,"byte_end":8259050,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8259055,"byte_end":8259119,"line_start":597,"line_end":597,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8259124,"byte_end":8259185,"line_start":598,"line_end":598,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8259190,"byte_end":8259193,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8259198,"byte_end":8259227,"line_start":600,"line_end":600,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8259232,"byte_end":8259244,"line_start":601,"line_end":601,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8259249,"byte_end":8259256,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8259261,"byte_end":8259268,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2881},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8259636,"byte_end":8259641,"line_start":613,"line_end":613,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"fn (&mut self) -> (ReadHalf<'_>, WriteHalf<'_>)","parent":null,"children":[],"decl_id":null,"docs":" Split a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Split a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8259394,"byte_end":8259470,"line_start":608,"line_end":608,"column_start":5,"column_end":81}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8259475,"byte_end":8259521,"line_start":609,"line_end":609,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8259526,"byte_end":8259529,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ See the module level documenation of [`split`](super::split) for more","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8259534,"byte_end":8259607,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8259612,"byte_end":8259624,"line_start":612,"line_end":612,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":2940},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::net::udp","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/mod.rs","parent":null,"children":[{"krate":0,"index":2941},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3062}],"decl_id":null,"docs":" UDP utility types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":15771,"byte_end":15794,"line_start":308,"line_end":308,"column_start":13,"column_end":36}},{"value":"! UDP utility types.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/mod.rs","byte_start":8266317,"byte_end":8266339,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3067},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8266795,"byte_end":8266804,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::socket::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3068}],"decl_id":null,"docs":" A UDP socket\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":15771,"byte_end":15794,"line_start":308,"line_end":308,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2961},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8267002,"byte_end":8267006,"line_start":22,"line_end":22,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"fn <A> (addr: A) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.\n","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8266883,"byte_end":8266955,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8266960,"byte_end":8266984,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2968},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8268369,"byte_end":8268377,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"fn (socket: net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from the previously bound socket provided.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from the previously bound socket provided.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8267843,"byte_end":8267915,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8267920,"byte_end":8267923,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The socket given will be registered with the event loop that `handle`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8267928,"byte_end":8268001,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ is associated with. This function requires that `socket` has previously","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8268006,"byte_end":8268081,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ been bound to an address to work correctly.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8268086,"byte_end":8268133,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8268138,"byte_end":8268141,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with net2's `UdpBuilder` interface to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8268146,"byte_end":8268219,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8268224,"byte_end":8268299,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8268304,"byte_end":8268357,"line_start":59,"line_end":59,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2969},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8268863,"byte_end":8268868,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"split","qualname":"<UdpSocket>::split","value":"fn (self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split the `UdpSocket` into a receive half and a send half. The two parts\n can be used to receive and send datagrams concurrently, even from two\n different tasks.","sig":null,"attributes":[{"value":"/ Split the `UdpSocket` into a receive half and a send half. The two parts","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8268569,"byte_end":8268645,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ can be used to receive and send datagrams concurrently, even from two","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8268650,"byte_end":8268723,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ different tasks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8268728,"byte_end":8268748,"line_start":68,"line_end":68,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8268753,"byte_end":8268756,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ See the module level documenation of [`split`](super::split) for more","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8268761,"byte_end":8268834,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8268839,"byte_end":8268851,"line_start":71,"line_end":71,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2970},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8269003,"byte_end":8269013,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8268932,"byte_end":8268991,"line_start":76,"line_end":76,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2971},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8269285,"byte_end":8269292,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"fn <A> (&self, addr: A) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8269099,"byte_end":8269173,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8269178,"byte_end":8269251,"line_start":82,"line_end":82,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8269256,"byte_end":8269267,"line_start":83,"line_end":83,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2976},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8270226,"byte_end":8270230,"line_start":110,"line_end":110,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"fn (&mut self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8269828,"byte_end":8269926,"line_start":103,"line_end":103,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8269931,"byte_end":8270002,"line_start":104,"line_end":104,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8270007,"byte_end":8270010,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8270015,"byte_end":8270098,"line_start":106,"line_end":106,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8270103,"byte_end":8270163,"line_start":107,"line_end":107,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8270168,"byte_end":8270171,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8270176,"byte_end":8270208,"line_start":109,"line_end":109,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2980},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8270957,"byte_end":8270966,"line_start":125,"line_end":125,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"fn (&self, cx: &mut Context<'_>, buf: &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2981},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8271979,"byte_end":8271983,"line_start":149,"line_end":149,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8271344,"byte_end":8271423,"line_start":137,"line_end":137,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8271428,"byte_end":8271512,"line_start":138,"line_end":138,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8271517,"byte_end":8271549,"line_start":139,"line_end":139,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8271554,"byte_end":8271557,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8271562,"byte_end":8271643,"line_start":141,"line_end":141,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8271648,"byte_end":8271731,"line_start":142,"line_end":142,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8271736,"byte_end":8271770,"line_start":143,"line_end":143,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8271775,"byte_end":8271778,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8271783,"byte_end":8271866,"line_start":145,"line_end":145,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8271871,"byte_end":8271916,"line_start":146,"line_end":146,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8271921,"byte_end":8271924,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8271929,"byte_end":8271961,"line_start":148,"line_end":148,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2985},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8272123,"byte_end":8272132,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"fn (&self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2986},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8272851,"byte_end":8272858,"line_start":171,"line_end":171,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"fn <A> (&mut self, buf: &[u8], target: A) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8272560,"byte_end":8272632,"line_start":166,"line_end":166,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8272637,"byte_end":8272708,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8272713,"byte_end":8272716,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8272721,"byte_end":8272797,"line_start":169,"line_end":169,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8272802,"byte_end":8272833,"line_start":170,"line_end":170,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2991},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8273330,"byte_end":8273342,"line_start":185,"line_end":185,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"fn (&self, cx: &mut Context<'_>, buf: &[u8], target: &SocketAddr) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2992},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8274181,"byte_end":8274190,"line_start":208,"line_end":208,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8273791,"byte_end":8273870,"line_start":202,"line_end":202,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8273875,"byte_end":8273942,"line_start":203,"line_end":203,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8273947,"byte_end":8273950,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8273955,"byte_end":8274033,"line_start":205,"line_end":205,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8274038,"byte_end":8274116,"line_start":206,"line_end":206,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8274121,"byte_end":8274163,"line_start":207,"line_end":207,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2996},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8274349,"byte_end":8274363,"line_start":213,"line_end":213,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"fn (&self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<Result<(usize, SocketAddr), io::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2997},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275060,"byte_end":8275069,"line_start":234,"line_end":234,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8274848,"byte_end":8274912,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8274917,"byte_end":8274920,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8274925,"byte_end":8274991,"line_start":231,"line_end":231,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8274996,"byte_end":8274999,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: #method.set_broadcast","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275004,"byte_end":8275048,"line_start":233,"line_end":233,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2998},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275325,"byte_end":8275338,"line_start":242,"line_end":242,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275148,"byte_end":8275212,"line_start":238,"line_end":238,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275217,"byte_end":8275220,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275225,"byte_end":8275296,"line_start":240,"line_end":240,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275301,"byte_end":8275313,"line_start":241,"line_end":241,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2999},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275672,"byte_end":8275689,"line_start":251,"line_end":251,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275431,"byte_end":8275500,"line_start":246,"line_end":246,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275505,"byte_end":8275508,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275513,"byte_end":8275587,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275592,"byte_end":8275595,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: #method.set_multicast_loop_v4","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275600,"byte_end":8275660,"line_start":250,"line_end":250,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3000},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8276029,"byte_end":8276050,"line_start":262,"line_end":262,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275776,"byte_end":8275845,"line_start":255,"line_end":255,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275850,"byte_end":8275853,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275858,"byte_end":8275932,"line_start":257,"line_end":257,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275937,"byte_end":8275940,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275945,"byte_end":8275955,"line_start":259,"line_end":259,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275960,"byte_end":8275963,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8275968,"byte_end":8276017,"line_start":261,"line_end":261,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8276388,"byte_end":8276404,"line_start":271,"line_end":271,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8276151,"byte_end":8276219,"line_start":266,"line_end":266,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8276224,"byte_end":8276227,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8276232,"byte_end":8276305,"line_start":268,"line_end":268,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8276310,"byte_end":8276313,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: #method.set_multicast_ttl_v4","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8276318,"byte_end":8276376,"line_start":270,"line_end":270,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8276883,"byte_end":8276903,"line_start":284,"line_end":284,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8276489,"byte_end":8276557,"line_start":275,"line_end":275,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8276562,"byte_end":8276565,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8276570,"byte_end":8276640,"line_start":277,"line_end":277,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8276645,"byte_end":8276719,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8276724,"byte_end":8276786,"line_start":279,"line_end":279,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8276791,"byte_end":8276794,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8276799,"byte_end":8276809,"line_start":281,"line_end":281,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8276814,"byte_end":8276817,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8276822,"byte_end":8276871,"line_start":283,"line_end":283,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277247,"byte_end":8277264,"line_start":293,"line_end":293,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277004,"byte_end":8277075,"line_start":288,"line_end":288,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277080,"byte_end":8277083,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277088,"byte_end":8277162,"line_start":290,"line_end":290,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277167,"byte_end":8277170,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: #method.set_multicast_loop_v6","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277175,"byte_end":8277235,"line_start":292,"line_end":292,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3004},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277608,"byte_end":8277629,"line_start":304,"line_end":304,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277351,"byte_end":8277422,"line_start":297,"line_end":297,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277427,"byte_end":8277430,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277435,"byte_end":8277511,"line_start":299,"line_end":299,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277516,"byte_end":8277519,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277524,"byte_end":8277534,"line_start":301,"line_end":301,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277539,"byte_end":8277542,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277547,"byte_end":8277596,"line_start":303,"line_end":303,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277918,"byte_end":8277921,"line_start":313,"line_end":313,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277730,"byte_end":8277788,"line_start":308,"line_end":308,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277793,"byte_end":8277796,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277801,"byte_end":8277861,"line_start":310,"line_end":310,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277866,"byte_end":8277869,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277874,"byte_end":8277906,"line_start":312,"line_end":312,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3006},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8278178,"byte_end":8278185,"line_start":321,"line_end":321,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8277993,"byte_end":8278051,"line_start":317,"line_end":317,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8278056,"byte_end":8278059,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8278064,"byte_end":8278140,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8278145,"byte_end":8278166,"line_start":320,"line_end":320,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3007},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8278703,"byte_end":8278720,"line_start":332,"line_end":332,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"fn (&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8278273,"byte_end":8278331,"line_start":325,"line_end":325,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8278336,"byte_end":8278339,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8278344,"byte_end":8278418,"line_start":327,"line_end":327,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8278423,"byte_end":8278496,"line_start":328,"line_end":328,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8278501,"byte_end":8278573,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8278578,"byte_end":8278648,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8278653,"byte_end":8278691,"line_start":331,"line_end":331,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3008},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8279185,"byte_end":8279202,"line_start":341,"line_end":341,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8278869,"byte_end":8278929,"line_start":336,"line_end":336,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8278934,"byte_end":8278937,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8278942,"byte_end":8279016,"line_start":338,"line_end":338,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8279021,"byte_end":8279094,"line_start":339,"line_end":339,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8279099,"byte_end":8279173,"line_start":340,"line_end":340,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3009},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8279564,"byte_end":8279582,"line_start":350,"line_end":350,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"fn (&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8279345,"byte_end":8279404,"line_start":345,"line_end":345,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8279409,"byte_end":8279412,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8279417,"byte_end":8279487,"line_start":347,"line_end":347,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8279492,"byte_end":8279495,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: #method.join_multicast_v4","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8279500,"byte_end":8279552,"line_start":349,"line_end":349,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3010},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8279953,"byte_end":8279971,"line_start":359,"line_end":359,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8279732,"byte_end":8279793,"line_start":354,"line_end":354,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8279798,"byte_end":8279801,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8279806,"byte_end":8279876,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8279881,"byte_end":8279884,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: #method.join_multicast_v6","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8279889,"byte_end":8279941,"line_start":358,"line_end":358,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3069},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8282601,"byte_end":8282609,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::udp::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The send half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The send half after [`split`](super::UdpSocket::split).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8282423,"byte_end":8282482,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8282483,"byte_end":8282486,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Use [`send_to`](#method.send_to) or [`send`](#method.send) to send","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8282487,"byte_end":8282557,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ datagrams.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8282558,"byte_end":8282572,"line_start":27,"line_end":27,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3074},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8282813,"byte_end":8282821,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::udp::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The recv half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The recv half after [`split`](super::UdpSocket::split).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8282628,"byte_end":8282687,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8282688,"byte_end":8282691,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use [`recv_from`](#method.recv_from) or [`recv`](#method.recv) to receive","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8282692,"byte_end":8282769,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ datagrams.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8282770,"byte_end":8282784,"line_start":34,"line_end":34,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3079},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8283163,"byte_end":8283175,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::udp::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8283034,"byte_end":8283111,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ not be `reunite`d.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8283112,"byte_end":8283134,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3039},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8284212,"byte_end":8284219,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"reunite","qualname":"<RecvHalf>::reunite","value":"fn (self, other: SendHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8283997,"byte_end":8284068,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8284073,"byte_end":8284139,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8284144,"byte_end":8284200,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3040},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8284710,"byte_end":8284719,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8284320,"byte_end":8284399,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8284404,"byte_end":8284471,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8284476,"byte_end":8284479,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8284484,"byte_end":8284562,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8284567,"byte_end":8284645,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8284650,"byte_end":8284692,"line_start":87,"line_end":87,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3044},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8285499,"byte_end":8285503,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8284854,"byte_end":8284933,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8284938,"byte_end":8285022,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8285027,"byte_end":8285059,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8285064,"byte_end":8285067,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8285072,"byte_end":8285153,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8285158,"byte_end":8285241,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8285246,"byte_end":8285280,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8285285,"byte_end":8285288,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8285293,"byte_end":8285376,"line_start":100,"line_end":100,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8285381,"byte_end":8285426,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8285431,"byte_end":8285434,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8285439,"byte_end":8285481,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3049},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8285852,"byte_end":8285859,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SendHalf>::reunite","value":"fn (self, other: RecvHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8285637,"byte_end":8285708,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8285713,"byte_end":8285779,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8285784,"byte_end":8285840,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8286251,"byte_end":8286258,"line_start":122,"line_end":122,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"fn (&mut self, buf: &[u8], target: &SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8285960,"byte_end":8286032,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8286037,"byte_end":8286108,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8286113,"byte_end":8286116,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8286121,"byte_end":8286197,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8286202,"byte_end":8286233,"line_start":121,"line_end":121,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3054},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8286810,"byte_end":8286814,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"fn (&mut self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8286402,"byte_end":8286500,"line_start":126,"line_end":126,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8286505,"byte_end":8286576,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8286581,"byte_end":8286584,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8286589,"byte_end":8286672,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8286677,"byte_end":8286737,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8286742,"byte_end":8286745,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8286750,"byte_end":8286792,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":3085},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":3086},{"krate":0,"index":3147},{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3232},{"krate":0,"index":3235},{"krate":0,"index":3302},{"krate":0,"index":3303},{"krate":0,"index":3322}],"decl_id":null,"docs":" Unix domain socket utility types\n","sig":null,"attributes":[{"value":"cfg(all (unix, feature = \"uds\"))","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":15964,"byte_end":15998,"line_start":318,"line_end":318,"column_start":13,"column_end":47}},{"value":"! Unix domain socket utility types","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/mod.rs","byte_start":8287122,"byte_end":8287158,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3326},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8287796,"byte_end":8287808,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"UnixDatagram","qualname":"::net::unix::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":3327}],"decl_id":null,"docs":" An I/O object representing a Unix datagram socket.\n","sig":null,"attributes":[{"value":"cfg(all (unix, feature = \"uds\"))","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":15964,"byte_end":15998,"line_start":318,"line_end":318,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3104},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8287965,"byte_end":8287969,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"fn <P> (path: P) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` bound to the specified path.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` bound to the specified path.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8287892,"byte_end":8287953,"line_start":21,"line_end":21,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3106},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8288432,"byte_end":8288436,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"fn () -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8288152,"byte_end":8288201,"line_start":30,"line_end":30,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8288206,"byte_end":8288209,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8288214,"byte_end":8288285,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8288290,"byte_end":8288360,"line_start":33,"line_end":33,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8288365,"byte_end":8288420,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3107},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8288920,"byte_end":8288928,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"fn (datagram: net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixDatagram` in the standard library and returns a\n nonblocking `UnixDatagram` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixDatagram` in the standard library and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8288647,"byte_end":8288714,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixDatagram` from this crate.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8288719,"byte_end":8288766,"line_start":44,"line_end":44,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8288771,"byte_end":8288774,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ The returned datagram will be associated with the given event loop","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8288779,"byte_end":8288849,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8288854,"byte_end":8288908,"line_start":47,"line_end":47,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3109},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8289379,"byte_end":8289386,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"fn () -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` which is not bound to any address.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8289300,"byte_end":8289367,"line_start":59,"line_end":59,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3110},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8289739,"byte_end":8289746,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"fn <P> (&self, path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8289520,"byte_end":8289569,"line_start":65,"line_end":65,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8289574,"byte_end":8289577,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8289582,"byte_end":8289654,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8289659,"byte_end":8289727,"line_start":68,"line_end":68,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3112},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8289918,"byte_end":8289922,"line_start":74,"line_end":74,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"fn (&mut self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8289850,"byte_end":8289900,"line_start":73,"line_end":73,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3117},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8291117,"byte_end":8291121,"line_start":105,"line_end":105,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8291065,"byte_end":8291099,"line_start":104,"line_end":104,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3122},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8291799,"byte_end":8291806,"line_start":126,"line_end":126,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"fn <P> (&mut self, buf: &[u8], target: P) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8291727,"byte_end":8291781,"line_start":125,"line_end":125,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8292527,"byte_end":8292536,"line_start":151,"line_end":151,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8292475,"byte_end":8292509,"line_start":150,"line_end":150,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8293263,"byte_end":8293273,"line_start":172,"line_end":172,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8293192,"byte_end":8293251,"line_start":171,"line_end":171,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3134},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8293489,"byte_end":8293498,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8293359,"byte_end":8293405,"line_start":176,"line_end":176,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8293410,"byte_end":8293413,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8293418,"byte_end":8293477,"line_start":178,"line_end":178,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3135},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8293642,"byte_end":8293652,"line_start":184,"line_end":184,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8293583,"byte_end":8293630,"line_start":183,"line_end":183,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8294025,"byte_end":8294033,"line_start":193,"line_end":193,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shut down the read, write, or both halves of this connection.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8293745,"byte_end":8293810,"line_start":188,"line_end":188,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8293815,"byte_end":8293818,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8293823,"byte_end":8293891,"line_start":190,"line_end":190,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8293896,"byte_end":8293966,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8293971,"byte_end":8294013,"line_start":192,"line_end":192,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3328},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/incoming.rs","byte_start":8295411,"byte_end":8295419,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::unix::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":3330}],"decl_id":null,"docs":" Stream of listeners\n","sig":null,"attributes":[{"value":"/ Stream of listeners","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/incoming.rs","byte_start":8295310,"byte_end":8295333,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/incoming.rs","byte_start":8295351,"byte_end":8295399,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3158},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/incoming.rs","byte_start":8295638,"byte_end":8295649,"line_start":20,"line_end":20,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"fn (mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<UnixStream>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3334},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8296605,"byte_end":8296617,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"name":"UnixListener","qualname":"::net::unix::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":3335}],"decl_id":null,"docs":" A Unix socket which can accept connections from other Unix sockets.\n","sig":null,"attributes":[{"value":"cfg(all (unix, feature = \"uds\"))","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":15964,"byte_end":15998,"line_start":318,"line_end":318,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3185},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8296774,"byte_end":8296778,"line_start":24,"line_end":24,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"fn <P> (path: P) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified path.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified path.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8296701,"byte_end":8296762,"line_start":23,"line_end":23,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3187},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8297280,"byte_end":8297288,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"fn (listener: net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixListener` in the standard library and returns a\n nonblocking `UnixListener` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixListener` in the standard library and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8297007,"byte_end":8297074,"line_start":33,"line_end":33,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixListener` from this crate.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8297079,"byte_end":8297126,"line_start":34,"line_end":34,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8297131,"byte_end":8297134,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The returned listener will be associated with the given event loop","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8297139,"byte_end":8297209,"line_start":36,"line_end":36,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8297214,"byte_end":8297268,"line_start":37,"line_end":37,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3188},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8297575,"byte_end":8297585,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8297509,"byte_end":8297563,"line_start":44,"line_end":44,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3189},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8297730,"byte_end":8297740,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8297671,"byte_end":8297718,"line_start":49,"line_end":49,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3190},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8297906,"byte_end":8297912,"line_start":55,"line_end":55,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"fn (&mut self) -> io::Result<(UnixStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8297833,"byte_end":8297888,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3196},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8300305,"byte_end":8300313,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"fn (&mut self) -> Incoming<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299017,"byte_end":8299091,"line_start":89,"line_end":89,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299096,"byte_end":8299099,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299104,"byte_end":8299180,"line_start":91,"line_end":91,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299185,"byte_end":8299254,"line_start":92,"line_end":92,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299259,"byte_end":8299288,"line_start":93,"line_end":93,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299293,"byte_end":8299296,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299301,"byte_end":8299313,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299318,"byte_end":8299321,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299326,"byte_end":8299401,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299406,"byte_end":8299481,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299486,"byte_end":8299560,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299565,"byte_end":8299640,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299645,"byte_end":8299653,"line_start":101,"line_end":101,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299658,"byte_end":8299661,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299666,"byte_end":8299680,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299685,"byte_end":8299688,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299693,"byte_end":8299706,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixListener;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299711,"byte_end":8299744,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299749,"byte_end":8299782,"line_start":107,"line_end":107,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299787,"byte_end":8299790,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299795,"byte_end":8299813,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299818,"byte_end":8299839,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/     let mut listener = UnixListener::bind(\"/path/to/the/socket\").unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299844,"byte_end":8299922,"line_start":111,"line_end":111,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299927,"byte_end":8299974,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299979,"byte_end":8299982,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8299987,"byte_end":8300043,"line_start":114,"line_end":114,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8300048,"byte_end":8300074,"line_start":115,"line_end":115,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8300079,"byte_end":8300110,"line_start":116,"line_end":116,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8300115,"byte_end":8300159,"line_start":117,"line_end":117,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8300164,"byte_end":8300181,"line_start":118,"line_end":118,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8300186,"byte_end":8300239,"line_start":119,"line_end":119,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8300244,"byte_end":8300257,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8300262,"byte_end":8300271,"line_start":121,"line_end":121,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8300276,"byte_end":8300281,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8300286,"byte_end":8300293,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3336},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/split.rs","byte_start":8302078,"byte_end":8302086,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::unix::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a `UnixStream`.\n","sig":null,"attributes":[{"value":"/ Read half of a `UnixStream`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/split.rs","byte_start":8302017,"byte_end":8302049,"line_start":20,"line_end":20,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3343},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/split.rs","byte_start":8302171,"byte_end":8302180,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::unix::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a `UnixStream`.\n","sig":null,"attributes":[{"value":"/ Write half of a `UnixStream`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/split.rs","byte_start":8302109,"byte_end":8302142,"line_start":24,"line_end":24,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3350},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8304146,"byte_end":8304156,"line_start":23,"line_end":23,"column_start":16,"column_end":26},"name":"UnixStream","qualname":"::net::unix::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":3351}],"decl_id":null,"docs":" A structure representing a connected Unix socket.","sig":null,"attributes":[{"value":"cfg(all (unix, feature = \"uds\"))","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":15964,"byte_end":15998,"line_start":318,"line_end":318,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8304478,"byte_end":8304485,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"fn <P> (path: P) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8304236,"byte_end":8304279,"line_start":29,"line_end":29,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8304284,"byte_end":8304287,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This function will create a new Unix socket and connect to the path","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8304292,"byte_end":8304363,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ specified, associating the returned stream with the default event loop's","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8304368,"byte_end":8304444,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ handle.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8304449,"byte_end":8304460,"line_start":33,"line_end":33,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3273},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8305028,"byte_end":8305036,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"fn (stream: net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixStream` in the standard library and returns a\n nonblocking `UnixStream` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixStream` in the standard library and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8304761,"byte_end":8304826,"line_start":45,"line_end":45,"column_start":5,"column_end":70}},{"value":"/ nonblocking `UnixStream` from this crate.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8304831,"byte_end":8304876,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8304881,"byte_end":8304884,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be associated with the given event loop","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8304889,"byte_end":8304957,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8304962,"byte_end":8305016,"line_start":49,"line_end":49,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3274},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8305520,"byte_end":8305524,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"fn () -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8305240,"byte_end":8305289,"line_start":57,"line_end":57,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8305294,"byte_end":8305297,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8305302,"byte_end":8305373,"line_start":59,"line_end":59,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8305378,"byte_end":8305448,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8305453,"byte_end":8305508,"line_start":61,"line_end":61,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8305965,"byte_end":8305975,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8305885,"byte_end":8305953,"line_start":75,"line_end":75,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3277},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8306142,"byte_end":8306151,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8306061,"byte_end":8306130,"line_start":80,"line_end":80,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3278},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8306330,"byte_end":8306339,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"peer_cred","qualname":"<UnixStream>::peer_cred","value":"fn (&self) -> io::Result<UCred>","parent":null,"children":[],"decl_id":null,"docs":" Returns effective credentials of the process which called `connect` or `pair`.\n","sig":null,"attributes":[{"value":"/ Returns effective credentials of the process which called `connect` or `pair`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8306236,"byte_end":8306318,"line_start":85,"line_end":85,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3279},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8306475,"byte_end":8306485,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8306416,"byte_end":8306463,"line_start":90,"line_end":90,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3280},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8306859,"byte_end":8306867,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8306578,"byte_end":8306644,"line_start":95,"line_end":95,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8306649,"byte_end":8306652,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8306657,"byte_end":8306725,"line_start":97,"line_end":97,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8306730,"byte_end":8306800,"line_start":98,"line_end":98,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8306805,"byte_end":8306847,"line_start":99,"line_end":99,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8307204,"byte_end":8307209,"line_start":109,"line_end":109,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixStream>::split","value":"fn (&mut self) -> (ReadHalf<'_>, WriteHalf<'_>)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Split a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8306961,"byte_end":8307038,"line_start":104,"line_end":104,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8307043,"byte_end":8307089,"line_start":105,"line_end":105,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8307094,"byte_end":8307097,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ See the module level documenation of [`split`](super::split) for more","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8307102,"byte_end":8307175,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8307180,"byte_end":8307192,"line_start":108,"line_end":108,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":3352},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/ucred.rs","byte_start":8310739,"byte_end":8310744,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"UCred","qualname":"::net::unix::ucred::UCred","value":"UCred { uid, gid }","parent":null,"children":[{"krate":0,"index":3353},{"krate":0,"index":3354}],"decl_id":null,"docs":" Credentials of a process\n","sig":null,"attributes":[{"value":"/ Credentials of a process","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/ucred.rs","byte_start":8310648,"byte_end":8310676,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3353},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/ucred.rs","byte_start":8310792,"byte_end":8310795,"line_start":7,"line_end":7,"column_start":9,"column_end":12},"name":"uid","qualname":"::net::unix::ucred::UCred::uid","value":"u32","parent":{"krate":0,"index":3352},"children":[],"decl_id":null,"docs":" UID (user ID) of the process\n","sig":null,"attributes":[{"value":"/ UID (user ID) of the process","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/ucred.rs","byte_start":8310751,"byte_end":8310783,"line_start":6,"line_end":6,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3354},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/ucred.rs","byte_start":8310850,"byte_end":8310853,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"gid","qualname":"::net::unix::ucred::UCred::gid","value":"u32","parent":{"krate":0,"index":3352},"children":[],"decl_id":null,"docs":" GID (group ID) of the process\n","sig":null,"attributes":[{"value":"/ GID (group ID) of the process","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/ucred.rs","byte_start":8310808,"byte_end":8310841,"line_start":8,"line_end":8,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":463},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/mod.rs","byte_start":74411,"byte_end":74417,"line_start":69,"line_end":69,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":462},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/mod.rs","byte_start":74348,"byte_end":74401,"line_start":68,"line_end":68,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":464},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/mod.rs","byte_start":74470,"byte_end":74475,"line_start":72,"line_end":72,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":462},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/mod.rs","byte_start":74432,"byte_end":74460,"line_start":71,"line_end":71,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":474},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":3481}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not (loom))","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":86428,"byte_end":86446,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":86448,"byte_end":86495,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":86496,"byte_end":86499,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":86500,"byte_end":86576,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"! almost always want to import its entire contents, but unlike the standard","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":86577,"byte_end":86654,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"! library's prelude you'll have to do so manually:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":86655,"byte_end":86707,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":86708,"byte_end":86711,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":86712,"byte_end":86719,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"! # #![allow(warnings)]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":86720,"byte_end":86745,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":86746,"byte_end":86772,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":86773,"byte_end":86780,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":86781,"byte_end":86784,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/prelude.rs","byte_start":86785,"byte_end":86859,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":3486},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"process","qualname":"::process","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","parent":null,"children":[{"krate":0,"index":3487},{"krate":0,"index":3636},{"krate":0,"index":3643},{"krate":0,"index":3646},{"krate":0,"index":3647},{"krate":0,"index":3648},{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3653},{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3795},{"krate":0,"index":3798},{"krate":0,"index":3660},{"krate":0,"index":3665},{"krate":0,"index":3707},{"krate":0,"index":3800},{"krate":0,"index":3804},{"krate":0,"index":3709},{"krate":0,"index":3712},{"krate":0,"index":3715},{"krate":0,"index":3807},{"krate":0,"index":3812},{"krate":0,"index":3721},{"krate":0,"index":3735},{"krate":0,"index":3814},{"krate":0,"index":3816},{"krate":0,"index":3818},{"krate":0,"index":3820},{"krate":0,"index":3822},{"krate":0,"index":3824},{"krate":0,"index":3738},{"krate":0,"index":3742},{"krate":0,"index":3744},{"krate":0,"index":3746}],"decl_id":null,"docs":" An implementation of asynchronous process management for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"process\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":12946,"byte_end":12973,"line_start":167,"line_end":167,"column_start":13,"column_end":40}},{"value":"cfg(not (loom))","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":13049,"byte_end":13066,"line_start":169,"line_end":169,"column_start":13,"column_end":30}},{"value":"! An implementation of asynchronous process management for Tokio.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316208,"byte_end":8316275,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316276,"byte_end":8316279,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides a [`Command`] struct that imitates the interface of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316280,"byte_end":8316360,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"! [`std::process::Command`] type in the standard library, but provides asynchronous versions of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316361,"byte_end":8316458,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"! functions that create processes. These functions (`spawn`, `status`, `output` and their","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316459,"byte_end":8316550,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"! variants) return \"future aware\" types that interoperate with Tokio. The asynchronous process","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316551,"byte_end":8316647,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"! support is provided through signal handling on Unix and system APIs on Windows.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316648,"byte_end":8316731,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316732,"byte_end":8316735,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316736,"byte_end":8316750,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316751,"byte_end":8316754,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! Here's an example program which will spawn `echo hello world` and then wait","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316755,"byte_end":8316834,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"! for it complete.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316835,"byte_end":8316855,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316856,"byte_end":8316859,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316860,"byte_end":8316873,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"! use tokio::process::Command;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316874,"byte_end":8316906,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316907,"byte_end":8316910,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316911,"byte_end":8316929,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316930,"byte_end":8316993,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"!     // The usage is the same as with the standard library's `Command` type, however the value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8316994,"byte_end":8317091,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"!     // returned from `spawn` is a `Result` containing a `Future`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317092,"byte_end":8317161,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"!     let child = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317162,"byte_end":8317228,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"!                         .spawn();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317229,"byte_end":8317266,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317267,"byte_end":8317270,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"!     // Make sure our child succeeded in spawning and process the result","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317271,"byte_end":8317346,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"!     let future = child.expect(\"failed to spawn\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317347,"byte_end":8317400,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317401,"byte_end":8317404,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"!     // Await until the future (and the command) completes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317405,"byte_end":8317466,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"!     let status = future.await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317467,"byte_end":8317502,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"!     println!(\"the command exited with: {}\", status);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317503,"byte_end":8317559,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"!     Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317560,"byte_end":8317574,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317575,"byte_end":8317580,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317581,"byte_end":8317588,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317589,"byte_end":8317592,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! Next, let's take a look at an example where we not only spawn `echo hello","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317593,"byte_end":8317670,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"! world` but we also capture its output.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317671,"byte_end":8317713,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317714,"byte_end":8317717,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317718,"byte_end":8317731,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"! use tokio::process::Command;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317732,"byte_end":8317764,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317765,"byte_end":8317768,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317769,"byte_end":8317787,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317788,"byte_end":8317851,"line_start":41,"line_end":41,"column_start":1,"column_end":64}},{"value":"!     // Like above, but use `output` which returns a future instead of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317852,"byte_end":8317925,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"!     // immediately returning the `Child`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317926,"byte_end":8317971,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"!     let output = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8317972,"byte_end":8318039,"line_start":44,"line_end":44,"column_start":1,"column_end":68}},{"value":"!                         .output();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318040,"byte_end":8318078,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318079,"byte_end":8318082,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"!     let output = output.await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318083,"byte_end":8318118,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318119,"byte_end":8318122,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     assert!(output.status.success());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318123,"byte_end":8318164,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"!     assert_eq!(output.stdout, b\"hello world\\n\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318165,"byte_end":8318217,"line_start":50,"line_end":50,"column_start":1,"column_end":53}},{"value":"!     Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318218,"byte_end":8318232,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318233,"byte_end":8318238,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318239,"byte_end":8318246,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318247,"byte_end":8318250,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! We can also read input line by line.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318251,"byte_end":8318291,"line_start":55,"line_end":55,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318292,"byte_end":8318295,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318296,"byte_end":8318309,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{BufReader, AsyncBufReadExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318310,"byte_end":8318358,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"! use tokio::process::Command;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318359,"byte_end":8318391,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318392,"byte_end":8318395,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! use std::process::Stdio;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318396,"byte_end":8318424,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318425,"byte_end":8318428,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318429,"byte_end":8318447,"line_start":63,"line_end":63,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318448,"byte_end":8318511,"line_start":64,"line_end":64,"column_start":1,"column_end":64}},{"value":"!     let mut cmd = Command::new(\"cat\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318512,"byte_end":8318554,"line_start":65,"line_end":65,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318555,"byte_end":8318558,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"!     // Specify that we want the command's standard output piped back to us.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318559,"byte_end":8318638,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"!     // By default, standard input/output/error will be inherited from the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318639,"byte_end":8318716,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"!     // current process (for example, this means that standard input will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318717,"byte_end":8318793,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"!     // come from the keyboard and standard output/error will go directly to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318794,"byte_end":8318873,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"!     // the terminal if this process is invoked from the command line).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318874,"byte_end":8318948,"line_start":71,"line_end":71,"column_start":1,"column_end":75}},{"value":"!     cmd.stdout(Stdio::piped());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318949,"byte_end":8318984,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318985,"byte_end":8318988,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"!     let mut child = cmd.spawn()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8318989,"byte_end":8319024,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"!         .expect(\"failed to spawn command\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319025,"byte_end":8319072,"line_start":75,"line_end":75,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319073,"byte_end":8319076,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"!     let stdout = child.stdout().take()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319077,"byte_end":8319119,"line_start":77,"line_end":77,"column_start":1,"column_end":43}},{"value":"!         .expect(\"child did not have a handle to stdout\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319120,"byte_end":8319181,"line_start":78,"line_end":78,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319182,"byte_end":8319185,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"!     let mut reader = BufReader::new(stdout).lines();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319186,"byte_end":8319242,"line_start":80,"line_end":80,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319243,"byte_end":8319246,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"!     // Ensure the child process is spawned in the runtime so it can","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319247,"byte_end":8319318,"line_start":82,"line_end":82,"column_start":1,"column_end":72}},{"value":"!     // make progress on its own while we await for any output.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319319,"byte_end":8319385,"line_start":83,"line_end":83,"column_start":1,"column_end":67}},{"value":"!     tokio::spawn(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319386,"byte_end":8319414,"line_start":84,"line_end":84,"column_start":1,"column_end":29}},{"value":"!         let status = child.await","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319415,"byte_end":8319451,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"!             .expect(\"child process encountered an error\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319452,"byte_end":8319514,"line_start":86,"line_end":86,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319515,"byte_end":8319518,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"!         println!(\"child status was: {}\", status);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319519,"byte_end":8319572,"line_start":88,"line_end":88,"column_start":1,"column_end":54}},{"value":"!     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319573,"byte_end":8319584,"line_start":89,"line_end":89,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319585,"byte_end":8319588,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"!     while let Some(line) = reader.next_line().await? {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319589,"byte_end":8319647,"line_start":91,"line_end":91,"column_start":1,"column_end":59}},{"value":"!         println!(\"Line: {}\", line);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319648,"byte_end":8319687,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"!     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319688,"byte_end":8319697,"line_start":93,"line_end":93,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319698,"byte_end":8319701,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319702,"byte_end":8319716,"line_start":95,"line_end":95,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319717,"byte_end":8319722,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319723,"byte_end":8319730,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319731,"byte_end":8319734,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! # Caveats","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319735,"byte_end":8319748,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319749,"byte_end":8319752,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319753,"byte_end":8319828,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"! paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319829,"byte_end":8319902,"line_start":102,"line_end":102,"column_start":1,"column_end":74}},{"value":"! default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319903,"byte_end":8319983,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319984,"byte_end":8319987,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8319988,"byte_end":8320062,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"! and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8320063,"byte_end":8320137,"line_start":106,"line_end":106,"column_start":1,"column_end":75}},{"value":"! has exited.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8320138,"byte_end":8320153,"line_start":107,"line_end":107,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8320154,"byte_end":8320157,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"! [`Command`]: crate::process::Command","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8320158,"byte_end":8320198,"line_start":109,"line_end":109,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3795},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321134,"byte_end":8321141,"line_start":144,"line_end":144,"column_start":12,"column_end":19},"name":"Command","qualname":"::process::Command","value":"Command {  }","parent":null,"children":[{"krate":0,"index":3796},{"krate":0,"index":3797}],"decl_id":null,"docs":" This structure mimics the API of [`std::process::Command`] found in the standard library, but\n replaces functions that create a process with an asynchronous variant. The main provided\n asynchronous functions are [spawn](Command::spawn), [status](Command::status), and\n [output](Command::output).","sig":null,"attributes":[{"value":"/ This structure mimics the API of [`std::process::Command`] found in the standard library, but","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8320707,"byte_end":8320804,"line_start":137,"line_end":137,"column_start":1,"column_end":98}},{"value":"/ replaces functions that create a process with an asynchronous variant. The main provided","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8320805,"byte_end":8320897,"line_start":138,"line_end":138,"column_start":1,"column_end":93}},{"value":"/ asynchronous functions are [spawn](Command::spawn), [status](Command::status), and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8320898,"byte_end":8320984,"line_start":139,"line_end":139,"column_start":1,"column_end":87}},{"value":"/ [output](Command::output).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8320985,"byte_end":8321015,"line_start":140,"line_end":140,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321016,"byte_end":8321019,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ `Command` uses asynchronous versions of some `std` types (for example [`Child`]).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321020,"byte_end":8321105,"line_start":142,"line_end":142,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":3666},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322402,"byte_end":8322405,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"new","qualname":"<Command>::new","value":"fn <S> (program: S) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Command` for launching the program at\n path `program`, with the following default configuration:","sig":null,"attributes":[{"value":"/ Constructs a new `Command` for launching the program at","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321382,"byte_end":8321441,"line_start":157,"line_end":157,"column_start":5,"column_end":64}},{"value":"/ path `program`, with the following default configuration:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321446,"byte_end":8321507,"line_start":158,"line_end":158,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321512,"byte_end":8321515,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ * No arguments to the program","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321520,"byte_end":8321553,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/ * Inherit the current process's environment","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321558,"byte_end":8321605,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/ * Inherit the current process's working directory","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321610,"byte_end":8321663,"line_start":162,"line_end":162,"column_start":5,"column_end":58}},{"value":"/ * Inherit stdin/stdout/stderr for `spawn` or `status`, but create pipes for `output`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321668,"byte_end":8321756,"line_start":163,"line_end":163,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321761,"byte_end":8321764,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Builder methods are provided to change these defaults and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321769,"byte_end":8321830,"line_start":165,"line_end":165,"column_start":5,"column_end":66}},{"value":"/ otherwise configure the process.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321835,"byte_end":8321871,"line_start":166,"line_end":166,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321876,"byte_end":8321879,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If `program` is not an absolute path, the `PATH` will be searched in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321884,"byte_end":8321956,"line_start":168,"line_end":168,"column_start":5,"column_end":77}},{"value":"/ an OS-defined way.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321961,"byte_end":8321983,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321988,"byte_end":8321991,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ The search path to be used may be controlled by setting the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321996,"byte_end":8322059,"line_start":171,"line_end":171,"column_start":5,"column_end":68}},{"value":"/ `PATH` environment variable on the Command,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322064,"byte_end":8322111,"line_start":172,"line_end":172,"column_start":5,"column_end":52}},{"value":"/ but this has some implementation limitations on Windows","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322116,"byte_end":8322175,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ (see issue rust-lang/rust#37519).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322180,"byte_end":8322217,"line_start":174,"line_end":174,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322222,"byte_end":8322225,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322230,"byte_end":8322244,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322249,"byte_end":8322252,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322257,"byte_end":8322273,"line_start":178,"line_end":178,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322278,"byte_end":8322281,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322286,"byte_end":8322299,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322304,"byte_end":8322336,"line_start":181,"line_end":181,"column_start":5,"column_end":37}},{"value":"/ let command = Command::new(\"sh\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322341,"byte_end":8322378,"line_start":182,"line_end":182,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322383,"byte_end":8322390,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3668},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323247,"byte_end":8323250,"line_start":220,"line_end":220,"column_start":12,"column_end":15},"name":"arg","qualname":"<Command>::arg","value":"fn <S> (&mut self, arg: S) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds an argument to pass to the program.","sig":null,"attributes":[{"value":"/ Adds an argument to pass to the program.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322504,"byte_end":8322548,"line_start":188,"line_end":188,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322553,"byte_end":8322556,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Only one argument can be passed per use. So instead of:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322561,"byte_end":8322620,"line_start":190,"line_end":190,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322625,"byte_end":8322628,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322633,"byte_end":8322646,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322651,"byte_end":8322689,"line_start":193,"line_end":193,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C /path/to/repo\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322694,"byte_end":8322725,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322730,"byte_end":8322737,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322742,"byte_end":8322745,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ usage would be:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322750,"byte_end":8322769,"line_start":197,"line_end":197,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322774,"byte_end":8322777,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322782,"byte_end":8322795,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322800,"byte_end":8322838,"line_start":200,"line_end":200,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322843,"byte_end":8322859,"line_start":201,"line_end":201,"column_start":5,"column_end":21}},{"value":"/   .arg(\"/path/to/repo\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322864,"byte_end":8322892,"line_start":202,"line_end":202,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322897,"byte_end":8322904,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322909,"byte_end":8322912,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ To pass multiple arguments see [`args`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322917,"byte_end":8322961,"line_start":205,"line_end":205,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322966,"byte_end":8322969,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ [`args`]: #method.args","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8322974,"byte_end":8323000,"line_start":207,"line_end":207,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323005,"byte_end":8323008,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323013,"byte_end":8323027,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323032,"byte_end":8323035,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323040,"byte_end":8323056,"line_start":211,"line_end":211,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323061,"byte_end":8323064,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323069,"byte_end":8323082,"line_start":213,"line_end":213,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323087,"byte_end":8323119,"line_start":214,"line_end":214,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323124,"byte_end":8323127,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323132,"byte_end":8323168,"line_start":216,"line_end":216,"column_start":5,"column_end":41}},{"value":"/         .arg(\"-l\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323173,"byte_end":8323195,"line_start":217,"line_end":217,"column_start":5,"column_end":27}},{"value":"/         .arg(\"-a\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323200,"byte_end":8323223,"line_start":218,"line_end":218,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323228,"byte_end":8323235,"line_start":219,"line_end":219,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323729,"byte_end":8323733,"line_start":241,"line_end":241,"column_start":12,"column_end":16},"name":"args","qualname":"<Command>::args","value":"fn <I, S> (&mut self, args: I) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds multiple arguments to pass to the program.","sig":null,"attributes":[{"value":"/ Adds multiple arguments to pass to the program.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323356,"byte_end":8323407,"line_start":225,"line_end":225,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323412,"byte_end":8323415,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ To pass a single argument see [`arg`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323420,"byte_end":8323462,"line_start":227,"line_end":227,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323467,"byte_end":8323470,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ [`arg`]: #method.arg","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323475,"byte_end":8323499,"line_start":229,"line_end":229,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323504,"byte_end":8323507,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323512,"byte_end":8323526,"line_start":231,"line_end":231,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323531,"byte_end":8323534,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323539,"byte_end":8323555,"line_start":233,"line_end":233,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323560,"byte_end":8323563,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323568,"byte_end":8323581,"line_start":235,"line_end":235,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323586,"byte_end":8323618,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323623,"byte_end":8323626,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323631,"byte_end":8323667,"line_start":238,"line_end":238,"column_start":5,"column_end":41}},{"value":"/         .args(&[\"-l\", \"-a\"]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323672,"byte_end":8323705,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323710,"byte_end":8323717,"line_start":240,"line_end":240,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3673},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324349,"byte_end":8324352,"line_start":265,"line_end":265,"column_start":12,"column_end":15},"name":"env","qualname":"<Command>::env","value":"fn <K, V> (&mut self, key: K, val: V) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Inserts or updates an environment variable mapping.","sig":null,"attributes":[{"value":"/ Inserts or updates an environment variable mapping.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323905,"byte_end":8323960,"line_start":250,"line_end":250,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323965,"byte_end":8323968,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Note that environment variable names are case-insensitive (but case-preserving) on Windows,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8323973,"byte_end":8324068,"line_start":252,"line_end":252,"column_start":5,"column_end":100}},{"value":"/ and case-sensitive on all other platforms.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324073,"byte_end":8324119,"line_start":253,"line_end":253,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324124,"byte_end":8324127,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324132,"byte_end":8324146,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324151,"byte_end":8324154,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324159,"byte_end":8324175,"line_start":257,"line_end":257,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324180,"byte_end":8324183,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324188,"byte_end":8324201,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324206,"byte_end":8324238,"line_start":260,"line_end":260,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324243,"byte_end":8324246,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324251,"byte_end":8324287,"line_start":262,"line_end":262,"column_start":5,"column_end":41}},{"value":"/         .env(\"PATH\", \"/bin\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324292,"byte_end":8324325,"line_start":263,"line_end":263,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324330,"byte_end":8324337,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325226,"byte_end":8325230,"line_start":297,"line_end":297,"column_start":12,"column_end":16},"name":"envs","qualname":"<Command>::envs","value":"fn <I, K, V> (&mut self, vars: I) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds or updates multiple environment variable mappings.","sig":null,"attributes":[{"value":"/ Adds or updates multiple environment variable mappings.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324524,"byte_end":8324583,"line_start":274,"line_end":274,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324588,"byte_end":8324591,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324596,"byte_end":8324610,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324615,"byte_end":8324618,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324623,"byte_end":8324639,"line_start":278,"line_end":278,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324644,"byte_end":8324647,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324652,"byte_end":8324665,"line_start":280,"line_end":280,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324670,"byte_end":8324702,"line_start":281,"line_end":281,"column_start":5,"column_end":37}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324707,"byte_end":8324737,"line_start":282,"line_end":282,"column_start":5,"column_end":35}},{"value":"/ use std::env;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324742,"byte_end":8324759,"line_start":283,"line_end":283,"column_start":5,"column_end":22}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324764,"byte_end":8324798,"line_start":284,"line_end":284,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324803,"byte_end":8324806,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ let filtered_env : HashMap<String, String> =","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324811,"byte_end":8324859,"line_start":286,"line_end":286,"column_start":5,"column_end":53}},{"value":"/     env::vars().filter(|&(ref k, _)|","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324864,"byte_end":8324904,"line_start":287,"line_end":287,"column_start":5,"column_end":45}},{"value":"/         k == \"TERM\" || k == \"TZ\" || k == \"LANG\" || k == \"PATH\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324909,"byte_end":8324975,"line_start":288,"line_end":288,"column_start":5,"column_end":71}},{"value":"/     ).collect();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8324980,"byte_end":8325000,"line_start":289,"line_end":289,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325005,"byte_end":8325008,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"printenv\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325013,"byte_end":8325055,"line_start":291,"line_end":291,"column_start":5,"column_end":47}},{"value":"/         .stdin(Stdio::null())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325060,"byte_end":8325093,"line_start":292,"line_end":292,"column_start":5,"column_end":38}},{"value":"/         .stdout(Stdio::inherit())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325098,"byte_end":8325135,"line_start":293,"line_end":293,"column_start":5,"column_end":42}},{"value":"/         .env_clear()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325140,"byte_end":8325164,"line_start":294,"line_end":294,"column_start":5,"column_end":29}},{"value":"/         .envs(&filtered_env);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325169,"byte_end":8325202,"line_start":295,"line_end":295,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325207,"byte_end":8325214,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3680},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325708,"byte_end":8325718,"line_start":319,"line_end":319,"column_start":12,"column_end":22},"name":"env_remove","qualname":"<Command>::env_remove","value":"fn <K> (&mut self, key: K) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Removes an environment variable mapping.","sig":null,"attributes":[{"value":"/ Removes an environment variable mapping.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325435,"byte_end":8325479,"line_start":307,"line_end":307,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325484,"byte_end":8325487,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325492,"byte_end":8325506,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325511,"byte_end":8325514,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325519,"byte_end":8325535,"line_start":311,"line_end":311,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325540,"byte_end":8325543,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325548,"byte_end":8325561,"line_start":313,"line_end":313,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325566,"byte_end":8325598,"line_start":314,"line_end":314,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325603,"byte_end":8325606,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325611,"byte_end":8325647,"line_start":316,"line_end":316,"column_start":5,"column_end":41}},{"value":"/         .env_remove(\"PATH\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325652,"byte_end":8325684,"line_start":317,"line_end":317,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325689,"byte_end":8325696,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3682},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326113,"byte_end":8326122,"line_start":336,"line_end":336,"column_start":12,"column_end":21},"name":"env_clear","qualname":"<Command>::env_clear","value":"fn (&mut self) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Clears the entire environment map for the child process.","sig":null,"attributes":[{"value":"/ Clears the entire environment map for the child process.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325831,"byte_end":8325891,"line_start":324,"line_end":324,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325896,"byte_end":8325899,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325904,"byte_end":8325918,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325923,"byte_end":8325926,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325931,"byte_end":8325947,"line_start":328,"line_end":328,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325952,"byte_end":8325955,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325960,"byte_end":8325973,"line_start":330,"line_end":330,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8325978,"byte_end":8326010,"line_start":331,"line_end":331,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326015,"byte_end":8326018,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326023,"byte_end":8326059,"line_start":333,"line_end":333,"column_start":5,"column_end":41}},{"value":"/         .env_clear();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326064,"byte_end":8326089,"line_start":334,"line_end":334,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326094,"byte_end":8326101,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3683},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326968,"byte_end":8326979,"line_start":363,"line_end":363,"column_start":12,"column_end":23},"name":"current_dir","qualname":"<Command>::current_dir","value":"fn <P> (&mut self, dir: P) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the working directory for the child process.","sig":null,"attributes":[{"value":"/ Sets the working directory for the child process.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326206,"byte_end":8326259,"line_start":341,"line_end":341,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326264,"byte_end":8326267,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326272,"byte_end":8326304,"line_start":343,"line_end":343,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326309,"byte_end":8326312,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ If the program path is relative (e.g., `\"./script.sh\"`), it's ambiguous","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326317,"byte_end":8326392,"line_start":345,"line_end":345,"column_start":5,"column_end":80}},{"value":"/ whether it should be interpreted relative to the parent's working","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326397,"byte_end":8326466,"line_start":346,"line_end":346,"column_start":5,"column_end":74}},{"value":"/ directory or relative to `current_dir`. The behavior in this case is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326471,"byte_end":8326543,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ platform specific and unstable, and it's recommended to use","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326548,"byte_end":8326611,"line_start":348,"line_end":348,"column_start":5,"column_end":68}},{"value":"/ [`canonicalize`] to get an absolute program path instead.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326616,"byte_end":8326677,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326682,"byte_end":8326685,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326690,"byte_end":8326704,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326709,"byte_end":8326712,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326717,"byte_end":8326733,"line_start":353,"line_end":353,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326738,"byte_end":8326741,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326746,"byte_end":8326759,"line_start":355,"line_end":355,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326764,"byte_end":8326796,"line_start":356,"line_end":356,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326801,"byte_end":8326804,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326809,"byte_end":8326845,"line_start":358,"line_end":358,"column_start":5,"column_end":41}},{"value":"/         .current_dir(\"/bin\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326850,"byte_end":8326883,"line_start":359,"line_end":359,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326888,"byte_end":8326895,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326900,"byte_end":8326903,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [`canonicalize`]: ../fs/fn.canonicalize.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8326908,"byte_end":8326956,"line_start":362,"line_end":362,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3685},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327669,"byte_end":8327674,"line_start":387,"line_end":387,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Command>::stdin","value":"fn <T> (&mut self, cfg: T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Configuration for the child process's standard input (stdin) handle.","sig":null,"attributes":[{"value":"/ Configuration for the child process's standard input (stdin) handle.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327092,"byte_end":8327164,"line_start":368,"line_end":368,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327169,"byte_end":8327172,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327177,"byte_end":8327244,"line_start":370,"line_end":370,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327249,"byte_end":8327299,"line_start":371,"line_end":371,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327304,"byte_end":8327307,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327312,"byte_end":8327357,"line_start":373,"line_end":373,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327362,"byte_end":8327403,"line_start":374,"line_end":374,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327408,"byte_end":8327411,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327416,"byte_end":8327430,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327435,"byte_end":8327438,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327443,"byte_end":8327459,"line_start":378,"line_end":378,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327464,"byte_end":8327467,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327472,"byte_end":8327485,"line_start":380,"line_end":380,"column_start":5,"column_end":18}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327490,"byte_end":8327520,"line_start":381,"line_end":381,"column_start":5,"column_end":35}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327525,"byte_end":8327557,"line_start":382,"line_end":382,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327562,"byte_end":8327565,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327570,"byte_end":8327606,"line_start":384,"line_end":384,"column_start":5,"column_end":41}},{"value":"/         .stdin(Stdio::null());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327611,"byte_end":8327645,"line_start":385,"line_end":385,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327650,"byte_end":8327657,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3687},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328360,"byte_end":8328366,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Command>::stdout","value":"fn <T> (&mut self, cfg: T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Configuration for the child process's standard output (stdout) handle.","sig":null,"attributes":[{"value":"/ Configuration for the child process's standard output (stdout) handle.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327781,"byte_end":8327855,"line_start":392,"line_end":392,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327860,"byte_end":8327863,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327868,"byte_end":8327935,"line_start":394,"line_end":394,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327940,"byte_end":8327990,"line_start":395,"line_end":395,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8327995,"byte_end":8327998,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328003,"byte_end":8328048,"line_start":397,"line_end":397,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328053,"byte_end":8328094,"line_start":398,"line_end":398,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328099,"byte_end":8328102,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328107,"byte_end":8328121,"line_start":400,"line_end":400,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328126,"byte_end":8328129,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328134,"byte_end":8328150,"line_start":402,"line_end":402,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328155,"byte_end":8328158,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328163,"byte_end":8328176,"line_start":404,"line_end":404,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328181,"byte_end":8328214,"line_start":405,"line_end":405,"column_start":5,"column_end":38}},{"value":"/ use std::process::Stdio;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328219,"byte_end":8328247,"line_start":406,"line_end":406,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328252,"byte_end":8328255,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328260,"byte_end":8328296,"line_start":408,"line_end":408,"column_start":5,"column_end":41}},{"value":"/         .stdout(Stdio::null());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328301,"byte_end":8328336,"line_start":409,"line_end":409,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328341,"byte_end":8328348,"line_start":410,"line_end":410,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3689},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8329054,"byte_end":8329060,"line_start":435,"line_end":435,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Command>::stderr","value":"fn <T> (&mut self, cfg: T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Configuration for the child process's standard error (stderr) handle.","sig":null,"attributes":[{"value":"/ Configuration for the child process's standard error (stderr) handle.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328474,"byte_end":8328547,"line_start":416,"line_end":416,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328552,"byte_end":8328555,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328560,"byte_end":8328627,"line_start":418,"line_end":418,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328632,"byte_end":8328682,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328687,"byte_end":8328690,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328695,"byte_end":8328740,"line_start":421,"line_end":421,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328745,"byte_end":8328786,"line_start":422,"line_end":422,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328791,"byte_end":8328794,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328799,"byte_end":8328813,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328818,"byte_end":8328821,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328826,"byte_end":8328842,"line_start":426,"line_end":426,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328847,"byte_end":8328850,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328855,"byte_end":8328868,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328873,"byte_end":8328906,"line_start":429,"line_end":429,"column_start":5,"column_end":38}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328911,"byte_end":8328941,"line_start":430,"line_end":430,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328946,"byte_end":8328949,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328954,"byte_end":8328990,"line_start":432,"line_end":432,"column_start":5,"column_end":41}},{"value":"/         .stderr(Stdio::null());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8328995,"byte_end":8329030,"line_start":433,"line_end":433,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8329035,"byte_end":8329042,"line_start":434,"line_end":434,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3691},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8329513,"byte_end":8329525,"line_start":446,"line_end":446,"column_start":12,"column_end":24},"name":"kill_on_drop","qualname":"<Command>::kill_on_drop","value":"fn (&mut self, kill_on_drop: bool) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Controls whether a `kill` operation should be invoked on a spawned child\n process when its corresponding `Child` handle is dropped.","sig":null,"attributes":[{"value":"/ Controls whether a `kill` operation should be invoked on a spawned child","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8329168,"byte_end":8329244,"line_start":440,"line_end":440,"column_start":5,"column_end":81}},{"value":"/ process when its corresponding `Child` handle is dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8329249,"byte_end":8329310,"line_start":441,"line_end":441,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8329315,"byte_end":8329318,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ By default, this value is assumed to be `false`, meaning the next spawned","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8329323,"byte_end":8329400,"line_start":443,"line_end":443,"column_start":5,"column_end":82}},{"value":"/ process will not be killed on drop, similar to the behavior of the standard","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8329405,"byte_end":8329484,"line_start":444,"line_end":444,"column_start":5,"column_end":84}},{"value":"/ library.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8329489,"byte_end":8329501,"line_start":445,"line_end":445,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3692},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8330242,"byte_end":8330245,"line_start":466,"line_end":466,"column_start":12,"column_end":15},"name":"uid","qualname":"<Command>::uid","value":"fn (&mut self, id: u32) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the child process's user ID. This translates to a\n `setuid` call in the child process. Failure in the `setuid`\n call will cause the spawn to fail.\n","sig":null,"attributes":[{"value":"/ Sets the child process's user ID. This translates to a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8330044,"byte_end":8330102,"line_start":462,"line_end":462,"column_start":5,"column_end":63}},{"value":"/ `setuid` call in the child process. Failure in the `setuid`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8330107,"byte_end":8330170,"line_start":463,"line_end":463,"column_start":5,"column_end":68}},{"value":"/ call will cause the spawn to fail.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8330175,"byte_end":8330213,"line_start":464,"line_end":464,"column_start":5,"column_end":43}},{"value":"cfg(unix)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8330218,"byte_end":8330230,"line_start":465,"line_end":465,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3693},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8330484,"byte_end":8330487,"line_start":474,"line_end":474,"column_start":12,"column_end":15},"name":"gid","qualname":"<Command>::gid","value":"fn (&mut self, id: u32) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Similar to `uid`, but sets the group ID of the child process. This has\n the same semantics as the `uid` field.\n","sig":null,"attributes":[{"value":"/ Similar to `uid`, but sets the group ID of the child process. This has","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8330334,"byte_end":8330408,"line_start":471,"line_end":471,"column_start":5,"column_end":79}},{"value":"/ the same semantics as the `uid` field.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8330413,"byte_end":8330455,"line_start":472,"line_end":472,"column_start":5,"column_end":47}},{"value":"cfg(unix)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8330460,"byte_end":8330472,"line_start":473,"line_end":473,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3694},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332141,"byte_end":8332149,"line_start":509,"line_end":509,"column_start":19,"column_end":27},"name":"pre_exec","qualname":"<Command>::pre_exec","value":"fn <F> (&mut self, f: F) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Schedules a closure to be run just before the `exec` function is\n invoked.","sig":null,"attributes":[{"value":"/ Schedules a closure to be run just before the `exec` function is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8330576,"byte_end":8330644,"line_start":479,"line_end":479,"column_start":5,"column_end":73}},{"value":"/ invoked.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8330649,"byte_end":8330661,"line_start":480,"line_end":480,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8330666,"byte_end":8330669,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ The closure is allowed to return an I/O error whose OS error code will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8330674,"byte_end":8330748,"line_start":482,"line_end":482,"column_start":5,"column_end":79}},{"value":"/ be communicated back to the parent and returned as an error from when","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8330753,"byte_end":8330826,"line_start":483,"line_end":483,"column_start":5,"column_end":78}},{"value":"/ the spawn was requested.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8330831,"byte_end":8330859,"line_start":484,"line_end":484,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8330864,"byte_end":8330867,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Multiple closures can be registered and they will be called in order of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8330872,"byte_end":8330947,"line_start":486,"line_end":486,"column_start":5,"column_end":80}},{"value":"/ their registration. If a closure returns `Err` then no further closures","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8330952,"byte_end":8331027,"line_start":487,"line_end":487,"column_start":5,"column_end":80}},{"value":"/ will be called and the spawn operation will immediately return with a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331032,"byte_end":8331105,"line_start":488,"line_end":488,"column_start":5,"column_end":78}},{"value":"/ failure.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331110,"byte_end":8331122,"line_start":489,"line_end":489,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331127,"byte_end":8331130,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331135,"byte_end":8331147,"line_start":491,"line_end":491,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331152,"byte_end":8331155,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This closure will be run in the context of the child process after a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331160,"byte_end":8331232,"line_start":493,"line_end":493,"column_start":5,"column_end":77}},{"value":"/ `fork`. This primarily means that any modifications made to memory on","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331237,"byte_end":8331310,"line_start":494,"line_end":494,"column_start":5,"column_end":78}},{"value":"/ behalf of this closure will **not** be visible to the parent process.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331315,"byte_end":8331388,"line_start":495,"line_end":495,"column_start":5,"column_end":78}},{"value":"/ This is often a very constrained environment where normal operations","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331393,"byte_end":8331465,"line_start":496,"line_end":496,"column_start":5,"column_end":77}},{"value":"/ like `malloc` or acquiring a mutex are not guaranteed to work (due to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331470,"byte_end":8331543,"line_start":497,"line_end":497,"column_start":5,"column_end":78}},{"value":"/ other threads perhaps still running when the `fork` was run).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331548,"byte_end":8331613,"line_start":498,"line_end":498,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331618,"byte_end":8331621,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This also means that all resources such as file descriptors and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331626,"byte_end":8331693,"line_start":500,"line_end":500,"column_start":5,"column_end":72}},{"value":"/ memory-mapped regions got duplicated. It is your responsibility to make","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331698,"byte_end":8331773,"line_start":501,"line_end":501,"column_start":5,"column_end":80}},{"value":"/ sure that the closure does not violate library invariants by making","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331778,"byte_end":8331849,"line_start":502,"line_end":502,"column_start":5,"column_end":76}},{"value":"/ invalid use of these duplicates.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331854,"byte_end":8331890,"line_start":503,"line_end":503,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331895,"byte_end":8331898,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ When this closure is run, aspects such as the stdio file descriptors and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331903,"byte_end":8331979,"line_start":505,"line_end":505,"column_start":5,"column_end":81}},{"value":"/ working directory have successfully been changed, so output to these","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8331984,"byte_end":8332056,"line_start":506,"line_end":506,"column_start":5,"column_end":77}},{"value":"/ locations may not appear where intended.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332061,"byte_end":8332105,"line_start":507,"line_end":507,"column_start":5,"column_end":49}},{"value":"cfg(unix)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332110,"byte_end":8332122,"line_start":508,"line_end":508,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3696},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333788,"byte_end":8333793,"line_start":555,"line_end":555,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Command>::spawn","value":"fn (&mut self) -> io::Result<Child>","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, returning a handle to it.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, returning a handle to it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332318,"byte_end":8332388,"line_start":517,"line_end":517,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332393,"byte_end":8332396,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332401,"byte_end":8332472,"line_start":519,"line_end":519,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332477,"byte_end":8332480,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ This method will spawn the child process synchronously and return a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332485,"byte_end":8332556,"line_start":521,"line_end":521,"column_start":5,"column_end":76}},{"value":"/ handle to a future-aware child process. The `Child` returned implements","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332561,"byte_end":8332636,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ `Future` itself to acquire the `ExitStatus` of the child, and otherwise","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332641,"byte_end":8332716,"line_start":523,"line_end":523,"column_start":5,"column_end":80}},{"value":"/ the `Child` has methods to acquire handles to the stdin, stdout, and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332721,"byte_end":8332793,"line_start":524,"line_end":524,"column_start":5,"column_end":77}},{"value":"/ stderr streams.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332798,"byte_end":8332817,"line_start":525,"line_end":525,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332822,"byte_end":8332825,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332830,"byte_end":8332901,"line_start":527,"line_end":527,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332906,"byte_end":8332921,"line_start":528,"line_end":528,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332926,"byte_end":8332929,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332934,"byte_end":8332947,"line_start":530,"line_end":530,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332952,"byte_end":8332955,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8332960,"byte_end":8333035,"line_start":532,"line_end":532,"column_start":5,"column_end":80}},{"value":"/ paradigm of dropping-implies-cancellation, the spawned process will, by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333040,"byte_end":8333115,"line_start":533,"line_end":533,"column_start":5,"column_end":80}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333120,"byte_end":8333200,"line_start":534,"line_end":534,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333205,"byte_end":8333208,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333213,"byte_end":8333287,"line_start":536,"line_end":536,"column_start":5,"column_end":79}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333292,"byte_end":8333366,"line_start":537,"line_end":537,"column_start":5,"column_end":79}},{"value":"/ has exited.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333371,"byte_end":8333386,"line_start":538,"line_end":538,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333391,"byte_end":8333394,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333399,"byte_end":8333413,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333418,"byte_end":8333421,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333426,"byte_end":8333442,"line_start":542,"line_end":542,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333447,"byte_end":8333450,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333455,"byte_end":8333468,"line_start":544,"line_end":544,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333473,"byte_end":8333505,"line_start":545,"line_end":545,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333510,"byte_end":8333513,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333518,"byte_end":8333569,"line_start":547,"line_end":547,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333574,"byte_end":8333600,"line_start":548,"line_end":548,"column_start":5,"column_end":31}},{"value":"/         .spawn()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333605,"byte_end":8333625,"line_start":549,"line_end":549,"column_start":5,"column_end":25}},{"value":"/         .expect(\"ls command failed to start\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333630,"byte_end":8333679,"line_start":550,"line_end":550,"column_start":5,"column_end":54}},{"value":"/         .await","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333684,"byte_end":8333702,"line_start":551,"line_end":551,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333707,"byte_end":8333754,"line_start":552,"line_end":552,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333759,"byte_end":8333764,"line_start":553,"line_end":553,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8333769,"byte_end":8333776,"line_start":554,"line_end":554,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3701},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335348,"byte_end":8335354,"line_start":598,"line_end":598,"column_start":12,"column_end":18},"name":"status","qualname":"<Command>::status","value":"fn (&mut self) -> impl Future<Output = io::Result<ExitStatus>>","parent":null,"children":[],"decl_id":null,"docs":" Executes a command as a child process, waiting for it to finish and\n collecting its exit status.","sig":null,"attributes":[{"value":"/ Executes a command as a child process, waiting for it to finish and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8334289,"byte_end":8334360,"line_start":567,"line_end":567,"column_start":5,"column_end":76}},{"value":"/ collecting its exit status.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8334365,"byte_end":8334396,"line_start":568,"line_end":568,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8334401,"byte_end":8334404,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8334409,"byte_end":8334480,"line_start":570,"line_end":570,"column_start":5,"column_end":76}},{"value":"/ If any input/output handles are set to a pipe then they will be immediately","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8334485,"byte_end":8334564,"line_start":571,"line_end":571,"column_start":5,"column_end":84}},{"value":"/ closed after the child is spawned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8334569,"byte_end":8334607,"line_start":572,"line_end":572,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8334612,"byte_end":8334615,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8334620,"byte_end":8334691,"line_start":574,"line_end":574,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8334696,"byte_end":8334711,"line_start":575,"line_end":575,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8334716,"byte_end":8334719,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped before the future resolves, then","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8334724,"byte_end":8334786,"line_start":577,"line_end":577,"column_start":5,"column_end":67}},{"value":"/ the child will be killed, if it was spawned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8334791,"byte_end":8334839,"line_start":578,"line_end":578,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8334844,"byte_end":8334847,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8334852,"byte_end":8334864,"line_start":580,"line_end":580,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8334869,"byte_end":8334872,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ This future will return an error if the child process cannot be spawned","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8334877,"byte_end":8334952,"line_start":582,"line_end":582,"column_start":5,"column_end":80}},{"value":"/ or if there is an error while awaiting its status.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8334957,"byte_end":8335011,"line_start":583,"line_end":583,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335016,"byte_end":8335019,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335024,"byte_end":8335038,"line_start":585,"line_end":585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335043,"byte_end":8335046,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335051,"byte_end":8335067,"line_start":587,"line_end":587,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335072,"byte_end":8335075,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335080,"byte_end":8335093,"line_start":589,"line_end":589,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335098,"byte_end":8335130,"line_start":590,"line_end":590,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335135,"byte_end":8335138,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335143,"byte_end":8335194,"line_start":592,"line_end":592,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335199,"byte_end":8335225,"line_start":593,"line_end":593,"column_start":5,"column_end":31}},{"value":"/         .status()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335230,"byte_end":8335251,"line_start":594,"line_end":594,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335256,"byte_end":8335274,"line_start":595,"line_end":595,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335279,"byte_end":8335326,"line_start":596,"line_end":596,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335331,"byte_end":8335336,"line_start":597,"line_end":597,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":3704},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8337243,"byte_end":8337249,"line_start":650,"line_end":650,"column_start":12,"column_end":18},"name":"output","qualname":"<Command>::output","value":"fn (&mut self) -> impl Future<Output = io::Result<Output>>","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting all of its output.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335829,"byte_end":8335902,"line_start":615,"line_end":615,"column_start":5,"column_end":78}},{"value":"/ collecting all of its output.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335907,"byte_end":8335940,"line_start":616,"line_end":616,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335945,"byte_end":8335948,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ > **Note**: this method, unlike the standard library, will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8335953,"byte_end":8336015,"line_start":618,"line_end":618,"column_start":5,"column_end":67}},{"value":"/ > unconditionally configure the stdout/stderr handles to be pipes, even","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336020,"byte_end":8336095,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/ > if they have been previously configured. If this is not desired then","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336100,"byte_end":8336174,"line_start":620,"line_end":620,"column_start":5,"column_end":79}},{"value":"/ > the `spawn` method should be used in combination with the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336179,"byte_end":8336242,"line_start":621,"line_end":621,"column_start":5,"column_end":68}},{"value":"/ > `wait_with_output` method on child.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336247,"byte_end":8336288,"line_start":622,"line_end":622,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336293,"byte_end":8336296,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ This method will return a future representing the collection of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336301,"byte_end":8336372,"line_start":624,"line_end":624,"column_start":5,"column_end":76}},{"value":"/ child process's stdout/stderr. It will resolve to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336377,"byte_end":8336430,"line_start":625,"line_end":625,"column_start":5,"column_end":58}},{"value":"/ the `Output` type in the standard library, containing `stdout` and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336435,"byte_end":8336505,"line_start":626,"line_end":626,"column_start":5,"column_end":75}},{"value":"/ `stderr` as `Vec<u8>` along with an `ExitStatus` representing how the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336510,"byte_end":8336583,"line_start":627,"line_end":627,"column_start":5,"column_end":78}},{"value":"/ process exited.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336588,"byte_end":8336607,"line_start":628,"line_end":628,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336612,"byte_end":8336615,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336620,"byte_end":8336691,"line_start":630,"line_end":630,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336696,"byte_end":8336711,"line_start":631,"line_end":631,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336716,"byte_end":8336719,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped before the future resolves, then","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336724,"byte_end":8336786,"line_start":633,"line_end":633,"column_start":5,"column_end":67}},{"value":"/ the child will be killed, if it was spawned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336791,"byte_end":8336839,"line_start":634,"line_end":634,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336844,"byte_end":8336847,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336852,"byte_end":8336866,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336871,"byte_end":8336874,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336879,"byte_end":8336895,"line_start":638,"line_end":638,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336900,"byte_end":8336903,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336908,"byte_end":8336921,"line_start":640,"line_end":640,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336926,"byte_end":8336958,"line_start":641,"line_end":641,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336963,"byte_end":8336966,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336971,"byte_end":8336994,"line_start":643,"line_end":643,"column_start":5,"column_end":28}},{"value":"/     let output: std::process::Output = Command::new(\"ls\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8336999,"byte_end":8337060,"line_start":644,"line_end":644,"column_start":5,"column_end":66}},{"value":"/         .output()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8337065,"byte_end":8337086,"line_start":645,"line_end":645,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8337091,"byte_end":8337109,"line_start":646,"line_end":646,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8337114,"byte_end":8337162,"line_start":647,"line_end":647,"column_start":5,"column_end":53}},{"value":"/     println!(\"stderr of ls: {:?}\", output.stderr);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8337167,"byte_end":8337221,"line_start":648,"line_end":648,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8337226,"byte_end":8337231,"line_start":649,"line_end":649,"column_start":5,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":3807},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8339429,"byte_end":8339434,"line_start":730,"line_end":730,"column_start":12,"column_end":17},"name":"Child","qualname":"::process::Child","value":"Child {  }","parent":null,"children":[{"krate":0,"index":3808},{"krate":0,"index":3809},{"krate":0,"index":3810},{"krate":0,"index":3811}],"decl_id":null,"docs":" Representation of a child process spawned onto an event loop.","sig":null,"attributes":[{"value":"/ Representation of a child process spawned onto an event loop.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8338651,"byte_end":8338716,"line_start":714,"line_end":714,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8338717,"byte_end":8338720,"line_start":715,"line_end":715,"column_start":1,"column_end":4}},{"value":"/ This type is also a future which will yield the `ExitStatus` of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8338721,"byte_end":8338792,"line_start":716,"line_end":716,"column_start":1,"column_end":72}},{"value":"/ underlying child process. A `Child` here also provides access to information","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8338793,"byte_end":8338873,"line_start":717,"line_end":717,"column_start":1,"column_end":81}},{"value":"/ like the OS-assigned identifier and the stdio streams.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8338874,"byte_end":8338932,"line_start":718,"line_end":718,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8338933,"byte_end":8338936,"line_start":719,"line_end":719,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8338937,"byte_end":8338950,"line_start":720,"line_end":720,"column_start":1,"column_end":14}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8338951,"byte_end":8339026,"line_start":721,"line_end":721,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8339027,"byte_end":8339100,"line_start":722,"line_end":722,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8339101,"byte_end":8339181,"line_start":723,"line_end":723,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8339182,"byte_end":8339185,"line_start":724,"line_end":724,"column_start":1,"column_end":4}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8339186,"byte_end":8339260,"line_start":725,"line_end":725,"column_start":1,"column_end":75}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8339261,"byte_end":8339335,"line_start":726,"line_end":726,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8339336,"byte_end":8339351,"line_start":727,"line_end":727,"column_start":1,"column_end":16}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8339352,"byte_end":8339400,"line_start":728,"line_end":728,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3722},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8339679,"byte_end":8339681,"line_start":739,"line_end":739,"column_start":12,"column_end":14},"name":"id","qualname":"<Child>::id","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the OS-assigned process identifier associated with this child.\n","sig":null,"attributes":[{"value":"/ Returns the OS-assigned process identifier associated with this child.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8339593,"byte_end":8339667,"line_start":738,"line_end":738,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3723},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8339855,"byte_end":8339859,"line_start":746,"line_end":746,"column_start":12,"column_end":16},"name":"kill","qualname":"<Child>::kill","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Forces the child to exit.","sig":null,"attributes":[{"value":"/ Forces the child to exit.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8339739,"byte_end":8339768,"line_start":743,"line_end":743,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8339773,"byte_end":8339776,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to sending a SIGKILL on unix platforms.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8339781,"byte_end":8339843,"line_start":745,"line_end":745,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3724},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8340027,"byte_end":8340032,"line_start":752,"line_end":752,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Child>::stdin","value":"fn (&mut self) -> &mut Option<ChildStdin>","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle for writing to the child's stdin, if it has been\n captured.\n","sig":null,"attributes":[{"value":"/ Returns a handle for writing to the child's stdin, if it has been","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8339928,"byte_end":8339997,"line_start":750,"line_end":750,"column_start":5,"column_end":74}},{"value":"/ captured.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8340002,"byte_end":8340015,"line_start":751,"line_end":751,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3725},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8340210,"byte_end":8340216,"line_start":758,"line_end":758,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Child>::stdout","value":"fn (&mut self) -> &mut Option<ChildStdout>","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle for reading from the child's stdout, if it has been\n captured.\n","sig":null,"attributes":[{"value":"/ Returns a handle for reading from the child's stdout, if it has been","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8340108,"byte_end":8340180,"line_start":756,"line_end":756,"column_start":5,"column_end":77}},{"value":"/ captured.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8340185,"byte_end":8340198,"line_start":757,"line_end":757,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3726},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8340396,"byte_end":8340402,"line_start":764,"line_end":764,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Child>::stderr","value":"fn (&mut self) -> &mut Option<ChildStderr>","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle for reading from the child's stderr, if it has been\n captured.\n","sig":null,"attributes":[{"value":"/ Returns a handle for reading from the child's stderr, if it has been","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8340294,"byte_end":8340366,"line_start":762,"line_end":762,"column_start":5,"column_end":77}},{"value":"/ captured.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8340371,"byte_end":8340384,"line_start":763,"line_end":763,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3727},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8341410,"byte_end":8341426,"line_start":784,"line_end":784,"column_start":18,"column_end":34},"name":"wait_with_output","qualname":"<Child>::wait_with_output","value":"fn (mut self) -> io::Result<Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that will resolve to an `Output`, containing the exit\n status, stdout, and stderr of the child process.","sig":null,"attributes":[{"value":"/ Returns a future that will resolve to an `Output`, containing the exit","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8340480,"byte_end":8340554,"line_start":768,"line_end":768,"column_start":5,"column_end":79}},{"value":"/ status, stdout, and stderr of the child process.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8340559,"byte_end":8340611,"line_start":769,"line_end":769,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8340616,"byte_end":8340619,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ The returned future will simultaneously waits for the child to exit and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8340624,"byte_end":8340699,"line_start":771,"line_end":771,"column_start":5,"column_end":80}},{"value":"/ collect all remaining output on the stdout/stderr handles, returning an","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8340704,"byte_end":8340779,"line_start":772,"line_end":772,"column_start":5,"column_end":80}},{"value":"/ `Output` instance.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8340784,"byte_end":8340806,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8340811,"byte_end":8340814,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ The stdin handle to the child process, if any, will be closed before","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8340819,"byte_end":8340891,"line_start":775,"line_end":775,"column_start":5,"column_end":77}},{"value":"/ waiting. This helps avoid deadlock: it ensures that the child does not","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8340896,"byte_end":8340970,"line_start":776,"line_end":776,"column_start":5,"column_end":79}},{"value":"/ block waiting for input from the parent, while the parent waits for the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8340975,"byte_end":8341050,"line_start":777,"line_end":777,"column_start":5,"column_end":80}},{"value":"/ child to exit.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8341055,"byte_end":8341073,"line_start":778,"line_end":778,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8341078,"byte_end":8341081,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent. In","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8341086,"byte_end":8341160,"line_start":780,"line_end":780,"column_start":5,"column_end":79}},{"value":"/ order to capture the output into this `Output` it is necessary to create","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8341165,"byte_end":8341241,"line_start":781,"line_end":781,"column_start":5,"column_end":81}},{"value":"/ new pipes between parent and child. Use `stdout(Stdio::piped())` or","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8341246,"byte_end":8341317,"line_start":782,"line_end":782,"column_start":5,"column_end":76}},{"value":"/ `stderr(Stdio::piped())`, respectively, when creating a `Command`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8341322,"byte_end":8341392,"line_start":783,"line_end":783,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":3814},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8342542,"byte_end":8342552,"line_start":822,"line_end":822,"column_start":12,"column_end":22},"name":"ChildStdin","qualname":"::process::ChildStdin","value":"ChildStdin {  }","parent":null,"children":[{"krate":0,"index":3815}],"decl_id":null,"docs":" The standard input stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard input stream for spawned children.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8342328,"byte_end":8342379,"line_start":817,"line_end":817,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8342380,"byte_end":8342383,"line_start":818,"line_end":818,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncWrite` trait to pass data to the stdin handle of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8342384,"byte_end":8342467,"line_start":819,"line_end":819,"column_start":1,"column_end":84}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8342468,"byte_end":8342513,"line_start":820,"line_end":820,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3818},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8342793,"byte_end":8342804,"line_start":831,"line_end":831,"column_start":12,"column_end":23},"name":"ChildStdout","qualname":"::process::ChildStdout","value":"ChildStdout {  }","parent":null,"children":[{"krate":0,"index":3819}],"decl_id":null,"docs":" The standard output stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard output stream for spawned children.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8342586,"byte_end":8342638,"line_start":826,"line_end":826,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8342639,"byte_end":8342642,"line_start":827,"line_end":827,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stdout","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8342643,"byte_end":8342718,"line_start":828,"line_end":828,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8342719,"byte_end":8342764,"line_start":829,"line_end":829,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3822},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8343045,"byte_end":8343056,"line_start":840,"line_end":840,"column_start":12,"column_end":23},"name":"ChildStderr","qualname":"::process::ChildStderr","value":"ChildStderr {  }","parent":null,"children":[{"krate":0,"index":3823}],"decl_id":null,"docs":" The standard error stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard error stream for spawned children.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8342839,"byte_end":8342890,"line_start":835,"line_end":835,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8342891,"byte_end":8342894,"line_start":836,"line_end":836,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stderr","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8342895,"byte_end":8342970,"line_start":837,"line_end":837,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8342971,"byte_end":8343016,"line_start":838,"line_end":838,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":480},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":3826},{"krate":0,"index":3904},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":4077},{"krate":0,"index":483},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":554},{"krate":0,"index":4120},{"krate":0,"index":4142},{"krate":0,"index":555},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":4178},{"krate":0,"index":4228},{"krate":0,"index":582},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":4256},{"krate":0,"index":4693},{"krate":0,"index":4741},{"krate":0,"index":631},{"krate":0,"index":4742},{"krate":0,"index":4746},{"krate":0,"index":4748},{"krate":0,"index":4758},{"krate":0,"index":632},{"krate":0,"index":633}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"! The Tokio runtime.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87071,"byte_end":87093,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87094,"byte_end":87097,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Unlike other Rust programs, asynchronous applications require","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87098,"byte_end":87163,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"! runtime support. In particular, the following runtime services are","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87164,"byte_end":87234,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"! necessary:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87235,"byte_end":87249,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87250,"byte_end":87253,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! * An **I/O event loop**, called the [driver], which drives I/O resources and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87254,"byte_end":87334,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"!   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87335,"byte_end":87392,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"! * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87393,"byte_end":87463,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"! * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87464,"byte_end":87536,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87537,"byte_end":87540,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87541,"byte_end":87621,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"! them to be started, shut down, and configured together. However, most","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87622,"byte_end":87695,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"! applications won't need to use [`Runtime`] directly. Instead, they can","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87696,"byte_end":87770,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"! use the [`tokio::main`] attribute macro, which creates a [`Runtime`] under","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87771,"byte_end":87849,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! the hood.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87850,"byte_end":87863,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87864,"byte_end":87867,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87868,"byte_end":87879,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87880,"byte_end":87883,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! Most applications will use the [`tokio::main`] attribute macro.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87884,"byte_end":87951,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87952,"byte_end":87955,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87956,"byte_end":87969,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":87970,"byte_end":88002,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88003,"byte_end":88029,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88030,"byte_end":88033,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88034,"byte_end":88052,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88053,"byte_end":88116,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"!     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88117,"byte_end":88187,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88188,"byte_end":88191,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88192,"byte_end":88206,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"!         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88207,"byte_end":88266,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88267,"byte_end":88270,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88271,"byte_end":88308,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"!             let mut buf = [0; 1024];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88309,"byte_end":88349,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88350,"byte_end":88353,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"!             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88354,"byte_end":88434,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"!             loop {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88435,"byte_end":88457,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"!                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88458,"byte_end":88521,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"!                     // socket closed","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88522,"byte_end":88562,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"!                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88563,"byte_end":88613,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"!                     Ok(n) => n,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88614,"byte_end":88649,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"!                     Err(e) => {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88650,"byte_end":88685,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"!                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88686,"byte_end":88768,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"!                         return;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88769,"byte_end":88804,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88805,"byte_end":88830,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"!                 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88831,"byte_end":88853,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88854,"byte_end":88857,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"!                 // Write the data back","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88858,"byte_end":88900,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"!                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88901,"byte_end":88973,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"!                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":88974,"byte_end":89051,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"!                     return;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89052,"byte_end":89083,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"!                 }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89084,"byte_end":89105,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89106,"byte_end":89123,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89124,"byte_end":89139,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89140,"byte_end":89149,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89150,"byte_end":89155,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89156,"byte_end":89163,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89164,"byte_end":89167,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89168,"byte_end":89246,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"! the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89247,"byte_end":89325,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"! executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89326,"byte_end":89387,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89388,"byte_end":89391,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! A [`Runtime`] instance can also be used directly.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89392,"byte_end":89445,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89446,"byte_end":89449,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89450,"byte_end":89463,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89464,"byte_end":89496,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89497,"byte_end":89523,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"! use tokio::runtime::Runtime;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89524,"byte_end":89556,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89557,"byte_end":89560,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89561,"byte_end":89618,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"!     // Create the runtime","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89619,"byte_end":89648,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"!     let mut rt = Runtime::new()?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89649,"byte_end":89686,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89687,"byte_end":89690,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"!     // Spawn the root task","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89691,"byte_end":89721,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"!     rt.block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89722,"byte_end":89749,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"!         let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89750,"byte_end":89824,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89825,"byte_end":89828,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"!         loop {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89829,"byte_end":89847,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"!             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89848,"byte_end":89911,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89912,"byte_end":89915,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"!             tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89916,"byte_end":89957,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"!                 let mut buf = [0; 1024];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":89958,"byte_end":90002,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90003,"byte_end":90006,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"!                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90007,"byte_end":90091,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"!                 loop {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90092,"byte_end":90118,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"!                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90119,"byte_end":90186,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"!                         // socket closed","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90187,"byte_end":90231,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"!                         Ok(n) if n == 0 => return,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90232,"byte_end":90286,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"!                         Ok(n) => n,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90287,"byte_end":90326,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"!                         Err(e) => {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90327,"byte_end":90366,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"!                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90367,"byte_end":90453,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"!                             return;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90454,"byte_end":90493,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"!                         }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90494,"byte_end":90523,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"!                     };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90524,"byte_end":90550,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90551,"byte_end":90554,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"!                     // Write the data back","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90555,"byte_end":90601,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"!                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90602,"byte_end":90678,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"!                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90679,"byte_end":90760,"line_start":98,"line_end":98,"column_start":1,"column_end":82}},{"value":"!                         return;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90761,"byte_end":90796,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90797,"byte_end":90822,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"!                 }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90823,"byte_end":90844,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"!             });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90845,"byte_end":90864,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"!         }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90865,"byte_end":90878,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"!     })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90879,"byte_end":90889,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"! }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90890,"byte_end":90895,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90896,"byte_end":90903,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90904,"byte_end":90907,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! ## Runtime Configurations","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90908,"byte_end":90937,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90938,"byte_end":90941,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! Tokio provides multiple task scheding strategies, suitable for different","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":90942,"byte_end":91018,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"! applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91019,"byte_end":91095,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"! used to select which scheduler to use.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91096,"byte_end":91138,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91139,"byte_end":91142,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! #### Basic Scheduler","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91143,"byte_end":91167,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91168,"byte_end":91171,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! The basic scheduler provides a _single-threaded_ future executor. All tasks","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91172,"byte_end":91251,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"! will be created and executed on the current thread. The basic scheduler","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91252,"byte_end":91327,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"! requires the `rt-core` feature flag, and can be selected using the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91328,"byte_end":91398,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"! [`Builder::basic_scheduler`] method:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91399,"byte_end":91439,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91440,"byte_end":91447,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"! use tokio::runtime;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91448,"byte_end":91471,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91472,"byte_end":91475,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91476,"byte_end":91535,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"! let basic_rt = runtime::Builder::new()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91536,"byte_end":91578,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"!     .basic_scheduler()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91579,"byte_end":91605,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"!     .build()?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91606,"byte_end":91624,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"! # Ok(()) }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91625,"byte_end":91639,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91640,"byte_end":91647,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91648,"byte_end":91651,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"! If the `rt-core` feature is enabled and `rt-threaded` is not,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91652,"byte_end":91717,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"! [`Runtime::new`] will return a basic scheduler runtime by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91718,"byte_end":91788,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91789,"byte_end":91792,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! #### Threaded Scheduler","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91793,"byte_end":91820,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91821,"byte_end":91824,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! The threaded scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91825,"byte_end":91896,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"! work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91897,"byte_end":91975,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"! CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":91976,"byte_end":92055,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"! for most applications. The threaded scheduler requires the `rt-threaded` feature","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92056,"byte_end":92140,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"! flag, and can be selected using the  [`Builder::threaded_scheduler`] method:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92141,"byte_end":92221,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92222,"byte_end":92229,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"! use tokio::runtime;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92230,"byte_end":92253,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92254,"byte_end":92257,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92258,"byte_end":92317,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"! let threaded_rt = runtime::Builder::new()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92318,"byte_end":92363,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"!     .threaded_scheduler()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92364,"byte_end":92393,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"!     .build()?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92394,"byte_end":92412,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"! # Ok(()) }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92413,"byte_end":92427,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92428,"byte_end":92435,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92436,"byte_end":92439,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! If the `rt-threaded` feature flag is enabled, [`Runtime::new`] will return a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92440,"byte_end":92520,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"! basic scheduler runtime by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92521,"byte_end":92560,"line_start":151,"line_end":151,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92561,"byte_end":92564,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! Most applications should use the threaded scheduler, except in some niche","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92565,"byte_end":92642,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"! use-cases, such as when running only a single thread is required.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92643,"byte_end":92712,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92713,"byte_end":92716,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"! #### Resource drivers","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92717,"byte_end":92742,"line_start":156,"line_end":156,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92743,"byte_end":92746,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"! When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92747,"byte_end":92821,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"! default. In this case, attempting to use networking types or time types will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92822,"byte_end":92902,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"! fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92903,"byte_end":92982,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"! This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":92983,"byte_end":93062,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"! shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93063,"byte_end":93132,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93133,"byte_end":93136,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"! ## Lifetime of spawned threads","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93137,"byte_end":93171,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93172,"byte_end":93175,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"! The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93176,"byte_end":93255,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"! threaded scheduler spawns threads to schedule tasks and calls to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93256,"byte_end":93324,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"! `spawn_blocking` spawn threads to run blocking operations.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93325,"byte_end":93387,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93388,"byte_end":93391,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93392,"byte_end":93470,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"! idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93471,"byte_end":93550,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"! Any tasks that have not yet completed will be dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93551,"byte_end":93609,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93610,"byte_end":93613,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"! [tasks]: crate::task","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93614,"byte_end":93638,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"! [driver]: crate::io::driver","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93639,"byte_end":93670,"line_start":175,"line_end":175,"column_start":1,"column_end":32}},{"value":"! [executor]: https://tokio.rs/docs/internals/runtime-model/#executors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93671,"byte_end":93743,"line_start":176,"line_end":176,"column_start":1,"column_end":73}},{"value":"! [`Runtime`]: struct.Runtime.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93744,"byte_end":93780,"line_start":177,"line_end":177,"column_start":1,"column_end":37}},{"value":"! [`Reactor`]: ../reactor/struct.Reactor.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93781,"byte_end":93828,"line_start":178,"line_end":178,"column_start":1,"column_end":48}},{"value":"! [`run`]: fn.run.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93829,"byte_end":93853,"line_start":179,"line_end":179,"column_start":1,"column_end":25}},{"value":"! [`tokio::spawn`]: ../executor/fn.spawn.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93854,"byte_end":93901,"line_start":180,"line_end":180,"column_start":1,"column_end":48}},{"value":"! [`tokio::main`]: ../../tokio_macros/attr.main.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93902,"byte_end":93956,"line_start":181,"line_end":181,"column_start":1,"column_end":55}},{"value":"! [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":93957,"byte_end":94003,"line_start":182,"line_end":182,"column_start":1,"column_end":47}},{"value":"! [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":94004,"byte_end":94054,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"! [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":94055,"byte_end":94129,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"! [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":94130,"byte_end":94210,"line_start":185,"line_end":185,"column_start":1,"column_end":81}},{"value":"! [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":94211,"byte_end":94273,"line_start":186,"line_end":186,"column_start":1,"column_end":63}},{"value":"! [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":94274,"byte_end":94340,"line_start":187,"line_end":187,"column_start":1,"column_end":67}},{"value":"! [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":94341,"byte_end":94405,"line_start":188,"line_end":188,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":495},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104449,"byte_end":104456,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":103631,"byte_end":103689,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":103690,"byte_end":103693,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":103694,"byte_end":103766,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":103767,"byte_end":103815,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":103816,"byte_end":103819,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":103820,"byte_end":103885,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":103886,"byte_end":103889,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":103890,"byte_end":103967,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":103968,"byte_end":103981,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":103982,"byte_end":103985,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: #method.build","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":103986,"byte_end":104014,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`Builder::new`]: #method.new","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104015,"byte_end":104048,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104049,"byte_end":104052,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104053,"byte_end":104067,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104068,"byte_end":104071,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104072,"byte_end":104079,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104080,"byte_end":104112,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104113,"byte_end":104116,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104117,"byte_end":104132,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104133,"byte_end":104157,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104158,"byte_end":104194,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/         .threaded_scheduler()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104195,"byte_end":104228,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/         .core_threads(4)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104229,"byte_end":104257,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104258,"byte_end":104300,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104301,"byte_end":104348,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104349,"byte_end":104369,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104370,"byte_end":104392,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104393,"byte_end":104396,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104397,"byte_end":104423,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104424,"byte_end":104429,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":104430,"byte_end":104437,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":105603,"byte_end":105606,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":105429,"byte_end":105501,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":105506,"byte_end":105517,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":105522,"byte_end":105525,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":105530,"byte_end":105591,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":106807,"byte_end":106817,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enable both I/O and time drivers.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":106328,"byte_end":106365,"line_start":113,"line_end":113,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":106370,"byte_end":106373,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":106378,"byte_end":106449,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":106454,"byte_end":106530,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":106535,"byte_end":106589,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":106594,"byte_end":106597,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":106602,"byte_end":106616,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":106621,"byte_end":106624,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":106629,"byte_end":106636,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":106641,"byte_end":106664,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":106669,"byte_end":106672,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":106677,"byte_end":106713,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     .enable_all()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":106718,"byte_end":106739,"line_start":125,"line_end":125,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":106744,"byte_end":106760,"line_start":126,"line_end":126,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":106765,"byte_end":106783,"line_start":127,"line_end":127,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":106788,"byte_end":106795,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107371,"byte_end":107382,"line_start":145,"line_end":145,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Builder>::num_threads","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"deprecated(note = \"In future will be replaced by core_threads method\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":106994,"byte_end":107067,"line_start":138,"line_end":138,"column_start":5,"column_end":78}},{"value":"/ Set the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107072,"byte_end":107149,"line_start":139,"line_end":139,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107154,"byte_end":107157,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107162,"byte_end":107237,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107242,"byte_end":107277,"line_start":142,"line_end":142,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107282,"byte_end":107285,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107290,"byte_end":107359,"line_start":144,"line_end":144,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":108050,"byte_end":108062,"line_start":169,"line_end":169,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the core number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Set the core number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107478,"byte_end":107552,"line_start":150,"line_end":150,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107557,"byte_end":107560,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107565,"byte_end":107642,"line_start":152,"line_end":152,"column_start":5,"column_end":82}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107647,"byte_end":107682,"line_start":153,"line_end":153,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107687,"byte_end":107690,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107695,"byte_end":107764,"line_start":155,"line_end":155,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107769,"byte_end":107772,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ These threads will be always active and running.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107777,"byte_end":107829,"line_start":157,"line_end":157,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107834,"byte_end":107837,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107842,"byte_end":107856,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107861,"byte_end":107864,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107869,"byte_end":107876,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107881,"byte_end":107904,"line_start":162,"line_end":162,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107909,"byte_end":107912,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107917,"byte_end":107953,"line_start":164,"line_end":164,"column_start":5,"column_end":41}},{"value":"/     .core_threads(4)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107958,"byte_end":107982,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":107987,"byte_end":108003,"line_start":166,"line_end":166,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":108008,"byte_end":108026,"line_start":167,"line_end":167,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":108031,"byte_end":108038,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":108935,"byte_end":108946,"line_start":189,"line_end":189,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Builder>::max_threads","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads, spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies limit for threads, spawned by the Runtime.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":108217,"byte_end":108273,"line_start":175,"line_end":175,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":108278,"byte_end":108281,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This is number of threads to be used by Runtime, including `core_threads`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":108286,"byte_end":108363,"line_start":177,"line_end":177,"column_start":5,"column_end":82}},{"value":"/ Having `max_threads` less than `core_threads` results in invalid configuration","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":108368,"byte_end":108450,"line_start":178,"line_end":178,"column_start":5,"column_end":87}},{"value":"/ when building multi-threaded `Runtime`, which would cause a panic.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":108455,"byte_end":108525,"line_start":179,"line_end":179,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":108530,"byte_end":108533,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `core_threads`, this number should be between 1 and 32,768.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":108538,"byte_end":108618,"line_start":181,"line_end":181,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":108623,"byte_end":108626,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":108631,"byte_end":108660,"line_start":183,"line_end":183,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":108665,"byte_end":108668,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ When multi-threaded runtime is not used, will act as limit on additional threads.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":108673,"byte_end":108758,"line_start":185,"line_end":185,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":108763,"byte_end":108766,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `core_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":108771,"byte_end":108860,"line_start":187,"line_end":187,"column_start":5,"column_end":94}},{"value":"/ blocking annotations) as `max_threads - core_threads`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":108865,"byte_end":108923,"line_start":188,"line_end":188,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109469,"byte_end":109480,"line_start":210,"line_end":210,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"fn (&mut self, val: impl Into<String>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Set name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109100,"byte_end":109163,"line_start":195,"line_end":195,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109168,"byte_end":109171,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109176,"byte_end":109223,"line_start":197,"line_end":197,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109228,"byte_end":109231,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109236,"byte_end":109250,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109255,"byte_end":109258,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109263,"byte_end":109270,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109275,"byte_end":109300,"line_start":202,"line_end":202,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109305,"byte_end":109308,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109313,"byte_end":109334,"line_start":204,"line_end":204,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109339,"byte_end":109375,"line_start":205,"line_end":205,"column_start":5,"column_end":41}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109380,"byte_end":109411,"line_start":206,"line_end":206,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109416,"byte_end":109433,"line_start":207,"line_end":207,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109438,"byte_end":109445,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109450,"byte_end":109457,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110169,"byte_end":110186,"line_start":234,"line_end":234,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Set the stack size (in bytes) for worker threads.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109594,"byte_end":109647,"line_start":215,"line_end":215,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109652,"byte_end":109655,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109660,"byte_end":109732,"line_start":217,"line_end":217,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109737,"byte_end":109770,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109775,"byte_end":109778,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109783,"byte_end":109851,"line_start":220,"line_end":220,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109856,"byte_end":109917,"line_start":221,"line_end":221,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109922,"byte_end":109925,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109930,"byte_end":109944,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109949,"byte_end":109952,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109957,"byte_end":109964,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109969,"byte_end":109994,"line_start":226,"line_end":226,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":109999,"byte_end":110002,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110007,"byte_end":110028,"line_start":228,"line_end":228,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110033,"byte_end":110069,"line_start":229,"line_end":229,"column_start":5,"column_end":41}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110074,"byte_end":110111,"line_start":230,"line_end":230,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110116,"byte_end":110133,"line_start":231,"line_end":231,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110138,"byte_end":110145,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110150,"byte_end":110157,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110792,"byte_end":110807,"line_start":258,"line_end":258,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"fn <F> (&mut self, f: F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Execute function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Execute function `f` after each thread is started but before it starts","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110293,"byte_end":110367,"line_start":239,"line_end":239,"column_start":5,"column_end":79}},{"value":"/ doing work.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110372,"byte_end":110387,"line_start":240,"line_end":240,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110392,"byte_end":110395,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110400,"byte_end":110462,"line_start":242,"line_end":242,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110467,"byte_end":110470,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110475,"byte_end":110489,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110494,"byte_end":110497,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110502,"byte_end":110509,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110514,"byte_end":110539,"line_start":247,"line_end":247,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110544,"byte_end":110547,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110552,"byte_end":110573,"line_start":249,"line_end":249,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110578,"byte_end":110619,"line_start":250,"line_end":250,"column_start":5,"column_end":46}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110624,"byte_end":110653,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110658,"byte_end":110697,"line_start":252,"line_end":252,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110702,"byte_end":110712,"line_start":253,"line_end":253,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110717,"byte_end":110734,"line_start":254,"line_end":254,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110739,"byte_end":110746,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110751,"byte_end":110758,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"cfg(not (loom))","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110763,"byte_end":110780,"line_start":257,"line_end":257,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111423,"byte_end":111437,"line_start":284,"line_end":284,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"fn <F> (&mut self, f: F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Execute function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Execute function `f` before each thread stops.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":110968,"byte_end":111018,"line_start":266,"line_end":266,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111023,"byte_end":111026,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111031,"byte_end":111093,"line_start":268,"line_end":268,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111098,"byte_end":111101,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111106,"byte_end":111120,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111125,"byte_end":111128,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111133,"byte_end":111140,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111145,"byte_end":111170,"line_start":273,"line_end":273,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111175,"byte_end":111178,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111183,"byte_end":111204,"line_start":275,"line_end":275,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111209,"byte_end":111250,"line_start":276,"line_end":276,"column_start":5,"column_end":46}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111255,"byte_end":111283,"line_start":277,"line_end":277,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111288,"byte_end":111328,"line_start":278,"line_end":278,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111333,"byte_end":111343,"line_start":279,"line_end":279,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111348,"byte_end":111365,"line_start":280,"line_end":280,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111370,"byte_end":111377,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111382,"byte_end":111389,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"cfg(not (loom))","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111394,"byte_end":111411,"line_start":283,"line_end":283,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111982,"byte_end":111987,"line_start":307,"line_end":307,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn (&mut self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Create the configured `Runtime`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111598,"byte_end":111634,"line_start":292,"line_end":292,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111639,"byte_end":111642,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111647,"byte_end":111710,"line_start":294,"line_end":294,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111715,"byte_end":111718,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111723,"byte_end":111737,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111742,"byte_end":111745,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111750,"byte_end":111757,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111762,"byte_end":111794,"line_start":299,"line_end":299,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111799,"byte_end":111802,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Builder::new().build().unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111807,"byte_end":111856,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111861,"byte_end":111864,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111869,"byte_end":111892,"line_start":303,"line_end":303,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111897,"byte_end":111946,"line_start":304,"line_end":304,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111951,"byte_end":111958,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":111963,"byte_end":111970,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4091},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":113738,"byte_end":113747,"line_start":369,"line_end":369,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4093},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":114257,"byte_end":114268,"line_start":392,"line_end":392,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4095},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":114634,"byte_end":114649,"line_start":405,"line_end":405,"column_start":16,"column_end":31},"name":"basic_scheduler","qualname":"<Builder>::basic_scheduler","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Use a simpler scheduler that runs all tasks on the current-thread.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4101},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":116220,"byte_end":116238,"line_start":449,"line_end":449,"column_start":16,"column_end":34},"name":"threaded_scheduler","qualname":"<Builder>::threaded_scheduler","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Use a multi-threaded scheduler for executing tasks.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4165},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/handle.rs","byte_start":121790,"byte_end":121796,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":4166},{"krate":0,"index":4167},{"krate":0,"index":4168},{"krate":0,"index":4169},{"krate":0,"index":4170}],"decl_id":null,"docs":" Handle to the runtime\n","sig":null,"attributes":[{"value":"/ Handle to the runtime","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/handle.rs","byte_start":121729,"byte_end":121754,"line_start":9,"line_end":9,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/handle.rs","byte_start":122201,"byte_end":122206,"line_start":29,"line_end":29,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"fn <F, R> (&self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context\n","sig":null,"attributes":[{"value":"/ Enter the runtime context","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/handle.rs","byte_start":122160,"byte_end":122189,"line_start":28,"line_end":28,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":4176},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/handle.rs","byte_start":123571,"byte_end":123576,"line_start":74,"line_end":74,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Handle>::spawn","value":"fn <F> (&self, future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4742},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":96267,"byte_end":96274,"line_start":277,"line_end":277,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":4743},{"krate":0,"index":4744},{"krate":0,"index":4745}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95211,"byte_end":95233,"line_start":247,"line_end":247,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95234,"byte_end":95237,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ The runtime provides an I/O [driver], task scheduler, [timer], and blocking","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95238,"byte_end":95317,"line_start":249,"line_end":249,"column_start":1,"column_end":80}},{"value":"/ pool, necessary for running asynchronous tasks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95318,"byte_end":95369,"line_start":250,"line_end":250,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95370,"byte_end":95373,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95374,"byte_end":95454,"line_start":252,"line_end":252,"column_start":1,"column_end":81}},{"value":"/ most users will use the `#[tokio::main]` annotation on their entry point instead.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95455,"byte_end":95540,"line_start":253,"line_end":253,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95541,"byte_end":95544,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95545,"byte_end":95604,"line_start":255,"line_end":255,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95605,"byte_end":95608,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ # Shutdown","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95609,"byte_end":95623,"line_start":257,"line_end":257,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95624,"byte_end":95627,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ Shutting down the runtime is done by dropping the value. The current thread","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95628,"byte_end":95707,"line_start":259,"line_end":259,"column_start":1,"column_end":80}},{"value":"/ will block until the shut down operation has completed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95708,"byte_end":95767,"line_start":260,"line_end":260,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95768,"byte_end":95771,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95772,"byte_end":95810,"line_start":262,"line_end":262,"column_start":1,"column_end":39}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95811,"byte_end":95862,"line_start":263,"line_end":263,"column_start":1,"column_end":52}},{"value":"/ * Drop the reactor.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95863,"byte_end":95886,"line_start":264,"line_end":264,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95887,"byte_end":95890,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95891,"byte_end":95963,"line_start":266,"line_end":266,"column_start":1,"column_end":73}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":95964,"byte_end":96037,"line_start":267,"line_end":267,"column_start":1,"column_end":74}},{"value":"/ result in an error.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":96038,"byte_end":96061,"line_start":268,"line_end":268,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":96062,"byte_end":96065,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ [driver]: crate::io::driver","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":96066,"byte_end":96097,"line_start":270,"line_end":270,"column_start":1,"column_end":32}},{"value":"/ [timer]: crate::time","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":96098,"byte_end":96122,"line_start":271,"line_end":271,"column_start":1,"column_end":25}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":96123,"byte_end":96144,"line_start":272,"line_end":272,"column_start":1,"column_end":22}},{"value":"/ [`new`]: #method.new","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":96145,"byte_end":96169,"line_start":273,"line_end":273,"column_start":1,"column_end":25}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":96170,"byte_end":96206,"line_start":274,"line_end":274,"column_start":1,"column_end":37}},{"value":"/ [`tokio::run`]: fn.run.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":96207,"byte_end":96238,"line_start":275,"line_end":275,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98513,"byte_end":98516,"line_start":343,"line_end":343,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"fn () -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97090,"byte_end":97158,"line_start":308,"line_end":308,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97163,"byte_end":97166,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This results in a scheduler, I/O driver, and time driver being","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97171,"byte_end":97237,"line_start":310,"line_end":310,"column_start":5,"column_end":71}},{"value":"/ initialized. The type of scheduler used depends on what feature flags","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97242,"byte_end":97315,"line_start":311,"line_end":311,"column_start":5,"column_end":78}},{"value":"/ are enabled: if the `rt-threaded` feature is enabled, the [threaded","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97320,"byte_end":97391,"line_start":312,"line_end":312,"column_start":5,"column_end":76}},{"value":"/ scheduler] is used, while if only the `rt-core` feature is enabled, the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97396,"byte_end":97471,"line_start":313,"line_end":313,"column_start":5,"column_end":80}},{"value":"/ [basic scheduler] is used instead.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97476,"byte_end":97514,"line_start":314,"line_end":314,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97519,"byte_end":97522,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ If the threaded scheduler is selected, it will not spawn","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97527,"byte_end":97587,"line_start":316,"line_end":316,"column_start":5,"column_end":65}},{"value":"/ any worker threads until it needs to, i.e. tasks are scheduled to run.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97592,"byte_end":97666,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97671,"byte_end":97674,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Most applications will not need to call this function directly. Instead,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97679,"byte_end":97755,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ they will use the  [`#[tokio::main]` attribute][main]. When more complex","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97760,"byte_end":97836,"line_start":320,"line_end":320,"column_start":5,"column_end":81}},{"value":"/ configuration is necessary, the [runtime builder] may be used.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97841,"byte_end":97907,"line_start":321,"line_end":321,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97912,"byte_end":97915,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97920,"byte_end":97979,"line_start":323,"line_end":323,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97984,"byte_end":97987,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97992,"byte_end":98006,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98011,"byte_end":98014,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98019,"byte_end":98082,"line_start":327,"line_end":327,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98087,"byte_end":98090,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98095,"byte_end":98102,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98107,"byte_end":98139,"line_start":330,"line_end":330,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98144,"byte_end":98147,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98152,"byte_end":98179,"line_start":332,"line_end":332,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98184,"byte_end":98202,"line_start":333,"line_end":333,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98207,"byte_end":98210,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98215,"byte_end":98240,"line_start":335,"line_end":335,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98245,"byte_end":98252,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98257,"byte_end":98260,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98265,"byte_end":98286,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/ [main]: ../../tokio_macros/attr.main.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98291,"byte_end":98336,"line_start":339,"line_end":339,"column_start":5,"column_end":50}},{"value":"/ [threaded scheduler]: index.html#threaded-scheduler","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98341,"byte_end":98396,"line_start":340,"line_end":340,"column_start":5,"column_end":60}},{"value":"/ [basic scheduler]: index.html#basic-scheduler","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98401,"byte_end":98450,"line_start":341,"line_end":341,"column_start":5,"column_end":54}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98455,"byte_end":98501,"line_start":342,"line_end":342,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99843,"byte_end":99848,"line_start":387,"line_end":387,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"fn <F> (&self, future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98923,"byte_end":98965,"line_start":356,"line_end":356,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98970,"byte_end":98973,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":98978,"byte_end":99049,"line_start":358,"line_end":358,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99054,"byte_end":99129,"line_start":359,"line_end":359,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99134,"byte_end":99157,"line_start":360,"line_end":360,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99162,"byte_end":99165,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99170,"byte_end":99229,"line_start":362,"line_end":362,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99234,"byte_end":99237,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99242,"byte_end":99263,"line_start":364,"line_end":364,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99268,"byte_end":99271,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99276,"byte_end":99290,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99295,"byte_end":99298,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99303,"byte_end":99310,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99315,"byte_end":99347,"line_start":369,"line_end":369,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99352,"byte_end":99355,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99360,"byte_end":99376,"line_start":371,"line_end":371,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99381,"byte_end":99406,"line_start":372,"line_end":372,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99411,"byte_end":99448,"line_start":373,"line_end":373,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99453,"byte_end":99456,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99461,"byte_end":99499,"line_start":375,"line_end":375,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99504,"byte_end":99524,"line_start":376,"line_end":376,"column_start":5,"column_end":25}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99529,"byte_end":99580,"line_start":377,"line_end":377,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99585,"byte_end":99592,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99597,"byte_end":99604,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99609,"byte_end":99616,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99621,"byte_end":99624,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99629,"byte_end":99641,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99646,"byte_end":99649,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function panics if the spawn fails. Failure occurs if the executor","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99654,"byte_end":99729,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ is currently at capacity and is unable to spawn a new future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99734,"byte_end":99799,"line_start":385,"line_end":385,"column_start":5,"column_end":70}},{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":99804,"byte_end":99831,"line_start":386,"line_end":386,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":100852,"byte_end":100860,"line_start":413,"line_end":413,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"fn <F> (&mut self, future: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the runtime's\n entry point.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the runtime's","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":100250,"byte_end":100324,"line_start":400,"line_end":400,"column_start":5,"column_end":79}},{"value":"/ entry point.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":100329,"byte_end":100345,"line_start":401,"line_end":401,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":100350,"byte_end":100353,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":100358,"byte_end":100425,"line_start":403,"line_end":403,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":100430,"byte_end":100503,"line_start":404,"line_end":404,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":100508,"byte_end":100573,"line_start":405,"line_end":405,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":100578,"byte_end":100581,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":100586,"byte_end":100652,"line_start":407,"line_end":407,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":100657,"byte_end":100660,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":100665,"byte_end":100677,"line_start":409,"line_end":409,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":100682,"byte_end":100685,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":100690,"byte_end":100762,"line_start":411,"line_end":411,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":100767,"byte_end":100840,"line_start":412,"line_end":412,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101307,"byte_end":101312,"line_start":426,"line_end":426,"column_start":12,"column_end":17},"name":"enter","qualname":"<Runtime>::enter","value":"fn <F, R> (&self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context\n","sig":null,"attributes":[{"value":"/ Enter the runtime context","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101266,"byte_end":101295,"line_start":425,"line_end":425,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101826,"byte_end":101832,"line_start":449,"line_end":449,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"fn (&self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's spawner.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101419,"byte_end":101464,"line_start":433,"line_end":433,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101469,"byte_end":101472,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101477,"byte_end":101553,"line_start":435,"line_end":435,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101558,"byte_end":101561,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101566,"byte_end":101580,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101585,"byte_end":101588,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101593,"byte_end":101600,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101605,"byte_end":101637,"line_start":440,"line_end":440,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101642,"byte_end":101645,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101650,"byte_end":101677,"line_start":442,"line_end":442,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101682,"byte_end":101700,"line_start":443,"line_end":443,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101705,"byte_end":101708,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101713,"byte_end":101742,"line_start":445,"line_end":445,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101747,"byte_end":101750,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ handle.spawn(async { println!(\"hello\"); });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101755,"byte_end":101802,"line_start":447,"line_end":447,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":101807,"byte_end":101814,"line_start":448,"line_end":448,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4760},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::signal","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","parent":null,"children":[{"krate":0,"index":4761},{"krate":0,"index":4768},{"krate":0,"index":4769},{"krate":0,"index":4817},{"krate":0,"index":4821}],"decl_id":null,"docs":" Asynchronous signal handling for Tokio","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":13180,"byte_end":13206,"line_start":178,"line_end":178,"column_start":13,"column_end":39}},{"value":"cfg(not (loom))","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":13281,"byte_end":13298,"line_start":180,"line_end":180,"column_start":13,"column_end":30}},{"value":"! Asynchronous signal handling for Tokio","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8478576,"byte_end":8478618,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8478619,"byte_end":8478622,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Note that signal handling is in general a very tricky topic and should be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8478623,"byte_end":8478700,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! used with great care. This crate attempts to implement 'best practice' for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8478701,"byte_end":8478779,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! signal handling, but it should be evaluated for your own applications' needs","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8478780,"byte_end":8478860,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"! to see if it's suitable.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8478861,"byte_end":8478889,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8478890,"byte_end":8478893,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! The are some fundamental limitations of this crate documented on the OS","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8478894,"byte_end":8478969,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"! specific structures, as well.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8478970,"byte_end":8479003,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479004,"byte_end":8479007,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479008,"byte_end":8479022,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479023,"byte_end":8479026,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Print on \"ctrl-c\" notification.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479027,"byte_end":8479062,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479063,"byte_end":8479066,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479067,"byte_end":8479085,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"! use tokio::signal;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479086,"byte_end":8479108,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479109,"byte_end":8479112,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479113,"byte_end":8479131,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479132,"byte_end":8479195,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"!     signal::ctrl_c().await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479196,"byte_end":8479228,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"!     println!(\"ctrl-c received!\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479229,"byte_end":8479266,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"!     Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479267,"byte_end":8479281,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479282,"byte_end":8479287,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479288,"byte_end":8479295,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479296,"byte_end":8479299,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Wait for SIGHUP on Unix","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479300,"byte_end":8479327,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479328,"byte_end":8479331,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479332,"byte_end":8479350,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"! # #[cfg(unix)] {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479351,"byte_end":8479371,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"! use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479372,"byte_end":8479422,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479423,"byte_end":8479426,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479427,"byte_end":8479445,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479446,"byte_end":8479509,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"!     // An infinite stream of hangup signals.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479510,"byte_end":8479558,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"!     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479559,"byte_end":8479614,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479615,"byte_end":8479618,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"!     // Print whenever a HUP signal is received","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479619,"byte_end":8479669,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"!     loop {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479670,"byte_end":8479684,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"!         stream.recv().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479685,"byte_end":8479717,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"!         println!(\"got signal HUP\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479718,"byte_end":8479757,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"!     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479758,"byte_end":8479767,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479768,"byte_end":8479773,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479774,"byte_end":8479781,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8479782,"byte_end":8479789,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4765},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481876,"byte_end":8481882,"line_start":50,"line_end":50,"column_start":14,"column_end":20},"name":"ctrl_c","qualname":"::signal::ctrl_c::ctrl_c","value":"fn () -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Completes when a \"ctrl-c\" notification is sent to the process.","sig":null,"attributes":[{"value":"/ Completes when a \"ctrl-c\" notification is sent to the process.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8480163,"byte_end":8480229,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8480230,"byte_end":8480233,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While signals are handled very differently between Unix and Windows, both","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8480234,"byte_end":8480311,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ platforms support receiving a signal on \"ctrl-c\". This function provides a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8480312,"byte_end":8480390,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ portable API for receiving this notification.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8480391,"byte_end":8480440,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8480441,"byte_end":8480444,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once the returned future is polled, a listener a listener is registered. The","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8480445,"byte_end":8480525,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ future will complete on the first received `ctrl-c` **after** the initial","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8480526,"byte_end":8480603,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ call to either `Future::poll` or `.await`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8480604,"byte_end":8480650,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8480651,"byte_end":8480654,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8480655,"byte_end":8480668,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8480669,"byte_end":8480672,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms, the first time that a `Signal` instance is registered for a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8480673,"byte_end":8480755,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ particular signal kind, an OS signal-handler is installed which replaces the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8480756,"byte_end":8480836,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ default platform behavior when that signal is received, **for the duration of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8480837,"byte_end":8480918,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ the entire process**.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8480919,"byte_end":8480944,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8480945,"byte_end":8480948,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8480949,"byte_end":8481022,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ receives a signal generated by \"CTRL+C\" on the terminal. But, when a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481023,"byte_end":8481095,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `ctrl_c` stream is created to listen for this signal, the time it arrives,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481096,"byte_end":8481174,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ it will be translated to a stream event, and the process will continue to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481175,"byte_end":8481252,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ execute.  **Even if this `Signal` instance is dropped, subsequent SIGINT","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481253,"byte_end":8481329,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ deliveries will end up captured by Tokio, and the default platform behavior","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481330,"byte_end":8481409,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ will NOT be reset**.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481410,"byte_end":8481434,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481435,"byte_end":8481438,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481439,"byte_end":8481517,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481518,"byte_end":8481578,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481579,"byte_end":8481582,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481583,"byte_end":8481597,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481598,"byte_end":8481601,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481602,"byte_end":8481620,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481621,"byte_end":8481643,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481644,"byte_end":8481647,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481648,"byte_end":8481666,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481667,"byte_end":8481688,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     println!(\"waiting for ctrl-c\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481689,"byte_end":8481728,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481729,"byte_end":8481732,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     signal::ctrl_c().await.expect(\"failed to listen for event\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481733,"byte_end":8481801,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481802,"byte_end":8481805,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"received ctrl-c event\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481806,"byte_end":8481848,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481849,"byte_end":8481854,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/ctrl_c.rs","byte_start":8481855,"byte_end":8481862,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4821},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::signal::unix","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","parent":null,"children":[{"krate":0,"index":4822},{"krate":0,"index":4825},{"krate":0,"index":4832},{"krate":0,"index":4835},{"krate":0,"index":4836},{"krate":0,"index":4837},{"krate":0,"index":4842},{"krate":0,"index":4843},{"krate":0,"index":4846},{"krate":0,"index":4847},{"krate":0,"index":4850},{"krate":0,"index":4851},{"krate":0,"index":4852},{"krate":0,"index":4855},{"krate":0,"index":4916},{"krate":0,"index":4919},{"krate":0,"index":4862},{"krate":0,"index":4921},{"krate":0,"index":4927},{"krate":0,"index":4925},{"krate":0,"index":4924},{"krate":0,"index":4864},{"krate":0,"index":4877},{"krate":0,"index":4881},{"krate":0,"index":4883},{"krate":0,"index":4884},{"krate":0,"index":4929},{"krate":0,"index":4931},{"krate":0,"index":4888},{"krate":0,"index":4890},{"krate":0,"index":4933},{"krate":0,"index":4936},{"krate":0,"index":4894},{"krate":0,"index":4895},{"krate":0,"index":4938},{"krate":0,"index":4902}],"decl_id":null,"docs":" Unix-specific types for signal handling.","sig":null,"attributes":[{"value":"! Unix-specific types for signal handling.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8491308,"byte_end":8491352,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8491353,"byte_end":8491356,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only defined on Unix platforms and contains the primary","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8491357,"byte_end":8491431,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! `Signal` type for receiving notifications of signals.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8491432,"byte_end":8491489,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"cfg(unix)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8491491,"byte_end":8491504,"line_start":6,"line_end":6,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4921},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8492819,"byte_end":8492829,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"SignalKind","qualname":"::signal::unix::SignalKind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the specific kind of signal to listen for.\n","sig":null,"attributes":[{"value":"/ Represents the specific kind of signal to listen for.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8492720,"byte_end":8492777,"line_start":59,"line_end":59,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4865},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493228,"byte_end":8493236,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<SignalKind>::from_raw","value":"fn (signum: c_int) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows for listening to any valid OS signal.","sig":null,"attributes":[{"value":"/ Allows for listening to any valid OS signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8492861,"byte_end":8492909,"line_start":64,"line_end":64,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8492914,"byte_end":8492917,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ For example, this can be used for listening for platform-specific","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8492922,"byte_end":8492991,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ signals.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8492996,"byte_end":8493008,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493013,"byte_end":8493031,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ # use tokio::signal::unix::SignalKind;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493036,"byte_end":8493078,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/ # let signum = -1;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493083,"byte_end":8493105,"line_start":70,"line_end":70,"column_start":5,"column_end":27}},{"value":"/ // let signum = libc::OS_SPECIFIC_SIGNAL;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493110,"byte_end":8493155,"line_start":71,"line_end":71,"column_start":5,"column_end":50}},{"value":"/ let kind = SignalKind::from_raw(signum);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493160,"byte_end":8493204,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493209,"byte_end":8493216,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4866},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493490,"byte_end":8493495,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"alarm","qualname":"<SignalKind>::alarm","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGALRM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGALRM signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493294,"byte_end":8493328,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493333,"byte_end":8493336,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when a real-time timer has expired.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493341,"byte_end":8493416,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493421,"byte_end":8493478,"line_start":81,"line_end":81,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4867},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493737,"byte_end":8493742,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"child","qualname":"<SignalKind>::child","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGCHLD signal.","sig":null,"attributes":[{"value":"/ Represents the SIGCHLD signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493547,"byte_end":8493581,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493586,"byte_end":8493589,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the status of a child process","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493594,"byte_end":8493668,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ has changed. By default, this signal is ignored.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493673,"byte_end":8493725,"line_start":89,"line_end":89,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4868},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493988,"byte_end":8493994,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"hangup","qualname":"<SignalKind>::hangup","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGHUP signal.","sig":null,"attributes":[{"value":"/ Represents the SIGHUP signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493794,"byte_end":8493827,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493832,"byte_end":8493835,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal is disconnected.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493840,"byte_end":8493914,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8493919,"byte_end":8493976,"line_start":97,"line_end":97,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4869},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8494647,"byte_end":8494656,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<SignalKind>::interrupt","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGINT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGINT signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8494464,"byte_end":8494497,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8494502,"byte_end":8494505,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to interrupt a program.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8494510,"byte_end":8494573,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8494578,"byte_end":8494635,"line_start":120,"line_end":120,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4870},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8494905,"byte_end":8494907,"line_start":129,"line_end":129,"column_start":12,"column_end":14},"name":"io","qualname":"<SignalKind>::io","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGIO signal.","sig":null,"attributes":[{"value":"/ Represents the SIGIO signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8494707,"byte_end":8494739,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8494744,"byte_end":8494747,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when I/O operations are possible","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8494752,"byte_end":8494824,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ on some file descriptor. By default, this signal is ignored.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8494829,"byte_end":8494893,"line_start":128,"line_end":128,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4871},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495191,"byte_end":8495195,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"pipe","qualname":"<SignalKind>::pipe","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGPIPE signal.","sig":null,"attributes":[{"value":"/ Represents the SIGPIPE signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8494957,"byte_end":8494991,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8494996,"byte_end":8494999,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the process attempts to write","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495004,"byte_end":8495078,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ to a pipe which has no reader. By default, the process is terminated by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495083,"byte_end":8495158,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ this signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495163,"byte_end":8495179,"line_start":137,"line_end":137,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":4872},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495498,"byte_end":8495502,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"quit","qualname":"<SignalKind>::quit","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGQUIT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGQUIT signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495247,"byte_end":8495281,"line_start":142,"line_end":142,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495286,"byte_end":8495289,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495294,"byte_end":8495360,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/ process, after which the OS will dump the process core.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495365,"byte_end":8495424,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495429,"byte_end":8495486,"line_start":146,"line_end":146,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4873},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495750,"byte_end":8495759,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"terminate","qualname":"<SignalKind>::terminate","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGTERM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGTERM signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495554,"byte_end":8495588,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495593,"byte_end":8495596,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495601,"byte_end":8495667,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ process. By default, the process is terminated by this signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495672,"byte_end":8495738,"line_start":154,"line_end":154,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4874},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495982,"byte_end":8495995,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"user_defined1","qualname":"<SignalKind>::user_defined1","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR1 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR1 signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495811,"byte_end":8495845,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495850,"byte_end":8495853,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495858,"byte_end":8495908,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8495913,"byte_end":8495970,"line_start":162,"line_end":162,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4875},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8496218,"byte_end":8496231,"line_start":171,"line_end":171,"column_start":12,"column_end":25},"name":"user_defined2","qualname":"<SignalKind>::user_defined2","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR2 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR2 signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8496047,"byte_end":8496081,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8496086,"byte_end":8496089,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8496094,"byte_end":8496144,"line_start":169,"line_end":169,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8496149,"byte_end":8496206,"line_start":170,"line_end":170,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4876},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8496463,"byte_end":8496476,"line_start":179,"line_end":179,"column_start":12,"column_end":25},"name":"window_change","qualname":"<SignalKind>::window_change","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGWINCH signal.","sig":null,"attributes":[{"value":"/ Represents the SIGWINCH signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8496283,"byte_end":8496318,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8496323,"byte_end":8496326,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal window is resized.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8496331,"byte_end":8496407,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ By default, this signal is ignored.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8496412,"byte_end":8496451,"line_start":178,"line_end":178,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4933},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503821,"byte_end":8503827,"line_start":376,"line_end":376,"column_start":12,"column_end":18},"name":"Signal","qualname":"::signal::unix::Signal","value":"Signal {  }","parent":null,"children":[{"krate":0,"index":4934},{"krate":0,"index":4935}],"decl_id":null,"docs":" A stream of events for receiving a particular type of OS signal.","sig":null,"attributes":[{"value":"/ A stream of events for receiving a particular type of OS signal.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8501056,"byte_end":8501124,"line_start":312,"line_end":312,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8501125,"byte_end":8501128,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ In general signal handling on Unix is a pretty tricky topic, and this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8501129,"byte_end":8501202,"line_start":314,"line_end":314,"column_start":1,"column_end":74}},{"value":"/ structure is no exception! There are some important limitations to keep in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8501203,"byte_end":8501281,"line_start":315,"line_end":315,"column_start":1,"column_end":79}},{"value":"/ mind when using `Signal` streams:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8501282,"byte_end":8501319,"line_start":316,"line_end":316,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8501320,"byte_end":8501323,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ * Signals handling in Unix already necessitates coalescing signals","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8501324,"byte_end":8501394,"line_start":318,"line_end":318,"column_start":1,"column_end":71}},{"value":"/   together sometimes. This `Signal` stream is also no exception here in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8501395,"byte_end":8501470,"line_start":319,"line_end":319,"column_start":1,"column_end":76}},{"value":"/   that it will also coalesce signals. That is, even if the signal handler","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8501471,"byte_end":8501548,"line_start":320,"line_end":320,"column_start":1,"column_end":78}},{"value":"/   for this process runs multiple times, the `Signal` stream may only return","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8501549,"byte_end":8501628,"line_start":321,"line_end":321,"column_start":1,"column_end":80}},{"value":"/   one signal notification. Specifically, before `poll` is called, all","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8501629,"byte_end":8501702,"line_start":322,"line_end":322,"column_start":1,"column_end":74}},{"value":"/   signal notifications are coalesced into one item returned from `poll`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8501703,"byte_end":8501779,"line_start":323,"line_end":323,"column_start":1,"column_end":77}},{"value":"/   Once `poll` has been called, however, a further signal is guaranteed to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8501780,"byte_end":8501857,"line_start":324,"line_end":324,"column_start":1,"column_end":78}},{"value":"/   be yielded as an item.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8501858,"byte_end":8501886,"line_start":325,"line_end":325,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8501887,"byte_end":8501890,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/   Put another way, any element pulled off the returned stream corresponds to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8501891,"byte_end":8501971,"line_start":327,"line_end":327,"column_start":1,"column_end":81}},{"value":"/   *at least one* signal, but possibly more.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8501972,"byte_end":8502019,"line_start":328,"line_end":328,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502020,"byte_end":8502023,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ * Signal handling in general is relatively inefficient. Although some","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502024,"byte_end":8502097,"line_start":330,"line_end":330,"column_start":1,"column_end":74}},{"value":"/   improvements are possible in this crate, it's recommended to not plan on","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502098,"byte_end":8502176,"line_start":331,"line_end":331,"column_start":1,"column_end":79}},{"value":"/   having millions of signal channels open.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502177,"byte_end":8502223,"line_start":332,"line_end":332,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502224,"byte_end":8502227,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ If you've got any questions about this feel free to open an issue on the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502228,"byte_end":8502304,"line_start":334,"line_end":334,"column_start":1,"column_end":77}},{"value":"/ repo! New approaches to alleviate some of these limitations are always","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502305,"byte_end":8502379,"line_start":335,"line_end":335,"column_start":1,"column_end":75}},{"value":"/ appreciated!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502380,"byte_end":8502396,"line_start":336,"line_end":336,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502397,"byte_end":8502400,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502401,"byte_end":8502414,"line_start":338,"line_end":338,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502415,"byte_end":8502418,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ The first time that a `Signal` instance is registered for a particular","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502419,"byte_end":8502493,"line_start":340,"line_end":340,"column_start":1,"column_end":75}},{"value":"/ signal kind, an OS signal-handler is installed which replaces the default","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502494,"byte_end":8502571,"line_start":341,"line_end":341,"column_start":1,"column_end":78}},{"value":"/ platform behavior when that signal is received, **for the duration of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502572,"byte_end":8502649,"line_start":342,"line_end":342,"column_start":1,"column_end":78}},{"value":"/ entire process**.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502650,"byte_end":8502671,"line_start":343,"line_end":343,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502672,"byte_end":8502675,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502676,"byte_end":8502749,"line_start":345,"line_end":345,"column_start":1,"column_end":74}},{"value":"/ receives SIGINT. But, when a `Signal` instance is created to listen for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502750,"byte_end":8502825,"line_start":346,"line_end":346,"column_start":1,"column_end":76}},{"value":"/ this signal, the next SIGINT that arrives will be translated to a stream","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502826,"byte_end":8502902,"line_start":347,"line_end":347,"column_start":1,"column_end":77}},{"value":"/ event, and the process will continue to execute. **Even if this `Signal`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502903,"byte_end":8502979,"line_start":348,"line_end":348,"column_start":1,"column_end":77}},{"value":"/ instance is dropped, subsequent SIGINT deliveries will end up captured by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8502980,"byte_end":8503057,"line_start":349,"line_end":349,"column_start":1,"column_end":78}},{"value":"/ Tokio, and the default platform behavior will NOT be reset**.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503058,"byte_end":8503123,"line_start":350,"line_end":350,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503124,"byte_end":8503127,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503128,"byte_end":8503206,"line_start":352,"line_end":352,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503207,"byte_end":8503267,"line_start":353,"line_end":353,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503268,"byte_end":8503271,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503272,"byte_end":8503286,"line_start":355,"line_end":355,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503287,"byte_end":8503290,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503291,"byte_end":8503310,"line_start":357,"line_end":357,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503311,"byte_end":8503314,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503315,"byte_end":8503333,"line_start":359,"line_end":359,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503334,"byte_end":8503384,"line_start":360,"line_end":360,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503385,"byte_end":8503388,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503389,"byte_end":8503407,"line_start":362,"line_end":362,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503408,"byte_end":8503471,"line_start":363,"line_end":363,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503472,"byte_end":8503520,"line_start":364,"line_end":364,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503521,"byte_end":8503576,"line_start":365,"line_end":365,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503577,"byte_end":8503580,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503581,"byte_end":8503631,"line_start":367,"line_end":367,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503632,"byte_end":8503646,"line_start":368,"line_end":368,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503647,"byte_end":8503679,"line_start":369,"line_end":369,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503680,"byte_end":8503719,"line_start":370,"line_end":370,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503720,"byte_end":8503729,"line_start":371,"line_end":371,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503730,"byte_end":8503735,"line_start":372,"line_end":372,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503736,"byte_end":8503743,"line_start":373,"line_end":373,"column_start":1,"column_end":8}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503744,"byte_end":8503792,"line_start":374,"line_end":374,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4894},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504945,"byte_end":8504951,"line_start":403,"line_end":403,"column_start":8,"column_end":14},"name":"signal","qualname":"::signal::unix::signal","value":"fn (kind: SignalKind) -> io::Result<Signal>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which will receive notifications when the current\n process receives the specified signal `kind`.","sig":null,"attributes":[{"value":"/ Creates a new stream which will receive notifications when the current","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503875,"byte_end":8503949,"line_start":381,"line_end":381,"column_start":1,"column_end":75}},{"value":"/ process receives the specified signal `kind`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8503950,"byte_end":8503999,"line_start":382,"line_end":382,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504000,"byte_end":8504003,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ This function will create a new stream which binds to the default reactor.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504004,"byte_end":8504082,"line_start":384,"line_end":384,"column_start":1,"column_end":79}},{"value":"/ The `Signal` stream is an infinite stream which will receive","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504083,"byte_end":8504147,"line_start":385,"line_end":385,"column_start":1,"column_end":65}},{"value":"/ notifications whenever a signal is received. More documentation can be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504148,"byte_end":8504222,"line_start":386,"line_end":386,"column_start":1,"column_end":75}},{"value":"/ found on `Signal` itself, but to reiterate:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504223,"byte_end":8504270,"line_start":387,"line_end":387,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504271,"byte_end":8504274,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ * Signals may be coalesced beyond what the kernel already does.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504275,"byte_end":8504342,"line_start":389,"line_end":389,"column_start":1,"column_end":68}},{"value":"/ * Once a signal handler is registered with the process the underlying","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504343,"byte_end":8504416,"line_start":390,"line_end":390,"column_start":1,"column_end":74}},{"value":"/   libc signal handler is never unregistered.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504417,"byte_end":8504465,"line_start":391,"line_end":391,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504466,"byte_end":8504469,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ A `Signal` stream can be created for a particular signal number","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504470,"byte_end":8504537,"line_start":393,"line_end":393,"column_start":1,"column_end":68}},{"value":"/ multiple times. When a signal is received then all the associated","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504538,"byte_end":8504607,"line_start":394,"line_end":394,"column_start":1,"column_end":70}},{"value":"/ channels will receive the signal notification.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504608,"byte_end":8504658,"line_start":395,"line_end":395,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504659,"byte_end":8504662,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504663,"byte_end":8504675,"line_start":397,"line_end":397,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504676,"byte_end":8504679,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ * If the lower-level C functions fail for some reason.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504680,"byte_end":8504738,"line_start":399,"line_end":399,"column_start":1,"column_end":59}},{"value":"/ * If the previous initialization of this specific signal failed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504739,"byte_end":8504807,"line_start":400,"line_end":400,"column_start":1,"column_end":69}},{"value":"/ * If the signal is one of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504808,"byte_end":8504837,"line_start":401,"line_end":401,"column_start":1,"column_end":30}},{"value":"/   [`signal_hook::FORBIDDEN`](https://docs.rs/signal-hook/*/signal_hook/fn.register.html#panics)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8504838,"byte_end":8504937,"line_start":402,"line_end":402,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":4896},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506161,"byte_end":8506165,"line_start":445,"line_end":445,"column_start":18,"column_end":22},"name":"recv","qualname":"<Signal>::recv","value":"fn (&mut self) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Receive the next signal notification event.","sig":null,"attributes":[{"value":"/ Receive the next signal notification event.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505455,"byte_end":8505502,"line_start":422,"line_end":422,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505507,"byte_end":8505510,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505515,"byte_end":8505587,"line_start":424,"line_end":424,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505592,"byte_end":8505595,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505600,"byte_end":8505614,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505619,"byte_end":8505622,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505627,"byte_end":8505646,"line_start":428,"line_end":428,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505651,"byte_end":8505654,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505659,"byte_end":8505677,"line_start":430,"line_end":430,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505682,"byte_end":8505732,"line_start":431,"line_end":431,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505737,"byte_end":8505740,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505745,"byte_end":8505763,"line_start":433,"line_end":433,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505768,"byte_end":8505831,"line_start":434,"line_end":434,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505836,"byte_end":8505884,"line_start":435,"line_end":435,"column_start":5,"column_end":53}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505889,"byte_end":8505944,"line_start":436,"line_end":436,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505949,"byte_end":8505952,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505957,"byte_end":8506007,"line_start":438,"line_end":438,"column_start":5,"column_end":55}},{"value":"/     loop {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506012,"byte_end":8506026,"line_start":439,"line_end":439,"column_start":5,"column_end":19}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506031,"byte_end":8506063,"line_start":440,"line_end":440,"column_start":5,"column_end":37}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506068,"byte_end":8506107,"line_start":441,"line_end":441,"column_start":5,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506112,"byte_end":8506121,"line_start":442,"line_end":442,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506126,"byte_end":8506131,"line_start":443,"line_end":443,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506136,"byte_end":8506143,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4901},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8507113,"byte_end":8507122,"line_start":478,"line_end":478,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Signal>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Poll to receive the next signal notification event, outside of an","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506287,"byte_end":8506356,"line_start":450,"line_end":450,"column_start":5,"column_end":74}},{"value":"/ `async` context.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506361,"byte_end":8506381,"line_start":451,"line_end":451,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506386,"byte_end":8506389,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506394,"byte_end":8506466,"line_start":453,"line_end":453,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506471,"byte_end":8506474,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506479,"byte_end":8506493,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506498,"byte_end":8506501,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506506,"byte_end":8506552,"line_start":457,"line_end":457,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506557,"byte_end":8506560,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506565,"byte_end":8506583,"line_start":459,"line_end":459,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506588,"byte_end":8506610,"line_start":460,"line_end":460,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506615,"byte_end":8506643,"line_start":461,"line_end":461,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506648,"byte_end":8506683,"line_start":462,"line_end":462,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::unix::Signal;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506688,"byte_end":8506724,"line_start":463,"line_end":463,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506729,"byte_end":8506732,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506737,"byte_end":8506758,"line_start":465,"line_end":465,"column_start":5,"column_end":26}},{"value":"/     signal: Signal,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506763,"byte_end":8506786,"line_start":466,"line_end":466,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506791,"byte_end":8506796,"line_start":467,"line_end":467,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506801,"byte_end":8506804,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506809,"byte_end":8506839,"line_start":469,"line_end":469,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506844,"byte_end":8506877,"line_start":470,"line_end":470,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506882,"byte_end":8506885,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506890,"byte_end":8506977,"line_start":472,"line_end":472,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8506982,"byte_end":8507023,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/         self.signal.poll_recv(cx)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8507028,"byte_end":8507065,"line_start":474,"line_end":474,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8507070,"byte_end":8507079,"line_start":475,"line_end":475,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8507084,"byte_end":8507089,"line_start":476,"line_end":476,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8507094,"byte_end":8507101,"line_start":477,"line_end":477,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4941},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":4942},{"krate":0,"index":4957},{"krate":0,"index":4960},{"krate":0,"index":4986},{"krate":0,"index":4987},{"krate":0,"index":5004},{"krate":0,"index":5005},{"krate":0,"index":5006},{"krate":0,"index":5011}],"decl_id":null,"docs":" Stream utilities for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"stream\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":13412,"byte_end":13438,"line_start":189,"line_end":189,"column_start":13,"column_end":39}},{"value":"! Stream utilities for Tokio.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8516438,"byte_end":8516469,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8516470,"byte_end":8516473,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! `Stream`s are an asynchoronous version of standard library's Iterator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8516474,"byte_end":8516548,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8516549,"byte_end":8516552,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module provides helpers to work with them.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8516553,"byte_end":8516604,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5013},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519309,"byte_end":8519313,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5015}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519194,"byte_end":8519231,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519249,"byte_end":8519297,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4950},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519887,"byte_end":8519891,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn <I> (i: I) -> Iter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519365,"byte_end":8519429,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519430,"byte_end":8519458,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519459,"byte_end":8519462,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519463,"byte_end":8519536,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519537,"byte_end":8519592,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519593,"byte_end":8519596,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519597,"byte_end":8519604,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519605,"byte_end":8519627,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519628,"byte_end":8519669,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519670,"byte_end":8519673,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519674,"byte_end":8519722,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519723,"byte_end":8519726,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.next().await, Some(17));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519727,"byte_end":8519773,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, Some(19));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519774,"byte_end":8519820,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519821,"byte_end":8519863,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519864,"byte_end":8519871,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519872,"byte_end":8519879,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8121},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/map.rs","byte_start":8520582,"byte_end":8520585,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":8124},{"krate":0,"index":8125}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8025933,"byte_end":8025944,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5019},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/next.rs","byte_start":8521798,"byte_end":8521802,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":5022}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/next.rs","byte_start":8521642,"byte_end":8521701,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/next.rs","byte_start":8521719,"byte_end":8521786,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":5006},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8516838,"byte_end":8516847,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":5007},{"krate":0,"index":5008}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8516727,"byte_end":8516801,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8516802,"byte_end":8516827,"line_start":19,"line_end":19,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5007},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517885,"byte_end":8517889,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StreamExt::next","value":"fn (&mut self) -> Next<'_, Self>","parent":{"krate":0,"index":5006},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8516862,"byte_end":8516928,"line_start":21,"line_end":21,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8516933,"byte_end":8516936,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8516941,"byte_end":8516959,"line_start":23,"line_end":23,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8516964,"byte_end":8516967,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8516972,"byte_end":8516985,"line_start":25,"line_end":25,"column_start":5,"column_end":18}},{"value":"/ async fn next(&mut self) -> Option<Self::Item>;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8516990,"byte_end":8517041,"line_start":26,"line_end":26,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517046,"byte_end":8517053,"line_start":27,"line_end":27,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517058,"byte_end":8517061,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517066,"byte_end":8517134,"line_start":29,"line_end":29,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517139,"byte_end":8517214,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517219,"byte_end":8517294,"line_start":31,"line_end":31,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517299,"byte_end":8517353,"line_start":32,"line_end":32,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517358,"byte_end":8517433,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517438,"byte_end":8517448,"line_start":34,"line_end":34,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517453,"byte_end":8517456,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517461,"byte_end":8517475,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517480,"byte_end":8517483,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517488,"byte_end":8517495,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517500,"byte_end":8517520,"line_start":39,"line_end":39,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517525,"byte_end":8517548,"line_start":40,"line_end":40,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517553,"byte_end":8517594,"line_start":41,"line_end":41,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517599,"byte_end":8517602,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517607,"byte_end":8517648,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517653,"byte_end":8517656,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517661,"byte_end":8517706,"line_start":45,"line_end":45,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517711,"byte_end":8517756,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517761,"byte_end":8517806,"line_start":47,"line_end":47,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517811,"byte_end":8517853,"line_start":48,"line_end":48,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517858,"byte_end":8517865,"line_start":49,"line_end":49,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517870,"byte_end":8517877,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5008},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518915,"byte_end":8518918,"line_start":84,"line_end":84,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::StreamExt::map","value":"fn <T, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":5006},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8517991,"byte_end":8518066,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518071,"byte_end":8518094,"line_start":59,"line_end":59,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518099,"byte_end":8518102,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518107,"byte_end":8518179,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518184,"byte_end":8518248,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518253,"byte_end":8518290,"line_start":63,"line_end":63,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518295,"byte_end":8518298,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518303,"byte_end":8518379,"line_start":65,"line_end":65,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518384,"byte_end":8518455,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518460,"byte_end":8518481,"line_start":67,"line_end":67,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518486,"byte_end":8518489,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518494,"byte_end":8518508,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518513,"byte_end":8518516,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518521,"byte_end":8518528,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518533,"byte_end":8518553,"line_start":72,"line_end":72,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518558,"byte_end":8518581,"line_start":73,"line_end":73,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518586,"byte_end":8518627,"line_start":74,"line_end":74,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518632,"byte_end":8518635,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518640,"byte_end":8518677,"line_start":76,"line_end":76,"column_start":5,"column_end":42}},{"value":"/ let mut stream = stream.map(|x| x + 3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518682,"byte_end":8518725,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518730,"byte_end":8518733,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518738,"byte_end":8518783,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518788,"byte_end":8518833,"line_start":80,"line_end":80,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518838,"byte_end":8518883,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518888,"byte_end":8518895,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8518900,"byte_end":8518907,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5027},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":5028},{"krate":0,"index":5038},{"krate":0,"index":5041},{"krate":0,"index":5169},{"krate":0,"index":5585},{"krate":0,"index":5645},{"krate":0,"index":5648},{"krate":0,"index":5766},{"krate":0,"index":5893},{"krate":0,"index":5911},{"krate":0,"index":5914},{"krate":0,"index":5959},{"krate":0,"index":5960}],"decl_id":null,"docs":" Future-aware synchronization","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":13612,"byte_end":13636,"line_start":199,"line_end":199,"column_start":13,"column_end":37}},{"value":"! Future-aware synchronization","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8522371,"byte_end":8522403,"line_start":3,"line_end":3,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8522404,"byte_end":8522407,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module is enabled with the **`sync`** feature flag.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8522408,"byte_end":8522468,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8522469,"byte_end":8522472,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! Tasks sometimes need to communicate with each other. This module contains","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8522473,"byte_end":8522550,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"! basic abstractions for doing so:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8522551,"byte_end":8522587,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8522588,"byte_end":8522591,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! - [oneshot](oneshot/index.html), a way of sending a single value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8522592,"byte_end":8522660,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"!   from one task to another.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8522661,"byte_end":8522692,"line_start":11,"line_end":11,"column_start":1,"column_end":32}},{"value":"! - [mpsc](mpsc/index.html), a multi-producer, single-consumer channel for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8522693,"byte_end":8522769,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"!   sending values between tasks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8522770,"byte_end":8522805,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"! - [`Mutex`](struct.Mutex.html), an asynchronous `Mutex`-like type.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8522806,"byte_end":8522876,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"! - [watch](watch/index.html), a single-producer, multi-consumer channel that","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8522877,"byte_end":8522956,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"!   only stores the **most recently** sent value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8522957,"byte_end":8523008,"line_start":16,"line_end":16,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6035},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524783,"byte_end":8524790,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":6036},{"krate":0,"index":6037},{"krate":0,"index":6038}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8523830,"byte_end":8523918,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8523919,"byte_end":8523922,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8523923,"byte_end":8523930,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8523931,"byte_end":8523951,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8523952,"byte_end":8523975,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8523976,"byte_end":8524005,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524006,"byte_end":8524009,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524010,"byte_end":8524044,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524045,"byte_end":8524068,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524069,"byte_end":8524072,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524073,"byte_end":8524118,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524119,"byte_end":8524164,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524165,"byte_end":8524185,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524186,"byte_end":8524218,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524219,"byte_end":8524273,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524274,"byte_end":8524319,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524320,"byte_end":8524353,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524354,"byte_end":8524390,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524391,"byte_end":8524427,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524428,"byte_end":8524463,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524464,"byte_end":8524478,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524479,"byte_end":8524490,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524491,"byte_end":8524496,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524497,"byte_end":8524571,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524572,"byte_end":8524610,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524611,"byte_end":8524666,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524667,"byte_end":8524738,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524739,"byte_end":8524746,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524747,"byte_end":8524754,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5032},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8525253,"byte_end":8525256,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"fn (mut n: usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8525013,"byte_end":8525080,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8525085,"byte_end":8525088,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8525093,"byte_end":8525181,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8525186,"byte_end":8525241,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5033},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8526329,"byte_end":8526333,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"fn (&self) -> BarrierWaitResult","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8525855,"byte_end":8525915,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8525920,"byte_end":8525923,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8525928,"byte_end":8526004,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8526009,"byte_end":8526034,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8526039,"byte_end":8526042,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8526047,"byte_end":8526140,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8526145,"byte_end":8526238,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8526243,"byte_end":8526311,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":6047},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8528255,"byte_end":8528272,"line_start":126,"line_end":126,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8528119,"byte_end":8528219,"line_start":124,"line_end":124,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":5037},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8528518,"byte_end":8528527,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns true if this thread from wait is the \"leader thread\".","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8528310,"byte_end":8528375,"line_start":129,"line_end":129,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8528380,"byte_end":8528383,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8528388,"byte_end":8528480,"line_start":131,"line_end":131,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8528485,"byte_end":8528506,"line_start":132,"line_end":132,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":5041},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":5042},{"krate":0,"index":5043},{"krate":0,"index":5044},{"krate":0,"index":5048},{"krate":0,"index":5053},{"krate":0,"index":5054},{"krate":0,"index":5055},{"krate":0,"index":5056},{"krate":0,"index":5060},{"krate":0,"index":5061},{"krate":0,"index":5064},{"krate":0,"index":6054},{"krate":0,"index":6058},{"krate":0,"index":6061},{"krate":0,"index":6067},{"krate":0,"index":6069},{"krate":0,"index":6077},{"krate":0,"index":5069},{"krate":0,"index":5077},{"krate":0,"index":5080},{"krate":0,"index":5085},{"krate":0,"index":6079},{"krate":0,"index":6083},{"krate":0,"index":5089},{"krate":0,"index":5094},{"krate":0,"index":5095},{"krate":0,"index":5097},{"krate":0,"index":5099},{"krate":0,"index":5101},{"krate":0,"index":5103},{"krate":0,"index":5105},{"krate":0,"index":5116},{"krate":0,"index":5119},{"krate":0,"index":5122},{"krate":0,"index":5125},{"krate":0,"index":5136},{"krate":0,"index":5139},{"krate":0,"index":5143},{"krate":0,"index":5146},{"krate":0,"index":5149},{"krate":0,"index":5154},{"krate":0,"index":5163},{"krate":0,"index":5167}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":13612,"byte_end":13636,"line_start":199,"line_end":199,"column_start":13,"column_end":37}},{"value":"! A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8528569,"byte_end":8528649,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"! all consumers.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8528650,"byte_end":8528668,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8528669,"byte_end":8528672,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8528673,"byte_end":8528751,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! values. Both [`Sender`] and [`Receiver`] handles are clone-able, allowing","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8528752,"byte_end":8528829,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"! concurrent send and receive actions. Additionally, [`Sender`] is `Sync`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8528830,"byte_end":8528906,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8528907,"byte_end":8528910,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8528911,"byte_end":8528987,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"! receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8528988,"byte_end":8529068,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"! demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529069,"byte_end":8529146,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"! value, the value is released from the channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529147,"byte_end":8529197,"line_start":11,"line_end":11,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529198,"byte_end":8529201,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529202,"byte_end":8529280,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"! of messages the channel can retain at any given time.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529281,"byte_end":8529338,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529339,"byte_end":8529342,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529343,"byte_end":8529421,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"! returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529422,"byte_end":8529494,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"! `subscribe`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529495,"byte_end":8529511,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529512,"byte_end":8529515,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! ## Lagging","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529516,"byte_end":8529530,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529531,"byte_end":8529534,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529535,"byte_end":8529615,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"! a clone, broadcast channels are suspectible to the \"slow receiver\" problem.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529616,"byte_end":8529695,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"! In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529696,"byte_end":8529773,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"! they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529774,"byte_end":8529852,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"! up.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529853,"byte_end":8529860,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529861,"byte_end":8529864,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529865,"byte_end":8529942,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"! upper bound on the number of values the channel may retain at any given","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8529943,"byte_end":8530018,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"! time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530019,"byte_end":8530099,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530100,"byte_end":8530103,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530104,"byte_end":8530176,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"! currently held by the channel is released. This frees up space for the new","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530177,"byte_end":8530255,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"! value. Any receiver that has not yet seen the released value will return","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530256,"byte_end":8530332,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"! [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530333,"byte_end":8530392,"line_start":35,"line_end":35,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530393,"byte_end":8530396,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530397,"byte_end":8530475,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"! updated to the oldest value contained by the channel. The next call to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530476,"byte_end":8530550,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"! [`recv`] will return this value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530551,"byte_end":8530587,"line_start":39,"line_end":39,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530588,"byte_end":8530591,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530592,"byte_end":8530671,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"! that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530672,"byte_end":8530749,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"! either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530750,"byte_end":8530825,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"! consumption of the channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530826,"byte_end":8530857,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530858,"byte_end":8530861,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! ## Closing","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530862,"byte_end":8530876,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530877,"byte_end":8530880,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530881,"byte_end":8530956,"line_start":48,"line_end":48,"column_start":1,"column_end":76}},{"value":"! sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8530957,"byte_end":8531035,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"! all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531036,"byte_end":8531113,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"! with [`RecvError::Closed`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531114,"byte_end":8531145,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531146,"byte_end":8531149,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531150,"byte_end":8531196,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"! [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531197,"byte_end":8531265,"line_start":54,"line_end":54,"column_start":1,"column_end":69}},{"value":"! [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531266,"byte_end":8531316,"line_start":55,"line_end":55,"column_start":1,"column_end":51}},{"value":"! [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531317,"byte_end":8531365,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"! [`RecvError::Lagged`]: crate::sync::broadcast::RecvError::Lagged","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531366,"byte_end":8531434,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"! [`RecvError::Closed`]: crate::sync::broadcast::RecvError::Closed","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531435,"byte_end":8531503,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"! [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531504,"byte_end":8531556,"line_start":59,"line_end":59,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531557,"byte_end":8531560,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531561,"byte_end":8531575,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531576,"byte_end":8531579,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! Basic usage","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531580,"byte_end":8531595,"line_start":63,"line_end":63,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531596,"byte_end":8531599,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531600,"byte_end":8531607,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::broadcast;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531608,"byte_end":8531639,"line_start":66,"line_end":66,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531640,"byte_end":8531643,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531644,"byte_end":8531662,"line_start":68,"line_end":68,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531663,"byte_end":8531684,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"!     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531685,"byte_end":8531736,"line_start":70,"line_end":70,"column_start":1,"column_end":52}},{"value":"!     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531737,"byte_end":8531774,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531775,"byte_end":8531778,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531779,"byte_end":8531812,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531813,"byte_end":8531867,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531868,"byte_end":8531922,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531923,"byte_end":8531934,"line_start":76,"line_end":76,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531935,"byte_end":8531938,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531939,"byte_end":8531972,"line_start":78,"line_end":78,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8531973,"byte_end":8532027,"line_start":79,"line_end":79,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532028,"byte_end":8532082,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532083,"byte_end":8532094,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532095,"byte_end":8532098,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"!     tx.send(10).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532099,"byte_end":8532128,"line_start":83,"line_end":83,"column_start":1,"column_end":30}},{"value":"!     tx.send(20).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532129,"byte_end":8532158,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"! }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532159,"byte_end":8532164,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532165,"byte_end":8532172,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532173,"byte_end":8532176,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! Handling lag","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532177,"byte_end":8532193,"line_start":88,"line_end":88,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532194,"byte_end":8532197,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532198,"byte_end":8532205,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::broadcast;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532206,"byte_end":8532237,"line_start":91,"line_end":91,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532238,"byte_end":8532241,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532242,"byte_end":8532260,"line_start":93,"line_end":93,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532261,"byte_end":8532282,"line_start":94,"line_end":94,"column_start":1,"column_end":22}},{"value":"!     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532283,"byte_end":8532332,"line_start":95,"line_end":95,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532333,"byte_end":8532336,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"!     tx.send(10).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532337,"byte_end":8532366,"line_start":97,"line_end":97,"column_start":1,"column_end":30}},{"value":"!     tx.send(20).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532367,"byte_end":8532396,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"!     tx.send(30).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532397,"byte_end":8532426,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532427,"byte_end":8532430,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"!     // The receiver lagged behind","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532431,"byte_end":8532468,"line_start":101,"line_end":101,"column_start":1,"column_end":38}},{"value":"!     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532469,"byte_end":8532511,"line_start":102,"line_end":102,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532512,"byte_end":8532515,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"!     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532516,"byte_end":8532585,"line_start":104,"line_end":104,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532586,"byte_end":8532589,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"!     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532590,"byte_end":8532639,"line_start":106,"line_end":106,"column_start":1,"column_end":50}},{"value":"!     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532640,"byte_end":8532689,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"! }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8532690,"byte_end":8532695,"line_start":108,"line_end":108,"column_start":1,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":5061},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533820,"byte_end":8533826,"line_start":152,"line_end":152,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5063}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533027,"byte_end":8533073,"line_start":121,"line_end":121,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533074,"byte_end":8533077,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533078,"byte_end":8533138,"line_start":123,"line_end":123,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533139,"byte_end":8533166,"line_start":124,"line_end":124,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533167,"byte_end":8533170,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533171,"byte_end":8533185,"line_start":126,"line_end":126,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533186,"byte_end":8533189,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533190,"byte_end":8533197,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533198,"byte_end":8533229,"line_start":129,"line_end":129,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533230,"byte_end":8533233,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533234,"byte_end":8533252,"line_start":131,"line_end":131,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533253,"byte_end":8533274,"line_start":132,"line_end":132,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533275,"byte_end":8533326,"line_start":133,"line_end":133,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533327,"byte_end":8533364,"line_start":134,"line_end":134,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533365,"byte_end":8533368,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533369,"byte_end":8533402,"line_start":136,"line_end":136,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533403,"byte_end":8533457,"line_start":137,"line_end":137,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533458,"byte_end":8533512,"line_start":138,"line_end":138,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533513,"byte_end":8533524,"line_start":139,"line_end":139,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533525,"byte_end":8533528,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533529,"byte_end":8533562,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533563,"byte_end":8533617,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533618,"byte_end":8533672,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533673,"byte_end":8533684,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533685,"byte_end":8533688,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533689,"byte_end":8533718,"line_start":146,"line_end":146,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533719,"byte_end":8533748,"line_start":147,"line_end":147,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533749,"byte_end":8533754,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533755,"byte_end":8533762,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533763,"byte_end":8533766,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533767,"byte_end":8533808,"line_start":151,"line_end":151,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5064},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534666,"byte_end":8534674,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5066},{"krate":0,"index":5067},{"krate":0,"index":5068}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533863,"byte_end":8533911,"line_start":156,"line_end":156,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533912,"byte_end":8533915,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533916,"byte_end":8533982,"line_start":158,"line_end":158,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8533983,"byte_end":8534012,"line_start":159,"line_end":159,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534013,"byte_end":8534016,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534017,"byte_end":8534031,"line_start":161,"line_end":161,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534032,"byte_end":8534035,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534036,"byte_end":8534043,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534044,"byte_end":8534075,"line_start":164,"line_end":164,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534076,"byte_end":8534079,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534080,"byte_end":8534098,"line_start":166,"line_end":166,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534099,"byte_end":8534120,"line_start":167,"line_end":167,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534121,"byte_end":8534172,"line_start":168,"line_end":168,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534173,"byte_end":8534210,"line_start":169,"line_end":169,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534211,"byte_end":8534214,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534215,"byte_end":8534248,"line_start":171,"line_end":171,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534249,"byte_end":8534303,"line_start":172,"line_end":172,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534304,"byte_end":8534358,"line_start":173,"line_end":173,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534359,"byte_end":8534370,"line_start":174,"line_end":174,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534371,"byte_end":8534374,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534375,"byte_end":8534408,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534409,"byte_end":8534463,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534464,"byte_end":8534518,"line_start":178,"line_end":178,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534519,"byte_end":8534530,"line_start":179,"line_end":179,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534531,"byte_end":8534534,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534535,"byte_end":8534564,"line_start":181,"line_end":181,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534565,"byte_end":8534594,"line_start":182,"line_end":182,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534595,"byte_end":8534600,"line_start":183,"line_end":183,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534601,"byte_end":8534608,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534609,"byte_end":8534612,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534613,"byte_end":8534654,"line_start":186,"line_end":186,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6054},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535159,"byte_end":8535168,"line_start":204,"line_end":204,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::broadcast::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::send`][Sender::send].","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::send`][Sender::send].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534862,"byte_end":8534915,"line_start":198,"line_end":198,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534916,"byte_end":8534919,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534920,"byte_end":8534992,"line_start":200,"line_end":200,"column_start":1,"column_end":73}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8534993,"byte_end":8535070,"line_start":201,"line_end":201,"column_start":1,"column_end":78}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535071,"byte_end":8535130,"line_start":202,"line_end":202,"column_start":1,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6062},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535496,"byte_end":8535502,"line_start":214,"line_end":214,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":6061},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535399,"byte_end":8535474,"line_start":212,"line_end":212,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535479,"byte_end":8535491,"line_start":213,"line_end":213,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6064},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535751,"byte_end":8535757,"line_start":221,"line_end":221,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":6061},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535509,"byte_end":8535583,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535588,"byte_end":8535656,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ retained by the channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535661,"byte_end":8535689,"line_start":218,"line_end":218,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535694,"byte_end":8535697,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535702,"byte_end":8535746,"line_start":220,"line_end":220,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":6061},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535383,"byte_end":8535392,"line_start":211,"line_end":211,"column_start":10,"column_end":19},"name":"RecvError","qualname":"::sync::broadcast::RecvError","value":"RecvError::{Closed, Lagged}","parent":null,"children":[{"krate":0,"index":6062},{"krate":0,"index":6064}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535181,"byte_end":8535248,"line_start":206,"line_end":206,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535249,"byte_end":8535252,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535253,"byte_end":8535305,"line_start":208,"line_end":208,"column_start":1,"column_end":53}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535306,"byte_end":8535356,"line_start":209,"line_end":209,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6070},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8536133,"byte_end":8536138,"line_start":232,"line_end":232,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::broadcast::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6069},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`][Sender] handles, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8536000,"byte_end":8536058,"line_start":230,"line_end":230,"column_start":5,"column_end":63}},{"value":"/ [`Sender`][Sender] handles, so data may yet become available.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8536063,"byte_end":8536128,"line_start":231,"line_end":231,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6072},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8536242,"byte_end":8536248,"line_start":236,"line_end":236,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6069},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8536145,"byte_end":8536220,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8536225,"byte_end":8536237,"line_start":235,"line_end":235,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6074},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8536497,"byte_end":8536503,"line_start":243,"line_end":243,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":6069},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8536255,"byte_end":8536329,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8536334,"byte_end":8536402,"line_start":239,"line_end":239,"column_start":5,"column_end":73}},{"value":"/ retained by the channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8536407,"byte_end":8536435,"line_start":240,"line_end":240,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8536440,"byte_end":8536443,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8536448,"byte_end":8536492,"line_start":242,"line_end":242,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":6069},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535981,"byte_end":8535993,"line_start":229,"line_end":229,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::broadcast::TryRecvError","value":"TryRecvError::{Empty, Closed, Lagged}","parent":null,"children":[{"krate":0,"index":6070},{"krate":0,"index":6072},{"krate":0,"index":6074}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535767,"byte_end":8535838,"line_start":224,"line_end":224,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535839,"byte_end":8535842,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535843,"byte_end":8535903,"line_start":226,"line_end":226,"column_start":1,"column_end":61}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8535904,"byte_end":8535954,"line_start":227,"line_end":227,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":5095},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539724,"byte_end":8539731,"line_start":367,"line_end":367,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"fn <T> (mut capacity: usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8538112,"byte_end":8538188,"line_start":322,"line_end":322,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8538189,"byte_end":8538238,"line_start":323,"line_end":323,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8538239,"byte_end":8538242,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8538243,"byte_end":8538312,"line_start":325,"line_end":325,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8538313,"byte_end":8538363,"line_start":326,"line_end":326,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8538364,"byte_end":8538367,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8538368,"byte_end":8538442,"line_start":328,"line_end":328,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8538443,"byte_end":8538518,"line_start":329,"line_end":329,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8538519,"byte_end":8538587,"line_start":330,"line_end":330,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8538588,"byte_end":8538591,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8538592,"byte_end":8538668,"line_start":332,"line_end":332,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8538669,"byte_end":8538750,"line_start":333,"line_end":333,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8538751,"byte_end":8538790,"line_start":334,"line_end":334,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8538791,"byte_end":8538794,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8538795,"byte_end":8538841,"line_start":336,"line_end":336,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8538842,"byte_end":8538910,"line_start":337,"line_end":337,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8538911,"byte_end":8538961,"line_start":338,"line_end":338,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8538962,"byte_end":8539014,"line_start":339,"line_end":339,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::SendError","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539015,"byte_end":8539067,"line_start":340,"line_end":340,"column_start":1,"column_end":53}},{"value":"/ [`RecvError`]: crate::sync::broadcast::RecvError","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539068,"byte_end":8539120,"line_start":341,"line_end":341,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539121,"byte_end":8539124,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539125,"byte_end":8539139,"line_start":343,"line_end":343,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539140,"byte_end":8539143,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539144,"byte_end":8539151,"line_start":345,"line_end":345,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539152,"byte_end":8539183,"line_start":346,"line_end":346,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539184,"byte_end":8539187,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539188,"byte_end":8539206,"line_start":348,"line_end":348,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539207,"byte_end":8539228,"line_start":349,"line_end":349,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539229,"byte_end":8539280,"line_start":350,"line_end":350,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539281,"byte_end":8539318,"line_start":351,"line_end":351,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539319,"byte_end":8539322,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539323,"byte_end":8539356,"line_start":353,"line_end":353,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539357,"byte_end":8539411,"line_start":354,"line_end":354,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539412,"byte_end":8539466,"line_start":355,"line_end":355,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539467,"byte_end":8539478,"line_start":356,"line_end":356,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539479,"byte_end":8539482,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539483,"byte_end":8539516,"line_start":358,"line_end":358,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539517,"byte_end":8539571,"line_start":359,"line_end":359,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539572,"byte_end":8539626,"line_start":360,"line_end":360,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539627,"byte_end":8539638,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539639,"byte_end":8539642,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539643,"byte_end":8539672,"line_start":363,"line_end":363,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539673,"byte_end":8539702,"line_start":364,"line_end":364,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539703,"byte_end":8539708,"line_start":365,"line_end":365,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8539709,"byte_end":8539716,"line_start":366,"line_end":366,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5107},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543051,"byte_end":8543055,"line_start":473,"line_end":473,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn (&self, value: T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541201,"byte_end":8541275,"line_start":423,"line_end":423,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541280,"byte_end":8541316,"line_start":424,"line_end":424,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541321,"byte_end":8541324,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541329,"byte_end":8541404,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541409,"byte_end":8541475,"line_start":427,"line_end":427,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541480,"byte_end":8541531,"line_start":428,"line_end":428,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541536,"byte_end":8541539,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541544,"byte_end":8541556,"line_start":430,"line_end":430,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541561,"byte_end":8541564,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541569,"byte_end":8541643,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541648,"byte_end":8541724,"line_start":433,"line_end":433,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541729,"byte_end":8541782,"line_start":434,"line_end":434,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541787,"byte_end":8541790,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541795,"byte_end":8541805,"line_start":436,"line_end":436,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541810,"byte_end":8541813,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541818,"byte_end":8541890,"line_start":438,"line_end":438,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541895,"byte_end":8541970,"line_start":439,"line_end":439,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541975,"byte_end":8542036,"line_start":440,"line_end":440,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542041,"byte_end":8542044,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542049,"byte_end":8542122,"line_start":442,"line_end":442,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542127,"byte_end":8542192,"line_start":443,"line_end":443,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542197,"byte_end":8542215,"line_start":444,"line_end":444,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542220,"byte_end":8542223,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542228,"byte_end":8542278,"line_start":446,"line_end":446,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542283,"byte_end":8542343,"line_start":447,"line_end":447,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542348,"byte_end":8542351,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542356,"byte_end":8542370,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542375,"byte_end":8542378,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542383,"byte_end":8542390,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542395,"byte_end":8542426,"line_start":452,"line_end":452,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542431,"byte_end":8542434,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542439,"byte_end":8542457,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542462,"byte_end":8542483,"line_start":455,"line_end":455,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542488,"byte_end":8542539,"line_start":456,"line_end":456,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542544,"byte_end":8542581,"line_start":457,"line_end":457,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542586,"byte_end":8542589,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542594,"byte_end":8542627,"line_start":459,"line_end":459,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542632,"byte_end":8542686,"line_start":460,"line_end":460,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542691,"byte_end":8542745,"line_start":461,"line_end":461,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542750,"byte_end":8542761,"line_start":462,"line_end":462,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542766,"byte_end":8542769,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542774,"byte_end":8542807,"line_start":464,"line_end":464,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542812,"byte_end":8542866,"line_start":465,"line_end":465,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542871,"byte_end":8542925,"line_start":466,"line_end":466,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542930,"byte_end":8542941,"line_start":467,"line_end":467,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542946,"byte_end":8542949,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542954,"byte_end":8542983,"line_start":469,"line_end":469,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8542988,"byte_end":8543017,"line_start":470,"line_end":470,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543022,"byte_end":8543027,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543032,"byte_end":8543039,"line_start":472,"line_end":472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5109},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543814,"byte_end":8543823,"line_start":501,"line_end":501,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"fn (&self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Create a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543220,"byte_end":8543296,"line_start":478,"line_end":478,"column_start":5,"column_end":81}},{"value":"/ this call to `subscribe`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543301,"byte_end":8543330,"line_start":479,"line_end":479,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543335,"byte_end":8543338,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543343,"byte_end":8543357,"line_start":481,"line_end":481,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543362,"byte_end":8543365,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543370,"byte_end":8543377,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543382,"byte_end":8543413,"line_start":484,"line_end":484,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543418,"byte_end":8543421,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543426,"byte_end":8543444,"line_start":486,"line_end":486,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543449,"byte_end":8543470,"line_start":487,"line_end":487,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543475,"byte_end":8543522,"line_start":488,"line_end":488,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543527,"byte_end":8543530,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543535,"byte_end":8543562,"line_start":490,"line_end":490,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543567,"byte_end":8543596,"line_start":491,"line_end":491,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543601,"byte_end":8543604,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543609,"byte_end":8543645,"line_start":493,"line_end":493,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543650,"byte_end":8543653,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543658,"byte_end":8543687,"line_start":495,"line_end":495,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543692,"byte_end":8543695,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543700,"byte_end":8543745,"line_start":497,"line_end":497,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543750,"byte_end":8543780,"line_start":498,"line_end":498,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543785,"byte_end":8543790,"line_start":499,"line_end":499,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8543795,"byte_end":8543802,"line_start":500,"line_end":500,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5110},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545581,"byte_end":8545595,"line_start":562,"line_end":562,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8544429,"byte_end":8544471,"line_start":526,"line_end":526,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8544476,"byte_end":8544479,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8544484,"byte_end":8544560,"line_start":528,"line_end":528,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8544565,"byte_end":8544638,"line_start":529,"line_end":529,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8544643,"byte_end":8544663,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8544668,"byte_end":8544671,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8544676,"byte_end":8544686,"line_start":532,"line_end":532,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8544691,"byte_end":8544694,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8544699,"byte_end":8544769,"line_start":534,"line_end":534,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8544774,"byte_end":8544842,"line_start":535,"line_end":535,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8544847,"byte_end":8544860,"line_start":536,"line_end":536,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8544865,"byte_end":8544868,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8544873,"byte_end":8544925,"line_start":538,"line_end":538,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8544930,"byte_end":8544980,"line_start":539,"line_end":539,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8544985,"byte_end":8545031,"line_start":540,"line_end":540,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545036,"byte_end":8545096,"line_start":541,"line_end":541,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545101,"byte_end":8545149,"line_start":542,"line_end":542,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545154,"byte_end":8545157,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545162,"byte_end":8545176,"line_start":544,"line_end":544,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545181,"byte_end":8545184,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545189,"byte_end":8545196,"line_start":546,"line_end":546,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545201,"byte_end":8545232,"line_start":547,"line_end":547,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545237,"byte_end":8545240,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545245,"byte_end":8545263,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545268,"byte_end":8545289,"line_start":550,"line_end":550,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545294,"byte_end":8545342,"line_start":551,"line_end":551,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545347,"byte_end":8545350,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545355,"byte_end":8545398,"line_start":553,"line_end":553,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545403,"byte_end":8545406,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545411,"byte_end":8545449,"line_start":555,"line_end":555,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545454,"byte_end":8545457,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545462,"byte_end":8545505,"line_start":557,"line_end":557,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545510,"byte_end":8545513,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545518,"byte_end":8545547,"line_start":559,"line_end":559,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545552,"byte_end":8545557,"line_start":560,"line_end":560,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8545562,"byte_end":8545569,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5127},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8551101,"byte_end":8551109,"line_start":747,"line_end":747,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8549507,"byte_end":8549580,"line_start":708,"line_end":708,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8549585,"byte_end":8549588,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8549593,"byte_end":8549665,"line_start":710,"line_end":710,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8549670,"byte_end":8549694,"line_start":711,"line_end":711,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8549699,"byte_end":8549702,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of one","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8549707,"byte_end":8549787,"line_start":713,"line_end":713,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8549792,"byte_end":8549866,"line_start":714,"line_end":714,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8549871,"byte_end":8549874,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8549879,"byte_end":8549952,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8549957,"byte_end":8550031,"line_start":717,"line_end":717,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550036,"byte_end":8550039,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550044,"byte_end":8550120,"line_start":719,"line_end":719,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550125,"byte_end":8550201,"line_start":720,"line_end":720,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550206,"byte_end":8550277,"line_start":721,"line_end":721,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550282,"byte_end":8550355,"line_start":722,"line_end":722,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550360,"byte_end":8550433,"line_start":723,"line_end":723,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550438,"byte_end":8550509,"line_start":724,"line_end":724,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550514,"byte_end":8550566,"line_start":725,"line_end":725,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550571,"byte_end":8550574,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550579,"byte_end":8550631,"line_start":727,"line_end":727,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550636,"byte_end":8550686,"line_start":728,"line_end":728,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550691,"byte_end":8550694,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550699,"byte_end":8550713,"line_start":730,"line_end":730,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550718,"byte_end":8550721,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550726,"byte_end":8550733,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550738,"byte_end":8550769,"line_start":733,"line_end":733,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550774,"byte_end":8550777,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550782,"byte_end":8550800,"line_start":735,"line_end":735,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550805,"byte_end":8550826,"line_start":736,"line_end":736,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550831,"byte_end":8550881,"line_start":737,"line_end":737,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550886,"byte_end":8550889,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550894,"byte_end":8550934,"line_start":739,"line_end":739,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550939,"byte_end":8550942,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550947,"byte_end":8550976,"line_start":741,"line_end":741,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550981,"byte_end":8550984,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8550989,"byte_end":8551032,"line_start":743,"line_end":743,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8551037,"byte_end":8551067,"line_start":744,"line_end":744,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8551072,"byte_end":8551077,"line_start":745,"line_end":745,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8551082,"byte_end":8551089,"line_start":746,"line_end":746,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5128},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8551304,"byte_end":8551313,"line_start":753,"line_end":753,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<T, RecvError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5129},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553905,"byte_end":8553909,"line_start":831,"line_end":831,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"fn (&mut self) -> Result<T, RecvError>","parent":null,"children":[],"decl_id":null,"docs":" Receive the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receive the next value for this receiver.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8551690,"byte_end":8551735,"line_start":767,"line_end":767,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8551740,"byte_end":8551743,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8551748,"byte_end":8551816,"line_start":769,"line_end":769,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8551821,"byte_end":8551853,"line_start":770,"line_end":770,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8551858,"byte_end":8551861,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8551866,"byte_end":8551936,"line_start":772,"line_end":772,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8551941,"byte_end":8552015,"line_start":773,"line_end":773,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552020,"byte_end":8552023,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552028,"byte_end":8552104,"line_start":775,"line_end":775,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552109,"byte_end":8552185,"line_start":776,"line_end":776,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552190,"byte_end":8552258,"line_start":777,"line_end":777,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552263,"byte_end":8552336,"line_start":778,"line_end":778,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552341,"byte_end":8552410,"line_start":779,"line_end":779,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552415,"byte_end":8552460,"line_start":780,"line_end":780,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552465,"byte_end":8552468,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552473,"byte_end":8552523,"line_start":782,"line_end":782,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552528,"byte_end":8552580,"line_start":783,"line_end":783,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552585,"byte_end":8552588,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552593,"byte_end":8552607,"line_start":785,"line_end":785,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552612,"byte_end":8552615,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552620,"byte_end":8552627,"line_start":787,"line_end":787,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552632,"byte_end":8552663,"line_start":788,"line_end":788,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552668,"byte_end":8552671,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552676,"byte_end":8552694,"line_start":790,"line_end":790,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552699,"byte_end":8552720,"line_start":791,"line_end":791,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552725,"byte_end":8552776,"line_start":792,"line_end":792,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552781,"byte_end":8552818,"line_start":793,"line_end":793,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552823,"byte_end":8552826,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552831,"byte_end":8552864,"line_start":795,"line_end":795,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552869,"byte_end":8552923,"line_start":796,"line_end":796,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552928,"byte_end":8552982,"line_start":797,"line_end":797,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8552987,"byte_end":8552998,"line_start":798,"line_end":798,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553003,"byte_end":8553006,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553011,"byte_end":8553044,"line_start":800,"line_end":800,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553049,"byte_end":8553103,"line_start":801,"line_end":801,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553108,"byte_end":8553162,"line_start":802,"line_end":802,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553167,"byte_end":8553178,"line_start":803,"line_end":803,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553183,"byte_end":8553186,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553191,"byte_end":8553220,"line_start":805,"line_end":805,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553225,"byte_end":8553254,"line_start":806,"line_end":806,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553259,"byte_end":8553264,"line_start":807,"line_end":807,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553269,"byte_end":8553276,"line_start":808,"line_end":808,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553281,"byte_end":8553284,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553289,"byte_end":8553305,"line_start":810,"line_end":810,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553310,"byte_end":8553313,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553318,"byte_end":8553325,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553330,"byte_end":8553361,"line_start":813,"line_end":813,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553366,"byte_end":8553369,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553374,"byte_end":8553392,"line_start":815,"line_end":815,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553397,"byte_end":8553418,"line_start":816,"line_end":816,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553423,"byte_end":8553472,"line_start":817,"line_end":817,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553477,"byte_end":8553480,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553485,"byte_end":8553514,"line_start":819,"line_end":819,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553519,"byte_end":8553548,"line_start":820,"line_end":820,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553553,"byte_end":8553582,"line_start":821,"line_end":821,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553587,"byte_end":8553590,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553595,"byte_end":8553632,"line_start":823,"line_end":823,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553637,"byte_end":8553679,"line_start":824,"line_end":824,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553684,"byte_end":8553687,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553692,"byte_end":8553761,"line_start":826,"line_end":826,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553766,"byte_end":8553769,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553774,"byte_end":8553823,"line_start":828,"line_end":828,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553828,"byte_end":8553877,"line_start":829,"line_end":829,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8553882,"byte_end":8553887,"line_start":830,"line_end":830,"column_start":5,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":5169},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":5170},{"krate":0,"index":5243},{"krate":0,"index":5297},{"krate":0,"index":5301},{"krate":0,"index":5460},{"krate":0,"index":5506},{"krate":0,"index":5553},{"krate":0,"index":5557},{"krate":0,"index":5584}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":13612,"byte_end":13636,"line_start":199,"line_end":199,"column_start":13,"column_end":37}},{"value":"! A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8558428,"byte_end":8558497,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"! asynchronous tasks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8558498,"byte_end":8558521,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8558522,"byte_end":8558525,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! Similar to `std`, channel creation provides [`Receiver`] and [`Sender`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8558526,"byte_end":8558601,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"! handles. [`Receiver`] implements `Stream` and allows a task to read values","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8558602,"byte_end":8558680,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"! out of the channel. If there is no message to read, the current task will be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8558681,"byte_end":8558761,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"! notified when a new value is sent.  [`Sender`] implements the `Sink` trait","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8558762,"byte_end":8558840,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"! and allows sending messages into the channel. If the channel is at capacity,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8558841,"byte_end":8558921,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"! the send is rejected and the task will be notified when additional capacity","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8558922,"byte_end":8559001,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"! is available. In other words, the channel provides backpressure.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559002,"byte_end":8559070,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559071,"byte_end":8559074,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! Unbounded channels are also available using the `unbounded_channel`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559075,"byte_end":8559146,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"! constructor.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559147,"byte_end":8559163,"line_start":15,"line_end":15,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559164,"byte_end":8559167,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! # Disconnection","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559168,"byte_end":8559187,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559188,"byte_end":8559191,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559192,"byte_end":8559258,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"! possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559259,"byte_end":8559339,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"! event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559340,"byte_end":8559417,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559418,"byte_end":8559421,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559422,"byte_end":8559492,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"! be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559493,"byte_end":8559572,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"! result in an error.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559573,"byte_end":8559596,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559597,"byte_end":8559600,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! # Clean Shutdown","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559601,"byte_end":8559621,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559622,"byte_end":8559625,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559626,"byte_end":8559706,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"! remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559707,"byte_end":8559787,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"! shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559788,"byte_end":8559866,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"! any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559867,"byte_end":8559939,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"! consumes the channel to completion, at which point the receiver can be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8559940,"byte_end":8560014,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"! dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8560015,"byte_end":8560027,"line_start":34,"line_end":34,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8560028,"byte_end":8560031,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: struct.Sender.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8560032,"byte_end":8560066,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"! [`Receiver`]: struct.Receiver.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8560067,"byte_end":8560105,"line_start":37,"line_end":37,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":5255},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8573872,"byte_end":8573878,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5257}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8573739,"byte_end":8573784,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8573785,"byte_end":8573788,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn.channel.html) function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8573789,"byte_end":8573860,"line_start":10,"line_end":10,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":5264},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8574395,"byte_end":8574403,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5266}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8574259,"byte_end":8574307,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8574308,"byte_end":8574311,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn.channel.html) function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8574312,"byte_end":8574383,"line_start":33,"line_end":33,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":5270},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575790,"byte_end":8575797,"line_start":83,"line_end":83,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"fn <T> (buffer: usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded mpsc channel for communicating between asynchronous tasks,\n returning the sender/receiver halves.","sig":null,"attributes":[{"value":"/ Create a bounded mpsc channel for communicating between asynchronous tasks,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8574684,"byte_end":8574763,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ returning the sender/receiver halves.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8574764,"byte_end":8574805,"line_start":48,"line_end":48,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8574806,"byte_end":8574809,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8574810,"byte_end":8574887,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8574888,"byte_end":8574913,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8574914,"byte_end":8574917,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8574918,"byte_end":8574997,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8574998,"byte_end":8575046,"line_start":54,"line_end":54,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575047,"byte_end":8575050,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575051,"byte_end":8575130,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575131,"byte_end":8575206,"line_start":57,"line_end":57,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575207,"byte_end":8575273,"line_start":58,"line_end":58,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575274,"byte_end":8575277,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575278,"byte_end":8575292,"line_start":60,"line_end":60,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575293,"byte_end":8575296,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575297,"byte_end":8575308,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575309,"byte_end":8575335,"line_start":63,"line_end":63,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575336,"byte_end":8575339,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575340,"byte_end":8575358,"line_start":65,"line_end":65,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575359,"byte_end":8575380,"line_start":66,"line_end":66,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575381,"byte_end":8575431,"line_start":67,"line_end":67,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575432,"byte_end":8575435,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575436,"byte_end":8575469,"line_start":69,"line_end":69,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575470,"byte_end":8575498,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575499,"byte_end":8575549,"line_start":71,"line_end":71,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575550,"byte_end":8575599,"line_start":72,"line_end":72,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575600,"byte_end":8575627,"line_start":73,"line_end":73,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575628,"byte_end":8575645,"line_start":74,"line_end":74,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575646,"byte_end":8575659,"line_start":75,"line_end":75,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575660,"byte_end":8575671,"line_start":76,"line_end":76,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575672,"byte_end":8575675,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575676,"byte_end":8575721,"line_start":78,"line_end":78,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575722,"byte_end":8575758,"line_start":79,"line_end":79,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575759,"byte_end":8575768,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575769,"byte_end":8575774,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8575775,"byte_end":8575782,"line_start":82,"line_end":82,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5276},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577478,"byte_end":8577482,"line_start":142,"line_end":142,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Receive the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receive the next value for this receiver.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576397,"byte_end":8576442,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576447,"byte_end":8576450,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576455,"byte_end":8576527,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576532,"byte_end":8576586,"line_start":106,"line_end":106,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576591,"byte_end":8576594,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576599,"byte_end":8576613,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576618,"byte_end":8576621,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576626,"byte_end":8576633,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576638,"byte_end":8576664,"line_start":111,"line_end":111,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576669,"byte_end":8576672,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576677,"byte_end":8576695,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576700,"byte_end":8576721,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576726,"byte_end":8576776,"line_start":115,"line_end":115,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576781,"byte_end":8576784,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576789,"byte_end":8576822,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576827,"byte_end":8576871,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576876,"byte_end":8576887,"line_start":119,"line_end":119,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576892,"byte_end":8576895,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576900,"byte_end":8576951,"line_start":121,"line_end":121,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576956,"byte_end":8576998,"line_start":122,"line_end":122,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577003,"byte_end":8577008,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577013,"byte_end":8577020,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577025,"byte_end":8577028,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577033,"byte_end":8577057,"line_start":126,"line_end":126,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577062,"byte_end":8577065,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577070,"byte_end":8577077,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577082,"byte_end":8577108,"line_start":129,"line_end":129,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577113,"byte_end":8577116,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577121,"byte_end":8577139,"line_start":131,"line_end":131,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577144,"byte_end":8577165,"line_start":132,"line_end":132,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577170,"byte_end":8577220,"line_start":133,"line_end":133,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577225,"byte_end":8577228,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577233,"byte_end":8577273,"line_start":135,"line_end":135,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577278,"byte_end":8577318,"line_start":136,"line_end":136,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577323,"byte_end":8577326,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577331,"byte_end":8577382,"line_start":138,"line_end":138,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577387,"byte_end":8577438,"line_start":139,"line_end":139,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577443,"byte_end":8577448,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577453,"byte_end":8577460,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5281},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577648,"byte_end":8577657,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5282},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8578313,"byte_end":8578321,"line_start":164,"line_end":164,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577750,"byte_end":8577823,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577828,"byte_end":8577831,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577836,"byte_end":8577908,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577913,"byte_end":8577984,"line_start":156,"line_end":156,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8577989,"byte_end":8578042,"line_start":157,"line_end":157,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8578047,"byte_end":8578050,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8578055,"byte_end":8578127,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8578132,"byte_end":8578156,"line_start":160,"line_end":160,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8578161,"byte_end":8578164,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8578169,"byte_end":8578239,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8578244,"byte_end":8578301,"line_start":163,"line_end":163,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5283},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8578639,"byte_end":8578644,"line_start":172,"line_end":172,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8578402,"byte_end":8578466,"line_start":168,"line_end":168,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8578471,"byte_end":8578474,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8578479,"byte_end":8578554,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8578559,"byte_end":8578627,"line_start":171,"line_end":171,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5289},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8579134,"byte_end":8579144,"line_start":195,"line_end":195,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<(), ClosedError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5291},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581601,"byte_end":8581609,"line_start":261,"line_end":261,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"fn (&mut self, message: T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8579289,"byte_end":8579348,"line_start":199,"line_end":199,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8579353,"byte_end":8579356,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8579361,"byte_end":8579440,"line_start":201,"line_end":201,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8579445,"byte_end":8579520,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8579525,"byte_end":8579603,"line_start":203,"line_end":203,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8579608,"byte_end":8579650,"line_start":204,"line_end":204,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8579655,"byte_end":8579658,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This function may be paired with [`poll_ready`] in order to wait for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8579663,"byte_end":8579735,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ channel capacity before trying to send a value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8579740,"byte_end":8579791,"line_start":207,"line_end":207,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8579796,"byte_end":8579799,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8579804,"byte_end":8579816,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8579821,"byte_end":8579824,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8579829,"byte_end":8579900,"line_start":211,"line_end":211,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8579905,"byte_end":8579981,"line_start":212,"line_end":212,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8579986,"byte_end":8580008,"line_start":213,"line_end":213,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580013,"byte_end":8580016,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580021,"byte_end":8580094,"line_start":215,"line_end":215,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580099,"byte_end":8580173,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580178,"byte_end":8580238,"line_start":217,"line_end":217,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580243,"byte_end":8580246,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580251,"byte_end":8580277,"line_start":219,"line_end":219,"column_start":5,"column_end":31}},{"value":"/ [`poll_ready`]: Sender::poll_ready","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580282,"byte_end":8580320,"line_start":220,"line_end":220,"column_start":5,"column_end":43}},{"value":"/ [`channel`]: channel","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580325,"byte_end":8580349,"line_start":221,"line_end":221,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580354,"byte_end":8580384,"line_start":222,"line_end":222,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580389,"byte_end":8580392,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580397,"byte_end":8580411,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580416,"byte_end":8580419,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580424,"byte_end":8580431,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580436,"byte_end":8580462,"line_start":227,"line_end":227,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580467,"byte_end":8580470,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580475,"byte_end":8580493,"line_start":229,"line_end":229,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580498,"byte_end":8580519,"line_start":230,"line_end":230,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580524,"byte_end":8580570,"line_start":231,"line_end":231,"column_start":5,"column_end":51}},{"value":"/     let (mut tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580575,"byte_end":8580624,"line_start":232,"line_end":232,"column_start":5,"column_end":54}},{"value":"/     let mut tx2 = tx1.clone();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580629,"byte_end":8580663,"line_start":233,"line_end":233,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580668,"byte_end":8580671,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580676,"byte_end":8580709,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580714,"byte_end":8580753,"line_start":236,"line_end":236,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580758,"byte_end":8580797,"line_start":237,"line_end":237,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580802,"byte_end":8580864,"line_start":238,"line_end":238,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580869,"byte_end":8580880,"line_start":239,"line_end":239,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580885,"byte_end":8580888,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580893,"byte_end":8580926,"line_start":241,"line_end":241,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580931,"byte_end":8580980,"line_start":242,"line_end":242,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8580985,"byte_end":8581032,"line_start":243,"line_end":243,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581037,"byte_end":8581073,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581078,"byte_end":8581089,"line_start":245,"line_end":245,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581094,"byte_end":8581097,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581102,"byte_end":8581122,"line_start":247,"line_end":247,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581127,"byte_end":8581166,"line_start":248,"line_end":248,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581171,"byte_end":8581216,"line_start":249,"line_end":249,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581221,"byte_end":8581224,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581229,"byte_end":8581268,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581273,"byte_end":8581318,"line_start":252,"line_end":252,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581323,"byte_end":8581326,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581331,"byte_end":8581380,"line_start":254,"line_end":254,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581385,"byte_end":8581416,"line_start":255,"line_end":255,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581421,"byte_end":8581483,"line_start":256,"line_end":256,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581488,"byte_end":8581553,"line_start":257,"line_end":257,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581558,"byte_end":8581567,"line_start":258,"line_end":258,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581572,"byte_end":8581577,"line_start":259,"line_end":259,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581582,"byte_end":8581589,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5292},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8583373,"byte_end":8583377,"line_start":311,"line_end":311,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"fn (&mut self, value: T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Send a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Send a value, waiting until there is capacity.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581730,"byte_end":8581780,"line_start":266,"line_end":266,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581785,"byte_end":8581788,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581793,"byte_end":8581869,"line_start":268,"line_end":268,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581874,"byte_end":8581950,"line_start":269,"line_end":269,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8581955,"byte_end":8582029,"line_start":270,"line_end":270,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582034,"byte_end":8582109,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582114,"byte_end":8582183,"line_start":272,"line_end":272,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582188,"byte_end":8582260,"line_start":273,"line_end":273,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582265,"byte_end":8582296,"line_start":274,"line_end":274,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582301,"byte_end":8582304,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582309,"byte_end":8582321,"line_start":276,"line_end":276,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582326,"byte_end":8582329,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582334,"byte_end":8582407,"line_start":278,"line_end":278,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582412,"byte_end":8582486,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582491,"byte_end":8582551,"line_start":280,"line_end":280,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582556,"byte_end":8582559,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582564,"byte_end":8582594,"line_start":282,"line_end":282,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582599,"byte_end":8582625,"line_start":283,"line_end":283,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582630,"byte_end":8582633,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582638,"byte_end":8582652,"line_start":285,"line_end":285,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582657,"byte_end":8582660,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582665,"byte_end":8582735,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582740,"byte_end":8582779,"line_start":288,"line_end":288,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582784,"byte_end":8582787,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582792,"byte_end":8582803,"line_start":290,"line_end":290,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582808,"byte_end":8582834,"line_start":291,"line_end":291,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582839,"byte_end":8582842,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582847,"byte_end":8582865,"line_start":293,"line_end":293,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582870,"byte_end":8582891,"line_start":294,"line_end":294,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582896,"byte_end":8582944,"line_start":295,"line_end":295,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582949,"byte_end":8582952,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582957,"byte_end":8582990,"line_start":297,"line_end":297,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8582995,"byte_end":8583023,"line_start":298,"line_end":298,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8583028,"byte_end":8583078,"line_start":299,"line_end":299,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8583083,"byte_end":8583132,"line_start":300,"line_end":300,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8583137,"byte_end":8583164,"line_start":301,"line_end":301,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8583169,"byte_end":8583186,"line_start":302,"line_end":302,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8583191,"byte_end":8583204,"line_start":303,"line_end":303,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8583209,"byte_end":8583220,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8583225,"byte_end":8583228,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8583233,"byte_end":8583278,"line_start":306,"line_end":306,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8583283,"byte_end":8583319,"line_start":307,"line_end":307,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8583324,"byte_end":8583333,"line_start":308,"line_end":308,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8583338,"byte_end":8583343,"line_start":309,"line_end":309,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8583348,"byte_end":8583355,"line_start":310,"line_end":310,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":5347},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8585629,"byte_end":8585635,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Permit","qualname":"::sync::mpsc::chan::Semaphore::Permit","value":"type Permit;","parent":{"krate":0,"index":5346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5516},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8608487,"byte_end":8608502,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":5518}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8608321,"byte_end":8608375,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8608376,"byte_end":8608379,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8608380,"byte_end":8608412,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](fn.unbounded_channel.html) function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8608413,"byte_end":8608475,"line_start":11,"line_end":11,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":5525},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8609088,"byte_end":8609105,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":5527}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8608919,"byte_end":8608976,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8608977,"byte_end":8608980,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8608981,"byte_end":8609013,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](fn.unbounded_channel.html) function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8609014,"byte_end":8609076,"line_start":35,"line_end":35,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":5531},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8609915,"byte_end":8609932,"line_start":59,"line_end":59,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"fn <T> () -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8609404,"byte_end":8609479,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ tasks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8609480,"byte_end":8609490,"line_start":50,"line_end":50,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8609491,"byte_end":8609494,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8609495,"byte_end":8609575,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8609576,"byte_end":8609655,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8609656,"byte_end":8609669,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8609670,"byte_end":8609673,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8609674,"byte_end":8609753,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8609754,"byte_end":8609830,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8609831,"byte_end":8609907,"line_start":58,"line_end":58,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5537},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610380,"byte_end":8610389,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5538},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611551,"byte_end":8611555,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Receive the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receive the next value for this receiver.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610482,"byte_end":8610527,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610532,"byte_end":8610535,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610540,"byte_end":8610612,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610617,"byte_end":8610671,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610676,"byte_end":8610679,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610684,"byte_end":8610698,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610703,"byte_end":8610706,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610711,"byte_end":8610718,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610723,"byte_end":8610749,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610754,"byte_end":8610757,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610762,"byte_end":8610780,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610785,"byte_end":8610806,"line_start":92,"line_end":92,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610811,"byte_end":8610864,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610869,"byte_end":8610872,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610877,"byte_end":8610910,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610915,"byte_end":8610953,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610958,"byte_end":8610969,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610974,"byte_end":8610977,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610982,"byte_end":8611033,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611038,"byte_end":8611080,"line_start":100,"line_end":100,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611085,"byte_end":8611090,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611095,"byte_end":8611102,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611107,"byte_end":8611110,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611115,"byte_end":8611139,"line_start":104,"line_end":104,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611144,"byte_end":8611147,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611152,"byte_end":8611159,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611164,"byte_end":8611190,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611195,"byte_end":8611198,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611203,"byte_end":8611221,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611226,"byte_end":8611247,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611252,"byte_end":8611305,"line_start":111,"line_end":111,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611310,"byte_end":8611313,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611318,"byte_end":8611352,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611357,"byte_end":8611391,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611396,"byte_end":8611399,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611404,"byte_end":8611455,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611460,"byte_end":8611511,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611516,"byte_end":8611521,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611526,"byte_end":8611533,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5543},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8612240,"byte_end":8612248,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnboundedReceiver<T>>::try_recv","value":"fn (&mut self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611677,"byte_end":8611750,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611755,"byte_end":8611758,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611763,"byte_end":8611835,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611840,"byte_end":8611911,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611916,"byte_end":8611969,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611974,"byte_end":8611977,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8611982,"byte_end":8612054,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8612059,"byte_end":8612083,"line_start":133,"line_end":133,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8612088,"byte_end":8612091,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8612096,"byte_end":8612166,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8612171,"byte_end":8612228,"line_start":136,"line_end":136,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5544},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8612566,"byte_end":8612571,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8612329,"byte_end":8612393,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8612398,"byte_end":8612401,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8612406,"byte_end":8612481,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8612486,"byte_end":8612554,"line_start":144,"line_end":144,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5552},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8613092,"byte_end":8613096,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"fn (&self, message: T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.\n","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8613006,"byte_end":8613080,"line_start":164,"line_end":164,"column_start":5,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":5557},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","parent":null,"children":[{"krate":0,"index":5558},{"krate":0,"index":5559},{"krate":0,"index":6104},{"krate":0,"index":6108},{"krate":0,"index":5560},{"krate":0,"index":5563},{"krate":0,"index":6111},{"krate":0,"index":6119},{"krate":0,"index":5565},{"krate":0,"index":5567},{"krate":0,"index":5570},{"krate":0,"index":6122},{"krate":0,"index":6125},{"krate":0,"index":5573},{"krate":0,"index":5575},{"krate":0,"index":6127},{"krate":0,"index":6132},{"krate":0,"index":5576},{"krate":0,"index":5578},{"krate":0,"index":6134},{"krate":0,"index":6137},{"krate":0,"index":5579},{"krate":0,"index":5581},{"krate":0,"index":5583}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"! Channel error types","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8613214,"byte_end":8613237,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6104},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8613341,"byte_end":8613350,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8613277,"byte_end":8613312,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6113},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8613905,"byte_end":8613909,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":6111},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8613773,"byte_end":8613841,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8613846,"byte_end":8613900,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6116},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8614010,"byte_end":8614016,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":6111},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8613919,"byte_end":8613988,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8613993,"byte_end":8614005,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":6111},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8613751,"byte_end":8613763,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"TrySendError::{Full, Closed}","parent":null,"children":[{"krate":0,"index":6113},{"krate":0,"index":6116}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8613605,"byte_end":8613676,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8613677,"byte_end":8613724,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6122},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8614654,"byte_end":8614663,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8614592,"byte_end":8614625,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6128},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8615157,"byte_end":8615162,"line_start":76,"line_end":76,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::mpsc::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6127},"children":[],"decl_id":null,"docs":" This channel is currently empty, but the Sender(s) have not yet\n disconnected, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ This channel is currently empty, but the Sender(s) have not yet","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8615029,"byte_end":8615096,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ disconnected, so data may yet become available.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8615101,"byte_end":8615152,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6130},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8615282,"byte_end":8615288,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6127},"children":[],"decl_id":null,"docs":" The channel's sending half has been closed, and there will\n never be any more data received on it.\n","sig":null,"attributes":[{"value":"/ The channel's sending half has been closed, and there will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8615168,"byte_end":8615230,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"/ never be any more data received on it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8615235,"byte_end":8615277,"line_start":78,"line_end":78,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":6127},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8615010,"byte_end":8615022,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::mpsc::error::TryRecvError","value":"TryRecvError::{Empty, Closed}","parent":null,"children":[{"krate":0,"index":6128},{"krate":0,"index":6130}],"decl_id":null,"docs":" This enumeration is the list of the possible reasons that try_recv\n could not return data when called.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible reasons that try_recv","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8614874,"byte_end":8614944,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ could not return data when called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8614945,"byte_end":8614983,"line_start":71,"line_end":71,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":6134},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8615780,"byte_end":8615791,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"ClosedError","qualname":"::sync::mpsc::error::ClosedError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Erorr returned by [`Sender::poll_ready`](super::Sender::poll_ready)].\n","sig":null,"attributes":[{"value":"/ Erorr returned by [`Sender::poll_ready`](super::Sender::poll_ready)].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8615678,"byte_end":8615751,"line_start":99,"line_end":99,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6139},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8617837,"byte_end":8617842,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":6141},{"krate":0,"index":6142}],"decl_id":null,"docs":" An asynchronous mutual exclusion primitive useful for protecting shared data","sig":null,"attributes":[{"value":"/ An asynchronous mutual exclusion primitive useful for protecting shared data","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8617470,"byte_end":8617550,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8617551,"byte_end":8617554,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Each mutex has a type parameter (`T`) which represents the data that it is protecting. The data","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8617555,"byte_end":8617654,"line_start":47,"line_end":47,"column_start":1,"column_end":100}},{"value":"/ can only be accessed through the RAII guards returned from `lock`, which","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8617655,"byte_end":8617731,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ guarantees that the data is only ever accessed when the mutex is locked.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8617732,"byte_end":8617808,"line_start":49,"line_end":49,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":5594},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618301,"byte_end":8618311,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":5597},{"krate":0,"index":5598}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8617902,"byte_end":8617933,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8617934,"byte_end":8617937,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying `T`. The guard","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8617938,"byte_end":8618032,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/ internally keeps a reference-couned pointer to the original `Mutex`, so even if the lock goes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618033,"byte_end":8618130,"line_start":59,"line_end":59,"column_start":1,"column_end":98}},{"value":"/ away, the guard remains valid.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618131,"byte_end":8618165,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618166,"byte_end":8618169,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which point `lock`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618170,"byte_end":8618261,"line_start":62,"line_end":62,"column_start":1,"column_end":92}},{"value":"/ will succeed yet again.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618262,"byte_end":8618289,"line_start":63,"line_end":63,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6146},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618946,"byte_end":8618958,"line_start":82,"line_end":82,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618738,"byte_end":8618795,"line_start":76,"line_end":76,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618796,"byte_end":8618799,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ A `try_lock` operation can only fail if the mutex is already locked.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618800,"byte_end":8618872,"line_start":78,"line_end":78,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618873,"byte_end":8618876,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618877,"byte_end":8618917,"line_start":80,"line_end":80,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":5611},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8619358,"byte_end":8619361,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"fn (t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.\n","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8619288,"byte_end":8619346,"line_start":100,"line_end":100,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5612},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8619590,"byte_end":8619594,"line_start":109,"line_end":109,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"fn (&self) -> MutexGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" A future that resolves on acquiring the lock and returns the `MutexGuard`.\n","sig":null,"attributes":[{"value":"/ A future that resolves on acquiring the lock and returns the `MutexGuard`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8619494,"byte_end":8619572,"line_start":108,"line_end":108,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5617},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8620151,"byte_end":8620159,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn (&self) -> Result<MutexGuard<'_, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Try to acquire the lock\n","sig":null,"attributes":[{"value":"/ Try to acquire the lock","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8620112,"byte_end":8620139,"line_start":124,"line_end":124,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":5648},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":5649},{"krate":0,"index":5650},{"krate":0,"index":5651},{"krate":0,"index":5652},{"krate":0,"index":5653},{"krate":0,"index":5654},{"krate":0,"index":5655},{"krate":0,"index":5656},{"krate":0,"index":5660},{"krate":0,"index":5663},{"krate":0,"index":6151},{"krate":0,"index":6154},{"krate":0,"index":6157},{"krate":0,"index":6160},{"krate":0,"index":5667},{"krate":0,"index":5675},{"krate":0,"index":5676},{"krate":0,"index":6175},{"krate":0,"index":6179},{"krate":0,"index":6178},{"krate":0,"index":5682},{"krate":0,"index":5684},{"krate":0,"index":5697},{"krate":0,"index":5700},{"krate":0,"index":5704},{"krate":0,"index":5707},{"krate":0,"index":5711},{"krate":0,"index":5735},{"krate":0,"index":5737},{"krate":0,"index":5739},{"krate":0,"index":5742},{"krate":0,"index":5746},{"krate":0,"index":5747},{"krate":0,"index":5748},{"krate":0,"index":5749},{"krate":0,"index":5750},{"krate":0,"index":5764}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":13612,"byte_end":13636,"line_start":199,"line_end":199,"column_start":13,"column_end":37}},{"value":"! A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8621557,"byte_end":8621627,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":6151},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622111,"byte_end":8622117,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6153}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8621959,"byte_end":8622006,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622007,"byte_end":8622010,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn.channel.html) function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622011,"byte_end":8622082,"line_start":19,"line_end":19,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":6157},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622314,"byte_end":8622322,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6159}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622160,"byte_end":8622209,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622210,"byte_end":8622213,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn.channel.html) function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622214,"byte_end":8622285,"line_start":27,"line_end":27,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":5667},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622373,"byte_end":8622378,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":5668},{"krate":0,"index":6163},{"krate":0,"index":6166},{"krate":0,"index":6168},{"krate":0,"index":6173},{"krate":0,"index":5669},{"krate":0,"index":5671},{"krate":0,"index":5672},{"krate":0,"index":5674}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"! Oneshot error types","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622385,"byte_end":8622408,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6163},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622535,"byte_end":8622544,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622433,"byte_end":8622498,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6169},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622751,"byte_end":8622756,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6168},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622684,"byte_end":8622742,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6171},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622845,"byte_end":8622851,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6168},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622767,"byte_end":8622836,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":6168},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622661,"byte_end":8622673,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"TryRecvError::{Empty, Closed}","parent":null,"children":[{"krate":0,"index":6169},{"krate":0,"index":6171}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622566,"byte_end":8622626,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":5682},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624852,"byte_end":8624859,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"fn <T> () -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624037,"byte_end":8624116,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624117,"byte_end":8624127,"line_start":97,"line_end":97,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624128,"byte_end":8624131,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624132,"byte_end":8624208,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624209,"byte_end":8624287,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624288,"byte_end":8624334,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624335,"byte_end":8624338,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624339,"byte_end":8624385,"line_start":103,"line_end":103,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624386,"byte_end":8624389,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624390,"byte_end":8624404,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624405,"byte_end":8624408,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624409,"byte_end":8624416,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624417,"byte_end":8624446,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624447,"byte_end":8624450,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624451,"byte_end":8624469,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624470,"byte_end":8624491,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624492,"byte_end":8624534,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624535,"byte_end":8624538,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624539,"byte_end":8624572,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624573,"byte_end":8624613,"line_start":115,"line_end":115,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624614,"byte_end":8624663,"line_start":116,"line_end":116,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624664,"byte_end":8624677,"line_start":117,"line_end":117,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624678,"byte_end":8624689,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624690,"byte_end":8624693,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624694,"byte_end":8624718,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624719,"byte_end":8624766,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624767,"byte_end":8624820,"line_start":122,"line_end":122,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624821,"byte_end":8624830,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624831,"byte_end":8624836,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8624837,"byte_end":8624844,"line_start":125,"line_end":125,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5686},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626658,"byte_end":8626662,"line_start":181,"line_end":181,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn (mut self, t: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8625324,"byte_end":8625399,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8625404,"byte_end":8625420,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8625425,"byte_end":8625428,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The function consumes `self` as only one value may ever be sent on a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8625433,"byte_end":8625505,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ one-shot channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8625510,"byte_end":8625531,"line_start":148,"line_end":148,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8625536,"byte_end":8625539,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8625544,"byte_end":8625620,"line_start":150,"line_end":150,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8625625,"byte_end":8625701,"line_start":151,"line_end":151,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8625706,"byte_end":8625778,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8625783,"byte_end":8625856,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8625861,"byte_end":8625935,"line_start":154,"line_end":154,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8625940,"byte_end":8626012,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626017,"byte_end":8626054,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626059,"byte_end":8626062,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626067,"byte_end":8626081,"line_start":158,"line_end":158,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626086,"byte_end":8626089,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626094,"byte_end":8626126,"line_start":160,"line_end":160,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626131,"byte_end":8626134,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626139,"byte_end":8626146,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626151,"byte_end":8626180,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626185,"byte_end":8626188,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626193,"byte_end":8626211,"line_start":165,"line_end":165,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626216,"byte_end":8626237,"line_start":166,"line_end":166,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626242,"byte_end":8626284,"line_start":167,"line_end":167,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626289,"byte_end":8626292,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626297,"byte_end":8626330,"line_start":169,"line_end":169,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626335,"byte_end":8626375,"line_start":170,"line_end":170,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626380,"byte_end":8626429,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626434,"byte_end":8626447,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626452,"byte_end":8626463,"line_start":173,"line_end":173,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626468,"byte_end":8626471,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626476,"byte_end":8626500,"line_start":175,"line_end":175,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626505,"byte_end":8626552,"line_start":176,"line_end":176,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626557,"byte_end":8626610,"line_start":177,"line_end":177,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626615,"byte_end":8626624,"line_start":178,"line_end":178,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626629,"byte_end":8626634,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8626639,"byte_end":8626646,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5689},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8627063,"byte_end":8627074,"line_start":198,"line_end":198,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5691},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630105,"byte_end":8630111,"line_start":307,"line_end":307,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Wait for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Wait for the associated [`Receiver`] handle to close.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628221,"byte_end":8628278,"line_start":240,"line_end":240,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628283,"byte_end":8628286,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628291,"byte_end":8628365,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628370,"byte_end":8628404,"line_start":243,"line_end":243,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628409,"byte_end":8628412,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628417,"byte_end":8628482,"line_start":245,"line_end":245,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628487,"byte_end":8628559,"line_start":246,"line_end":246,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628564,"byte_end":8628567,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628572,"byte_end":8628584,"line_start":248,"line_end":248,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628589,"byte_end":8628592,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628597,"byte_end":8628645,"line_start":250,"line_end":250,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628650,"byte_end":8628653,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628658,"byte_end":8628684,"line_start":252,"line_end":252,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628689,"byte_end":8628719,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628724,"byte_end":8628727,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628732,"byte_end":8628746,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628751,"byte_end":8628754,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628759,"byte_end":8628774,"line_start":257,"line_end":257,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628779,"byte_end":8628782,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628787,"byte_end":8628794,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628799,"byte_end":8628828,"line_start":260,"line_end":260,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628833,"byte_end":8628836,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628841,"byte_end":8628859,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628864,"byte_end":8628885,"line_start":263,"line_end":263,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628890,"byte_end":8628942,"line_start":264,"line_end":264,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628947,"byte_end":8628950,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628955,"byte_end":8628988,"line_start":266,"line_end":266,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8628993,"byte_end":8629014,"line_start":267,"line_end":267,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629019,"byte_end":8629030,"line_start":268,"line_end":268,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629035,"byte_end":8629038,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629043,"byte_end":8629069,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629074,"byte_end":8629115,"line_start":271,"line_end":271,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629120,"byte_end":8629125,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629130,"byte_end":8629137,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629142,"byte_end":8629145,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629150,"byte_end":8629172,"line_start":275,"line_end":275,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629177,"byte_end":8629180,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629185,"byte_end":8629192,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629197,"byte_end":8629226,"line_start":278,"line_end":278,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629231,"byte_end":8629269,"line_start":279,"line_end":279,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629274,"byte_end":8629277,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ use futures::{select, FutureExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629282,"byte_end":8629319,"line_start":281,"line_end":281,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629324,"byte_end":8629327,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629332,"byte_end":8629366,"line_start":283,"line_end":283,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629371,"byte_end":8629422,"line_start":284,"line_end":284,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629427,"byte_end":8629452,"line_start":285,"line_end":285,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629457,"byte_end":8629462,"line_start":286,"line_end":286,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629467,"byte_end":8629470,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629475,"byte_end":8629493,"line_start":288,"line_end":288,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629498,"byte_end":8629519,"line_start":289,"line_end":289,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629524,"byte_end":8629570,"line_start":290,"line_end":290,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629575,"byte_end":8629578,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629583,"byte_end":8629616,"line_start":292,"line_end":292,"column_start":5,"column_end":38}},{"value":"/         select! {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629621,"byte_end":8629642,"line_start":293,"line_end":293,"column_start":5,"column_end":26}},{"value":"/             _ = tx.closed().fuse() => {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629647,"byte_end":8629690,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629695,"byte_end":8629770,"line_start":295,"line_end":295,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629775,"byte_end":8629792,"line_start":296,"line_end":296,"column_start":5,"column_end":22}},{"value":"/             value = compute().fuse() => {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629797,"byte_end":8629842,"line_start":297,"line_end":297,"column_start":5,"column_end":50}},{"value":"/                 tx.send(value).unwrap()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629847,"byte_end":8629890,"line_start":298,"line_end":298,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629895,"byte_end":8629912,"line_start":299,"line_end":299,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629917,"byte_end":8629930,"line_start":300,"line_end":300,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629935,"byte_end":8629946,"line_start":301,"line_end":301,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629951,"byte_end":8629954,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8629959,"byte_end":8629995,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630000,"byte_end":8630065,"line_start":304,"line_end":304,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630070,"byte_end":8630075,"line_start":305,"line_end":305,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630080,"byte_end":8630087,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5696},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630981,"byte_end":8630990,"line_start":340,"line_end":340,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630222,"byte_end":8630296,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630301,"byte_end":8630304,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630309,"byte_end":8630383,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630388,"byte_end":8630422,"line_start":316,"line_end":316,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630427,"byte_end":8630430,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630435,"byte_end":8630510,"line_start":318,"line_end":318,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630515,"byte_end":8630518,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630523,"byte_end":8630549,"line_start":320,"line_end":320,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630554,"byte_end":8630584,"line_start":321,"line_end":321,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630589,"byte_end":8630592,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630597,"byte_end":8630611,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630616,"byte_end":8630619,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630624,"byte_end":8630631,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630636,"byte_end":8630665,"line_start":326,"line_end":326,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630670,"byte_end":8630673,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630678,"byte_end":8630696,"line_start":328,"line_end":328,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630701,"byte_end":8630722,"line_start":329,"line_end":329,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630727,"byte_end":8630769,"line_start":330,"line_end":330,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630774,"byte_end":8630777,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630782,"byte_end":8630815,"line_start":332,"line_end":332,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630820,"byte_end":8630823,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630828,"byte_end":8630845,"line_start":334,"line_end":334,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630850,"byte_end":8630853,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630858,"byte_end":8630890,"line_start":336,"line_end":336,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630895,"byte_end":8630947,"line_start":337,"line_end":337,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630952,"byte_end":8630957,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8630962,"byte_end":8630969,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5702},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632931,"byte_end":8632936,"line_start":412,"line_end":412,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prevent the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevent the associated [`Sender`] handle from sending a value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631330,"byte_end":8631396,"line_start":357,"line_end":357,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631401,"byte_end":8631404,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631409,"byte_end":8631483,"line_start":359,"line_end":359,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, `Receiver::poll`] should be called to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631488,"byte_end":8631561,"line_start":360,"line_end":360,"column_start":5,"column_end":78}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631566,"byte_end":8631632,"line_start":361,"line_end":361,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631637,"byte_end":8631651,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631656,"byte_end":8631659,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631664,"byte_end":8631740,"line_start":364,"line_end":364,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631745,"byte_end":8631808,"line_start":365,"line_end":365,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631813,"byte_end":8631816,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631821,"byte_end":8631843,"line_start":367,"line_end":367,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631848,"byte_end":8631851,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631856,"byte_end":8631870,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631875,"byte_end":8631878,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631883,"byte_end":8631918,"line_start":371,"line_end":371,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631923,"byte_end":8631926,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631931,"byte_end":8631938,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631943,"byte_end":8631972,"line_start":374,"line_end":374,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631977,"byte_end":8632027,"line_start":375,"line_end":375,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632032,"byte_end":8632035,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632040,"byte_end":8632058,"line_start":377,"line_end":377,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632063,"byte_end":8632084,"line_start":378,"line_end":378,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632089,"byte_end":8632135,"line_start":379,"line_end":379,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632140,"byte_end":8632143,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632148,"byte_end":8632181,"line_start":381,"line_end":381,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632186,"byte_end":8632189,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632194,"byte_end":8632213,"line_start":383,"line_end":383,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632218,"byte_end":8632221,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632226,"byte_end":8632258,"line_start":385,"line_end":385,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632263,"byte_end":8632315,"line_start":386,"line_end":386,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632320,"byte_end":8632323,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632328,"byte_end":8632357,"line_start":388,"line_end":388,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632362,"byte_end":8632405,"line_start":389,"line_end":389,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632410,"byte_end":8632442,"line_start":390,"line_end":390,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632447,"byte_end":8632456,"line_start":391,"line_end":391,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632461,"byte_end":8632466,"line_start":392,"line_end":392,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632471,"byte_end":8632478,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632483,"byte_end":8632486,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632491,"byte_end":8632542,"line_start":395,"line_end":395,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632547,"byte_end":8632550,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632555,"byte_end":8632562,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632567,"byte_end":8632596,"line_start":398,"line_end":398,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632601,"byte_end":8632604,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632609,"byte_end":8632627,"line_start":400,"line_end":400,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632632,"byte_end":8632653,"line_start":401,"line_end":401,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632658,"byte_end":8632704,"line_start":402,"line_end":402,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632709,"byte_end":8632712,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632717,"byte_end":8632766,"line_start":404,"line_end":404,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632771,"byte_end":8632774,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632779,"byte_end":8632798,"line_start":406,"line_end":406,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632803,"byte_end":8632806,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632811,"byte_end":8632852,"line_start":408,"line_end":408,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632857,"byte_end":8632897,"line_start":409,"line_end":409,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632902,"byte_end":8632907,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8632912,"byte_end":8632919,"line_start":411,"line_end":411,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5703},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634919,"byte_end":8634927,"line_start":480,"line_end":480,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633034,"byte_end":8633066,"line_start":417,"line_end":417,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633071,"byte_end":8633074,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633079,"byte_end":8633152,"line_start":419,"line_end":419,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633157,"byte_end":8633223,"line_start":420,"line_end":420,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633228,"byte_end":8633252,"line_start":421,"line_end":421,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633257,"byte_end":8633260,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633265,"byte_end":8633331,"line_start":423,"line_end":423,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633336,"byte_end":8633358,"line_start":424,"line_end":424,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633363,"byte_end":8633366,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633371,"byte_end":8633383,"line_start":426,"line_end":426,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633388,"byte_end":8633391,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633396,"byte_end":8633447,"line_start":428,"line_end":428,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633452,"byte_end":8633515,"line_start":429,"line_end":429,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633520,"byte_end":8633595,"line_start":430,"line_end":430,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633600,"byte_end":8633614,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633619,"byte_end":8633622,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633627,"byte_end":8633641,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633646,"byte_end":8633649,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633654,"byte_end":8633704,"line_start":435,"line_end":435,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633709,"byte_end":8633712,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633717,"byte_end":8633724,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633729,"byte_end":8633758,"line_start":438,"line_end":438,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633763,"byte_end":8633813,"line_start":439,"line_end":439,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633818,"byte_end":8633821,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633826,"byte_end":8633844,"line_start":441,"line_end":441,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633849,"byte_end":8633870,"line_start":442,"line_end":442,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633875,"byte_end":8633921,"line_start":443,"line_end":443,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633926,"byte_end":8633929,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633934,"byte_end":8633963,"line_start":445,"line_end":445,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8633968,"byte_end":8634013,"line_start":446,"line_end":446,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634018,"byte_end":8634060,"line_start":447,"line_end":447,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634065,"byte_end":8634097,"line_start":448,"line_end":448,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634102,"byte_end":8634111,"line_start":449,"line_end":449,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634116,"byte_end":8634119,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634124,"byte_end":8634147,"line_start":451,"line_end":451,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634152,"byte_end":8634186,"line_start":452,"line_end":452,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634191,"byte_end":8634194,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634199,"byte_end":8634228,"line_start":454,"line_end":454,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634233,"byte_end":8634285,"line_start":455,"line_end":455,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634290,"byte_end":8634322,"line_start":456,"line_end":456,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634327,"byte_end":8634336,"line_start":457,"line_end":457,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634341,"byte_end":8634346,"line_start":458,"line_end":458,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634351,"byte_end":8634358,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634363,"byte_end":8634366,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634371,"byte_end":8634432,"line_start":461,"line_end":461,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634437,"byte_end":8634440,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634445,"byte_end":8634452,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634457,"byte_end":8634486,"line_start":464,"line_end":464,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634491,"byte_end":8634541,"line_start":465,"line_end":465,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634546,"byte_end":8634549,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634554,"byte_end":8634572,"line_start":467,"line_end":467,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634577,"byte_end":8634598,"line_start":468,"line_end":468,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634603,"byte_end":8634655,"line_start":469,"line_end":469,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634660,"byte_end":8634663,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634668,"byte_end":8634685,"line_start":471,"line_end":471,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634690,"byte_end":8634693,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634698,"byte_end":8634727,"line_start":473,"line_end":473,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634732,"byte_end":8634786,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634791,"byte_end":8634834,"line_start":475,"line_end":475,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634839,"byte_end":8634871,"line_start":476,"line_end":476,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634876,"byte_end":8634885,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634890,"byte_end":8634895,"line_start":478,"line_end":478,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8634900,"byte_end":8634907,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6259},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8676903,"byte_end":8676912,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":6260}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit aquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit aquisition.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8676252,"byte_end":8676317,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8676318,"byte_end":8676321,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8676322,"byte_end":8676397,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8676398,"byte_end":8676474,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8676475,"byte_end":8676555,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8676556,"byte_end":8676565,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8676566,"byte_end":8676569,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8676570,"byte_end":8676643,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8676644,"byte_end":8676723,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8676724,"byte_end":8676802,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8676803,"byte_end":8676874,"line_start":14,"line_end":14,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":6263},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677049,"byte_end":8677064,"line_start":24,"line_end":24,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":6265},{"krate":0,"index":6266}],"decl_id":null,"docs":" A permit from the semaphore\n","sig":null,"attributes":[{"value":"/ A permit from the semaphore","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8676977,"byte_end":8677008,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"must_use","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677009,"byte_end":8677020,"line_start":22,"line_end":22,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6270},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677400,"byte_end":8677415,"line_start":37,"line_end":37,"column_start":12,"column_end":27},"name":"TryAcquireError","qualname":"::sync::semaphore::TryAcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677153,"byte_end":8677217,"line_start":30,"line_end":30,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677218,"byte_end":8677221,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ A `try_acquire` operation can only fail if the semaphore has no available","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677222,"byte_end":8677299,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ permits.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677300,"byte_end":8677312,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677313,"byte_end":8677316,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: Semaphore::try_acquire","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677317,"byte_end":8677371,"line_start":35,"line_end":35,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5897},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677517,"byte_end":8677520,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"fn (permits: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677443,"byte_end":8677505,"line_start":40,"line_end":40,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5898},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677695,"byte_end":8677712,"line_start":48,"line_end":48,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677632,"byte_end":8677683,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5899},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677835,"byte_end":8677846,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"fn (&self, n: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add `n` new permits to the semaphore.\n","sig":null,"attributes":[{"value":"/ Add `n` new permits to the semaphore.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677782,"byte_end":8677823,"line_start":52,"line_end":52,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":5900},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677968,"byte_end":8677975,"line_start":58,"line_end":58,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"fn (&self) -> SemaphorePermit<'_>","parent":null,"children":[],"decl_id":null,"docs":" Acquire permit from the semaphore\n","sig":null,"attributes":[{"value":"/ Acquire permit from the semaphore","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677913,"byte_end":8677950,"line_start":57,"line_end":57,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5904},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8678298,"byte_end":8678309,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"fn (&self) -> Result<SemaphorePermit<'_>, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Try to acquire a permit form the semaphore\n","sig":null,"attributes":[{"value":"/ Try to acquire a permit form the semaphore","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8678240,"byte_end":8678286,"line_start":67,"line_end":67,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":5907},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8678810,"byte_end":8678816,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"fn (mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forget the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forget the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8678636,"byte_end":8678705,"line_start":79,"line_end":79,"column_start":5,"column_end":74}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8678710,"byte_end":8678779,"line_start":80,"line_end":80,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8678784,"byte_end":8678798,"line_start":81,"line_end":81,"column_start":5,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":5960},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":5961},{"krate":0,"index":5962},{"krate":0,"index":5963},{"krate":0,"index":5964},{"krate":0,"index":5965},{"krate":0,"index":5966},{"krate":0,"index":5967},{"krate":0,"index":5973},{"krate":0,"index":5976},{"krate":0,"index":6275},{"krate":0,"index":6281},{"krate":0,"index":6284},{"krate":0,"index":6287},{"krate":0,"index":6290},{"krate":0,"index":6294},{"krate":0,"index":5979},{"krate":0,"index":6304},{"krate":0,"index":6310},{"krate":0,"index":6313},{"krate":0,"index":6316},{"krate":0,"index":6318},{"krate":0,"index":6320},{"krate":0,"index":5986},{"krate":0,"index":5987},{"krate":0,"index":5990},{"krate":0,"index":5995},{"krate":0,"index":6002},{"krate":0,"index":6007},{"krate":0,"index":6010},{"krate":0,"index":6013},{"krate":0,"index":6015},{"krate":0,"index":6023},{"krate":0,"index":6025},{"krate":0,"index":6028},{"krate":0,"index":6032}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":13612,"byte_end":13636,"line_start":199,"line_end":199,"column_start":13,"column_end":37}},{"value":"! A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8691754,"byte_end":8691833,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"! value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8691834,"byte_end":8691844,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8691845,"byte_end":8691848,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! This channel is useful for watching for changes to a value from multiple","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8691849,"byte_end":8691925,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"! points in the code base, for example, changes to configuration values.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8691926,"byte_end":8692000,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692001,"byte_end":8692004,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692005,"byte_end":8692016,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692017,"byte_end":8692020,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692021,"byte_end":8692088,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"! the producer and sender halves of the channel. The channel is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692089,"byte_end":8692154,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"! created with an initial value. [`Receiver::recv`] will always","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692155,"byte_end":8692220,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"! be ready upon creation and will yield either this initial value or","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692221,"byte_end":8692291,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"! the latest value that has been sent by `Sender`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692292,"byte_end":8692344,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692345,"byte_end":8692348,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! Calls to [`Receiver::recv`] will always yield the latest value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692349,"byte_end":8692416,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692417,"byte_end":8692420,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692421,"byte_end":8692435,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692436,"byte_end":8692439,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692440,"byte_end":8692447,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::watch;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692448,"byte_end":8692475,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692476,"byte_end":8692479,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692480,"byte_end":8692544,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"!     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692545,"byte_end":8692596,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692597,"byte_end":8692600,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692601,"byte_end":8692634,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"!         while let Some(value) = rx.recv().await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692635,"byte_end":8692688,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"!             println!(\"received = {:?}\", value);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692689,"byte_end":8692740,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"!         }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692741,"byte_end":8692754,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692755,"byte_end":8692766,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692767,"byte_end":8692770,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"!     tx.broadcast(\"world\")?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692771,"byte_end":8692802,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"! # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692803,"byte_end":8692815,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692816,"byte_end":8692823,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692824,"byte_end":8692831,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692832,"byte_end":8692835,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! # Closing","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692836,"byte_end":8692849,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692850,"byte_end":8692853,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! [`Sender::closed`] allows the producer to detect when all [`Receiver`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692854,"byte_end":8692928,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"! handles have been dropped. This indicates that there is no further interest","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8692929,"byte_end":8693008,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"! in the values being produced and work can be stopped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8693009,"byte_end":8693066,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8693067,"byte_end":8693070,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! # Thread safety","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8693071,"byte_end":8693090,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8693091,"byte_end":8693094,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8693095,"byte_end":8693175,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"! threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8693176,"byte_end":8693255,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"! handles may be moved to separate threads and also used concurrently.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8693256,"byte_end":8693328,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8693329,"byte_end":8693332,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8693333,"byte_end":8693375,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"! [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8693376,"byte_end":8693422,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"! [`Receiver::recv`]: crate::sync::watch::Receiver::recv","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8693423,"byte_end":8693481,"line_start":50,"line_end":50,"column_start":1,"column_end":59}},{"value":"! [`channel`]: crate::sync::watch::channel","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8693482,"byte_end":8693526,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"! [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8693527,"byte_end":8693585,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6275},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8694072,"byte_end":8694080,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6277},{"krate":0,"index":6278},{"krate":0,"index":6279},{"krate":0,"index":6280}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct.Sender.html).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct.Sender.html).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8693896,"byte_end":8693967,"line_start":65,"line_end":65,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8693968,"byte_end":8693971,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn.channel.html) function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8693972,"byte_end":8694043,"line_start":67,"line_end":67,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":6284},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8694486,"byte_end":8694492,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6286}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct.Receiver.html).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct.Receiver.html).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8694311,"byte_end":8694381,"line_start":83,"line_end":83,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8694382,"byte_end":8694385,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn.channel.html) function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8694386,"byte_end":8694457,"line_start":85,"line_end":85,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":6290},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8694813,"byte_end":8694816,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":6293}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8694530,"byte_end":8694572,"line_start":91,"line_end":91,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8694573,"byte_end":8694576,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8694577,"byte_end":8694653,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8694654,"byte_end":8694733,"line_start":94,"line_end":94,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8694734,"byte_end":8694784,"line_start":95,"line_end":95,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":5979},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8694872,"byte_end":8694877,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":5980},{"krate":0,"index":6298},{"krate":0,"index":6301},{"krate":0,"index":5981},{"krate":0,"index":5984}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"! Watch error types","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8694884,"byte_end":8694905,"line_start":102,"line_end":102,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":6298},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8695013,"byte_end":8695022,"line_start":108,"line_end":108,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":6300}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8694930,"byte_end":8694976,"line_start":106,"line_end":106,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":5987},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696712,"byte_end":8696719,"line_start":181,"line_end":181,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"fn <T> (init: T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Create a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8695935,"byte_end":8696010,"line_start":154,"line_end":154,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696011,"byte_end":8696014,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696015,"byte_end":8696097,"line_start":156,"line_end":156,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696098,"byte_end":8696174,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696175,"byte_end":8696211,"line_start":158,"line_end":158,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696212,"byte_end":8696215,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696216,"byte_end":8696230,"line_start":160,"line_end":160,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696231,"byte_end":8696234,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696235,"byte_end":8696242,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696243,"byte_end":8696270,"line_start":163,"line_end":163,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696271,"byte_end":8696274,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696275,"byte_end":8696339,"line_start":165,"line_end":165,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696340,"byte_end":8696391,"line_start":166,"line_end":166,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696392,"byte_end":8696395,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696396,"byte_end":8696429,"line_start":168,"line_end":168,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696430,"byte_end":8696483,"line_start":169,"line_end":169,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696484,"byte_end":8696535,"line_start":170,"line_end":170,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696536,"byte_end":8696549,"line_start":171,"line_end":171,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696550,"byte_end":8696561,"line_start":172,"line_end":172,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696562,"byte_end":8696565,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696566,"byte_end":8696597,"line_start":174,"line_end":174,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696598,"byte_end":8696610,"line_start":175,"line_end":175,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696611,"byte_end":8696618,"line_start":176,"line_end":176,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696619,"byte_end":8696626,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696627,"byte_end":8696630,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct.Sender.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696631,"byte_end":8696665,"line_start":179,"line_end":179,"column_start":1,"column_end":35}},{"value":"/ [`Receiver`]: struct.Receiver.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8696666,"byte_end":8696704,"line_start":180,"line_end":180,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5992},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8697935,"byte_end":8697941,"line_start":229,"line_end":229,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"fn (&self) -> Ref<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8697473,"byte_end":8697528,"line_start":215,"line_end":215,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8697533,"byte_end":8697536,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8697541,"byte_end":8697617,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8697622,"byte_end":8697698,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8697703,"byte_end":8697734,"line_start":219,"line_end":219,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8697739,"byte_end":8697742,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8697747,"byte_end":8697761,"line_start":221,"line_end":221,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8697766,"byte_end":8697769,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8697774,"byte_end":8697781,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8697786,"byte_end":8697813,"line_start":224,"line_end":224,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8697818,"byte_end":8697821,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8697826,"byte_end":8697868,"line_start":226,"line_end":226,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8697873,"byte_end":8697911,"line_start":227,"line_end":227,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8697916,"byte_end":8697923,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5993},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8698101,"byte_end":8698114,"line_start":236,"line_end":236,"column_start":12,"column_end":25},"name":"poll_recv_ref","qualname":"<Receiver<T>>::poll_recv_ref","value":"fn <'a> (&'a mut self, cx: &mut Context<'_>) -> Poll<Option<Ref<'a, T>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5997},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8698830,"byte_end":8698834,"line_start":261,"line_end":261,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to clone the latest value sent via the channel.\n","sig":null,"attributes":[{"value":"/ Attempts to clone the latest value sent via the channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8698752,"byte_end":8698812,"line_start":260,"line_end":260,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":6017},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8700286,"byte_end":8700295,"line_start":324,"line_end":324,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Sender<T>>::broadcast","value":"fn (&self, value: T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Broadcast a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Broadcast a new value via the channel, notifying all receivers.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8700207,"byte_end":8700274,"line_start":323,"line_end":323,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6018},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8701158,"byte_end":8701164,"line_start":351,"line_end":351,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8700947,"byte_end":8700993,"line_start":347,"line_end":347,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8700998,"byte_end":8701001,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8701006,"byte_end":8701080,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8701085,"byte_end":8701140,"line_start":350,"line_end":350,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":6322},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":6324},{"krate":0,"index":6326},{"krate":0,"index":6337},{"krate":0,"index":6338},{"krate":0,"index":6401},{"krate":0,"index":6402},{"krate":0,"index":6403},{"krate":0,"index":6426},{"krate":0,"index":6427},{"krate":0,"index":6512},{"krate":0,"index":6513},{"krate":0,"index":6543},{"krate":0,"index":6544},{"krate":0,"index":6566},{"krate":0,"index":6567},{"krate":0,"index":6621},{"krate":0,"index":6689},{"krate":0,"index":6690},{"krate":0,"index":6694},{"krate":0,"index":6695},{"krate":0,"index":6731},{"krate":0,"index":6732},{"krate":0,"index":6806},{"krate":0,"index":6809},{"krate":0,"index":6850},{"krate":0,"index":6856},{"krate":0,"index":6883},{"krate":0,"index":6940},{"krate":0,"index":6960},{"krate":0,"index":6961},{"krate":0,"index":6962},{"krate":0,"index":6963},{"krate":0,"index":6966},{"krate":0,"index":6970},{"krate":0,"index":6972},{"krate":0,"index":6974},{"krate":0,"index":6979},{"krate":0,"index":6980},{"krate":0,"index":7001},{"krate":0,"index":6983},{"krate":0,"index":6988},{"krate":0,"index":6995},{"krate":0,"index":6998}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":13924,"byte_end":13951,"line_start":215,"line_end":215,"column_start":13,"column_end":40}},{"value":"! Asynchronous green-threads.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8702342,"byte_end":8702373,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8702374,"byte_end":8702377,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! ## What are Tasks?","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8702378,"byte_end":8702400,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8702401,"byte_end":8702404,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8702405,"byte_end":8702486,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"! to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8702487,"byte_end":8702567,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8702568,"byte_end":8702648,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"! [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8702649,"byte_end":8702723,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"! coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8702724,"byte_end":8702799,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"! something similar.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8702800,"byte_end":8702822,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8702823,"byte_end":8702826,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Key points about tasks include:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8702827,"byte_end":8702862,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8702863,"byte_end":8702866,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8702867,"byte_end":8702941,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"!   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8702942,"byte_end":8703021,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"!   between tasks does not require a context switch and has fairly low","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8703022,"byte_end":8703094,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"!   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8703095,"byte_end":8703170,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"!   quite cheap, especially compared to OS threads.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8703171,"byte_end":8703224,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8703225,"byte_end":8703228,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8703229,"byte_end":8703306,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"!   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8703307,"byte_end":8703380,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"!   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8703381,"byte_end":8703460,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"!   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8703461,"byte_end":8703539,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"!   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8703540,"byte_end":8703612,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"!   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8703613,"byte_end":8703688,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"!   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8703689,"byte_end":8703763,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"!   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8703764,"byte_end":8703839,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"!   executing the next task.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8703840,"byte_end":8703870,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8703871,"byte_end":8703874,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8703875,"byte_end":8703953,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"!   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8703954,"byte_end":8704029,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"!   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704030,"byte_end":8704107,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"!   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704108,"byte_end":8704187,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"!   should generally not perform system calls or other operations that could","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704188,"byte_end":8704266,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"!   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704267,"byte_end":8704342,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"!   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704343,"byte_end":8704418,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"!   running blocking operations in an asynchronous context.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704419,"byte_end":8704480,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704481,"byte_end":8704484,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! [rt]: crate::runtime","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704485,"byte_end":8704509,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"! [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704510,"byte_end":8704574,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"! [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704575,"byte_end":8704635,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"! [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704636,"byte_end":8704725,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"! [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704726,"byte_end":8704814,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704815,"byte_end":8704818,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! ## Working with Tasks","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704819,"byte_end":8704844,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704845,"byte_end":8704848,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! This module provides the following APIs for working with tasks:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704849,"byte_end":8704916,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704917,"byte_end":8704920,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! ### Spawning","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704921,"byte_end":8704937,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704938,"byte_end":8704941,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8704942,"byte_end":8705021,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"! function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705022,"byte_end":8705101,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"! [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705102,"byte_end":8705181,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"! [future], and creates a new task to run that work concurrently:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705182,"byte_end":8705249,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705250,"byte_end":8705253,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705254,"byte_end":8705261,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705262,"byte_end":8705282,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705283,"byte_end":8705286,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! # async fn doc() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705287,"byte_end":8705309,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"! task::spawn(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705310,"byte_end":8705333,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"!     // perform some work here...","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705334,"byte_end":8705370,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"! });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705371,"byte_end":8705378,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705379,"byte_end":8705386,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705387,"byte_end":8705394,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705395,"byte_end":8705398,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705399,"byte_end":8705478,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"! A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705479,"byte_end":8705557,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"! the spawned task. For example:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705558,"byte_end":8705592,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705593,"byte_end":8705596,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705597,"byte_end":8705604,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705605,"byte_end":8705625,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705626,"byte_end":8705629,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705630,"byte_end":8705710,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"! let join = task::spawn(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705711,"byte_end":8705745,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"!     // ...","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705746,"byte_end":8705760,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"!     \"hello world!\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705761,"byte_end":8705783,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"! });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705784,"byte_end":8705791,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705792,"byte_end":8705795,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! // ...","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705796,"byte_end":8705806,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705807,"byte_end":8705810,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! // Await the result of the spawned task.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705811,"byte_end":8705855,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"! let result = join.await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705856,"byte_end":8705885,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"! assert_eq!(result, \"hello world!\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705886,"byte_end":8705925,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"! # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705926,"byte_end":8705938,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705939,"byte_end":8705946,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705947,"byte_end":8705954,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705955,"byte_end":8705958,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8705959,"byte_end":8706039,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"! task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706040,"byte_end":8706116,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"! example:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706117,"byte_end":8706129,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706130,"byte_end":8706133,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706134,"byte_end":8706141,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706142,"byte_end":8706162,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706163,"byte_end":8706166,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706167,"byte_end":8706205,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"! let join = task::spawn(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706206,"byte_end":8706240,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"!     panic!(\"something bad happened!\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706241,"byte_end":8706282,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"! });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706283,"byte_end":8706290,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706291,"byte_end":8706294,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! // The returned result indicates that the task failed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706295,"byte_end":8706353,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"! assert!(join.await.is_err());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706354,"byte_end":8706387,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"! # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706388,"byte_end":8706395,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706396,"byte_end":8706403,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706404,"byte_end":8706407,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt-core\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706408,"byte_end":8706481,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"! feature flag is enabled.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706482,"byte_end":8706510,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706511,"byte_end":8706514,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706515,"byte_end":8706556,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"! [future]: std::future::Future","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706557,"byte_end":8706590,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"! [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706591,"byte_end":8706637,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706638,"byte_end":8706681,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"! [thread_join]: std::thread::JoinHandle","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706682,"byte_end":8706724,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"! [`JoinError`]: crate::task::JoinError","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706725,"byte_end":8706766,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706767,"byte_end":8706770,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ### Blocking and Yielding","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706771,"byte_end":8706800,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706801,"byte_end":8706804,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706805,"byte_end":8706885,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"! operations that can block. A blocking operation performed in a task running","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706886,"byte_end":8706965,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"! on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8706966,"byte_end":8707045,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"! preventing other tasks from running.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707046,"byte_end":8707086,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707087,"byte_end":8707090,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707091,"byte_end":8707165,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"! asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707166,"byte_end":8707246,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707247,"byte_end":8707250,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707251,"byte_end":8707331,"line_start":125,"line_end":125,"column_start":1,"column_end":81}},{"value":"! discussed in the previous section, but rather than spawning an","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707332,"byte_end":8707398,"line_start":126,"line_end":126,"column_start":1,"column_end":67}},{"value":"! _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707399,"byte_end":8707466,"line_start":127,"line_end":127,"column_start":1,"column_end":68}},{"value":"! _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707467,"byte_end":8707541,"line_start":128,"line_end":128,"column_start":1,"column_end":75}},{"value":"! example:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707542,"byte_end":8707554,"line_start":129,"line_end":129,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707555,"byte_end":8707558,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707559,"byte_end":8707566,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707567,"byte_end":8707587,"line_start":132,"line_end":132,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707588,"byte_end":8707591,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"! # async fn docs() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707592,"byte_end":8707615,"line_start":134,"line_end":134,"column_start":1,"column_end":24}},{"value":"! task::spawn_blocking(|| {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707616,"byte_end":8707645,"line_start":135,"line_end":135,"column_start":1,"column_end":30}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707646,"byte_end":8707708,"line_start":136,"line_end":136,"column_start":1,"column_end":63}},{"value":"! });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707709,"byte_end":8707716,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707717,"byte_end":8707724,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707725,"byte_end":8707732,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707733,"byte_end":8707736,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707737,"byte_end":8707811,"line_start":141,"line_end":141,"column_start":1,"column_end":75}},{"value":"! which we can use to await the result of the blocking operation:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707812,"byte_end":8707879,"line_start":142,"line_end":142,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707880,"byte_end":8707883,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707884,"byte_end":8707895,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"! # use tokio::task;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707896,"byte_end":8707918,"line_start":145,"line_end":145,"column_start":1,"column_end":23}},{"value":"! # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707919,"byte_end":8707983,"line_start":146,"line_end":146,"column_start":1,"column_end":65}},{"value":"! let join = task::spawn_blocking(|| {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8707984,"byte_end":8708024,"line_start":147,"line_end":147,"column_start":1,"column_end":41}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708025,"byte_end":8708087,"line_start":148,"line_end":148,"column_start":1,"column_end":63}},{"value":"!     \"blocking completed\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708088,"byte_end":8708116,"line_start":149,"line_end":149,"column_start":1,"column_end":29}},{"value":"! });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708117,"byte_end":8708124,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708125,"byte_end":8708128,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"! let result = join.await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708129,"byte_end":8708158,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"! assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708159,"byte_end":8708204,"line_start":153,"line_end":153,"column_start":1,"column_end":46}},{"value":"! # Ok(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708205,"byte_end":8708217,"line_start":154,"line_end":154,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708218,"byte_end":8708225,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708226,"byte_end":8708233,"line_start":156,"line_end":156,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708234,"byte_end":8708237,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"! When using the [threaded runtime][rt-threaded], the [`task::block_in_place`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708238,"byte_end":8708318,"line_start":158,"line_end":158,"column_start":1,"column_end":81}},{"value":"! function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708319,"byte_end":8708393,"line_start":159,"line_end":159,"column_start":1,"column_end":75}},{"value":"! allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708394,"byte_end":8708470,"line_start":160,"line_end":160,"column_start":1,"column_end":77}},{"value":"! `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708471,"byte_end":8708545,"line_start":161,"line_end":161,"column_start":1,"column_end":75}},{"value":"! _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708546,"byte_end":8708625,"line_start":162,"line_end":162,"column_start":1,"column_end":80}},{"value":"! that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708626,"byte_end":8708708,"line_start":163,"line_end":163,"column_start":1,"column_end":83}},{"value":"! context switches.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708709,"byte_end":8708730,"line_start":164,"line_end":164,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708731,"byte_end":8708734,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"! For example:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708735,"byte_end":8708751,"line_start":166,"line_end":166,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708752,"byte_end":8708755,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708756,"byte_end":8708763,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708764,"byte_end":8708784,"line_start":169,"line_end":169,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708785,"byte_end":8708788,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"! # async fn docs() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708789,"byte_end":8708812,"line_start":171,"line_end":171,"column_start":1,"column_end":24}},{"value":"! let result = task::block_in_place(|| {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708813,"byte_end":8708855,"line_start":172,"line_end":172,"column_start":1,"column_end":43}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708856,"byte_end":8708918,"line_start":173,"line_end":173,"column_start":1,"column_end":63}},{"value":"!     \"blocking completed\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708919,"byte_end":8708947,"line_start":174,"line_end":174,"column_start":1,"column_end":29}},{"value":"! });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708948,"byte_end":8708955,"line_start":175,"line_end":175,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708956,"byte_end":8708959,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"! assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8708960,"byte_end":8709005,"line_start":177,"line_end":177,"column_start":1,"column_end":46}},{"value":"! # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709006,"byte_end":8709013,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709014,"byte_end":8709021,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709022,"byte_end":8709025,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! In addition, this module also provides a [`task::yield_now`] async function","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709026,"byte_end":8709105,"line_start":181,"line_end":181,"column_start":1,"column_end":80}},{"value":"! that is analogous to the standard library's [`thread::yield_now`]. Calling and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709106,"byte_end":8709188,"line_start":182,"line_end":182,"column_start":1,"column_end":83}},{"value":"! `await`ing this function will cause the current task to yield to the Tokio","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709189,"byte_end":8709267,"line_start":183,"line_end":183,"column_start":1,"column_end":79}},{"value":"! runtime's scheduler, allowing another task to be scheduled. Eventually, the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709268,"byte_end":8709347,"line_start":184,"line_end":184,"column_start":1,"column_end":80}},{"value":"! yielding task will be polled again, allowing it to execute. For example:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709348,"byte_end":8709424,"line_start":185,"line_end":185,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709425,"byte_end":8709428,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709429,"byte_end":8709440,"line_start":187,"line_end":187,"column_start":1,"column_end":12}},{"value":"! use tokio::task;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709441,"byte_end":8709461,"line_start":188,"line_end":188,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709462,"byte_end":8709465,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709466,"byte_end":8709504,"line_start":190,"line_end":190,"column_start":1,"column_end":39}},{"value":"! async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709505,"byte_end":8709516,"line_start":191,"line_end":191,"column_start":1,"column_end":12}},{"value":"!     task::spawn(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709517,"byte_end":8709544,"line_start":192,"line_end":192,"column_start":1,"column_end":28}},{"value":"!         // ...","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709545,"byte_end":8709563,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"!         println!(\"spawned task done!\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709564,"byte_end":8709606,"line_start":194,"line_end":194,"column_start":1,"column_end":43}},{"value":"!     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709607,"byte_end":8709618,"line_start":195,"line_end":195,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709619,"byte_end":8709622,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"!     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709623,"byte_end":8709690,"line_start":197,"line_end":197,"column_start":1,"column_end":68}},{"value":"!     task::yield_now().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709691,"byte_end":8709723,"line_start":198,"line_end":198,"column_start":1,"column_end":33}},{"value":"!     println!(\"main task done!\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709724,"byte_end":8709760,"line_start":199,"line_end":199,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709761,"byte_end":8709766,"line_start":200,"line_end":200,"column_start":1,"column_end":6}},{"value":"! # .await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709767,"byte_end":8709780,"line_start":201,"line_end":201,"column_start":1,"column_end":14}},{"value":"! # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709781,"byte_end":8709788,"line_start":202,"line_end":202,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709789,"byte_end":8709796,"line_start":203,"line_end":203,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709797,"byte_end":8709800,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"! [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709801,"byte_end":8709858,"line_start":205,"line_end":205,"column_start":1,"column_end":58}},{"value":"! [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709859,"byte_end":8709916,"line_start":206,"line_end":206,"column_start":1,"column_end":58}},{"value":"! [rt-threaded]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709917,"byte_end":8709976,"line_start":207,"line_end":207,"column_start":1,"column_end":60}},{"value":"! [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8709977,"byte_end":8710026,"line_start":208,"line_end":208,"column_start":1,"column_end":50}},{"value":"! [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8710027,"byte_end":8710076,"line_start":209,"line_end":209,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":6327},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/blocking.rs","byte_start":8715875,"byte_end":8715889,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"block_in_place","qualname":"::task::blocking::block_in_place","value":"fn <F, R> (f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Run the provided blocking function without blocking the executor.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-threaded\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":14394,"byte_end":14425,"line_start":240,"line_end":240,"column_start":13,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":6334},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/blocking.rs","byte_start":8716946,"byte_end":8716960,"line_start":58,"line_end":58,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"fn <F, R> (f: F) -> JoinHandle<R>","parent":null,"children":[],"decl_id":null,"docs":" Run the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"blocking\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":9742,"byte_end":9770,"line_start":16,"line_end":16,"column_start":13,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6857},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/error.rs","byte_start":8721912,"byte_end":8721921,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":6858}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":14066,"byte_end":14093,"line_start":224,"line_end":224,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6415},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/error.rs","byte_start":8722097,"byte_end":8722106,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<JoinError>::cancelled","value":"fn () -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/error.rs","byte_start":8722072,"byte_end":8722085,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":6417},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/error.rs","byte_start":8722324,"byte_end":8722329,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"panic","qualname":"<JoinError>::panic","value":"fn (err: Box<dyn Any + Send + 'static>) -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/error.rs","byte_start":8722299,"byte_end":8722312,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6859},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/join.rs","byte_start":8743857,"byte_end":8743867,"line_start":79,"line_end":79,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":6861},{"krate":0,"index":6862}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":14066,"byte_end":14093,"line_start":224,"line_end":224,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":6867},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/spawn.rs","byte_start":8768827,"byte_end":8768832,"line_start":121,"line_end":121,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"fn <T> (task: T) -> JoinHandle<T::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":14066,"byte_end":14093,"line_start":224,"line_end":224,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":6875},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/yield_now.rs","byte_start":8788962,"byte_end":8788971,"line_start":7,"line_end":7,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" Yield execution back to the Tokio runtime.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":14066,"byte_end":14093,"line_start":224,"line_end":224,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6943},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8792440,"byte_end":8792448,"line_start":78,"line_end":78,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":6944}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":14607,"byte_end":14634,"line_start":250,"line_end":250,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":6957},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8793878,"byte_end":8793889,"line_start":137,"line_end":137,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"fn <F> (future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":14607,"byte_end":14634,"line_start":250,"line_end":250,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6904},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8794787,"byte_end":8794790,"line_start":165,"line_end":165,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8794742,"byte_end":8794775,"line_start":164,"line_end":164,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6905},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8796030,"byte_end":8796041,"line_start":206,"line_end":206,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"fn <F> (&self, future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8794889,"byte_end":8794939,"line_start":171,"line_end":171,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8794944,"byte_end":8794947,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8794952,"byte_end":8795012,"line_start":173,"line_end":173,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795017,"byte_end":8795020,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795025,"byte_end":8795097,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/ spawn_local local tasks when the task set is _not_ running. For example:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795102,"byte_end":8795178,"line_start":176,"line_end":176,"column_start":5,"column_end":81}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795183,"byte_end":8795194,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795199,"byte_end":8795233,"line_start":178,"line_end":178,"column_start":5,"column_end":39}},{"value":"/ use tokio::task;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795238,"byte_end":8795258,"line_start":179,"line_end":179,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795263,"byte_end":8795266,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795271,"byte_end":8795312,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795317,"byte_end":8795355,"line_start":182,"line_end":182,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795360,"byte_end":8795363,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future on the local set. This future will be run when","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795368,"byte_end":8795436,"line_start":184,"line_end":184,"column_start":5,"column_end":73}},{"value":"/ // we call `block_on` to drive the task set.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795441,"byte_end":8795489,"line_start":185,"line_end":185,"column_start":5,"column_end":53}},{"value":"/ local.spawn_local(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795494,"byte_end":8795523,"line_start":186,"line_end":186,"column_start":5,"column_end":34}},{"value":"/    // ...","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795528,"byte_end":8795541,"line_start":187,"line_end":187,"column_start":5,"column_end":18}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795546,"byte_end":8795553,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795558,"byte_end":8795561,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ // Run the local task set.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795566,"byte_end":8795596,"line_start":190,"line_end":190,"column_start":5,"column_end":35}},{"value":"/ local.block_on(&mut rt, async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795601,"byte_end":8795641,"line_start":191,"line_end":191,"column_start":5,"column_end":45}},{"value":"/     // ...","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795646,"byte_end":8795660,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795665,"byte_end":8795672,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795677,"byte_end":8795680,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ // When `block_on` finishes, we can spawn_local _more_ futures, which will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795685,"byte_end":8795763,"line_start":195,"line_end":195,"column_start":5,"column_end":83}},{"value":"/ // run in subsequent calls to `block_on`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795768,"byte_end":8795813,"line_start":196,"line_end":196,"column_start":5,"column_end":50}},{"value":"/ local.spawn_local(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795818,"byte_end":8795847,"line_start":197,"line_end":197,"column_start":5,"column_end":34}},{"value":"/    // ...","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795852,"byte_end":8795865,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795870,"byte_end":8795877,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795882,"byte_end":8795885,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ local.block_on(&mut rt, async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795890,"byte_end":8795930,"line_start":201,"line_end":201,"column_start":5,"column_end":45}},{"value":"/     // ...","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795935,"byte_end":8795949,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795954,"byte_end":8795961,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795966,"byte_end":8795973,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn.spawn_local.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8795978,"byte_end":8796018,"line_start":205,"line_end":205,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":6907},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798848,"byte_end":8798856,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"fn <F> (&self, rt: &mut crate::runtime::Runtime, future: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Run a future to completion on the provided runtime, driving any local","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8796452,"byte_end":8796525,"line_start":220,"line_end":220,"column_start":5,"column_end":78}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8796530,"byte_end":8796589,"line_start":221,"line_end":221,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8796594,"byte_end":8796597,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8796602,"byte_end":8796669,"line_start":223,"line_end":223,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8796674,"byte_end":8796747,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8796752,"byte_end":8796828,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8796833,"byte_end":8796913,"line_start":226,"line_end":226,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8796918,"byte_end":8796937,"line_start":227,"line_end":227,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8796942,"byte_end":8796945,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8796950,"byte_end":8797016,"line_start":229,"line_end":229,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797021,"byte_end":8797024,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797029,"byte_end":8797041,"line_start":231,"line_end":231,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797046,"byte_end":8797049,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797054,"byte_end":8797126,"line_start":233,"line_end":233,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797131,"byte_end":8797204,"line_start":234,"line_end":234,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797209,"byte_end":8797212,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797217,"byte_end":8797228,"line_start":236,"line_end":236,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797233,"byte_end":8797236,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797241,"byte_end":8797315,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797320,"byte_end":8797395,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797400,"byte_end":8797475,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797480,"byte_end":8797557,"line_start":241,"line_end":241,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797562,"byte_end":8797565,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797570,"byte_end":8797603,"line_start":243,"line_end":243,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797608,"byte_end":8797627,"line_start":244,"line_end":244,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797632,"byte_end":8797664,"line_start":245,"line_end":245,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797669,"byte_end":8797689,"line_start":246,"line_end":246,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797694,"byte_end":8797697,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797702,"byte_end":8797743,"line_start":248,"line_end":248,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797748,"byte_end":8797786,"line_start":249,"line_end":249,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797791,"byte_end":8797826,"line_start":250,"line_end":250,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797831,"byte_end":8797875,"line_start":251,"line_end":251,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797880,"byte_end":8797939,"line_start":252,"line_end":252,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797944,"byte_end":8797966,"line_start":253,"line_end":253,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797971,"byte_end":8797986,"line_start":254,"line_end":254,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8797991,"byte_end":8798009,"line_start":255,"line_end":255,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798014,"byte_end":8798025,"line_start":256,"line_end":256,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798030,"byte_end":8798058,"line_start":257,"line_end":257,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798063,"byte_end":8798069,"line_start":258,"line_end":258,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798074,"byte_end":8798081,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798086,"byte_end":8798120,"line_start":260,"line_end":260,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798125,"byte_end":8798132,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798137,"byte_end":8798169,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798174,"byte_end":8798194,"line_start":263,"line_end":263,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798199,"byte_end":8798202,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798207,"byte_end":8798248,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798253,"byte_end":8798291,"line_start":266,"line_end":266,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798296,"byte_end":8798331,"line_start":267,"line_end":267,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798336,"byte_end":8798380,"line_start":268,"line_end":268,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798385,"byte_end":8798444,"line_start":269,"line_end":269,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798449,"byte_end":8798471,"line_start":270,"line_end":270,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798476,"byte_end":8798497,"line_start":271,"line_end":271,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798502,"byte_end":8798520,"line_start":272,"line_end":272,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798525,"byte_end":8798536,"line_start":273,"line_end":273,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798541,"byte_end":8798569,"line_start":274,"line_end":274,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798574,"byte_end":8798580,"line_start":275,"line_end":275,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798585,"byte_end":8798592,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798597,"byte_end":8798600,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn.spawn_local.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798605,"byte_end":8798645,"line_start":278,"line_end":278,"column_start":5,"column_end":45}},{"value":"/ [`Runtime::block_on`]: ../struct.Runtime.html#method.block_on","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798650,"byte_end":8798715,"line_start":279,"line_end":279,"column_start":5,"column_end":70}},{"value":"/ [in-place blocking]: ../blocking/fn.in_place.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798720,"byte_end":8798773,"line_start":280,"line_end":280,"column_start":5,"column_end":58}},{"value":"/ [`spawn_blocking`]: ../blocking/fn.spawn_blocking.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8798778,"byte_end":8798836,"line_start":281,"line_end":281,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":7004},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":7005},{"krate":0,"index":7006},{"krate":0,"index":7007},{"krate":0,"index":7081},{"krate":0,"index":7082},{"krate":0,"index":7102},{"krate":0,"index":7106},{"krate":0,"index":7285},{"krate":0,"index":7298},{"krate":0,"index":7299},{"krate":0,"index":7335},{"krate":0,"index":7336},{"krate":0,"index":7359},{"krate":0,"index":7363},{"krate":0,"index":7396},{"krate":0,"index":7644},{"krate":0,"index":7668},{"krate":0,"index":7401},{"krate":0,"index":7465},{"krate":0,"index":7466},{"krate":0,"index":7471}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/macros/cfg.rs","byte_start":15463,"byte_end":15487,"line_start":292,"line_end":292,"column_start":13,"column_end":37}},{"value":"cfg(not (loom))","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8815912,"byte_end":8815930,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! Utilities for tracking time.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8815932,"byte_end":8815964,"line_start":3,"line_end":3,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8815965,"byte_end":8815968,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module provides a number of types for executing code after a set period","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8815969,"byte_end":8816049,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"! of time.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816050,"byte_end":8816062,"line_start":6,"line_end":6,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816063,"byte_end":8816066,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! * [`Delay`][Delay] is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816067,"byte_end":8816157,"line_start":8,"line_end":8,"column_start":1,"column_end":91}},{"value":"!   in time.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816158,"byte_end":8816172,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816173,"byte_end":8816176,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! * [`Interval`][Interval] is a stream yielding a value at a fixed period. It","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816177,"byte_end":8816256,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"!   is initialized with a `Duration` and repeatedly yields each time the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816257,"byte_end":8816331,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"!   duration elapses.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816332,"byte_end":8816355,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816356,"byte_end":8816359,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! * [`Timeout`][Timeout]: Wraps a future or stream, setting an upper bound to the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816360,"byte_end":8816443,"line_start":15,"line_end":15,"column_start":1,"column_end":84}},{"value":"!   amount of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816444,"byte_end":8816523,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"!   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816524,"byte_end":8816593,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816594,"byte_end":8816597,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! * [`DelayQueue`]: A queue where items are returned once the requested delay","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816598,"byte_end":8816677,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"!   has expired.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816678,"byte_end":8816696,"line_start":20,"line_end":20,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816697,"byte_end":8816700,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! These types are sufficient for handling a large number of scenarios","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816701,"byte_end":8816772,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"! involving time.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816773,"byte_end":8816792,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816793,"byte_end":8816796,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! These types must be used from within the context of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816797,"byte_end":8816856,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"! [`Runtime`][runtime].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816857,"byte_end":8816882,"line_start":26,"line_end":26,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816883,"byte_end":8816886,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816887,"byte_end":8816901,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816902,"byte_end":8816905,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! Wait 100ms and print \"Hello World!\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816906,"byte_end":8816945,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816946,"byte_end":8816949,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816950,"byte_end":8816957,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"! use tokio::time::delay_for;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816958,"byte_end":8816989,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816990,"byte_end":8816993,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! use std::time::Duration;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8816994,"byte_end":8817022,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817023,"byte_end":8817026,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817027,"byte_end":8817030,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817031,"byte_end":8817049,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817050,"byte_end":8817071,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"!     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817072,"byte_end":8817124,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"!     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817125,"byte_end":8817165,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817166,"byte_end":8817171,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817172,"byte_end":8817179,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817180,"byte_end":8817183,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817184,"byte_end":8817263,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"! [`timeout`][ext] function on the [`FutureExt`][ext] trait. This trait is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817264,"byte_end":8817340,"line_start":46,"line_end":46,"column_start":1,"column_end":77}},{"value":"! included in the prelude.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817341,"byte_end":8817369,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817370,"byte_end":8817373,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817374,"byte_end":8817381,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"! use tokio::time::{timeout, Duration};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817382,"byte_end":8817423,"line_start":50,"line_end":50,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817424,"byte_end":8817427,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! async fn long_future() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817428,"byte_end":8817456,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"!     // do work here","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817457,"byte_end":8817480,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"! }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817481,"byte_end":8817486,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817487,"byte_end":8817490,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! # async fn dox() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817491,"byte_end":8817513,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"! let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817514,"byte_end":8817581,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817582,"byte_end":8817585,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! if res.is_err() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817586,"byte_end":8817607,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"!     println!(\"operation timed out\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817608,"byte_end":8817648,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817649,"byte_end":8817654,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817655,"byte_end":8817662,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817663,"byte_end":8817670,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817671,"byte_end":8817674,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! [runtime]: ../runtime/struct.Runtime.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817675,"byte_end":8817720,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"! [ext]: ../util/trait.FutureExt.html#method.timeout","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817721,"byte_end":8817775,"line_start":66,"line_end":66,"column_start":1,"column_end":55}},{"value":"! [Timeout]: struct.Timeout.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817776,"byte_end":8817810,"line_start":67,"line_end":67,"column_start":1,"column_end":35}},{"value":"! [Delay]: struct.Delay.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817811,"byte_end":8817841,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"! [Interval]: struct.Interval.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817842,"byte_end":8817878,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"! [`DelayQueue`]: struct.DelayQueue.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8817879,"byte_end":8817921,"line_start":70,"line_end":70,"column_start":1,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":7007},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","parent":null,"children":[{"krate":0,"index":7008},{"krate":0,"index":7011},{"krate":0,"index":7017},{"krate":0,"index":7018},{"krate":0,"index":7019},{"krate":0,"index":7020},{"krate":0,"index":7021},{"krate":0,"index":7022},{"krate":0,"index":7487},{"krate":0,"index":7495},{"krate":0,"index":7498},{"krate":0,"index":7503},{"krate":0,"index":7506},{"krate":0,"index":7510},{"krate":0,"index":7508},{"krate":0,"index":7512},{"krate":0,"index":7516},{"krate":0,"index":7519},{"krate":0,"index":7526},{"krate":0,"index":7025},{"krate":0,"index":7026},{"krate":0,"index":7052},{"krate":0,"index":7054},{"krate":0,"index":7057},{"krate":0,"index":7061},{"krate":0,"index":7071},{"krate":0,"index":7074},{"krate":0,"index":7076}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"! A queue of delayed elements.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8826184,"byte_end":8826216,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8826217,"byte_end":8826220,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! See [`DelayQueue`] for more details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8826221,"byte_end":8826261,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8826262,"byte_end":8826265,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [`DelayQueue`]: struct.DelayQueue.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8826266,"byte_end":8826308,"line_start":5,"line_end":5,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":7487},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8830499,"byte_end":8830509,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":7489},{"krate":0,"index":7490},{"krate":0,"index":7491},{"krate":0,"index":7492},{"krate":0,"index":7493},{"krate":0,"index":7494}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8826549,"byte_end":8826581,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8826582,"byte_end":8826585,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8826586,"byte_end":8826663,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8826664,"byte_end":8826704,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8826705,"byte_end":8826708,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8826709,"byte_end":8826720,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8826721,"byte_end":8826724,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8826725,"byte_end":8826792,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8826793,"byte_end":8826873,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8826874,"byte_end":8826952,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8826953,"byte_end":8826989,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8826990,"byte_end":8826993,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8826994,"byte_end":8827064,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll`] is called. If an entry has reached its","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8827065,"byte_end":8827143,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ deadline, it is returned. If not, `Async::NotReady` indicating that the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8827144,"byte_end":8827219,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8827220,"byte_end":8827289,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8827290,"byte_end":8827293,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8827294,"byte_end":8827323,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8827324,"byte_end":8827327,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`Stream::poll`]. If no delays have","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8827328,"byte_end":8827406,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ expired, no items are returned. In this case, `NotReady` is returned and the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8827407,"byte_end":8827487,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8827488,"byte_end":8827564,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8827565,"byte_end":8827577,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8827578,"byte_end":8827581,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8827582,"byte_end":8827661,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ returns `Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8827662,"byte_end":8827739,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8827740,"byte_end":8827816,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ returning items or `NotReady.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8827817,"byte_end":8827850,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8827851,"byte_end":8827854,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8827855,"byte_end":8827933,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8827934,"byte_end":8828010,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire the same instant. Also note that delays are","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828011,"byte_end":8828089,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828090,"byte_end":8828129,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828130,"byte_end":8828133,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828134,"byte_end":8828154,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828155,"byte_end":8828158,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The `DelayQueue` is backed by the same hashed timing wheel implementation as","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828159,"byte_end":8828239,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/ [`Timer`] as such, it offers the same performance benefits. See [`Timer`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828240,"byte_end":8828317,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/ for further implementation notes.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828318,"byte_end":8828355,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828356,"byte_end":8828359,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This allows","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828360,"byte_end":8828433,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/ amortizing the cost of allocation. Space created for expired entries is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828434,"byte_end":8828509,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ reused when inserting new entries.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828510,"byte_end":8828548,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828549,"byte_end":8828552,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828553,"byte_end":8828635,"line_start":61,"line_end":61,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828636,"byte_end":8828663,"line_start":62,"line_end":62,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828664,"byte_end":8828667,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828668,"byte_end":8828679,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828680,"byte_end":8828683,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828684,"byte_end":8828731,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828732,"byte_end":8828735,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828736,"byte_end":8828754,"line_start":68,"line_end":68,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::{delay_queue, DelayQueue, Error};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828755,"byte_end":8828809,"line_start":69,"line_end":69,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828810,"byte_end":8828813,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828814,"byte_end":8828837,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828838,"byte_end":8828872,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828873,"byte_end":8828908,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828909,"byte_end":8828937,"line_start":74,"line_end":74,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828938,"byte_end":8828967,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828968,"byte_end":8828994,"line_start":76,"line_end":76,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828995,"byte_end":8828998,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8828999,"byte_end":8829017,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829018,"byte_end":8829080,"line_start":79,"line_end":79,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829081,"byte_end":8829123,"line_start":80,"line_end":80,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829124,"byte_end":8829129,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829130,"byte_end":8829133,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829134,"byte_end":8829163,"line_start":83,"line_end":83,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829164,"byte_end":8829167,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829168,"byte_end":8829184,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829185,"byte_end":8829244,"line_start":86,"line_end":86,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829245,"byte_end":8829285,"line_start":87,"line_end":87,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829286,"byte_end":8829354,"line_start":88,"line_end":88,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829355,"byte_end":8829358,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829359,"byte_end":8829412,"line_start":90,"line_end":90,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829413,"byte_end":8829422,"line_start":91,"line_end":91,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829423,"byte_end":8829426,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829427,"byte_end":8829484,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829485,"byte_end":8829518,"line_start":94,"line_end":94,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829519,"byte_end":8829556,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829557,"byte_end":8829566,"line_start":96,"line_end":96,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829567,"byte_end":8829570,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829571,"byte_end":8829617,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829618,"byte_end":8829686,"line_start":99,"line_end":99,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829687,"byte_end":8829739,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829740,"byte_end":8829753,"line_start":101,"line_end":101,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829754,"byte_end":8829763,"line_start":102,"line_end":102,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829764,"byte_end":8829767,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829768,"byte_end":8829851,"line_start":104,"line_end":104,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829852,"byte_end":8829929,"line_start":105,"line_end":105,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829930,"byte_end":8829963,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8829964,"byte_end":8830017,"line_start":107,"line_end":107,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8830018,"byte_end":8830031,"line_start":108,"line_end":108,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8830032,"byte_end":8830035,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8830036,"byte_end":8830067,"line_start":110,"line_end":110,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8830068,"byte_end":8830077,"line_start":111,"line_end":111,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8830078,"byte_end":8830083,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8830084,"byte_end":8830091,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8830092,"byte_end":8830095,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: #method.insert","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8830096,"byte_end":8830126,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ [`insert_at`]: #method.insert_at","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8830127,"byte_end":8830163,"line_start":116,"line_end":116,"column_start":1,"column_end":37}},{"value":"/ [`Key`]: struct.Key.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8830164,"byte_end":8830192,"line_start":117,"line_end":117,"column_start":1,"column_end":29}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8830193,"byte_end":8830269,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8830270,"byte_end":8830296,"line_start":119,"line_end":119,"column_start":1,"column_end":27}},{"value":"/ [`Stream::poll`]: #method.poll","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8830297,"byte_end":8830331,"line_start":120,"line_end":120,"column_start":1,"column_end":35}},{"value":"/ [`Timer`]: ../struct.Timer.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8830332,"byte_end":8830367,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/ [`slab`]: https://docs.rs/slab","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8830368,"byte_end":8830402,"line_start":122,"line_end":122,"column_start":1,"column_end":35}},{"value":"/ [`capacity`]: #method.capacity","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8830403,"byte_end":8830437,"line_start":123,"line_end":123,"column_start":1,"column_end":35}},{"value":"/ [`reserve`]: #method.reserve","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8830438,"byte_end":8830470,"line_start":124,"line_end":124,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":7498},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8831211,"byte_end":8831218,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":7500},{"krate":0,"index":7501},{"krate":0,"index":7502}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and removed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8831006,"byte_end":8831064,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8831065,"byte_end":8831068,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8831069,"byte_end":8831117,"line_start":149,"line_end":149,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8831118,"byte_end":8831121,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll`]: struct.DelayQueue.html#method.poll","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8831122,"byte_end":8831182,"line_start":151,"line_end":151,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":7506},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8831702,"byte_end":8831705,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":7507}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8831386,"byte_end":8831432,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8831433,"byte_end":8831436,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8831437,"byte_end":8831518,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8831519,"byte_end":8831554,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8831555,"byte_end":8831558,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct.DelayQueue.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8831559,"byte_end":8831601,"line_start":169,"line_end":169,"column_start":1,"column_end":43}},{"value":"/ [`DelayQueue::insert`]: struct.DelayQueue.html#method.insert","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8831602,"byte_end":8831666,"line_start":170,"line_end":170,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":7028},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8832682,"byte_end":8832685,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"fn () -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty, `DelayQueue`","sig":null,"attributes":[{"value":"/ Create a new, empty, `DelayQueue`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8832383,"byte_end":8832420,"line_start":206,"line_end":206,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8832425,"byte_end":8832428,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8832433,"byte_end":8832506,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8832511,"byte_end":8832514,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8832519,"byte_end":8832533,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8832538,"byte_end":8832541,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8832546,"byte_end":8832557,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8832562,"byte_end":8832596,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8832601,"byte_end":8832658,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8832663,"byte_end":8832670,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7029},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833602,"byte_end":8833615,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"fn (capacity: usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Create a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8832755,"byte_end":8832821,"line_start":220,"line_end":220,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8832826,"byte_end":8832829,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8832834,"byte_end":8832905,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8832910,"byte_end":8832979,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8832984,"byte_end":8832996,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833001,"byte_end":8833004,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833009,"byte_end":8833023,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833028,"byte_end":8833031,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833036,"byte_end":8833047,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833052,"byte_end":8833086,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833091,"byte_end":8833121,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833126,"byte_end":8833129,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833134,"byte_end":8833154,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833159,"byte_end":8833182,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833187,"byte_end":8833247,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833252,"byte_end":8833255,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     // These insertions are done without further allocation","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833260,"byte_end":8833323,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/     for i in 0..10 {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833328,"byte_end":8833352,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/         delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833357,"byte_end":8833415,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833420,"byte_end":8833429,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833434,"byte_end":8833437,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // This will make the queue allocate additional storage","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833442,"byte_end":8833505,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/     delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833510,"byte_end":8833566,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833571,"byte_end":8833578,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833583,"byte_end":8833590,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7030},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835640,"byte_end":8835649,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"fn (&mut self, value: T, when: Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Insert `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Insert `value` into the queue set to expire at a specific instant in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833914,"byte_end":8833986,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ time.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8833991,"byte_end":8834000,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834005,"byte_end":8834008,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834013,"byte_end":8834087,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834092,"byte_end":8834112,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834117,"byte_end":8834120,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834125,"byte_end":8834200,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834205,"byte_end":8834275,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834280,"byte_end":8834344,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834349,"byte_end":8834352,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834357,"byte_end":8834432,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834437,"byte_end":8834512,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834517,"byte_end":8834587,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834592,"byte_end":8834665,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834670,"byte_end":8834746,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834751,"byte_end":8834785,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834790,"byte_end":8834793,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834798,"byte_end":8834850,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834855,"byte_end":8834858,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834863,"byte_end":8834875,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834880,"byte_end":8834883,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834888,"byte_end":8834948,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834953,"byte_end":8834956,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834961,"byte_end":8834975,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834980,"byte_end":8834983,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8834988,"byte_end":8835003,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835008,"byte_end":8835011,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835016,"byte_end":8835027,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835032,"byte_end":8835085,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835090,"byte_end":8835093,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835098,"byte_end":8835118,"line_start":286,"line_end":286,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835123,"byte_end":8835146,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835151,"byte_end":8835199,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert_at(","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835204,"byte_end":8835244,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/         \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835249,"byte_end":8835309,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835314,"byte_end":8835317,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835322,"byte_end":8835349,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835354,"byte_end":8835398,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835403,"byte_end":8835446,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835451,"byte_end":8835458,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835463,"byte_end":8835470,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835475,"byte_end":8835478,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835483,"byte_end":8835509,"line_start":298,"line_end":298,"column_start":5,"column_end":31}},{"value":"/ [`remove`]: #method.remove","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835514,"byte_end":8835544,"line_start":299,"line_end":299,"column_start":5,"column_end":35}},{"value":"/ [`reset`]: #method.reset","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835549,"byte_end":8835577,"line_start":300,"line_end":300,"column_start":5,"column_end":33}},{"value":"/ [`Key`]: struct.Key.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835582,"byte_end":8835610,"line_start":301,"line_end":301,"column_start":5,"column_end":33}},{"value":"/ [type]: #","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8835615,"byte_end":8835628,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":7031},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8836828,"byte_end":8836840,"line_start":338,"line_end":338,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"fn (&mut self, cx: &mut task::Context<'_>) -> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n None if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempt to pull out the next value of the delay queue, registering the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8836621,"byte_end":8836695,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8836700,"byte_end":8836776,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/ None if the queue is exhausted.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8836781,"byte_end":8836816,"line_start":337,"line_end":337,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":7034},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8839201,"byte_end":8839207,"line_start":406,"line_end":406,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"fn (&mut self, value: T, timeout: Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Insert `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Insert `value` into the queue set to expire after the requested duration","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8837457,"byte_end":8837533,"line_start":358,"line_end":358,"column_start":5,"column_end":81}},{"value":"/ elapses.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8837538,"byte_end":8837550,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8837555,"byte_end":8837558,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8837563,"byte_end":8837632,"line_start":361,"line_end":361,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8837637,"byte_end":8837665,"line_start":362,"line_end":362,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8837670,"byte_end":8837673,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8837678,"byte_end":8837753,"line_start":364,"line_end":364,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8837758,"byte_end":8837828,"line_start":365,"line_end":365,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8837833,"byte_end":8837897,"line_start":366,"line_end":366,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8837902,"byte_end":8837905,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8837910,"byte_end":8837985,"line_start":368,"line_end":368,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8837990,"byte_end":8838065,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838070,"byte_end":8838140,"line_start":370,"line_end":370,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838145,"byte_end":8838218,"line_start":371,"line_end":371,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838223,"byte_end":8838299,"line_start":372,"line_end":372,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838304,"byte_end":8838338,"line_start":373,"line_end":373,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838343,"byte_end":8838346,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838351,"byte_end":8838403,"line_start":375,"line_end":375,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838408,"byte_end":8838411,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838416,"byte_end":8838428,"line_start":377,"line_end":377,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838433,"byte_end":8838436,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838441,"byte_end":8838516,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ duration.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838521,"byte_end":8838534,"line_start":380,"line_end":380,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838539,"byte_end":8838542,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838547,"byte_end":8838561,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838566,"byte_end":8838569,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838574,"byte_end":8838589,"line_start":384,"line_end":384,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838594,"byte_end":8838597,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838602,"byte_end":8838613,"line_start":386,"line_end":386,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838618,"byte_end":8838650,"line_start":387,"line_end":387,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838655,"byte_end":8838683,"line_start":388,"line_end":388,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838688,"byte_end":8838691,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838696,"byte_end":8838716,"line_start":390,"line_end":390,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838721,"byte_end":8838744,"line_start":391,"line_end":391,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838749,"byte_end":8838797,"line_start":392,"line_end":392,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838802,"byte_end":8838870,"line_start":393,"line_end":393,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838875,"byte_end":8838878,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838883,"byte_end":8838910,"line_start":395,"line_end":395,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838915,"byte_end":8838959,"line_start":396,"line_end":396,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8838964,"byte_end":8839007,"line_start":397,"line_end":397,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8839012,"byte_end":8839019,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8839024,"byte_end":8839031,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8839036,"byte_end":8839039,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8839044,"byte_end":8839070,"line_start":401,"line_end":401,"column_start":5,"column_end":31}},{"value":"/ [`remove`]: #method.remove","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8839075,"byte_end":8839105,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/ [`reset`]: #method.reset","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8839110,"byte_end":8839138,"line_start":403,"line_end":403,"column_start":5,"column_end":33}},{"value":"/ [`Key`]: struct.Key.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8839143,"byte_end":8839171,"line_start":404,"line_end":404,"column_start":5,"column_end":33}},{"value":"/ [type]: #","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8839176,"byte_end":8839189,"line_start":405,"line_end":405,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":7039},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840751,"byte_end":8840757,"line_start":453,"line_end":453,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"fn (&mut self, key: &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Remove the item associated with `key` from the queue.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8839898,"byte_end":8839955,"line_start":425,"line_end":425,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8839960,"byte_end":8839963,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8839968,"byte_end":8840041,"line_start":427,"line_end":427,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840046,"byte_end":8840119,"line_start":428,"line_end":428,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840124,"byte_end":8840141,"line_start":429,"line_end":429,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840146,"byte_end":8840149,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840154,"byte_end":8840166,"line_start":431,"line_end":431,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840171,"byte_end":8840174,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840179,"byte_end":8840242,"line_start":433,"line_end":433,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840247,"byte_end":8840250,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840255,"byte_end":8840269,"line_start":435,"line_end":435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840274,"byte_end":8840277,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840282,"byte_end":8840297,"line_start":437,"line_end":437,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840302,"byte_end":8840305,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840310,"byte_end":8840321,"line_start":439,"line_end":439,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840326,"byte_end":8840358,"line_start":440,"line_end":440,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840363,"byte_end":8840391,"line_start":441,"line_end":441,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840396,"byte_end":8840399,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840404,"byte_end":8840424,"line_start":443,"line_end":443,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840429,"byte_end":8840452,"line_start":444,"line_end":444,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840457,"byte_end":8840505,"line_start":445,"line_end":445,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840510,"byte_end":8840578,"line_start":446,"line_end":446,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840583,"byte_end":8840586,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840591,"byte_end":8840618,"line_start":448,"line_end":448,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840623,"byte_end":8840667,"line_start":449,"line_end":449,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840672,"byte_end":8840715,"line_start":450,"line_end":450,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840720,"byte_end":8840727,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8840732,"byte_end":8840739,"line_start":452,"line_end":452,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7041},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8842409,"byte_end":8842417,"line_start":505,"line_end":505,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"fn (&mut self, key: &Key, when: Instant) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841295,"byte_end":8841368,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841373,"byte_end":8841376,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841381,"byte_end":8841456,"line_start":474,"line_end":474,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841461,"byte_end":8841478,"line_start":475,"line_end":475,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841483,"byte_end":8841486,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841491,"byte_end":8841566,"line_start":477,"line_end":477,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841571,"byte_end":8841647,"line_start":478,"line_end":478,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841652,"byte_end":8841667,"line_start":479,"line_end":479,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841672,"byte_end":8841675,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841680,"byte_end":8841692,"line_start":481,"line_end":481,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841697,"byte_end":8841700,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841705,"byte_end":8841779,"line_start":483,"line_end":483,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841784,"byte_end":8841815,"line_start":484,"line_end":484,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841820,"byte_end":8841823,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841828,"byte_end":8841842,"line_start":486,"line_end":486,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841847,"byte_end":8841850,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841855,"byte_end":8841870,"line_start":488,"line_end":488,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841875,"byte_end":8841878,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841883,"byte_end":8841894,"line_start":490,"line_end":490,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841899,"byte_end":8841952,"line_start":491,"line_end":491,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841957,"byte_end":8841960,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841965,"byte_end":8841985,"line_start":493,"line_end":493,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8841990,"byte_end":8842013,"line_start":494,"line_end":494,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8842018,"byte_end":8842066,"line_start":495,"line_end":495,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8842071,"byte_end":8842139,"line_start":496,"line_end":496,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8842144,"byte_end":8842147,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8842152,"byte_end":8842209,"line_start":498,"line_end":498,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8842214,"byte_end":8842217,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8842222,"byte_end":8842299,"line_start":500,"line_end":500,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8842304,"byte_end":8842307,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8842312,"byte_end":8842373,"line_start":502,"line_end":502,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8842378,"byte_end":8842385,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8842390,"byte_end":8842397,"line_start":504,"line_end":504,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7044},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844310,"byte_end":8844315,"line_start":562,"line_end":562,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"fn (&mut self, key: &Key, timeout: Duration) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843160,"byte_end":8843228,"line_start":527,"line_end":527,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843233,"byte_end":8843247,"line_start":528,"line_end":528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843252,"byte_end":8843255,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843260,"byte_end":8843335,"line_start":530,"line_end":530,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843340,"byte_end":8843360,"line_start":531,"line_end":531,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843365,"byte_end":8843368,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843373,"byte_end":8843443,"line_start":533,"line_end":533,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843448,"byte_end":8843518,"line_start":534,"line_end":534,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843523,"byte_end":8843551,"line_start":535,"line_end":535,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843556,"byte_end":8843559,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843564,"byte_end":8843576,"line_start":537,"line_end":537,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843581,"byte_end":8843584,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843589,"byte_end":8843664,"line_start":539,"line_end":539,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843669,"byte_end":8843724,"line_start":540,"line_end":540,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843729,"byte_end":8843732,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843737,"byte_end":8843751,"line_start":542,"line_end":542,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843756,"byte_end":8843759,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843764,"byte_end":8843779,"line_start":544,"line_end":544,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843784,"byte_end":8843787,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843792,"byte_end":8843803,"line_start":546,"line_end":546,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843808,"byte_end":8843840,"line_start":547,"line_end":547,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843845,"byte_end":8843873,"line_start":548,"line_end":548,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843878,"byte_end":8843881,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843886,"byte_end":8843906,"line_start":550,"line_end":550,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843911,"byte_end":8843934,"line_start":551,"line_end":551,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843939,"byte_end":8843987,"line_start":552,"line_end":552,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8843992,"byte_end":8844060,"line_start":553,"line_end":553,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844065,"byte_end":8844068,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844073,"byte_end":8844130,"line_start":555,"line_end":555,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844135,"byte_end":8844138,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844143,"byte_end":8844200,"line_start":557,"line_end":557,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844205,"byte_end":8844208,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844213,"byte_end":8844274,"line_start":559,"line_end":559,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844279,"byte_end":8844286,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844291,"byte_end":8844298,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7045},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845152,"byte_end":8845157,"line_start":593,"line_end":593,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844424,"byte_end":8844465,"line_start":566,"line_end":566,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844470,"byte_end":8844473,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll`] will return `Ok(Ready(None))`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844478,"byte_end":8844544,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844549,"byte_end":8844552,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844557,"byte_end":8844623,"line_start":570,"line_end":570,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844628,"byte_end":8844631,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844636,"byte_end":8844662,"line_start":572,"line_end":572,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844667,"byte_end":8844670,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844675,"byte_end":8844689,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844694,"byte_end":8844697,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844702,"byte_end":8844713,"line_start":576,"line_end":576,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844718,"byte_end":8844750,"line_start":577,"line_end":577,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844755,"byte_end":8844783,"line_start":578,"line_end":578,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844788,"byte_end":8844791,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844796,"byte_end":8844816,"line_start":580,"line_end":580,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844821,"byte_end":8844844,"line_start":581,"line_end":581,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844849,"byte_end":8844897,"line_start":582,"line_end":582,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844902,"byte_end":8844905,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844910,"byte_end":8844968,"line_start":584,"line_end":584,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844973,"byte_end":8844976,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8844981,"byte_end":8845022,"line_start":586,"line_end":586,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845027,"byte_end":8845030,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/     delay_queue.clear();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845035,"byte_end":8845063,"line_start":588,"line_end":588,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845068,"byte_end":8845071,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845076,"byte_end":8845116,"line_start":590,"line_end":590,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845121,"byte_end":8845128,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845133,"byte_end":8845140,"line_start":592,"line_end":592,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7046},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845629,"byte_end":8845637,"line_start":610,"line_end":610,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845312,"byte_end":8845387,"line_start":600,"line_end":600,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845392,"byte_end":8845395,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845400,"byte_end":8845414,"line_start":602,"line_end":602,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845419,"byte_end":8845422,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845427,"byte_end":8845438,"line_start":604,"line_end":604,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845443,"byte_end":8845475,"line_start":605,"line_end":605,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845480,"byte_end":8845483,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845488,"byte_end":8845557,"line_start":607,"line_end":607,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845562,"byte_end":8845605,"line_start":608,"line_end":608,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845610,"byte_end":8845617,"line_start":609,"line_end":609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7047},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846850,"byte_end":8846857,"line_start":647,"line_end":647,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserve capacity for at least `additional` more items to be queued","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845696,"byte_end":8845766,"line_start":614,"line_end":614,"column_start":5,"column_end":75}},{"value":"/ without allocating.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845771,"byte_end":8845794,"line_start":615,"line_end":615,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845799,"byte_end":8845802,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845807,"byte_end":8845882,"line_start":617,"line_end":617,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845887,"byte_end":8845963,"line_start":618,"line_end":618,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8845968,"byte_end":8846044,"line_start":619,"line_end":619,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846049,"byte_end":8846125,"line_start":620,"line_end":620,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846130,"byte_end":8846153,"line_start":621,"line_end":621,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846158,"byte_end":8846161,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846166,"byte_end":8846238,"line_start":623,"line_end":623,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846243,"byte_end":8846276,"line_start":624,"line_end":624,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846281,"byte_end":8846284,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846289,"byte_end":8846301,"line_start":626,"line_end":626,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846306,"byte_end":8846309,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846314,"byte_end":8846386,"line_start":628,"line_end":628,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846391,"byte_end":8846413,"line_start":629,"line_end":629,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846418,"byte_end":8846421,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846426,"byte_end":8846440,"line_start":631,"line_end":631,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846445,"byte_end":8846448,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846453,"byte_end":8846460,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846465,"byte_end":8846497,"line_start":634,"line_end":634,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846502,"byte_end":8846530,"line_start":635,"line_end":635,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846535,"byte_end":8846538,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846543,"byte_end":8846563,"line_start":637,"line_end":637,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846568,"byte_end":8846591,"line_start":638,"line_end":638,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846596,"byte_end":8846644,"line_start":639,"line_end":639,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846649,"byte_end":8846652,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846657,"byte_end":8846718,"line_start":641,"line_end":641,"column_start":5,"column_end":66}},{"value":"/     delay_queue.reserve(10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846723,"byte_end":8846755,"line_start":642,"line_end":642,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846760,"byte_end":8846763,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.capacity() >= 11);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846768,"byte_end":8846814,"line_start":644,"line_end":644,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846819,"byte_end":8846826,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846831,"byte_end":8846838,"line_start":646,"line_end":646,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7048},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847573,"byte_end":8847581,"line_start":671,"line_end":671,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846940,"byte_end":8846994,"line_start":651,"line_end":651,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8846999,"byte_end":8847002,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847007,"byte_end":8847081,"line_start":653,"line_end":653,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `NotReady`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847086,"byte_end":8847142,"line_start":654,"line_end":654,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847147,"byte_end":8847150,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847155,"byte_end":8847169,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847174,"byte_end":8847177,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847182,"byte_end":8847189,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847194,"byte_end":8847226,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847231,"byte_end":8847259,"line_start":660,"line_end":660,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847264,"byte_end":8847267,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847272,"byte_end":8847292,"line_start":662,"line_end":662,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847297,"byte_end":8847320,"line_start":663,"line_end":663,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847325,"byte_end":8847373,"line_start":664,"line_end":664,"column_start":5,"column_end":53}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847378,"byte_end":8847418,"line_start":665,"line_end":665,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847423,"byte_end":8847426,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847431,"byte_end":8847491,"line_start":667,"line_end":667,"column_start":5,"column_end":65}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847496,"byte_end":8847537,"line_start":668,"line_end":668,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847542,"byte_end":8847549,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8847554,"byte_end":8847561,"line_start":670,"line_end":670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7078},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8852178,"byte_end":8852185,"line_start":843,"line_end":843,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8852123,"byte_end":8852166,"line_start":842,"line_end":842,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":7079},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8852294,"byte_end":8852301,"line_start":848,"line_end":848,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8852231,"byte_end":8852282,"line_start":847,"line_end":847,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7080},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8852419,"byte_end":8852429,"line_start":853,"line_end":853,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8852359,"byte_end":8852407,"line_start":852,"line_end":852,"column_start":5,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":7092},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8852995,"byte_end":8853006,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"delay_until","qualname":"::time::delay::delay_until","value":"fn (deadline: Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Wait until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Wait until `deadline` is reached.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8852622,"byte_end":8852659,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8852660,"byte_end":8852663,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8852664,"byte_end":8852739,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8852740,"byte_end":8852817,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8852818,"byte_end":8852853,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8852854,"byte_end":8852857,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8852858,"byte_end":8852876,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8852877,"byte_end":8852880,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8852881,"byte_end":8852957,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8852958,"byte_end":8852987,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":7093},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8853635,"byte_end":8853644,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"delay_for","qualname":"::time::delay::delay_for","value":"fn (duration: Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Wait until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Wait until `duration` has elapsed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8853145,"byte_end":8853183,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8853184,"byte_end":8853187,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `delay_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8853188,"byte_end":8853263,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8853264,"byte_end":8853299,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8853300,"byte_end":8853303,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8853304,"byte_end":8853379,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8853380,"byte_end":8853457,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8853458,"byte_end":8853493,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8853494,"byte_end":8853497,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8853498,"byte_end":8853516,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8853517,"byte_end":8853520,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8853521,"byte_end":8853597,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8853598,"byte_end":8853627,"line_start":35,"line_end":35,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":7529},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8853904,"byte_end":8853909,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"Delay","qualname":"::time::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":7530}],"decl_id":null,"docs":" Future returned by [`delay_until`](delay_until) and\n [`delay_for`](delay_for).\n","sig":null,"attributes":[{"value":"/ Future returned by [`delay_until`](delay_until) and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8853722,"byte_end":8853777,"line_start":40,"line_end":40,"column_start":1,"column_end":56}},{"value":"/ [`delay_for`](delay_for).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8853778,"byte_end":8853807,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8853825,"byte_end":8853892,"line_start":43,"line_end":43,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7096},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8854349,"byte_end":8854357,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Delay>::deadline","value":"fn (&self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8854279,"byte_end":8854337,"line_start":57,"line_end":57,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7097},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8854559,"byte_end":8854569,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Delay>::is_elapsed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Delay` has elapsed","sig":null,"attributes":[{"value":"/ Returns true if the `Delay` has elapsed","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8854426,"byte_end":8854469,"line_start":62,"line_end":62,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8854474,"byte_end":8854477,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ A `Delay` is elapsed when the requested duration has elapsed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8854482,"byte_end":8854547,"line_start":64,"line_end":64,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":7098},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8854957,"byte_end":8854962,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"fn (&mut self, deadline: Instant) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reset the `Delay` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Reset the `Delay` instance to a new deadline.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8854637,"byte_end":8854686,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8854691,"byte_end":8854694,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Delay`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8854699,"byte_end":8854773,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8854778,"byte_end":8854845,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8854850,"byte_end":8854853,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8854858,"byte_end":8854926,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8854931,"byte_end":8854945,"line_start":75,"line_end":75,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":7597},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8888232,"byte_end":8888237,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8887119,"byte_end":8887170,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8887171,"byte_end":8887174,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8887175,"byte_end":8887236,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8887237,"byte_end":8887240,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8887241,"byte_end":8887315,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8887316,"byte_end":8887395,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8887396,"byte_end":8887471,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8887472,"byte_end":8887547,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8887548,"byte_end":8887576,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8887577,"byte_end":8887580,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8887581,"byte_end":8887658,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding delays.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8887659,"byte_end":8887737,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8887738,"byte_end":8887814,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8887815,"byte_end":8887895,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8887896,"byte_end":8887973,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8887974,"byte_end":8888055,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8888056,"byte_end":8888138,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8888139,"byte_end":8888142,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8888143,"byte_end":8888203,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7290},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8888387,"byte_end":8888395,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"fn () -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Create an error representing a shutdown timer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8888325,"byte_end":8888375,"line_start":34,"line_end":34,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7291},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8888527,"byte_end":8888538,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8888444,"byte_end":8888515,"line_start":39,"line_end":39,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":7292},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8888725,"byte_end":8888736,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"fn () -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Create an error representing a timer at capacity.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8888660,"byte_end":8888713,"line_start":47,"line_end":47,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":7293},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8888873,"byte_end":8888887,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8888787,"byte_end":8888861,"line_start":52,"line_end":52,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":7609},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8889662,"byte_end":8889669,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":7610}],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.\n","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8889477,"byte_end":8889537,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8889538,"byte_end":8889600,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7304},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8889916,"byte_end":8889919,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"fn () -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8889723,"byte_end":8889769,"line_start":15,"line_end":15,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8889774,"byte_end":8889777,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8889782,"byte_end":8889796,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8889801,"byte_end":8889804,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8889809,"byte_end":8889816,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8889821,"byte_end":8889850,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8889855,"byte_end":8889858,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8889863,"byte_end":8889892,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8889897,"byte_end":8889904,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7305},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890045,"byte_end":8890053,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"fn (std: std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8889969,"byte_end":8890033,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":7306},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890189,"byte_end":8890197,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"fn (self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890127,"byte_end":8890177,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7307},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890441,"byte_end":8890455,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"fn (&self, earlier: Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890256,"byte_end":8890328,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890333,"byte_end":8890336,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890341,"byte_end":8890353,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890358,"byte_end":8890361,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890366,"byte_end":8890429,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7308},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891146,"byte_end":8891168,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"fn (&self, earlier: Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890551,"byte_end":8890626,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890631,"byte_end":8890679,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890684,"byte_end":8890687,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890692,"byte_end":8890706,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890711,"byte_end":8890714,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890719,"byte_end":8890726,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890731,"byte_end":8890783,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890788,"byte_end":8890791,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890796,"byte_end":8890814,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890819,"byte_end":8890840,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890845,"byte_end":8890878,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890883,"byte_end":8890928,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890933,"byte_end":8890970,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8890975,"byte_end":8891037,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891042,"byte_end":8891112,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891117,"byte_end":8891122,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891127,"byte_end":8891134,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7309},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891891,"byte_end":8891916,"line_start":85,"line_end":85,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"fn (&self, earlier: Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891280,"byte_end":8891355,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891360,"byte_end":8891419,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891424,"byte_end":8891427,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891432,"byte_end":8891446,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891451,"byte_end":8891454,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891459,"byte_end":8891466,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891471,"byte_end":8891523,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891528,"byte_end":8891531,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891536,"byte_end":8891554,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891559,"byte_end":8891580,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891585,"byte_end":8891618,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891623,"byte_end":8891668,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891673,"byte_end":8891710,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891715,"byte_end":8891780,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891785,"byte_end":8891857,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891862,"byte_end":8891867,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8891872,"byte_end":8891879,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7310},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892687,"byte_end":8892694,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"fn (&self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892023,"byte_end":8892093,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892098,"byte_end":8892101,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892106,"byte_end":8892118,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892123,"byte_end":8892126,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892131,"byte_end":8892199,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892204,"byte_end":8892270,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892275,"byte_end":8892302,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892307,"byte_end":8892310,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892315,"byte_end":8892329,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892334,"byte_end":8892337,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892342,"byte_end":8892349,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892354,"byte_end":8892406,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892411,"byte_end":8892414,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892419,"byte_end":8892437,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892442,"byte_end":8892463,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892468,"byte_end":8892505,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892510,"byte_end":8892558,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     delay_for(three_secs).await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892563,"byte_end":8892599,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892604,"byte_end":8892653,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892658,"byte_end":8892663,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892668,"byte_end":8892675,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7311},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892975,"byte_end":8892986,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"fn (&self, duration: Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892758,"byte_end":8892833,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892838,"byte_end":8892909,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8892914,"byte_end":8892963,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7312},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8893325,"byte_end":8893336,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"fn (&self, duration: Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8893108,"byte_end":8893183,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8893188,"byte_end":8893259,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8893264,"byte_end":8893313,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":7348},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895789,"byte_end":8895797,"line_start":36,"line_end":36,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"fn (period: Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895058,"byte_end":8895135,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895136,"byte_end":8895167,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895168,"byte_end":8895171,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895172,"byte_end":8895252,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895253,"byte_end":8895292,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895293,"byte_end":8895296,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895297,"byte_end":8895370,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895371,"byte_end":8895374,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895375,"byte_end":8895387,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895388,"byte_end":8895391,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895392,"byte_end":8895437,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895438,"byte_end":8895441,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895442,"byte_end":8895456,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895457,"byte_end":8895460,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895461,"byte_end":8895468,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895469,"byte_end":8895507,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895508,"byte_end":8895511,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895512,"byte_end":8895530,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895531,"byte_end":8895552,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895553,"byte_end":8895622,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895623,"byte_end":8895626,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895627,"byte_end":8895657,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895658,"byte_end":8895688,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895689,"byte_end":8895719,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895720,"byte_end":8895723,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 30ms have elapsed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895724,"byte_end":8895767,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895768,"byte_end":8895773,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895774,"byte_end":8895781,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7349},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896683,"byte_end":8896694,"line_start":69,"line_end":69,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"fn (start: Instant, period: Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `at`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8895947,"byte_end":8896020,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `at`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896021,"byte_end":8896055,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896056,"byte_end":8896059,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896060,"byte_end":8896140,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896141,"byte_end":8896180,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896181,"byte_end":8896184,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896185,"byte_end":8896197,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896198,"byte_end":8896201,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896202,"byte_end":8896247,"line_start":50,"line_end":50,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896248,"byte_end":8896251,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896252,"byte_end":8896266,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896267,"byte_end":8896270,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896271,"byte_end":8896278,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896279,"byte_end":8896333,"line_start":55,"line_end":55,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896334,"byte_end":8896337,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896338,"byte_end":8896356,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896357,"byte_end":8896378,"line_start":58,"line_end":58,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896379,"byte_end":8896442,"line_start":59,"line_end":59,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896443,"byte_end":8896516,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896517,"byte_end":8896520,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896521,"byte_end":8896551,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896552,"byte_end":8896582,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896583,"byte_end":8896613,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896614,"byte_end":8896617,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896618,"byte_end":8896661,"line_start":66,"line_end":66,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896662,"byte_end":8896667,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896668,"byte_end":8896675,"line_start":68,"line_end":68,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7627},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8897000,"byte_end":8897008,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":7628},{"krate":0,"index":7629}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).\n","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8896892,"byte_end":8896971,"line_start":78,"line_end":78,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":7351},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8897253,"byte_end":8897262,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7352},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8898354,"byte_end":8898358,"line_start":127,"line_end":127,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"fn (&mut self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8897749,"byte_end":8897818,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8897823,"byte_end":8897826,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8897831,"byte_end":8897845,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8897850,"byte_end":8897853,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8897858,"byte_end":8897865,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8897870,"byte_end":8897890,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8897895,"byte_end":8897898,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8897903,"byte_end":8897931,"line_start":113,"line_end":113,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8897936,"byte_end":8897939,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8897944,"byte_end":8897962,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8897967,"byte_end":8897988,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8897993,"byte_end":8898062,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8898067,"byte_end":8898070,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8898075,"byte_end":8898105,"line_start":119,"line_end":119,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8898110,"byte_end":8898140,"line_start":120,"line_end":120,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8898145,"byte_end":8898175,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8898180,"byte_end":8898183,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/     // approximately 30ms have elapsed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8898188,"byte_end":8898231,"line_start":123,"line_end":123,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8898236,"byte_end":8898241,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8898246,"byte_end":8898253,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8898258,"byte_end":8898298,"line_start":126,"line_end":126,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":7375},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899979,"byte_end":8899986,"line_start":47,"line_end":47,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"fn <T> (duration: Duration, future: T) -> Timeout<T>","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8898995,"byte_end":8899072,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899073,"byte_end":8899076,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899077,"byte_end":8899156,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899157,"byte_end":8899212,"line_start":17,"line_end":17,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899213,"byte_end":8899216,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899217,"byte_end":8899234,"line_start":19,"line_end":19,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899235,"byte_end":8899238,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899239,"byte_end":8899317,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899318,"byte_end":8899348,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899349,"byte_end":8899352,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899353,"byte_end":8899433,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899434,"byte_end":8899461,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899462,"byte_end":8899465,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899466,"byte_end":8899480,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899481,"byte_end":8899484,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899485,"byte_end":8899545,"line_start":29,"line_end":29,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899546,"byte_end":8899549,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899550,"byte_end":8899561,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899562,"byte_end":8899591,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899592,"byte_end":8899621,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899622,"byte_end":8899625,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899626,"byte_end":8899654,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899655,"byte_end":8899658,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899659,"byte_end":8899681,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899682,"byte_end":8899720,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899721,"byte_end":8899748,"line_start":39,"line_end":39,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899749,"byte_end":8899752,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899753,"byte_end":8899826,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899827,"byte_end":8899893,"line_start":42,"line_end":42,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899894,"byte_end":8899949,"line_start":43,"line_end":43,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899950,"byte_end":8899955,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899956,"byte_end":8899963,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8899964,"byte_end":8899971,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7377},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8901208,"byte_end":8901218,"line_start":89,"line_end":89,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"fn <T> (deadline: Instant, future: T) -> Timeout<T>","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900177,"byte_end":8900249,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900250,"byte_end":8900253,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900254,"byte_end":8900331,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900332,"byte_end":8900387,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900388,"byte_end":8900391,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900392,"byte_end":8900409,"line_start":60,"line_end":60,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900410,"byte_end":8900413,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900414,"byte_end":8900492,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900493,"byte_end":8900523,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900524,"byte_end":8900527,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900528,"byte_end":8900608,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900609,"byte_end":8900636,"line_start":66,"line_end":66,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900637,"byte_end":8900640,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900641,"byte_end":8900655,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900656,"byte_end":8900659,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900660,"byte_end":8900720,"line_start":70,"line_end":70,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900721,"byte_end":8900724,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900725,"byte_end":8900736,"line_start":72,"line_end":72,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900737,"byte_end":8900780,"line_start":73,"line_end":73,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900781,"byte_end":8900810,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900811,"byte_end":8900814,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900815,"byte_end":8900843,"line_start":76,"line_end":76,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900844,"byte_end":8900847,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900848,"byte_end":8900870,"line_start":78,"line_end":78,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900871,"byte_end":8900909,"line_start":79,"line_end":79,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900910,"byte_end":8900937,"line_start":80,"line_end":80,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900938,"byte_end":8900941,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8900942,"byte_end":8901020,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8901021,"byte_end":8901035,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8901036,"byte_end":8901122,"line_start":84,"line_end":84,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8901123,"byte_end":8901178,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8901179,"byte_end":8901184,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8901185,"byte_end":8901192,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8901193,"byte_end":8901200,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7632},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8901562,"byte_end":8901569,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":7634},{"krate":0,"index":7635}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"/ Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8901390,"byte_end":8901465,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8901466,"byte_end":8901533,"line_start":102,"line_end":102,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7639},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8901671,"byte_end":8901678,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::timeout::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8901610,"byte_end":8901642,"line_start":109,"line_end":109,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":7382},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8901896,"byte_end":8901903,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8901823,"byte_end":8901884,"line_start":118,"line_end":118,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7383},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8902031,"byte_end":8902038,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8901950,"byte_end":8902019,"line_start":123,"line_end":123,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":7384},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8902167,"byte_end":8902177,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8902097,"byte_end":8902155,"line_start":128,"line_end":128,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":7657},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920550,"byte_end":8920558,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"throttle","qualname":"::time::throttle::throttle","value":"fn <T> (duration: Duration, stream: T) -> Throttle<T>","parent":null,"children":[],"decl_id":null,"docs":" Slow down a stream by enforcing a delay between items.\n They will be produced not more often than the specified interval.","sig":null,"attributes":[{"value":"/ Slow down a stream by enforcing a delay between items.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8919978,"byte_end":8920036,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ They will be produced not more often than the specified interval.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920037,"byte_end":8920106,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920107,"byte_end":8920110,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920111,"byte_end":8920124,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920125,"byte_end":8920128,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Create a throttled stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920129,"byte_end":8920159,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ ```rust,norun","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920160,"byte_end":8920177,"line_start":19,"line_end":19,"column_start":1,"column_end":18}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920178,"byte_end":8920206,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920207,"byte_end":8920240,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use tokio::time::throttle;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920241,"byte_end":8920271,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920272,"byte_end":8920275,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920276,"byte_end":8920298,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ let mut item_stream = throttle(Duration::from_secs(2), futures::stream::repeat(\"one\"));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920299,"byte_end":8920390,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920391,"byte_end":8920394,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920395,"byte_end":8920405,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/     // The string will be produced at most every 2 seconds","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920406,"byte_end":8920468,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/     println!(\"{:?}\", item_stream.next().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920469,"byte_end":8920520,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920521,"byte_end":8920526,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920527,"byte_end":8920534,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8920535,"byte_end":8920542,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8075},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8921053,"byte_end":8921061,"line_start":55,"line_end":55,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::time::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":8077},{"krate":0,"index":8078},{"krate":0,"index":8079},{"krate":0,"index":8080}],"decl_id":null,"docs":" Stream for the [`throttle`](throttle) function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8025933,"byte_end":8025944,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":7661},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8921528,"byte_end":8921535,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttle<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8921421,"byte_end":8921494,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8921499,"byte_end":8921516,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":7662},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8921844,"byte_end":8921851,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Throttle<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this combinator\n is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this combinator","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8921583,"byte_end":8921661,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8921666,"byte_end":8921686,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8921691,"byte_end":8921694,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the stream","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8921699,"byte_end":8921779,"line_start":80,"line_end":80,"column_start":5,"column_end":85}},{"value":"/ which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8921784,"byte_end":8921832,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":7663},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8922146,"byte_end":8922156,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Throttle<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8921911,"byte_end":8921973,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8921978,"byte_end":8921981,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so care","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8921986,"byte_end":8922063,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8922068,"byte_end":8922134,"line_start":89,"line_end":89,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":7433},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/wheel/stack.rs","byte_start":8919088,"byte_end":8919093,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":7432},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/wheel/stack.rs","byte_start":8919038,"byte_end":8919078,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":7434},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/wheel/stack.rs","byte_start":8919151,"byte_end":8919159,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":7432},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/wheel/stack.rs","byte_start":8919124,"byte_end":8919141,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":7435},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/wheel/stack.rs","byte_start":8919248,"byte_end":8919253,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":7432},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/wheel/stack.rs","byte_start":8919166,"byte_end":8919238,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984453,"byte_end":7984457,"line_start":88,"line_end":88,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":701},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":711},{"krate":0,"index":715},{"krate":0,"index":719},{"krate":0,"index":726},{"krate":0,"index":730},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7996432,"byte_end":7996436,"line_start":489,"line_end":489,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7998686,"byte_end":7998690,"line_start":551,"line_end":551,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":8001191,"byte_end":8001195,"line_start":627,"line_end":627,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":8004166,"byte_end":8004170,"line_start":715,"line_end":715,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":8004268,"byte_end":8004272,"line_start":721,"line_end":721,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":8004501,"byte_end":8004505,"line_start":730,"line_end":730,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006231,"byte_end":8006242,"line_start":18,"line_end":18,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8008966,"byte_end":8008977,"line_start":100,"line_end":100,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8009095,"byte_end":8009106,"line_start":106,"line_end":106,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8012020,"byte_end":8012027,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8013262,"byte_end":8013269,"line_start":88,"line_end":88,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014101,"byte_end":8014109,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017889,"byte_end":8017897,"line_start":240,"line_end":240,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/maybe_done.rs","byte_start":17504,"byte_end":17513,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/maybe_done.rs","byte_start":17683,"byte_end":17692,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/maybe_done.rs","byte_start":18892,"byte_end":18901,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/poll_fn.rs","byte_start":19662,"byte_end":19668,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/poll_fn.rs","byte_start":19889,"byte_end":19895,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/poll_fn.rs","byte_start":20037,"byte_end":20043,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/ready.rs","byte_start":20580,"byte_end":20585,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/ready.rs","byte_start":20612,"byte_end":20617,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/try_join.rs","byte_start":21813,"byte_end":21821,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/blocking.rs","byte_start":8032307,"byte_end":8032315,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/blocking.rs","byte_start":8032588,"byte_end":8032596,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/blocking.rs","byte_start":8034201,"byte_end":8034209,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1145},{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/blocking.rs","byte_start":8036934,"byte_end":8036937,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/blocking.rs","byte_start":8038752,"byte_end":8038755,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":33804,"byte_end":33807,"line_start":69,"line_end":69,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":33967,"byte_end":33970,"line_start":77,"line_end":77,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":34599,"byte_end":34605,"line_start":101,"line_end":101,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":40371,"byte_end":40374,"line_start":149,"line_end":149,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":40517,"byte_end":40520,"line_start":157,"line_end":157,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":41316,"byte_end":41322,"line_start":189,"line_end":189,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":43555,"byte_end":43558,"line_start":60,"line_end":60,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":43701,"byte_end":43704,"line_start":68,"line_end":68,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":44158,"byte_end":44164,"line_start":86,"line_end":86,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":51701,"byte_end":51704,"line_start":163,"line_end":163,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":51852,"byte_end":51855,"line_start":171,"line_end":171,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":52424,"byte_end":52427,"line_start":193,"line_end":193,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":52935,"byte_end":52941,"line_start":212,"line_end":212,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":53454,"byte_end":53460,"line_start":230,"line_end":230,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":53976,"byte_end":53982,"line_start":248,"line_end":248,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":54493,"byte_end":54499,"line_start":266,"line_end":266,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/scheduled_io.rs","byte_start":8052817,"byte_end":8052828,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/scheduled_io.rs","byte_start":8053620,"byte_end":8053631,"line_start":50,"line_end":50,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/scheduled_io.rs","byte_start":8053838,"byte_end":8053849,"line_start":60,"line_end":60,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/scheduled_io.rs","byte_start":8056443,"byte_end":8056454,"line_start":133,"line_end":133,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1240}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/mod.rs","byte_start":8041741,"byte_end":8041753,"line_start":78,"line_end":78,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/mod.rs","byte_start":8042418,"byte_end":8042424,"line_start":106,"line_end":106,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/mod.rs","byte_start":8045256,"byte_end":8045262,"line_start":207,"line_end":207,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/mod.rs","byte_start":8045630,"byte_end":8045636,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/mod.rs","byte_start":8045772,"byte_end":8045778,"line_start":234,"line_end":234,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/mod.rs","byte_start":8046965,"byte_end":8046971,"line_start":267,"line_end":267,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/mod.rs","byte_start":8047049,"byte_end":8047055,"line_start":273,"line_end":273,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/mod.rs","byte_start":8047190,"byte_end":8047195,"line_start":281,"line_end":281,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/mod.rs","byte_start":8048958,"byte_end":8048967,"line_start":339,"line_end":339,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8063087,"byte_end":8063098,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8068945,"byte_end":8068956,"line_start":334,"line_end":334,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8069449,"byte_end":8069460,"line_start":356,"line_end":356,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8070541,"byte_end":8070552,"line_start":402,"line_end":402,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8070725,"byte_end":8070736,"line_start":408,"line_end":408,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8072871,"byte_end":8072883,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8081401,"byte_end":8081413,"line_start":265,"line_end":265,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8081438,"byte_end":8081450,"line_start":266,"line_end":266,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8081469,"byte_end":8081481,"line_start":268,"line_end":268,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/stderr.rs","byte_start":8084790,"byte_end":8084796,"line_start":36,"line_end":36,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/stdin.rs","byte_start":8086654,"byte_end":8086659,"line_start":42,"line_end":42,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/stdout.rs","byte_start":8087804,"byte_end":8087810,"line_start":36,"line_end":36,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8089898,"byte_end":8089906,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8090568,"byte_end":8090576,"line_start":85,"line_end":85,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1528},{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8091131,"byte_end":8091140,"line_start":105,"line_end":105,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8092089,"byte_end":8092094,"line_start":135,"line_end":135,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8092489,"byte_end":8092494,"line_start":150,"line_end":150,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1543}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8092747,"byte_end":8092752,"line_start":158,"line_end":158,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8092875,"byte_end":8092883,"line_start":164,"line_end":164,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8092920,"byte_end":8092929,"line_start":165,"line_end":165,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8092966,"byte_end":8092974,"line_start":166,"line_end":166,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8093011,"byte_end":8093020,"line_start":167,"line_end":167,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8093063,"byte_end":8093071,"line_start":169,"line_end":169,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8093239,"byte_end":8093248,"line_start":175,"line_end":175,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/seek.rs","byte_start":8093938,"byte_end":8093942,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_buf_read_ext.rs","byte_start":8105689,"byte_end":8105690,"line_start":256,"line_end":256,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8134228,"byte_end":8134229,"line_start":807,"line_end":807,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8135294,"byte_end":8135295,"line_start":38,"line_end":38,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8159314,"byte_end":8159315,"line_start":689,"line_end":689,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8160715,"byte_end":8160724,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8162903,"byte_end":8162912,"line_start":108,"line_end":108,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1753},{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8163888,"byte_end":8163897,"line_start":134,"line_end":134,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1757},{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8164728,"byte_end":8164737,"line_start":156,"line_end":156,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8165248,"byte_end":8165257,"line_start":174,"line_end":174,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8166764,"byte_end":8166773,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8168084,"byte_end":8168093,"line_start":65,"line_end":65,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8168235,"byte_end":8168244,"line_start":71,"line_end":71,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8168956,"byte_end":8168965,"line_start":101,"line_end":101,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8169495,"byte_end":8169504,"line_start":119,"line_end":119,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1803},{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8169998,"byte_end":8170007,"line_start":134,"line_end":134,"column_start":66,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1807},{"krate":0,"index":1808}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8171961,"byte_end":8171970,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8174248,"byte_end":8174257,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8175147,"byte_end":8175156,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1843},{"krate":0,"index":1844}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8175638,"byte_end":8175647,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1847},{"krate":0,"index":1848}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8175934,"byte_end":8175943,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1851}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8177112,"byte_end":8177117,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8178257,"byte_end":8178262,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1877}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8178541,"byte_end":8178546,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1881}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8179063,"byte_end":8179068,"line_start":104,"line_end":104,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1886}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/copy.rs","byte_start":8182136,"byte_end":8182140,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1900},{"krate":0,"index":1901}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/empty.rs","byte_start":8185288,"byte_end":8185293,"line_start":47,"line_end":47,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1916}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/empty.rs","byte_start":8185502,"byte_end":8185507,"line_start":58,"line_end":58,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1919}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/empty.rs","byte_start":8185740,"byte_end":8185745,"line_start":68,"line_end":68,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1921}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/flush.rs","byte_start":8186510,"byte_end":8186515,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1937},{"krate":0,"index":1938}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8187695,"byte_end":8187700,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1953}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8188410,"byte_end":8188415,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1960}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8189123,"byte_end":8189128,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1963},{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read.rs","byte_start":8190526,"byte_end":8190530,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1980},{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_buf.rs","byte_start":8191572,"byte_end":8191579,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1998},{"krate":0,"index":1999}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_exact.rs","byte_start":8192971,"byte_end":8192980,"line_start":42,"line_end":42,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2015},{"krate":0,"index":2016}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_line.rs","byte_start":8199016,"byte_end":8199024,"line_start":59,"line_end":59,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2050},{"krate":0,"index":2051}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_to_end.rs","byte_start":8200247,"byte_end":8200252,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2069}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_to_end.rs","byte_start":8201928,"byte_end":8201937,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_to_string.rs","byte_start":8204041,"byte_end":8204053,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2096},{"krate":0,"index":2097}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_until.rs","byte_start":8206176,"byte_end":8206185,"line_start":63,"line_end":63,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":2115}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/repeat.rs","byte_start":8208044,"byte_end":8208050,"line_start":47,"line_end":47,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2124}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/shutdown.rs","byte_start":8208987,"byte_end":8208995,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/sink.rs","byte_start":8210629,"byte_end":8210633,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/sink.rs","byte_start":8211143,"byte_end":8211147,"line_start":66,"line_end":66,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2155}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212112,"byte_end":8212117,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2173}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212856,"byte_end":8212861,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2180}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8213519,"byte_end":8213524,"line_start":92,"line_end":92,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2183},{"krate":0,"index":2184}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8214692,"byte_end":8214696,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2208}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8216324,"byte_end":8216328,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2211},{"krate":0,"index":2212}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8216985,"byte_end":8216989,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2215},{"krate":0,"index":2216}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write.rs","byte_start":8218546,"byte_end":8218551,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2231},{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write_all.rs","byte_start":8219344,"byte_end":8219352,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2247},{"krate":0,"index":2248}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write_buf.rs","byte_start":8220852,"byte_end":8220860,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2265},{"krate":0,"index":2266}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":57613,"byte_end":57623,"line_start":45,"line_end":45,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":57663,"byte_end":57673,"line_start":47,"line_end":47,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":57954,"byte_end":57966,"line_start":59,"line_end":59,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":58006,"byte_end":58018,"line_start":61,"line_end":61,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":58278,"byte_end":58290,"line_start":72,"line_end":72,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":58330,"byte_end":58342,"line_start":74,"line_end":74,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":61671,"byte_end":61677,"line_start":193,"line_end":193,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":61721,"byte_end":61727,"line_start":195,"line_end":195,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2685},{"krate":0,"index":2686},{"krate":0,"index":2687}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":63093,"byte_end":63103,"line_start":246,"line_end":246,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2696},{"krate":0,"index":2697}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":63751,"byte_end":63760,"line_start":264,"line_end":264,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2701}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8225924,"byte_end":8225935,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2738},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8235249,"byte_end":8235260,"line_start":327,"line_end":327,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2757},{"krate":0,"index":2758}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8235700,"byte_end":8235711,"line_start":341,"line_end":341,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2760},{"krate":0,"index":2761}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8236037,"byte_end":8236048,"line_start":353,"line_end":353,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2763}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8236264,"byte_end":8236275,"line_start":364,"line_end":364,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2768}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/incoming.rs","byte_start":8237107,"byte_end":8237115,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2780},{"krate":0,"index":2781}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/incoming.rs","byte_start":8237555,"byte_end":8237563,"line_start":31,"line_end":31,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2783},{"krate":0,"index":2784}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/split.rs","byte_start":8238896,"byte_end":8238904,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2801},{"krate":0,"index":2802}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/split.rs","byte_start":8239224,"byte_end":8239233,"line_start":50,"line_end":50,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2807},{"krate":0,"index":2808}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/split.rs","byte_start":8240046,"byte_end":8240054,"line_start":79,"line_end":79,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2810}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/split.rs","byte_start":8240148,"byte_end":8240157,"line_start":85,"line_end":85,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2812}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8241632,"byte_end":8241641,"line_start":50,"line_end":50,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2846},{"krate":0,"index":2851},{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2874},{"krate":0,"index":2875},{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2884}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8263746,"byte_end":8263755,"line_start":716,"line_end":716,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2892},{"krate":0,"index":2893}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8264191,"byte_end":8264200,"line_start":730,"line_end":730,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2895},{"krate":0,"index":2896}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8264553,"byte_end":8264562,"line_start":744,"line_end":744,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2898},{"krate":0,"index":2899}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8264876,"byte_end":8264885,"line_start":758,"line_end":758,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2901},{"krate":0,"index":2902},{"krate":0,"index":2904},{"krate":0,"index":2905}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8265629,"byte_end":8265638,"line_start":787,"line_end":787,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2907}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8265852,"byte_end":8265861,"line_start":798,"line_end":798,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2912}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8266867,"byte_end":8266876,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2961},{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2969},{"krate":0,"index":2970},{"krate":0,"index":2971},{"krate":0,"index":2976},{"krate":0,"index":2980},{"krate":0,"index":2981},{"krate":0,"index":2985},{"krate":0,"index":2986},{"krate":0,"index":2991},{"krate":0,"index":2992},{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3010}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8280151,"byte_end":8280160,"line_start":364,"line_end":364,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3012},{"krate":0,"index":3013}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8280596,"byte_end":8280605,"line_start":378,"line_end":378,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3015},{"krate":0,"index":3016}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8280925,"byte_end":8280934,"line_start":390,"line_end":390,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3018}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8281153,"byte_end":8281162,"line_start":401,"line_end":401,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8283228,"byte_end":8283240,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3035}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8283443,"byte_end":8283455,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8283982,"byte_end":8283990,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3044}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8285622,"byte_end":8285630,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3049},{"krate":0,"index":3050},{"krate":0,"index":3054}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8286950,"byte_end":8286958,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3059}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8287049,"byte_end":8287057,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3061}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8287873,"byte_end":8287885,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3104},{"krate":0,"index":3106},{"krate":0,"index":3107},{"krate":0,"index":3108},{"krate":0,"index":3109},{"krate":0,"index":3110},{"krate":0,"index":3112},{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3132},{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":3135},{"krate":0,"index":3136}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8294165,"byte_end":8294177,"line_start":198,"line_end":198,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3138},{"krate":0,"index":3139}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8294619,"byte_end":8294631,"line_start":212,"line_end":212,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3141},{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8294960,"byte_end":8294972,"line_start":224,"line_end":224,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3144}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8295097,"byte_end":8295109,"line_start":230,"line_end":230,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3146}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/incoming.rs","byte_start":8295467,"byte_end":8295475,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3157},{"krate":0,"index":3158}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/incoming.rs","byte_start":8295917,"byte_end":8295925,"line_start":30,"line_end":30,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3160},{"krate":0,"index":3161}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8296682,"byte_end":8296694,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3185},{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3196}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8300420,"byte_end":8300432,"line_start":129,"line_end":129,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3198},{"krate":0,"index":3199}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8300874,"byte_end":8300886,"line_start":143,"line_end":143,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3201},{"krate":0,"index":3202}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8301206,"byte_end":8301218,"line_start":155,"line_end":155,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3204}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8301343,"byte_end":8301355,"line_start":161,"line_end":161,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3206}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/split.rs","byte_start":8302347,"byte_end":8302355,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3222},{"krate":0,"index":3223}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/split.rs","byte_start":8302675,"byte_end":8302684,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3225},{"krate":0,"index":3226},{"krate":0,"index":3227}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/split.rs","byte_start":8303168,"byte_end":8303176,"line_start":64,"line_end":64,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3229}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/split.rs","byte_start":8303272,"byte_end":8303281,"line_start":70,"line_end":70,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3231}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8304219,"byte_end":8304229,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3268},{"krate":0,"index":3273},{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3277},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3280},{"krate":0,"index":3281}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8307323,"byte_end":8307333,"line_start":114,"line_end":114,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3283},{"krate":0,"index":3284}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8307771,"byte_end":8307781,"line_start":128,"line_end":128,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3286},{"krate":0,"index":3287}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8308094,"byte_end":8308104,"line_start":140,"line_end":140,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3289},{"krate":0,"index":3290}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8308418,"byte_end":8308428,"line_start":154,"line_end":154,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3294}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8308864,"byte_end":8308874,"line_start":172,"line_end":172,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3296},{"krate":0,"index":3297}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8310391,"byte_end":8310401,"line_start":217,"line_end":217,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3299}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8310526,"byte_end":8310536,"line_start":223,"line_end":223,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3301}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_u32.rs","byte_start":66468,"byte_end":66477,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_u32.rs","byte_start":66502,"byte_end":66511,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_u32.rs","byte_start":66521,"byte_end":66530,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_u32.rs","byte_start":67015,"byte_end":67024,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_u32.rs","byte_start":67309,"byte_end":67318,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_usize.rs","byte_start":69435,"byte_end":69446,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_usize.rs","byte_start":69471,"byte_end":69482,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_usize.rs","byte_start":69492,"byte_end":69503,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_usize.rs","byte_start":70003,"byte_end":70014,"line_start":30,"line_end":30,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_usize.rs","byte_start":70304,"byte_end":70315,"line_start":40,"line_end":40,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_usize.rs","byte_start":70479,"byte_end":70490,"line_start":47,"line_end":47,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/causal_cell.rs","byte_start":70750,"byte_end":70760,"line_start":9,"line_end":9,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/causal_cell.rs","byte_start":71481,"byte_end":71492,"line_start":45,"line_end":45,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/alloc.rs","byte_start":71661,"byte_end":71666,"line_start":6,"line_end":6,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/either.rs","byte_start":8314932,"byte_end":8314938,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3406},{"krate":0,"index":3407},{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3410}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/either.rs","byte_start":8315744,"byte_end":8315750,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3414}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/either.rs","byte_start":8315964,"byte_end":8315970,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3418}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/thread.rs","byte_start":77897,"byte_end":77907,"line_start":46,"line_end":46,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/thread.rs","byte_start":78172,"byte_end":78182,"line_start":58,"line_end":58,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/thread.rs","byte_start":78641,"byte_end":78646,"line_start":80,"line_end":80,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/thread.rs","byte_start":83295,"byte_end":83305,"line_start":197,"line_end":197,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/thread.rs","byte_start":83414,"byte_end":83426,"line_start":205,"line_end":205,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/thread.rs","byte_start":83818,"byte_end":83834,"line_start":224,"line_end":224,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3452},{"krate":0,"index":3453}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/thread.rs","byte_start":84471,"byte_end":84487,"line_start":244,"line_end":244,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3458},{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3462},{"krate":0,"index":3464}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/thread.rs","byte_start":85053,"byte_end":85065,"line_start":264,"line_end":264,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3467}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/thread.rs","byte_start":85277,"byte_end":85282,"line_start":273,"line_end":273,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3469},{"krate":0,"index":3470}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/mod.rs","byte_start":76805,"byte_end":76808,"line_start":139,"line_end":139,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/mod.rs","byte_start":76897,"byte_end":76900,"line_start":145,"line_end":145,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/orphan.rs","byte_start":8355668,"byte_end":8355683,"line_start":48,"line_end":48,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3510}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/orphan.rs","byte_start":8355927,"byte_end":8355942,"line_start":61,"line_end":61,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3513},{"krate":0,"index":3514}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/reap.rs","byte_start":8360523,"byte_end":8360529,"line_start":31,"line_end":31,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3535}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/reap.rs","byte_start":8360673,"byte_end":8360679,"line_start":37,"line_end":37,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3540},{"krate":0,"index":3541}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/reap.rs","byte_start":8360846,"byte_end":8360852,"line_start":49,"line_end":49,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3546},{"krate":0,"index":3547},{"krate":0,"index":3548}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/reap.rs","byte_start":8361319,"byte_end":8361325,"line_start":71,"line_end":71,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3553},{"krate":0,"index":3554}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/reap.rs","byte_start":8363620,"byte_end":8363626,"line_start":121,"line_end":121,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3559}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/reap.rs","byte_start":8363802,"byte_end":8363808,"line_start":131,"line_end":131,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3564}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8350286,"byte_end":8350291,"line_start":47,"line_end":47,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3593},{"krate":0,"index":3594}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8350469,"byte_end":8350474,"line_start":57,"line_end":57,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3596}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8350719,"byte_end":8350736,"line_start":69,"line_end":69,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3600}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8350885,"byte_end":8350902,"line_start":75,"line_end":75,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3602},{"krate":0,"index":3603}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8351249,"byte_end":8351254,"line_start":90,"line_end":90,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3607}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8351923,"byte_end":8351928,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3610}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8352015,"byte_end":8352020,"line_start":122,"line_end":122,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3612}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8352117,"byte_end":8352122,"line_start":128,"line_end":128,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3614},{"krate":0,"index":3615}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8352385,"byte_end":8352387,"line_start":141,"line_end":141,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3618}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8352542,"byte_end":8352544,"line_start":150,"line_end":150,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3621},{"krate":0,"index":3622}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8352774,"byte_end":8352776,"line_start":163,"line_end":163,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3625}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8352899,"byte_end":8352901,"line_start":172,"line_end":172,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3628},{"krate":0,"index":3629},{"krate":0,"index":3630}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321368,"byte_end":8321375,"line_start":156,"line_end":156,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3666},{"krate":0,"index":3668},{"krate":0,"index":3670},{"krate":0,"index":3673},{"krate":0,"index":3676},{"krate":0,"index":3680},{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3685},{"krate":0,"index":3687},{"krate":0,"index":3689},{"krate":0,"index":3691},{"krate":0,"index":3692},{"krate":0,"index":3693},{"krate":0,"index":3694},{"krate":0,"index":3696},{"krate":0,"index":3701},{"krate":0,"index":3704}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8337510,"byte_end":8337517,"line_start":660,"line_end":660,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3708}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8337847,"byte_end":8337861,"line_start":676,"line_end":676,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3711}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8338067,"byte_end":8338081,"line_start":688,"line_end":688,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3714}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8338218,"byte_end":8338232,"line_start":696,"line_end":696,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3719},{"krate":0,"index":3720}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8339581,"byte_end":8339586,"line_start":737,"line_end":737,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3722},{"krate":0,"index":3723},{"krate":0,"index":3724},{"krate":0,"index":3725},{"krate":0,"index":3726},{"krate":0,"index":3727}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8342141,"byte_end":8342146,"line_start":809,"line_end":809,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3736},{"krate":0,"index":3737}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8343111,"byte_end":8343121,"line_start":844,"line_end":844,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3739},{"krate":0,"index":3740},{"krate":0,"index":3741}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8343646,"byte_end":8343657,"line_start":862,"line_end":862,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3743}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8343882,"byte_end":8343893,"line_start":872,"line_end":872,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3745}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8344245,"byte_end":8344255,"line_start":888,"line_end":888,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3755}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8344380,"byte_end":8344391,"line_start":894,"line_end":894,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3757}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8344516,"byte_end":8344527,"line_start":900,"line_end":900,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3759}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8381212,"byte_end":8381225,"line_start":38,"line_end":38,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8381250,"byte_end":8381263,"line_start":39,"line_end":39,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8381582,"byte_end":8381596,"line_start":58,"line_end":58,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3856},{"krate":0,"index":3857},{"krate":0,"index":3858},{"krate":0,"index":3860}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8382804,"byte_end":8382809,"line_start":107,"line_end":107,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3869}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8384379,"byte_end":8384386,"line_start":156,"line_end":156,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3874},{"krate":0,"index":3876}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8384974,"byte_end":8384987,"line_start":180,"line_end":180,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3881},{"krate":0,"index":3884},{"krate":0,"index":3886}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8387453,"byte_end":8387466,"line_start":256,"line_end":256,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3889},{"krate":0,"index":3890},{"krate":0,"index":3891},{"krate":0,"index":3892}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8388631,"byte_end":8388644,"line_start":288,"line_end":288,"column_start":27,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8388666,"byte_end":8388680,"line_start":290,"line_end":290,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3896}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8389516,"byte_end":8389529,"line_start":320,"line_end":320,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3898}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/pool.rs","byte_start":8392796,"byte_end":8392808,"line_start":98,"line_end":98,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3980},{"krate":0,"index":3981}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/pool.rs","byte_start":8394185,"byte_end":8394197,"line_start":141,"line_end":141,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3983}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/pool.rs","byte_start":8394496,"byte_end":8394508,"line_start":155,"line_end":155,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3985}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/pool.rs","byte_start":8394669,"byte_end":8394676,"line_start":163,"line_end":163,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3987},{"krate":0,"index":3998},{"krate":0,"index":3999}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/pool.rs","byte_start":8395661,"byte_end":8395666,"line_start":186,"line_end":186,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3997}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/pool.rs","byte_start":8398039,"byte_end":8398044,"line_start":264,"line_end":264,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4002},{"krate":0,"index":4005}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/pool.rs","byte_start":8401045,"byte_end":8401052,"line_start":360,"line_end":360,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4007}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/schedule.rs","byte_start":8401620,"byte_end":8401632,"line_start":8,"line_end":8,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4024},{"krate":0,"index":4025}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/schedule.rs","byte_start":8401878,"byte_end":8401890,"line_start":20,"line_end":20,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/shutdown.rs","byte_start":8402455,"byte_end":8402463,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4032}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/task.rs","byte_start":8403136,"byte_end":8403148,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4047}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/task.rs","byte_start":8403342,"byte_end":8403354,"line_start":17,"line_end":17,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4051},{"krate":0,"index":4052}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":105415,"byte_end":105422,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":113311,"byte_end":113318,"line_start":353,"line_end":353,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4091}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":113866,"byte_end":113873,"line_start":377,"line_end":377,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4093}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":114392,"byte_end":114399,"line_start":400,"line_end":400,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4095},{"krate":0,"index":4096}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":116131,"byte_end":116138,"line_start":447,"line_end":447,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4101},{"krate":0,"index":4102}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":117717,"byte_end":117724,"line_start":489,"line_end":489,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":117803,"byte_end":117810,"line_start":495,"line_end":495,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/enter.rs","byte_start":119847,"byte_end":119852,"line_start":53,"line_end":53,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/enter.rs","byte_start":120296,"byte_end":120301,"line_start":79,"line_end":79,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4112}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/enter.rs","byte_start":121324,"byte_end":121329,"line_start":109,"line_end":109,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/enter.rs","byte_start":121459,"byte_end":121464,"line_start":115,"line_end":115,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/global.rs","byte_start":8407205,"byte_end":8407210,"line_start":90,"line_end":90,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4141}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/handle.rs","byte_start":122147,"byte_end":122153,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/handle.rs","byte_start":122504,"byte_end":122510,"line_start":42,"line_end":42,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4176}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/park.rs","byte_start":8408529,"byte_end":8408535,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4209}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/park.rs","byte_start":8409004,"byte_end":8409010,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4211}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/park.rs","byte_start":8409326,"byte_end":8409332,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4215},{"krate":0,"index":4216},{"krate":0,"index":4217}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/park.rs","byte_start":8409980,"byte_end":8409988,"line_start":108,"line_end":108,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4220}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/park.rs","byte_start":8410057,"byte_end":8410062,"line_start":114,"line_end":114,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4222},{"krate":0,"index":4223},{"krate":0,"index":4224},{"krate":0,"index":4225},{"krate":0,"index":4226},{"krate":0,"index":4227}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/shell.rs","byte_start":126268,"byte_end":126273,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/spawner.rs","byte_start":128225,"byte_end":128232,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/spawner.rs","byte_start":128663,"byte_end":128670,"line_start":38,"line_end":38,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4254}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/current.rs","byte_start":8418425,"byte_end":8418430,"line_start":34,"line_end":34,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4273}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/current.rs","byte_start":8418989,"byte_end":8418996,"line_start":65,"line_end":65,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4281}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/current.rs","byte_start":8419332,"byte_end":8419337,"line_start":77,"line_end":77,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4285}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/idle.rs","byte_start":8420142,"byte_end":8420146,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4301},{"krate":0,"index":4302},{"krate":0,"index":4303},{"krate":0,"index":4304},{"krate":0,"index":4305},{"krate":0,"index":4306},{"krate":0,"index":4307},{"krate":0,"index":4308}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/idle.rs","byte_start":8424019,"byte_end":8424024,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":4312},{"krate":0,"index":4313},{"krate":0,"index":4314},{"krate":0,"index":4315},{"krate":0,"index":4316},{"krate":0,"index":4317}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/idle.rs","byte_start":8425502,"byte_end":8425507,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4319}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/idle.rs","byte_start":8425680,"byte_end":8425685,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4323}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/owned.rs","byte_start":8427696,"byte_end":8427701,"line_start":45,"line_end":45,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4336},{"krate":0,"index":4337},{"krate":0,"index":4338},{"krate":0,"index":4339},{"krate":0,"index":4340}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/queue/global.rs","byte_start":8430541,"byte_end":8430546,"line_start":31,"line_end":31,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4369},{"krate":0,"index":4370},{"krate":0,"index":4371},{"krate":0,"index":4372},{"krate":0,"index":4373},{"krate":0,"index":4374},{"krate":0,"index":4375},{"krate":0,"index":4377},{"krate":0,"index":4378}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/queue/inject.rs","byte_start":8435859,"byte_end":8435865,"line_start":9,"line_end":9,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4390},{"krate":0,"index":4391},{"krate":0,"index":4393},{"krate":0,"index":4394},{"krate":0,"index":4395}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/queue/local.rs","byte_start":8437401,"byte_end":8437406,"line_start":25,"line_end":25,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4420}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/queue/local.rs","byte_start":8437882,"byte_end":8437887,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4423},{"krate":0,"index":4425},{"krate":0,"index":4430},{"krate":0,"index":4432},{"krate":0,"index":4433},{"krate":0,"index":4435}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/queue/local.rs","byte_start":8445878,"byte_end":8445883,"line_start":290,"line_end":290,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4440}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/queue/worker.rs","byte_start":8446460,"byte_end":8446466,"line_start":15,"line_end":15,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4457},{"krate":0,"index":4458},{"krate":0,"index":4459},{"krate":0,"index":4460},{"krate":0,"index":4461},{"krate":0,"index":4462},{"krate":0,"index":4464},{"krate":0,"index":4466},{"krate":0,"index":4467},{"krate":0,"index":4468},{"krate":0,"index":4469}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/queue/worker.rs","byte_start":8449397,"byte_end":8449403,"line_start":120,"line_end":120,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4472}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/queue/mod.rs","byte_start":8429547,"byte_end":8429554,"line_start":32,"line_end":32,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4486}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/spawner.rs","byte_start":8450421,"byte_end":8450428,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4494},{"krate":0,"index":4495},{"krate":0,"index":4497},{"krate":0,"index":4500}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/spawner.rs","byte_start":8451148,"byte_end":8451155,"line_start":53,"line_end":53,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4502}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/slice.rs","byte_start":8452095,"byte_end":8452098,"line_start":29,"line_end":29,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/slice.rs","byte_start":8452123,"byte_end":8452126,"line_start":30,"line_end":30,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/slice.rs","byte_start":8452136,"byte_end":8452139,"line_start":32,"line_end":32,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":4531},{"krate":0,"index":4532},{"krate":0,"index":4534},{"krate":0,"index":4536},{"krate":0,"index":4537},{"krate":0,"index":4538},{"krate":0,"index":4540},{"krate":0,"index":4541},{"krate":0,"index":4542},{"krate":0,"index":4543},{"krate":0,"index":4544},{"krate":0,"index":4546},{"krate":0,"index":4547},{"krate":0,"index":4548},{"krate":0,"index":4549}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/slice.rs","byte_start":8455879,"byte_end":8455882,"line_start":167,"line_end":167,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4551}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/shared.rs","byte_start":8456739,"byte_end":8456745,"line_start":30,"line_end":30,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/shared.rs","byte_start":8456770,"byte_end":8456776,"line_start":31,"line_end":31,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/shared.rs","byte_start":8456786,"byte_end":8456792,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4569},{"krate":0,"index":4570},{"krate":0,"index":4571},{"krate":0,"index":4572},{"krate":0,"index":4573}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/shared.rs","byte_start":8457366,"byte_end":8457372,"line_start":59,"line_end":59,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4575},{"krate":0,"index":4576},{"krate":0,"index":4577},{"krate":0,"index":4578}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/shared.rs","byte_start":8458432,"byte_end":8458438,"line_start":94,"line_end":94,"column_start":27,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/worker.rs","byte_start":8460474,"byte_end":8460480,"line_start":67,"line_end":67,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/worker.rs","byte_start":8461680,"byte_end":8461686,"line_start":116,"line_end":116,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4620},{"krate":0,"index":4621},{"krate":0,"index":4634},{"krate":0,"index":4635}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/worker.rs","byte_start":8463060,"byte_end":8463065,"line_start":156,"line_end":156,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4632}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/worker.rs","byte_start":8468073,"byte_end":8468088,"line_start":284,"line_end":284,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4638},{"krate":0,"index":4639},{"krate":0,"index":4640},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4644},{"krate":0,"index":4645},{"krate":0,"index":4646},{"krate":0,"index":4647},{"krate":0,"index":4648},{"krate":0,"index":4649},{"krate":0,"index":4651},{"krate":0,"index":4652},{"krate":0,"index":4653},{"krate":0,"index":4654},{"krate":0,"index":4655},{"krate":0,"index":4656},{"krate":0,"index":4657},{"krate":0,"index":4658},{"krate":0,"index":4659},{"krate":0,"index":4660},{"krate":0,"index":4661},{"krate":0,"index":4662}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/mod.rs","byte_start":8415771,"byte_end":8415781,"line_start":56,"line_end":56,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4678},{"krate":0,"index":4679},{"krate":0,"index":4680},{"krate":0,"index":4682}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/mod.rs","byte_start":8417043,"byte_end":8417053,"line_start":107,"line_end":107,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4686}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/mod.rs","byte_start":8417192,"byte_end":8417202,"line_start":113,"line_end":113,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4688}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/mod.rs","byte_start":8417284,"byte_end":8417291,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4690}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97076,"byte_end":97083,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/registry.rs","byte_start":8482859,"byte_end":8482862,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4788},{"krate":0,"index":4789}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/registry.rs","byte_start":8483584,"byte_end":8483592,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4796}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/registry.rs","byte_start":8483682,"byte_end":8483690,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4799},{"krate":0,"index":4801},{"krate":0,"index":4802}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/registry.rs","byte_start":8485838,"byte_end":8485845,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4809},{"krate":0,"index":4810}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/registry.rs","byte_start":8485953,"byte_end":8485960,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4812},{"krate":0,"index":4813},{"krate":0,"index":4814},{"krate":0,"index":4815}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8492027,"byte_end":8492036,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4853}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8492150,"byte_end":8492159,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4856},{"krate":0,"index":4858}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8492547,"byte_end":8492558,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4863}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8492844,"byte_end":8492854,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4865},{"krate":0,"index":4866},{"krate":0,"index":4867},{"krate":0,"index":4868},{"krate":0,"index":4869},{"krate":0,"index":4870},{"krate":0,"index":4871},{"krate":0,"index":4872},{"krate":0,"index":4873},{"krate":0,"index":4874},{"krate":0,"index":4875},{"krate":0,"index":4876}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8496650,"byte_end":8496660,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4882}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8499006,"byte_end":8499012,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4889}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8499297,"byte_end":8499303,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4891},{"krate":0,"index":4892}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505442,"byte_end":8505448,"line_start":421,"line_end":421,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4896},{"krate":0,"index":4901}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8507304,"byte_end":8507310,"line_start":485,"line_end":485,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4939},{"krate":0,"index":4940}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519353,"byte_end":8519357,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8520019,"byte_end":8520023,"line_start":40,"line_end":40,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4954},{"krate":0,"index":4955},{"krate":0,"index":4956}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/map.rs","byte_start":8520680,"byte_end":8520683,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4971}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/map.rs","byte_start":8520901,"byte_end":8520904,"line_start":29,"line_end":29,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4976}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/map.rs","byte_start":8521088,"byte_end":8521091,"line_start":38,"line_end":38,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4981},{"krate":0,"index":4982},{"krate":0,"index":4985}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/next.rs","byte_start":8521883,"byte_end":8521887,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/next.rs","byte_start":8521938,"byte_end":8521942,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4999}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/next.rs","byte_start":8522083,"byte_end":8522087,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5002},{"krate":0,"index":5003}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8519090,"byte_end":8519091,"line_start":93,"line_end":93,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524999,"byte_end":8525006,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5032},{"krate":0,"index":5033}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8528286,"byte_end":8528303,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5037}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541029,"byte_end":8541035,"line_start":416,"line_end":416,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541072,"byte_end":8541078,"line_start":417,"line_end":417,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541116,"byte_end":8541124,"line_start":419,"line_end":419,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541161,"byte_end":8541169,"line_start":420,"line_end":420,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541185,"byte_end":8541191,"line_start":422,"line_end":422,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5107},{"krate":0,"index":5109},{"krate":0,"index":5110},{"krate":0,"index":5111},{"krate":0,"index":5114}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8547453,"byte_end":8547459,"line_start":632,"line_end":632,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5118}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8547639,"byte_end":8547645,"line_start":641,"line_end":641,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5121}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8547799,"byte_end":8547807,"line_start":649,"line_end":649,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5124}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8549469,"byte_end":8549477,"line_start":704,"line_end":704,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5127},{"krate":0,"index":5128},{"krate":0,"index":5129},{"krate":0,"index":5134}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8555016,"byte_end":8555024,"line_start":866,"line_end":866,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5138}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8555701,"byte_end":8555707,"line_start":890,"line_end":890,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5141}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8556032,"byte_end":8556038,"line_start":902,"line_end":902,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5145}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8556182,"byte_end":8556190,"line_start":908,"line_end":908,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5148}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8556321,"byte_end":8556325,"line_start":914,"line_end":914,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5151},{"krate":0,"index":5152}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8557522,"byte_end":8557531,"line_start":955,"line_end":955,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5157},{"krate":0,"index":5159},{"krate":0,"index":5161}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8557939,"byte_end":8557948,"line_start":976,"line_end":976,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5166}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/block.rs","byte_start":8562918,"byte_end":8562923,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5216},{"krate":0,"index":5217},{"krate":0,"index":5218},{"krate":0,"index":5219},{"krate":0,"index":5221},{"krate":0,"index":5223},{"krate":0,"index":5224},{"krate":0,"index":5225},{"krate":0,"index":5227},{"krate":0,"index":5228},{"krate":0,"index":5229},{"krate":0,"index":5231},{"krate":0,"index":5232},{"krate":0,"index":5233}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/block.rs","byte_start":8572897,"byte_end":8572903,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5238}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/block.rs","byte_start":8573385,"byte_end":8573391,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5241},{"krate":0,"index":5242}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8573939,"byte_end":8573945,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5260}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8574077,"byte_end":8574083,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5263}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8574498,"byte_end":8574506,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5269}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576277,"byte_end":8576285,"line_start":98,"line_end":98,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5275},{"krate":0,"index":5276},{"krate":0,"index":5281},{"krate":0,"index":5282},{"krate":0,"index":5283}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8578712,"byte_end":8578720,"line_start":177,"line_end":177,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8578780,"byte_end":8578788,"line_start":180,"line_end":180,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6089},{"krate":0,"index":6090}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8578976,"byte_end":8578982,"line_start":189,"line_end":189,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5288},{"krate":0,"index":5289},{"krate":0,"index":5291},{"krate":0,"index":5292}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8584345,"byte_end":8584347,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5331}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8584748,"byte_end":8584750,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5339}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8585057,"byte_end":8585066,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5342}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8585328,"byte_end":8585340,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5345}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8587035,"byte_end":8587039,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5367}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8587672,"byte_end":8587680,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5374}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8587946,"byte_end":8587950,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8587999,"byte_end":8588003,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8588482,"byte_end":8588484,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5387},{"krate":0,"index":5388},{"krate":0,"index":5389}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8589026,"byte_end":8589028,"line_start":199,"line_end":199,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5392}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8589206,"byte_end":8589208,"line_start":205,"line_end":205,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5396}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8589608,"byte_end":8589610,"line_start":221,"line_end":221,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5400}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8590019,"byte_end":8590021,"line_start":242,"line_end":242,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5404},{"krate":0,"index":5405},{"krate":0,"index":5407},{"krate":0,"index":5411}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8592906,"byte_end":8592908,"line_start":327,"line_end":327,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5417}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8593344,"byte_end":8593348,"line_start":348,"line_end":348,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5423}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8593812,"byte_end":8593816,"line_start":370,"line_end":370,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5427}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8594365,"byte_end":8594377,"line_start":387,"line_end":387,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5432}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8595771,"byte_end":8595782,"line_start":451,"line_end":451,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5450},{"krate":0,"index":5451},{"krate":0,"index":5452},{"krate":0,"index":5453},{"krate":0,"index":5454},{"krate":0,"index":5455},{"krate":0,"index":5457},{"krate":0,"index":5458},{"krate":0,"index":5459}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/list.rs","byte_start":8598499,"byte_end":8598501,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5489},{"krate":0,"index":5490},{"krate":0,"index":5491},{"krate":0,"index":5493}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/list.rs","byte_start":8604202,"byte_end":8604204,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5496}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/list.rs","byte_start":8604481,"byte_end":8604483,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5499},{"krate":0,"index":5500},{"krate":0,"index":5501},{"krate":0,"index":5502}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/list.rs","byte_start":8607879,"byte_end":8607881,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5505}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8608563,"byte_end":8608578,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5521}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8608719,"byte_end":8608734,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5524}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8609200,"byte_end":8609217,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5530}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610194,"byte_end":8610211,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5536},{"krate":0,"index":5537},{"krate":0,"index":5538},{"krate":0,"index":5543},{"krate":0,"index":5544}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8612682,"byte_end":8612699,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5547},{"krate":0,"index":5548}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8612865,"byte_end":8612880,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5551},{"krate":0,"index":5552}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8613388,"byte_end":8613397,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5562}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8613559,"byte_end":8613568,"line_start":16,"line_end":16,"column_start":45,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8614054,"byte_end":8614066,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8614099,"byte_end":8614111,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5569}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8614451,"byte_end":8614463,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5572}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8614692,"byte_end":8614701,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5574}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8614831,"byte_end":8614840,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8615315,"byte_end":8615327,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5577}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8615633,"byte_end":8615645,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8615803,"byte_end":8615814,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5580}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8615913,"byte_end":8615924,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5582}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8616054,"byte_end":8616065,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618591,"byte_end":8618596,"line_start":72,"line_end":72,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618641,"byte_end":8618646,"line_start":73,"line_end":73,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618695,"byte_end":8618705,"line_start":74,"line_end":74,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618987,"byte_end":8618999,"line_start":84,"line_end":84,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5607}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8619142,"byte_end":8619154,"line_start":90,"line_end":90,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8619273,"byte_end":8619278,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5611},{"krate":0,"index":5612},{"krate":0,"index":5617}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8620452,"byte_end":8620462,"line_start":134,"line_end":134,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5621}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8620569,"byte_end":8620574,"line_start":140,"line_end":140,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5624}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8620658,"byte_end":8620663,"line_start":146,"line_end":146,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5627}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8620781,"byte_end":8620791,"line_start":155,"line_end":155,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5631},{"krate":0,"index":5632}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8620978,"byte_end":8620988,"line_start":163,"line_end":163,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5636}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8621184,"byte_end":8621194,"line_start":170,"line_end":170,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5640}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8621355,"byte_end":8621365,"line_start":176,"line_end":176,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5644}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622921,"byte_end":8622930,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5670}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8623094,"byte_end":8623103,"line_start":60,"line_end":60,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8623172,"byte_end":8623184,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5673}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8623485,"byte_end":8623497,"line_start":73,"line_end":73,"column_start":34,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8625308,"byte_end":8625314,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5686},{"krate":0,"index":5689},{"krate":0,"index":5691},{"krate":0,"index":5696}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631167,"byte_end":8631173,"line_start":348,"line_end":348,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5699}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631312,"byte_end":8631320,"line_start":356,"line_end":356,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5702},{"krate":0,"index":5703}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8635674,"byte_end":8635682,"line_start":504,"line_end":504,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5706}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8635829,"byte_end":8635837,"line_start":512,"line_end":512,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5709},{"krate":0,"index":5710}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8636300,"byte_end":8636305,"line_start":528,"line_end":528,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5713},{"krate":0,"index":5714},{"krate":0,"index":5716},{"krate":0,"index":5717},{"krate":0,"index":5719},{"krate":0,"index":5723},{"krate":0,"index":5727},{"krate":0,"index":5729},{"krate":0,"index":5731},{"krate":0,"index":5733}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8640424,"byte_end":8640429,"line_start":667,"line_end":667,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8640466,"byte_end":8640471,"line_start":668,"line_end":668,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8640496,"byte_end":8640501,"line_start":670,"line_end":670,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5741}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8640864,"byte_end":8640869,"line_start":688,"line_end":688,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5744}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8641264,"byte_end":8641269,"line_start":703,"line_end":703,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5751},{"krate":0,"index":5752},{"krate":0,"index":5753},{"krate":0,"index":5754},{"krate":0,"index":5755},{"krate":0,"index":5756},{"krate":0,"index":5757},{"krate":0,"index":5758},{"krate":0,"index":5759},{"krate":0,"index":5760},{"krate":0,"index":5761},{"krate":0,"index":5762},{"krate":0,"index":5763}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8642982,"byte_end":8642987,"line_start":769,"line_end":769,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5765}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8647509,"byte_end":8647518,"line_start":149,"line_end":149,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5798},{"krate":0,"index":5799},{"krate":0,"index":5800},{"krate":0,"index":5803},{"krate":0,"index":5804},{"krate":0,"index":5805},{"krate":0,"index":5806},{"krate":0,"index":5807},{"krate":0,"index":5812},{"krate":0,"index":5813}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8659580,"byte_end":8659589,"line_start":483,"line_end":483,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5815}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8659967,"byte_end":8659976,"line_start":494,"line_end":494,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8660001,"byte_end":8660010,"line_start":495,"line_end":495,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8660048,"byte_end":8660054,"line_start":499,"line_end":499,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5820},{"krate":0,"index":5821},{"krate":0,"index":5822},{"krate":0,"index":5823},{"krate":0,"index":5824},{"krate":0,"index":5825},{"krate":0,"index":5826}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8663554,"byte_end":8663560,"line_start":614,"line_end":614,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5828}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8663657,"byte_end":8663669,"line_start":622,"line_end":622,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5830}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8663851,"byte_end":8663863,"line_start":632,"line_end":632,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5833}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8664009,"byte_end":8664021,"line_start":638,"line_end":638,"column_start":30,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8664068,"byte_end":8664083,"line_start":642,"line_end":642,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5836},{"krate":0,"index":5837},{"krate":0,"index":5838},{"krate":0,"index":5839}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8664848,"byte_end":8664863,"line_start":673,"line_end":673,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5841}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8665164,"byte_end":8665179,"line_start":683,"line_end":683,"column_start":30,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8665221,"byte_end":8665231,"line_start":687,"line_end":687,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5844},{"krate":0,"index":5845},{"krate":0,"index":5846},{"krate":0,"index":5848},{"krate":0,"index":5849},{"krate":0,"index":5851},{"krate":0,"index":5853},{"krate":0,"index":5855},{"krate":0,"index":5857}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8670139,"byte_end":8670147,"line_start":843,"line_end":843,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5863},{"krate":0,"index":5864},{"krate":0,"index":5865},{"krate":0,"index":5866},{"krate":0,"index":5867},{"krate":0,"index":5868},{"krate":0,"index":5869},{"krate":0,"index":5870},{"krate":0,"index":5871},{"krate":0,"index":5872},{"krate":0,"index":5873},{"krate":0,"index":5874},{"krate":0,"index":5875},{"krate":0,"index":5876},{"krate":0,"index":5877},{"krate":0,"index":5878},{"krate":0,"index":5879},{"krate":0,"index":5880}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8674526,"byte_end":8674534,"line_start":1002,"line_end":1002,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5882}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8674885,"byte_end":8674894,"line_start":1018,"line_end":1018,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5884},{"krate":0,"index":5885},{"krate":0,"index":5887},{"krate":0,"index":5888},{"krate":0,"index":5889},{"krate":0,"index":5890},{"krate":0,"index":5892}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677427,"byte_end":8677436,"line_start":39,"line_end":39,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5897},{"krate":0,"index":5898},{"krate":0,"index":5899},{"krate":0,"index":5900},{"krate":0,"index":5904}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8678610,"byte_end":8678625,"line_start":78,"line_end":78,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5907}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8678889,"byte_end":8678904,"line_start":87,"line_end":87,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5910}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/task/atomic_waker.rs","byte_start":8685174,"byte_end":8685185,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5933},{"krate":0,"index":5934},{"krate":0,"index":5935},{"krate":0,"index":5936},{"krate":0,"index":5940},{"krate":0,"index":5941}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/task/atomic_waker.rs","byte_start":8691112,"byte_end":8691123,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5944}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/task/atomic_waker.rs","byte_start":8691209,"byte_end":8691220,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5946}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/task/atomic_waker.rs","byte_start":8691353,"byte_end":8691364,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/task/atomic_waker.rs","byte_start":8691389,"byte_end":8691400,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/task/atomic_waker.rs","byte_start":8691496,"byte_end":8691501,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5953},{"krate":0,"index":5954}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8695140,"byte_end":8695149,"line_start":114,"line_end":114,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5983}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8695331,"byte_end":8695340,"line_start":120,"line_end":120,"column_start":49,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8697455,"byte_end":8697463,"line_start":214,"line_end":214,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5992},{"krate":0,"index":5993}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8698734,"byte_end":8698742,"line_start":259,"line_end":259,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5997}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8699104,"byte_end":8699112,"line_start":271,"line_end":271,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6004},{"krate":0,"index":6005}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8699371,"byte_end":8699379,"line_start":281,"line_end":281,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6009}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8699906,"byte_end":8699914,"line_start":307,"line_end":307,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6012}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8700068,"byte_end":8700078,"line_start":314,"line_end":314,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6014}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8700191,"byte_end":8700197,"line_start":322,"line_end":322,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6017},{"krate":0,"index":6018},{"krate":0,"index":6022}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8701772,"byte_end":8701778,"line_start":376,"line_end":376,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6027}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8702017,"byte_end":8702020,"line_start":387,"line_end":387,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6030},{"krate":0,"index":6031}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8702161,"byte_end":8702167,"line_start":397,"line_end":397,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6034}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/core.rs","byte_start":8719338,"byte_end":8719342,"line_start":77,"line_end":77,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6388}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/core.rs","byte_start":8720193,"byte_end":8720197,"line_start":104,"line_end":104,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6392},{"krate":0,"index":6393},{"krate":0,"index":6395},{"krate":0,"index":6396}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/core.rs","byte_start":8721640,"byte_end":8721646,"line_start":152,"line_end":152,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6399}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/error.rs","byte_start":8722037,"byte_end":8722046,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6415},{"krate":0,"index":6416},{"krate":0,"index":6417},{"krate":0,"index":6418}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/error.rs","byte_start":8722599,"byte_end":8722608,"line_start":44,"line_end":44,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6420}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/error.rs","byte_start":8722851,"byte_end":8722860,"line_start":53,"line_end":53,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6422}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/error.rs","byte_start":8723137,"byte_end":8723146,"line_start":62,"line_end":62,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/error.rs","byte_start":8723180,"byte_end":8723185,"line_start":64,"line_end":64,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6425}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/harness.rs","byte_start":8723957,"byte_end":8723964,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6457},{"krate":0,"index":6458},{"krate":0,"index":6459},{"krate":0,"index":6460}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/harness.rs","byte_start":8724530,"byte_end":8724537,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6464},{"krate":0,"index":6477},{"krate":0,"index":6478},{"krate":0,"index":6482},{"krate":0,"index":6483},{"krate":0,"index":6486},{"krate":0,"index":6488},{"krate":0,"index":6489},{"krate":0,"index":6490},{"krate":0,"index":6491},{"krate":0,"index":6493},{"krate":0,"index":6494},{"krate":0,"index":6495},{"krate":0,"index":6500},{"krate":0,"index":6502},{"krate":0,"index":6503},{"krate":0,"index":6504},{"krate":0,"index":6505},{"krate":0,"index":6506},{"krate":0,"index":6507},{"krate":0,"index":6509},{"krate":0,"index":6511}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/harness.rs","byte_start":8726904,"byte_end":8726909,"line_start":107,"line_end":107,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6476}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/join.rs","byte_start":8743970,"byte_end":8743980,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/join.rs","byte_start":8744017,"byte_end":8744027,"line_start":86,"line_end":86,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/join.rs","byte_start":8744043,"byte_end":8744053,"line_start":88,"line_end":88,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6529}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/join.rs","byte_start":8744229,"byte_end":8744239,"line_start":97,"line_end":97,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/join.rs","byte_start":8744266,"byte_end":8744276,"line_start":99,"line_end":99,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6534},{"krate":0,"index":6535}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/join.rs","byte_start":8745315,"byte_end":8745325,"line_start":138,"line_end":138,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6539}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/join.rs","byte_start":8745583,"byte_end":8745593,"line_start":150,"line_end":150,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6542}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/list.rs","byte_start":8745969,"byte_end":8745978,"line_start":12,"line_end":12,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6557},{"krate":0,"index":6558},{"krate":0,"index":6559},{"krate":0,"index":6560},{"krate":0,"index":6561},{"krate":0,"index":6562}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/list.rs","byte_start":8748242,"byte_end":8748251,"line_start":92,"line_end":92,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6565}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/queue.rs","byte_start":8750184,"byte_end":8750194,"line_start":58,"line_end":58,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6592},{"krate":0,"index":6593},{"krate":0,"index":6594},{"krate":0,"index":6595},{"krate":0,"index":6596},{"krate":0,"index":6597},{"krate":0,"index":6598},{"krate":0,"index":6599},{"krate":0,"index":6600},{"krate":0,"index":6603},{"krate":0,"index":6604},{"krate":0,"index":6605},{"krate":0,"index":6606},{"krate":0,"index":6607},{"krate":0,"index":6608},{"krate":0,"index":6609},{"krate":0,"index":6610},{"krate":0,"index":6611}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/queue.rs","byte_start":8758258,"byte_end":8758268,"line_start":292,"line_end":292,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6614}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/queue.rs","byte_start":8758607,"byte_end":8758618,"line_start":304,"line_end":304,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6617}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/queue.rs","byte_start":8759215,"byte_end":8759226,"line_start":324,"line_end":324,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6620}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/raw.rs","byte_start":8761231,"byte_end":8761238,"line_start":58,"line_end":58,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6864}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/raw.rs","byte_start":8761476,"byte_end":8761483,"line_start":69,"line_end":69,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6649},{"krate":0,"index":6652},{"krate":0,"index":6655},{"krate":0,"index":6656},{"krate":0,"index":6657},{"krate":0,"index":6658},{"krate":0,"index":6659},{"krate":0,"index":6660},{"krate":0,"index":6661},{"krate":0,"index":6662},{"krate":0,"index":6663},{"krate":0,"index":6664}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/raw.rs","byte_start":8764069,"byte_end":8764076,"line_start":149,"line_end":149,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6666}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/raw.rs","byte_start":8764166,"byte_end":8764173,"line_start":155,"line_end":155,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/stack.rs","byte_start":8769410,"byte_end":8769423,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6714},{"krate":0,"index":6715},{"krate":0,"index":6716}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/stack.rs","byte_start":8770768,"byte_end":8770772,"line_start":57,"line_end":57,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6725},{"krate":0,"index":6726}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/stack.rs","byte_start":8771234,"byte_end":8771238,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6729}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/state.rs","byte_start":8773123,"byte_end":8773128,"line_start":59,"line_end":59,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6755},{"krate":0,"index":6756},{"krate":0,"index":6757},{"krate":0,"index":6759},{"krate":0,"index":6761},{"krate":0,"index":6763},{"krate":0,"index":6765},{"krate":0,"index":6766},{"krate":0,"index":6767},{"krate":0,"index":6770},{"krate":0,"index":6772},{"krate":0,"index":6774},{"krate":0,"index":6777},{"krate":0,"index":6779},{"krate":0,"index":6782},{"krate":0,"index":6784},{"krate":0,"index":6787}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/state.rs","byte_start":8783946,"byte_end":8783954,"line_start":416,"line_end":416,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6790},{"krate":0,"index":6791},{"krate":0,"index":6792},{"krate":0,"index":6793},{"krate":0,"index":6794},{"krate":0,"index":6795},{"krate":0,"index":6796},{"krate":0,"index":6797},{"krate":0,"index":6798},{"krate":0,"index":6799}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/state.rs","byte_start":8785596,"byte_end":8785601,"line_start":472,"line_end":472,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6802}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/state.rs","byte_start":8785903,"byte_end":8785911,"line_start":484,"line_end":484,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6805}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/waker.rs","byte_start":8787383,"byte_end":8787391,"line_start":38,"line_end":38,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6831},{"krate":0,"index":6832}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/yield_now.rs","byte_start":8789097,"byte_end":8789105,"line_start":13,"line_end":13,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6881},{"krate":0,"index":6882}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8794727,"byte_end":8794735,"line_start":163,"line_end":163,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6904},{"krate":0,"index":6905},{"krate":0,"index":6907}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8799131,"byte_end":8799139,"line_start":292,"line_end":292,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6911}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8799225,"byte_end":8799236,"line_start":298,"line_end":298,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6914},{"krate":0,"index":6915}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8799935,"byte_end":8799944,"line_start":323,"line_end":323,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6917},{"krate":0,"index":6918},{"krate":0,"index":6919},{"krate":0,"index":6920}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8800736,"byte_end":8800745,"line_start":357,"line_end":357,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6922},{"krate":0,"index":6923},{"krate":0,"index":6933},{"krate":0,"index":6936}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8801090,"byte_end":8801097,"line_start":371,"line_end":371,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6931}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8803055,"byte_end":8803064,"line_start":429,"line_end":429,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6939}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8711383,"byte_end":8711387,"line_start":278,"line_end":278,"column_start":57,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8713400,"byte_end":8713404,"line_start":345,"line_end":345,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6985},{"krate":0,"index":6986},{"krate":0,"index":6987}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8713882,"byte_end":8713886,"line_start":364,"line_end":364,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6990},{"krate":0,"index":6994}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8714719,"byte_end":8714723,"line_start":390,"line_end":390,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6997}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8714836,"byte_end":8714840,"line_start":396,"line_end":396,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7000}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/clock.rs","byte_start":8819748,"byte_end":8819753,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7477},{"krate":0,"index":7478},{"krate":0,"index":7479}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8832363,"byte_end":8832373,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7028},{"krate":0,"index":7029},{"krate":0,"index":7030},{"krate":0,"index":7031},{"krate":0,"index":7034},{"krate":0,"index":7035},{"krate":0,"index":7039},{"krate":0,"index":7041},{"krate":0,"index":7042},{"krate":0,"index":7044},{"krate":0,"index":7045},{"krate":0,"index":7046},{"krate":0,"index":7047},{"krate":0,"index":7048},{"krate":0,"index":7049},{"krate":0,"index":7051}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8849172,"byte_end":8849182,"line_start":725,"line_end":725,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8849210,"byte_end":8849220,"line_start":727,"line_end":727,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7056}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8849357,"byte_end":8849367,"line_start":734,"line_end":734,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7059},{"krate":0,"index":7060}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8849749,"byte_end":8849754,"line_start":744,"line_end":744,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7063},{"krate":0,"index":7064},{"krate":0,"index":7065},{"krate":0,"index":7066},{"krate":0,"index":7067},{"krate":0,"index":7068},{"krate":0,"index":7069},{"krate":0,"index":7070}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8851881,"byte_end":8851886,"line_start":826,"line_end":826,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7073}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8852016,"byte_end":8852019,"line_start":835,"line_end":835,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":7075}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8852106,"byte_end":8852113,"line_start":841,"line_end":841,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7078},{"krate":0,"index":7079},{"krate":0,"index":7080}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8854083,"byte_end":8854088,"line_start":51,"line_end":51,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7095},{"krate":0,"index":7096},{"krate":0,"index":7097},{"krate":0,"index":7098}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8855063,"byte_end":8855068,"line_start":81,"line_end":81,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7100},{"krate":0,"index":7101}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/atomic_stack.rs","byte_start":8867628,"byte_end":8867639,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7116},{"krate":0,"index":7117},{"krate":0,"index":7118},{"krate":0,"index":7119}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/atomic_stack.rs","byte_start":8869613,"byte_end":8869631,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7121},{"krate":0,"index":7122}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/atomic_stack.rs","byte_start":8870205,"byte_end":8870223,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7124}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/entry.rs","byte_start":8874175,"byte_end":8874180,"line_start":106,"line_end":106,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7150},{"krate":0,"index":7151},{"krate":0,"index":7152},{"krate":0,"index":7153},{"krate":0,"index":7154},{"krate":0,"index":7155},{"krate":0,"index":7156},{"krate":0,"index":7157},{"krate":0,"index":7158},{"krate":0,"index":7159},{"krate":0,"index":7160},{"krate":0,"index":7161},{"krate":0,"index":7162},{"krate":0,"index":7163}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/entry.rs","byte_start":8880146,"byte_end":8880151,"line_start":328,"line_end":328,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7166}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/entry.rs","byte_start":8880359,"byte_end":8880364,"line_start":339,"line_end":339,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/entry.rs","byte_start":8880389,"byte_end":8880394,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/handle.rs","byte_start":8881131,"byte_end":8881143,"line_start":25,"line_end":25,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7179}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/handle.rs","byte_start":8881816,"byte_end":8881822,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7184},{"krate":0,"index":7185},{"krate":0,"index":7187}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/handle.rs","byte_start":8882502,"byte_end":8882508,"line_start":77,"line_end":77,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7189}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/registration.rs","byte_start":8882943,"byte_end":8882955,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":7204},{"krate":0,"index":7205},{"krate":0,"index":7206},{"krate":0,"index":7207},{"krate":0,"index":7208}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/registration.rs","byte_start":8883645,"byte_end":8883657,"line_start":44,"line_end":44,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7210}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/stack.rs","byte_start":8883941,"byte_end":8883946,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7218}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/stack.rs","byte_start":8884037,"byte_end":8884042,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7220},{"krate":0,"index":7221},{"krate":0,"index":7222},{"krate":0,"index":7223},{"krate":0,"index":7224},{"krate":0,"index":7225},{"krate":0,"index":7226},{"krate":0,"index":7227}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/mod.rs","byte_start":8859957,"byte_end":8859963,"line_start":124,"line_end":124,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7257},{"krate":0,"index":7258},{"krate":0,"index":7259},{"krate":0,"index":7260},{"krate":0,"index":7261},{"krate":0,"index":7262},{"krate":0,"index":7263}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/mod.rs","byte_start":8863605,"byte_end":8863611,"line_start":236,"line_end":236,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7267},{"krate":0,"index":7268},{"krate":0,"index":7269},{"krate":0,"index":7270},{"krate":0,"index":7271}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/mod.rs","byte_start":8865063,"byte_end":8865069,"line_start":296,"line_end":296,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7274}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/mod.rs","byte_start":8865546,"byte_end":8865551,"line_start":315,"line_end":315,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7277},{"krate":0,"index":7278},{"krate":0,"index":7279},{"krate":0,"index":7280},{"krate":0,"index":7281},{"krate":0,"index":7282}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/mod.rs","byte_start":8866985,"byte_end":8866990,"line_start":373,"line_end":373,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7284}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8888313,"byte_end":8888318,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7290},{"krate":0,"index":7291},{"krate":0,"index":7292},{"krate":0,"index":7293}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8889031,"byte_end":8889036,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8889063,"byte_end":8889068,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7296}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8889709,"byte_end":8889716,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7304},{"krate":0,"index":7305},{"krate":0,"index":7306},{"krate":0,"index":7307},{"krate":0,"index":7308},{"krate":0,"index":7309},{"krate":0,"index":7310},{"krate":0,"index":7311},{"krate":0,"index":7312}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8893490,"byte_end":8893497,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7314}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8893626,"byte_end":8893633,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7316}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8893748,"byte_end":8893755,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7318},{"krate":0,"index":7319}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8893920,"byte_end":8893927,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7321}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8894032,"byte_end":8894039,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7323},{"krate":0,"index":7324}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8894180,"byte_end":8894187,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7326},{"krate":0,"index":7327}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8894348,"byte_end":8894355,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7329}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8894462,"byte_end":8894469,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7331}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8897194,"byte_end":8897202,"line_start":88,"line_end":88,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7351},{"krate":0,"index":7352}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8898497,"byte_end":8898505,"line_start":133,"line_end":133,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7357},{"krate":0,"index":7358}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8901693,"byte_end":8901700,"line_start":113,"line_end":113,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7381},{"krate":0,"index":7382},{"krate":0,"index":7383},{"krate":0,"index":7384}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8902238,"byte_end":8902245,"line_start":134,"line_end":134,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7387},{"krate":0,"index":7388}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8903046,"byte_end":8903053,"line_start":164,"line_end":164,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7392}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8903197,"byte_end":8903204,"line_start":170,"line_end":170,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8903241,"byte_end":8903246,"line_start":172,"line_end":172,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7395}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8921403,"byte_end":8921411,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7661},{"krate":0,"index":7662},{"krate":0,"index":7663}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8922226,"byte_end":8922234,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7666},{"krate":0,"index":7667}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/wheel/level.rs","byte_start":8913144,"byte_end":8913149,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7414},{"krate":0,"index":7416},{"krate":0,"index":7417},{"krate":0,"index":7418},{"krate":0,"index":7419},{"krate":0,"index":7420}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/wheel/level.rs","byte_start":8917901,"byte_end":8917906,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7423}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/wheel/mod.rs","byte_start":8904965,"byte_end":8904970,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7448},{"krate":0,"index":7449},{"krate":0,"index":7450},{"krate":0,"index":7451},{"krate":0,"index":7452},{"krate":0,"index":7454},{"krate":0,"index":7456},{"krate":0,"index":7457},{"krate":0,"index":7458},{"krate":0,"index":7459},{"krate":0,"index":7460},{"krate":0,"index":7461}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/wheel/mod.rs","byte_start":8910678,"byte_end":8910682,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7464}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/bit.rs","byte_start":8923140,"byte_end":8923144,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7702},{"krate":0,"index":7703},{"krate":0,"index":7704},{"krate":0,"index":7705},{"krate":0,"index":7706},{"krate":0,"index":7707},{"krate":0,"index":7708},{"krate":0,"index":7709}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/bit.rs","byte_start":8924656,"byte_end":8924660,"line_start":66,"line_end":66,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7711}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/addr.rs","byte_start":8931864,"byte_end":8931871,"line_start":77,"line_end":77,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7730},{"krate":0,"index":7731},{"krate":0,"index":7732},{"krate":0,"index":7733},{"krate":0,"index":7734},{"krate":0,"index":7735},{"krate":0,"index":7736},{"krate":0,"index":7737}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/generation.rs","byte_start":8934900,"byte_end":8934910,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7749},{"krate":0,"index":7750},{"krate":0,"index":7751},{"krate":0,"index":7752},{"krate":0,"index":7753}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/page.rs","byte_start":8936049,"byte_end":8936054,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7774},{"krate":0,"index":7775},{"krate":0,"index":7777}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/page.rs","byte_start":8936396,"byte_end":8936402,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7781},{"krate":0,"index":7782},{"krate":0,"index":7784},{"krate":0,"index":7787},{"krate":0,"index":7790},{"krate":0,"index":7793}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/page.rs","byte_start":8940354,"byte_end":8940359,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7798}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/page.rs","byte_start":8940665,"byte_end":8940671,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7802}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/shard.rs","byte_start":8942814,"byte_end":8942819,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7816},{"krate":0,"index":7819},{"krate":0,"index":7820},{"krate":0,"index":7821},{"krate":0,"index":7822},{"krate":0,"index":7823}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/shard.rs","byte_start":8944531,"byte_end":8944536,"line_start":102,"line_end":102,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7826}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/slot.rs","byte_start":8944913,"byte_end":8944917,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7839},{"krate":0,"index":7840},{"krate":0,"index":7841},{"krate":0,"index":7842},{"krate":0,"index":7843},{"krate":0,"index":7845}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/stack.rs","byte_start":8945888,"byte_end":8945901,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7857},{"krate":0,"index":7858},{"krate":0,"index":7859}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/stack.rs","byte_start":8946729,"byte_end":8946742,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7862}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/mod.rs","byte_start":8926212,"byte_end":8926216,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/mod.rs","byte_start":8926253,"byte_end":8926257,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/mod.rs","byte_start":8926280,"byte_end":8926284,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7879},{"krate":0,"index":7880},{"krate":0,"index":7881},{"krate":0,"index":7882}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/mod.rs","byte_start":8927799,"byte_end":8927803,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7885}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/pad.rs","byte_start":8947891,"byte_end":8947902,"line_start":17,"line_end":17,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/pad.rs","byte_start":8947939,"byte_end":8947950,"line_start":18,"line_end":18,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/pad.rs","byte_start":8947966,"byte_end":8947977,"line_start":20,"line_end":20,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7943}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/pad.rs","byte_start":8948096,"byte_end":8948107,"line_start":26,"line_end":26,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7946},{"krate":0,"index":7947}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/pad.rs","byte_start":8948213,"byte_end":8948224,"line_start":34,"line_end":34,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7950}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/pad.rs","byte_start":8948338,"byte_end":8948349,"line_start":40,"line_end":40,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7953}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/pad.rs","byte_start":8948548,"byte_end":8948559,"line_start":48,"line_end":48,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7956}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/rand.rs","byte_start":8949131,"byte_end":8949139,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7961},{"krate":0,"index":7962},{"krate":0,"index":7963}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/try_lock.rs","byte_start":8950490,"byte_end":8950497,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/try_lock.rs","byte_start":8950535,"byte_end":8950542,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/try_lock.rs","byte_start":8950581,"byte_end":8950590,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/try_lock.rs","byte_start":8950611,"byte_end":8950618,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7990},{"krate":0,"index":7991}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/try_lock.rs","byte_start":8951150,"byte_end":8951159,"line_start":45,"line_end":45,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7994},{"krate":0,"index":7995}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/try_lock.rs","byte_start":8951291,"byte_end":8951300,"line_start":53,"line_end":53,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7998}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/try_lock.rs","byte_start":8951422,"byte_end":8951431,"line_start":59,"line_end":59,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8001}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8587,"byte_end":8589,"line_start":221,"line_end":221,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":645}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/mod.rs","byte_start":7980191,"byte_end":7980193,"line_start":45,"line_end":45,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":813}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/os/mod.rs","byte_start":8009218,"byte_end":8009222,"line_start":4,"line_end":4,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":814}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8615,"byte_end":8617,"line_start":226,"line_end":226,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":138}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8627,"byte_end":8630,"line_start":227,"line_end":227,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":269}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":55998,"byte_end":56001,"line_start":29,"line_end":29,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2720}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":56105,"byte_end":56108,"line_start":35,"line_end":35,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2940}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/mod.rs","byte_start":56172,"byte_end":56176,"line_start":40,"line_end":40,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":3085}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8662,"byte_end":8669,"line_start":232,"line_end":232,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":474}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8699,"byte_end":8706,"line_start":235,"line_end":235,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":3486}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8719,"byte_end":8726,"line_start":238,"line_end":238,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":480}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8755,"byte_end":8761,"line_start":241,"line_end":241,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":4760}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/mod.rs","byte_start":8480020,"byte_end":8480024,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4821}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8792,"byte_end":8798,"line_start":245,"line_end":245,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":4941}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8827,"byte_end":8831,"line_start":249,"line_end":249,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5027}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8523103,"byte_end":8523112,"line_start":22,"line_end":22,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":5041}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8523127,"byte_end":8523131,"line_start":24,"line_end":24,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5169}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/mod.rs","byte_start":8560335,"byte_end":8560340,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5557}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8523202,"byte_end":8523209,"line_start":29,"line_end":29,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":5648}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mod.rs","byte_start":8523383,"byte_end":8523388,"line_start":38,"line_end":38,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":5960}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8895,"byte_end":8899,"line_start":256,"line_end":256,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6322}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/lib.rs","byte_start":8953,"byte_end":8957,"line_start":261,"line_end":261,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":7004}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/mod.rs","byte_start":8818049,"byte_end":8818060,"line_start":77,"line_end":77,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":7007}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7984453,"byte_end":7984457,"line_start":88,"line_end":88,"column_start":6,"column_end":10},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7996432,"byte_end":7996436,"line_start":489,"line_end":489,"column_start":20,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":691},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":7998686,"byte_end":7998690,"line_start":551,"line_end":551,"column_start":20,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":691},"to":{"krate":0,"index":207}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":8001191,"byte_end":8001195,"line_start":627,"line_end":627,"column_start":21,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":691},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":8004166,"byte_end":8004170,"line_start":715,"line_end":715,"column_start":26,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":691},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":8004268,"byte_end":8004272,"line_start":721,"line_end":721,"column_start":21,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":691},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/file.rs","byte_start":8004501,"byte_end":8004505,"line_start":730,"line_end":730,"column_start":37,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":691},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8006231,"byte_end":8006242,"line_start":18,"line_end":18,"column_start":6,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8008966,"byte_end":8008977,"line_start":100,"line_end":100,"column_start":37,"column_end":48},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1017},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/open_options.rs","byte_start":8009095,"byte_end":8009106,"line_start":106,"line_end":106,"column_start":18,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1017},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8012020,"byte_end":8012027,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8013262,"byte_end":8013269,"line_start":88,"line_end":88,"column_start":32,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1024},"to":{"krate":26,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8014101,"byte_end":8014109,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/fs/read_dir.rs","byte_start":8017889,"byte_end":8017897,"line_start":240,"line_end":240,"column_start":22,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1038},"to":{"krate":1,"index":8197}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/maybe_done.rs","byte_start":17504,"byte_end":17513,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1043},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/maybe_done.rs","byte_start":17683,"byte_end":17692,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/maybe_done.rs","byte_start":18892,"byte_end":18901,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1043},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/poll_fn.rs","byte_start":19662,"byte_end":19668,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/poll_fn.rs","byte_start":19889,"byte_end":19895,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/poll_fn.rs","byte_start":20037,"byte_end":20043,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/ready.rs","byte_start":20580,"byte_end":20585,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1056},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/ready.rs","byte_start":20612,"byte_end":20617,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1056},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/future/try_join.rs","byte_start":21813,"byte_end":21821,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1063},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/blocking.rs","byte_start":8032307,"byte_end":8032315,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/blocking.rs","byte_start":8032588,"byte_end":8032596,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1162},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/blocking.rs","byte_start":8034201,"byte_end":8034209,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1162},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/blocking.rs","byte_start":8036934,"byte_end":8036937,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/blocking.rs","byte_start":8038752,"byte_end":8038755,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":31327,"byte_end":31336,"line_start":13,"line_end":13,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":176},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":33804,"byte_end":33807,"line_start":69,"line_end":69,"column_start":57,"column_end":60},"kind":{"Impl":{"id":28}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":33967,"byte_end":33970,"line_start":77,"line_end":77,"column_start":26,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":2,"index":29415},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_buf_read.rs","byte_start":34599,"byte_end":34605,"line_start":101,"line_end":101,"column_start":51,"column_end":57},"kind":{"Impl":{"id":30}},"from":{"krate":1,"index":6507},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":40371,"byte_end":40374,"line_start":149,"line_end":149,"column_start":51,"column_end":54},"kind":{"Impl":{"id":31}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":40517,"byte_end":40520,"line_start":157,"line_end":157,"column_start":23,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":2,"index":29415},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_read.rs","byte_start":41316,"byte_end":41322,"line_start":189,"line_end":189,"column_start":48,"column_end":54},"kind":{"Impl":{"id":33}},"from":{"krate":1,"index":6507},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":43555,"byte_end":43558,"line_start":60,"line_end":60,"column_start":51,"column_end":54},"kind":{"Impl":{"id":34}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":207}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":43701,"byte_end":43704,"line_start":68,"line_end":68,"column_start":23,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":2,"index":29415},"to":{"krate":0,"index":207}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_seek.rs","byte_start":44158,"byte_end":44164,"line_start":86,"line_end":86,"column_start":48,"column_end":54},"kind":{"Impl":{"id":36}},"from":{"krate":1,"index":6507},"to":{"krate":0,"index":207}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":51701,"byte_end":51704,"line_start":163,"line_end":163,"column_start":53,"column_end":56},"kind":{"Impl":{"id":37}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":51852,"byte_end":51855,"line_start":171,"line_end":171,"column_start":24,"column_end":27},"kind":{"Impl":{"id":38}},"from":{"krate":2,"index":29415},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":52424,"byte_end":52427,"line_start":193,"line_end":193,"column_start":21,"column_end":24},"kind":{"Impl":{"id":39}},"from":{"krate":5,"index":4064},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":52935,"byte_end":52941,"line_start":212,"line_end":212,"column_start":25,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":1,"index":6507},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":53454,"byte_end":53460,"line_start":230,"line_end":230,"column_start":25,"column_end":31},"kind":{"Impl":{"id":41}},"from":{"krate":1,"index":6507},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":53976,"byte_end":53982,"line_start":248,"line_end":248,"column_start":25,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":1,"index":6507},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/async_write.rs","byte_start":54493,"byte_end":54499,"line_start":266,"line_end":266,"column_start":25,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":1,"index":6507},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/scheduled_io.rs","byte_start":8052817,"byte_end":8052828,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1396},"to":{"krate":0,"index":7741}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/scheduled_io.rs","byte_start":8053620,"byte_end":8053631,"line_start":50,"line_end":50,"column_start":18,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1396},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/scheduled_io.rs","byte_start":8053838,"byte_end":8053849,"line_start":60,"line_end":60,"column_start":6,"column_end":17},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1396},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/scheduled_io.rs","byte_start":8056443,"byte_end":8056454,"line_start":133,"line_end":133,"column_start":15,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1396},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/mod.rs","byte_start":8041741,"byte_end":8041753,"line_start":78,"line_end":78,"column_start":15,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1426},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/mod.rs","byte_start":8042418,"byte_end":8042424,"line_start":106,"line_end":106,"column_start":6,"column_end":12},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/mod.rs","byte_start":8045256,"byte_end":8045262,"line_start":207,"line_end":207,"column_start":15,"column_end":21},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1261},"to":{"krate":0,"index":462}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/mod.rs","byte_start":8045630,"byte_end":8045636,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/mod.rs","byte_start":8045772,"byte_end":8045778,"line_start":234,"line_end":234,"column_start":6,"column_end":12},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/mod.rs","byte_start":8046965,"byte_end":8046971,"line_start":267,"line_end":267,"column_start":17,"column_end":23},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1402},"to":{"krate":0,"index":468}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/mod.rs","byte_start":8047049,"byte_end":8047055,"line_start":273,"line_end":273,"column_start":21,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1402},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/mod.rs","byte_start":8047190,"byte_end":8047195,"line_start":281,"line_end":281,"column_start":6,"column_end":11},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/driver/mod.rs","byte_start":8048958,"byte_end":8048967,"line_start":339,"line_end":339,"column_start":6,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8063087,"byte_end":8063098,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8068945,"byte_end":8068956,"line_start":334,"line_end":334,"column_start":23,"column_end":34},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1432},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8069449,"byte_end":8069460,"line_start":356,"line_end":356,"column_start":24,"column_end":35},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1432},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8070541,"byte_end":8070552,"line_start":402,"line_end":402,"column_start":46,"column_end":57},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/poll_evented.rs","byte_start":8070725,"byte_end":8070736,"line_start":408,"line_end":408,"column_start":27,"column_end":38},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8072871,"byte_end":8072883,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8081401,"byte_end":8081413,"line_start":265,"line_end":265,"column_start":22,"column_end":34},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8081438,"byte_end":8081450,"line_start":266,"line_end":266,"column_start":22,"column_end":34},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/registration.rs","byte_start":8081469,"byte_end":8081481,"line_start":268,"line_end":268,"column_start":15,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/stderr.rs","byte_start":8084790,"byte_end":8084796,"line_start":36,"line_end":36,"column_start":21,"column_end":27},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1482},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/stdin.rs","byte_start":8086654,"byte_end":8086659,"line_start":42,"line_end":42,"column_start":20,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1487},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/stdout.rs","byte_start":8087804,"byte_end":8087810,"line_start":36,"line_end":36,"column_start":21,"column_end":27},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1492},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8089898,"byte_end":8089906,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8090568,"byte_end":8090576,"line_start":85,"line_end":85,"column_start":34,"column_end":42},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1606},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8091131,"byte_end":8091140,"line_start":105,"line_end":105,"column_start":36,"column_end":45},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1609},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8092089,"byte_end":8092094,"line_start":135,"line_end":135,"column_start":9,"column_end":14},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8092489,"byte_end":8092494,"line_start":150,"line_end":150,"column_start":9,"column_end":14},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8092747,"byte_end":8092752,"line_start":158,"line_end":158,"column_start":18,"column_end":23},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1519},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8092875,"byte_end":8092883,"line_start":164,"line_end":164,"column_start":31,"column_end":39},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1606},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8092920,"byte_end":8092929,"line_start":165,"line_end":165,"column_start":31,"column_end":40},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1609},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8092966,"byte_end":8092974,"line_start":166,"line_end":166,"column_start":31,"column_end":39},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1606},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8093011,"byte_end":8093020,"line_start":167,"line_end":167,"column_start":31,"column_end":40},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1609},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8093063,"byte_end":8093071,"line_start":169,"line_end":169,"column_start":36,"column_end":44},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1606},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/split.rs","byte_start":8093239,"byte_end":8093248,"line_start":175,"line_end":175,"column_start":36,"column_end":45},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1609},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/seek.rs","byte_start":8093938,"byte_end":8093942,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1614},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_buf_read_ext.rs","byte_start":8096658,"byte_end":8096670,"line_start":9,"line_end":9,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":147},"to":{"krate":0,"index":2281}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_buf_read_ext.rs","byte_start":8105689,"byte_end":8105690,"line_start":256,"line_end":256,"column_start":52,"column_end":53},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1638},"to":{"krate":0,"index":2281}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8107611,"byte_end":8107620,"line_start":60,"line_end":60,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":176},"to":{"krate":0,"index":2289}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_read_ext.rs","byte_start":8134228,"byte_end":8134229,"line_start":807,"line_end":807,"column_start":46,"column_end":47},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1677},"to":{"krate":0,"index":2289}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8134415,"byte_end":8134424,"line_start":6,"line_end":6,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":207},"to":{"krate":0,"index":1685}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_seek_ext.rs","byte_start":8135294,"byte_end":8135295,"line_start":38,"line_end":38,"column_start":46,"column_end":47},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1688},"to":{"krate":0,"index":1685}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8137229,"byte_end":8137239,"line_start":62,"line_end":62,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":232},"to":{"krate":0,"index":2325}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/async_write_ext.rs","byte_start":8159314,"byte_end":8159315,"line_start":689,"line_end":689,"column_start":48,"column_end":49},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1721},"to":{"krate":0,"index":2325}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8160715,"byte_end":8160724,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":9299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8162903,"byte_end":8162912,"line_start":108,"line_end":108,"column_start":34,"column_end":43},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":9299},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8163888,"byte_end":8163897,"line_start":134,"line_end":134,"column_start":37,"column_end":46},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":9299},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8164728,"byte_end":8164737,"line_start":156,"line_end":156,"column_start":48,"column_end":57},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":9299},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_reader.rs","byte_start":8165248,"byte_end":8165257,"line_start":174,"line_end":174,"column_start":36,"column_end":45},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":9299},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8166764,"byte_end":8166773,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":9293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8168084,"byte_end":8168093,"line_start":65,"line_end":65,"column_start":45,"column_end":54},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":9293},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8168235,"byte_end":8168244,"line_start":71,"line_end":71,"column_start":45,"column_end":54},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":9293},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8168956,"byte_end":8168965,"line_start":101,"line_end":101,"column_start":49,"column_end":58},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":9293},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8169495,"byte_end":8169504,"line_start":119,"line_end":119,"column_start":48,"column_end":57},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":9293},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_stream.rs","byte_start":8169998,"byte_end":8170007,"line_start":134,"line_end":134,"column_start":66,"column_end":75},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":9293},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8171961,"byte_end":8171970,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":9222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8174248,"byte_end":8174257,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":9222},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8175147,"byte_end":8175156,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":9222},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8175638,"byte_end":8175647,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":9222},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/buf_writer.rs","byte_start":8175934,"byte_end":8175943,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":9222},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8177112,"byte_end":8177117,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":9173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8178257,"byte_end":8178262,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":9173},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8178541,"byte_end":8178546,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":9173},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/chain.rs","byte_start":8179063,"byte_end":8179068,"line_start":104,"line_end":104,"column_start":29,"column_end":34},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":9173},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/copy.rs","byte_start":8182136,"byte_end":8182140,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2360},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/empty.rs","byte_start":8185288,"byte_end":8185293,"line_start":47,"line_end":47,"column_start":20,"column_end":25},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2376},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/empty.rs","byte_start":8185502,"byte_end":8185507,"line_start":58,"line_end":58,"column_start":23,"column_end":28},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2376},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/empty.rs","byte_start":8185740,"byte_end":8185745,"line_start":68,"line_end":68,"column_start":21,"column_end":26},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2376},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/flush.rs","byte_start":8186510,"byte_end":8186515,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2379},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8187695,"byte_end":8187700,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":9164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8188410,"byte_end":8188415,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":9164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/lines.rs","byte_start":8189123,"byte_end":8189128,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":9164},"to":{"krate":26,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read.rs","byte_start":8190526,"byte_end":8190530,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2387},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_buf.rs","byte_start":8191572,"byte_end":8191579,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2396},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_exact.rs","byte_start":8192971,"byte_end":8192980,"line_start":42,"line_end":42,"column_start":20,"column_end":29},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2407},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_line.rs","byte_start":8199016,"byte_end":8199024,"line_start":59,"line_end":59,"column_start":51,"column_end":59},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2497},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_to_end.rs","byte_start":8200247,"byte_end":8200252,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2064},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_to_end.rs","byte_start":8201928,"byte_end":8201937,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2508},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_to_string.rs","byte_start":8204041,"byte_end":8204053,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2519},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/read_until.rs","byte_start":8206176,"byte_end":8206185,"line_start":63,"line_end":63,"column_start":51,"column_end":60},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2530},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/repeat.rs","byte_start":8208044,"byte_end":8208050,"line_start":47,"line_end":47,"column_start":20,"column_end":26},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2542},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/shutdown.rs","byte_start":8208987,"byte_end":8208995,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2546},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/sink.rs","byte_start":8210629,"byte_end":8210633,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2554},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/sink.rs","byte_start":8211143,"byte_end":8211147,"line_start":66,"line_end":66,"column_start":21,"column_end":25},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2554},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212112,"byte_end":8212117,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":8690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8212856,"byte_end":8212861,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":8690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/split.rs","byte_start":8213519,"byte_end":8213524,"line_start":92,"line_end":92,"column_start":49,"column_end":54},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":8690},"to":{"krate":26,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8214692,"byte_end":8214696,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":8644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8216324,"byte_end":8216328,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":8644},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/take.rs","byte_start":8216985,"byte_end":8216989,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":8644},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write.rs","byte_start":8218546,"byte_end":8218551,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2557},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write_all.rs","byte_start":8219344,"byte_end":8219352,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2566},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/io/util/write_buf.rs","byte_start":8220852,"byte_end":8220860,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2575},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":57146,"byte_end":57163,"line_start":23,"line_end":23,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":324},"to":{"krate":0,"index":280}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":57613,"byte_end":57623,"line_start":45,"line_end":45,"column_start":24,"column_end":34},"kind":{"Impl":{"id":135}},"from":{"krate":1,"index":6652},"to":{"krate":0,"index":280}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":57663,"byte_end":57673,"line_start":47,"line_end":47,"column_start":36,"column_end":46},"kind":{"Impl":{"id":136}},"from":{"krate":1,"index":6652},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":57954,"byte_end":57966,"line_start":59,"line_end":59,"column_start":24,"column_end":36},"kind":{"Impl":{"id":137}},"from":{"krate":1,"index":6674},"to":{"krate":0,"index":280}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":58006,"byte_end":58018,"line_start":61,"line_end":61,"column_start":36,"column_end":48},"kind":{"Impl":{"id":138}},"from":{"krate":1,"index":6674},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":58278,"byte_end":58290,"line_start":72,"line_end":72,"column_start":24,"column_end":36},"kind":{"Impl":{"id":139}},"from":{"krate":1,"index":6677},"to":{"krate":0,"index":280}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":58330,"byte_end":58342,"line_start":74,"line_end":74,"column_start":36,"column_end":48},"kind":{"Impl":{"id":140}},"from":{"krate":1,"index":6677},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":61671,"byte_end":61677,"line_start":193,"line_end":193,"column_start":28,"column_end":34},"kind":{"Impl":{"id":143}},"from":{"krate":5,"index":4732},"to":{"krate":0,"index":280}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":61721,"byte_end":61727,"line_start":195,"line_end":195,"column_start":40,"column_end":46},"kind":{"Impl":{"id":144}},"from":{"krate":5,"index":4732},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":63093,"byte_end":63103,"line_start":246,"line_end":246,"column_start":25,"column_end":35},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2702},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/addr.rs","byte_start":63751,"byte_end":63760,"line_start":264,"line_end":264,"column_start":27,"column_end":36},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2711},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8225924,"byte_end":8225935,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8235249,"byte_end":8235260,"line_start":327,"line_end":327,"column_start":41,"column_end":52},"kind":{"Impl":{"id":148}},"from":{"krate":18,"index":1033},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8235700,"byte_end":8235711,"line_start":341,"line_end":341,"column_start":36,"column_end":47},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2916},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8236037,"byte_end":8236048,"line_start":353,"line_end":353,"column_start":21,"column_end":32},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2916},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/listener.rs","byte_start":8236264,"byte_end":8236275,"line_start":364,"line_end":364,"column_start":22,"column_end":33},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2916},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/incoming.rs","byte_start":8237107,"byte_end":8237115,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/incoming.rs","byte_start":8237555,"byte_end":8237563,"line_start":31,"line_end":31,"column_start":32,"column_end":40},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2918},"to":{"krate":26,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/split.rs","byte_start":8238896,"byte_end":8238904,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2924},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/split.rs","byte_start":8239224,"byte_end":8239233,"line_start":50,"line_end":50,"column_start":21,"column_end":30},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2931},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/split.rs","byte_start":8240046,"byte_end":8240054,"line_start":79,"line_end":79,"column_start":27,"column_end":35},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2924},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/split.rs","byte_start":8240148,"byte_end":8240157,"line_start":85,"line_end":85,"column_start":27,"column_end":36},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2931},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8241632,"byte_end":8241641,"line_start":50,"line_end":50,"column_start":6,"column_end":15},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8263746,"byte_end":8263755,"line_start":716,"line_end":716,"column_start":39,"column_end":48},"kind":{"Impl":{"id":159}},"from":{"krate":18,"index":977},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8264191,"byte_end":8264200,"line_start":730,"line_end":730,"column_start":34,"column_end":43},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2938},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8264553,"byte_end":8264562,"line_start":744,"line_end":744,"column_start":20,"column_end":29},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2938},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8264876,"byte_end":8264885,"line_start":758,"line_end":758,"column_start":21,"column_end":30},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2938},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8265629,"byte_end":8265638,"line_start":787,"line_end":787,"column_start":21,"column_end":30},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2938},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/tcp/stream.rs","byte_start":8265852,"byte_end":8265861,"line_start":798,"line_end":798,"column_start":22,"column_end":31},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2938},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8266867,"byte_end":8266876,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8280151,"byte_end":8280160,"line_start":364,"line_end":364,"column_start":39,"column_end":48},"kind":{"Impl":{"id":166}},"from":{"krate":18,"index":1091},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8280596,"byte_end":8280605,"line_start":378,"line_end":378,"column_start":34,"column_end":43},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3067},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8280925,"byte_end":8280934,"line_start":390,"line_end":390,"column_start":21,"column_end":30},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3067},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/socket.rs","byte_start":8281153,"byte_end":8281162,"line_start":401,"line_end":401,"column_start":22,"column_end":31},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3067},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8283228,"byte_end":8283240,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3079},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8283443,"byte_end":8283455,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3079},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8283982,"byte_end":8283990,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8285622,"byte_end":8285630,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8286950,"byte_end":8286958,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3069},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/udp/split.rs","byte_start":8287049,"byte_end":8287057,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3074},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8287873,"byte_end":8287885,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8294165,"byte_end":8294177,"line_start":198,"line_end":198,"column_start":41,"column_end":53},"kind":{"Impl":{"id":177}},"from":{"krate":25,"index":182},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8294619,"byte_end":8294631,"line_start":212,"line_end":212,"column_start":37,"column_end":49},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3326},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8294960,"byte_end":8294972,"line_start":224,"line_end":224,"column_start":21,"column_end":33},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3326},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/datagram.rs","byte_start":8295097,"byte_end":8295109,"line_start":230,"line_end":230,"column_start":18,"column_end":30},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3326},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/incoming.rs","byte_start":8295467,"byte_end":8295475,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/incoming.rs","byte_start":8295917,"byte_end":8295925,"line_start":30,"line_end":30,"column_start":32,"column_end":40},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3328},"to":{"krate":26,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8296682,"byte_end":8296694,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8300420,"byte_end":8300432,"line_start":129,"line_end":129,"column_start":41,"column_end":53},"kind":{"Impl":{"id":184}},"from":{"krate":25,"index":186},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8300874,"byte_end":8300886,"line_start":143,"line_end":143,"column_start":37,"column_end":49},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3334},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8301206,"byte_end":8301218,"line_start":155,"line_end":155,"column_start":21,"column_end":33},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3334},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/listener.rs","byte_start":8301343,"byte_end":8301355,"line_start":161,"line_end":161,"column_start":18,"column_end":30},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3334},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/split.rs","byte_start":8302347,"byte_end":8302355,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3336},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/split.rs","byte_start":8302675,"byte_end":8302684,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3343},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/split.rs","byte_start":8303168,"byte_end":8303176,"line_start":64,"line_end":64,"column_start":28,"column_end":36},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3336},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/split.rs","byte_start":8303272,"byte_end":8303281,"line_start":70,"line_end":70,"column_start":28,"column_end":37},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3343},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8304219,"byte_end":8304229,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8307323,"byte_end":8307333,"line_start":114,"line_end":114,"column_start":39,"column_end":49},"kind":{"Impl":{"id":193}},"from":{"krate":25,"index":190},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8307771,"byte_end":8307781,"line_start":128,"line_end":128,"column_start":35,"column_end":45},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3350},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8308094,"byte_end":8308104,"line_start":140,"line_end":140,"column_start":20,"column_end":30},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3350},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8308418,"byte_end":8308428,"line_start":154,"line_end":154,"column_start":21,"column_end":31},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3350},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8308864,"byte_end":8308874,"line_start":172,"line_end":172,"column_start":6,"column_end":16},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8310391,"byte_end":8310401,"line_start":217,"line_end":217,"column_start":21,"column_end":31},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3350},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/net/unix/stream.rs","byte_start":8310526,"byte_end":8310536,"line_start":223,"line_end":223,"column_start":18,"column_end":28},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3350},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_u32.rs","byte_start":66468,"byte_end":66477,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_u32.rs","byte_start":66502,"byte_end":66511,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_u32.rs","byte_start":66521,"byte_end":66530,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_u32.rs","byte_start":67015,"byte_end":67024,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_u32.rs","byte_start":67309,"byte_end":67318,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_usize.rs","byte_start":69435,"byte_end":69446,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":355},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_usize.rs","byte_start":69471,"byte_end":69482,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":355},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_usize.rs","byte_start":69492,"byte_end":69503,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_usize.rs","byte_start":70003,"byte_end":70014,"line_start":30,"line_end":30,"column_start":21,"column_end":32},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":355},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_usize.rs","byte_start":70304,"byte_end":70315,"line_start":40,"line_end":40,"column_start":24,"column_end":35},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":355},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/atomic_usize.rs","byte_start":70479,"byte_end":70490,"line_start":47,"line_end":47,"column_start":21,"column_end":32},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":355},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/causal_cell.rs","byte_start":70750,"byte_end":70760,"line_start":9,"line_end":9,"column_start":9,"column_end":19},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/causal_cell.rs","byte_start":71481,"byte_end":71492,"line_start":45,"line_end":45,"column_start":6,"column_end":17},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/loom/std/alloc.rs","byte_start":71661,"byte_end":71666,"line_start":6,"line_end":6,"column_start":9,"column_end":14},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/either.rs","byte_start":8314932,"byte_end":8314938,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3394},"to":{"krate":0,"index":462}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/either.rs","byte_start":8315744,"byte_end":8315750,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3394},"to":{"krate":0,"index":468}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/either.rs","byte_start":8315964,"byte_end":8315970,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3394},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/thread.rs","byte_start":77897,"byte_end":77907,"line_start":46,"line_end":46,"column_start":6,"column_end":16},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/thread.rs","byte_start":78172,"byte_end":78182,"line_start":58,"line_end":58,"column_start":15,"column_end":25},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3420},"to":{"krate":0,"index":462}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/thread.rs","byte_start":78641,"byte_end":78646,"line_start":80,"line_end":80,"column_start":6,"column_end":11},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/thread.rs","byte_start":83295,"byte_end":83305,"line_start":197,"line_end":197,"column_start":18,"column_end":28},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3420},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/thread.rs","byte_start":83414,"byte_end":83426,"line_start":205,"line_end":205,"column_start":17,"column_end":29},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3428},"to":{"krate":0,"index":468}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/thread.rs","byte_start":83818,"byte_end":83834,"line_start":224,"line_end":224,"column_start":10,"column_end":26},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/thread.rs","byte_start":84471,"byte_end":84487,"line_start":244,"line_end":244,"column_start":19,"column_end":35},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3476},"to":{"krate":0,"index":462}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/thread.rs","byte_start":85053,"byte_end":85065,"line_start":264,"line_end":264,"column_start":10,"column_end":22},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/thread.rs","byte_start":85277,"byte_end":85282,"line_start":273,"line_end":273,"column_start":10,"column_end":15},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/mod.rs","byte_start":76223,"byte_end":76227,"line_start":121,"line_end":121,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":468}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/mod.rs","byte_start":76230,"byte_end":76234,"line_start":121,"line_end":121,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":468}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/mod.rs","byte_start":76805,"byte_end":76808,"line_start":139,"line_end":139,"column_start":17,"column_end":20},"kind":{"Impl":{"id":226}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":468}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/park/mod.rs","byte_start":76897,"byte_end":76900,"line_start":145,"line_end":145,"column_start":17,"column_end":20},"kind":{"Impl":{"id":227}},"from":{"krate":5,"index":3769},"to":{"krate":0,"index":468}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/orphan.rs","byte_start":8355668,"byte_end":8355683,"line_start":48,"line_end":48,"column_start":9,"column_end":24},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/orphan.rs","byte_start":8355927,"byte_end":8355942,"line_start":61,"line_end":61,"column_start":34,"column_end":49},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3760},"to":{"krate":0,"index":3499}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/reap.rs","byte_start":8360425,"byte_end":8360430,"line_start":27,"line_end":27,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1922},"to":{"krate":0,"index":3532}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/reap.rs","byte_start":8360523,"byte_end":8360529,"line_start":31,"line_end":31,"column_start":17,"column_end":23},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":4933},"to":{"krate":0,"index":3532}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/reap.rs","byte_start":8360673,"byte_end":8360679,"line_start":37,"line_end":37,"column_start":25,"column_end":31},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3766},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/reap.rs","byte_start":8360846,"byte_end":8360852,"line_start":49,"line_end":49,"column_start":15,"column_end":21},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/reap.rs","byte_start":8361319,"byte_end":8361325,"line_start":71,"line_end":71,"column_start":26,"column_end":32},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3766},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/reap.rs","byte_start":8363620,"byte_end":8363626,"line_start":121,"line_end":121,"column_start":24,"column_end":30},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3766},"to":{"krate":0,"index":3638}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/reap.rs","byte_start":8363802,"byte_end":8363808,"line_start":131,"line_end":131,"column_start":24,"column_end":30},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3766},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8350286,"byte_end":8350291,"line_start":47,"line_end":47,"column_start":29,"column_end":34},"kind":{"Impl":{"id":236}},"from":{"krate":1,"index":4107},"to":{"krate":0,"index":3492}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8350469,"byte_end":8350474,"line_start":57,"line_end":57,"column_start":29,"column_end":34},"kind":{"Impl":{"id":237}},"from":{"krate":1,"index":4107},"to":{"krate":0,"index":3638}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8350719,"byte_end":8350736,"line_start":69,"line_end":69,"column_start":21,"column_end":38},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3597},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8350885,"byte_end":8350902,"line_start":75,"line_end":75,"column_start":43,"column_end":60},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3499}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8351249,"byte_end":8351254,"line_start":90,"line_end":90,"column_start":21,"column_end":26},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3604},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8351923,"byte_end":8351928,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8352015,"byte_end":8352020,"line_start":122,"line_end":122,"column_start":15,"column_end":20},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3604},"to":{"krate":0,"index":3638}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8352117,"byte_end":8352122,"line_start":128,"line_end":128,"column_start":17,"column_end":22},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3604},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8352385,"byte_end":8352387,"line_start":141,"line_end":141,"column_start":22,"column_end":24},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3789},"to":{"krate":1,"index":2861}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8352542,"byte_end":8352544,"line_start":150,"line_end":150,"column_start":23,"column_end":25},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3789},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8352774,"byte_end":8352776,"line_start":163,"line_end":163,"column_start":21,"column_end":23},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3789},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/unix/mod.rs","byte_start":8352899,"byte_end":8352901,"line_start":172,"line_end":172,"column_start":21,"column_end":23},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3789},"to":{"krate":18,"index":16}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8321368,"byte_end":8321375,"line_start":156,"line_end":156,"column_start":6,"column_end":13},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8337510,"byte_end":8337517,"line_start":660,"line_end":660,"column_start":27,"column_end":34},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3795},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8337847,"byte_end":8337861,"line_start":676,"line_end":676,"column_start":24,"column_end":38},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3800},"to":{"krate":0,"index":3638}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8338067,"byte_end":8338081,"line_start":688,"line_end":688,"column_start":24,"column_end":38},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3800},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8338218,"byte_end":8338232,"line_start":696,"line_end":696,"column_start":26,"column_end":40},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3800},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8339581,"byte_end":8339586,"line_start":737,"line_end":737,"column_start":6,"column_end":11},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8342141,"byte_end":8342146,"line_start":809,"line_end":809,"column_start":17,"column_end":22},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3807},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8343111,"byte_end":8343121,"line_start":844,"line_end":844,"column_start":21,"column_end":31},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3814},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8343646,"byte_end":8343657,"line_start":862,"line_end":862,"column_start":20,"column_end":31},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3818},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8343882,"byte_end":8343893,"line_start":872,"line_end":872,"column_start":20,"column_end":31},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3822},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8344245,"byte_end":8344255,"line_start":888,"line_end":888,"column_start":22,"column_end":32},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3814},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8344380,"byte_end":8344391,"line_start":894,"line_end":894,"column_start":22,"column_end":33},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3818},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/process/mod.rs","byte_start":8344516,"byte_end":8344527,"line_start":900,"line_end":900,"column_start":22,"column_end":33},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3822},"to":{"krate":1,"index":8218}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8381212,"byte_end":8381225,"line_start":38,"line_end":38,"column_start":22,"column_end":35},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3848},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8381250,"byte_end":8381263,"line_start":39,"line_end":39,"column_start":22,"column_end":35},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3848},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8381582,"byte_end":8381596,"line_start":58,"line_end":58,"column_start":9,"column_end":23},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8382804,"byte_end":8382809,"line_start":107,"line_end":107,"column_start":23,"column_end":28},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3866},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8384379,"byte_end":8384386,"line_start":156,"line_end":156,"column_start":6,"column_end":13},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8384974,"byte_end":8384987,"line_start":180,"line_end":180,"column_start":6,"column_end":19},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8387453,"byte_end":8387466,"line_start":256,"line_end":256,"column_start":19,"column_end":32},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3848},"to":{"krate":0,"index":6974}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8388631,"byte_end":8388644,"line_start":288,"line_end":288,"column_start":27,"column_end":40},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3848},"to":{"krate":0,"index":6979}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8388666,"byte_end":8388680,"line_start":290,"line_end":290,"column_start":18,"column_end":32},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3905},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/basic_scheduler.rs","byte_start":8389516,"byte_end":8389529,"line_start":320,"line_end":320,"column_start":21,"column_end":34},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3848},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/pool.rs","byte_start":8392796,"byte_end":8392808,"line_start":98,"line_end":98,"column_start":6,"column_end":18},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/pool.rs","byte_start":8394185,"byte_end":8394197,"line_start":141,"line_end":141,"column_start":15,"column_end":27},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3951},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/pool.rs","byte_start":8394496,"byte_end":8394508,"line_start":155,"line_end":155,"column_start":21,"column_end":33},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3951},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/pool.rs","byte_start":8394669,"byte_end":8394676,"line_start":163,"line_end":163,"column_start":6,"column_end":13},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":4059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/pool.rs","byte_start":8395661,"byte_end":8395666,"line_start":186,"line_end":186,"column_start":27,"column_end":32},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3991},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/pool.rs","byte_start":8398039,"byte_end":8398044,"line_start":264,"line_end":264,"column_start":6,"column_end":11},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/pool.rs","byte_start":8401045,"byte_end":8401052,"line_start":360,"line_end":360,"column_start":21,"column_end":28},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4059},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/schedule.rs","byte_start":8401620,"byte_end":8401632,"line_start":8,"line_end":8,"column_start":19,"column_end":31},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4019},"to":{"krate":0,"index":6974}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/schedule.rs","byte_start":8401878,"byte_end":8401890,"line_start":20,"line_end":20,"column_start":27,"column_end":39},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4019},"to":{"krate":0,"index":6979}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/shutdown.rs","byte_start":8402455,"byte_end":8402463,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/task.rs","byte_start":8403136,"byte_end":8403148,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":4042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/blocking/task.rs","byte_start":8403342,"byte_end":8403354,"line_start":17,"line_end":17,"column_start":23,"column_end":35},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4042},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":105415,"byte_end":105422,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":113311,"byte_end":113318,"line_start":353,"line_end":353,"column_start":10,"column_end":17},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":113866,"byte_end":113873,"line_start":377,"line_end":377,"column_start":10,"column_end":17},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":114392,"byte_end":114399,"line_start":400,"line_end":400,"column_start":10,"column_end":17},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":116131,"byte_end":116138,"line_start":447,"line_end":447,"column_start":10,"column_end":17},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":117717,"byte_end":117724,"line_start":489,"line_end":489,"column_start":18,"column_end":25},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":495},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/builder.rs","byte_start":117803,"byte_end":117810,"line_start":495,"line_end":495,"column_start":21,"column_end":28},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":495},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/enter.rs","byte_start":119847,"byte_end":119852,"line_start":53,"line_end":53,"column_start":19,"column_end":24},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":542},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/enter.rs","byte_start":120296,"byte_end":120301,"line_start":79,"line_end":79,"column_start":10,"column_end":15},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/enter.rs","byte_start":121324,"byte_end":121329,"line_start":109,"line_end":109,"column_start":21,"column_end":26},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":534},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/enter.rs","byte_start":121459,"byte_end":121464,"line_start":115,"line_end":115,"column_start":15,"column_end":20},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":534},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/global.rs","byte_start":8407205,"byte_end":8407210,"line_start":90,"line_end":90,"column_start":23,"column_end":28},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4135},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/handle.rs","byte_start":122147,"byte_end":122153,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/handle.rs","byte_start":122504,"byte_end":122510,"line_start":42,"line_end":42,"column_start":10,"column_end":16},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/park.rs","byte_start":8408529,"byte_end":8408535,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/park.rs","byte_start":8409004,"byte_end":8409010,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4192},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/park.rs","byte_start":8409326,"byte_end":8409332,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4192},"to":{"krate":0,"index":462}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/park.rs","byte_start":8409980,"byte_end":8409988,"line_start":108,"line_end":108,"column_start":17,"column_end":25},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4194},"to":{"krate":0,"index":468}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/park.rs","byte_start":8410057,"byte_end":8410062,"line_start":114,"line_end":114,"column_start":6,"column_end":11},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/shell.rs","byte_start":126268,"byte_end":126273,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/spawner.rs","byte_start":128225,"byte_end":128232,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/spawner.rs","byte_start":128663,"byte_end":128670,"line_start":38,"line_end":38,"column_start":10,"column_end":17},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/current.rs","byte_start":8418425,"byte_end":8418430,"line_start":34,"line_end":34,"column_start":23,"column_end":28},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4268},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/current.rs","byte_start":8418989,"byte_end":8418996,"line_start":65,"line_end":65,"column_start":6,"column_end":13},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/current.rs","byte_start":8419332,"byte_end":8419337,"line_start":77,"line_end":77,"column_start":6,"column_end":11},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/idle.rs","byte_start":8420142,"byte_end":8420146,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/idle.rs","byte_start":8424019,"byte_end":8424024,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/idle.rs","byte_start":8425502,"byte_end":8425507,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4710},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/idle.rs","byte_start":8425680,"byte_end":8425685,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4710},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/owned.rs","byte_start":8427696,"byte_end":8427701,"line_start":45,"line_end":45,"column_start":6,"column_end":11},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/queue/global.rs","byte_start":8430541,"byte_end":8430546,"line_start":31,"line_end":31,"column_start":18,"column_end":23},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/queue/inject.rs","byte_start":8435859,"byte_end":8435865,"line_start":9,"line_end":9,"column_start":18,"column_end":24},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/queue/local.rs","byte_start":8437401,"byte_end":8437406,"line_start":25,"line_end":25,"column_start":18,"column_end":23},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/queue/local.rs","byte_start":8437882,"byte_end":8437887,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/queue/local.rs","byte_start":8445878,"byte_end":8445883,"line_start":290,"line_end":290,"column_start":24,"column_end":29},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/queue/worker.rs","byte_start":8446460,"byte_end":8446466,"line_start":15,"line_end":15,"column_start":18,"column_end":24},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/queue/worker.rs","byte_start":8449397,"byte_end":8449403,"line_start":120,"line_end":120,"column_start":33,"column_end":39},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4450},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/queue/mod.rs","byte_start":8429547,"byte_end":8429554,"line_start":32,"line_end":32,"column_start":27,"column_end":34},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4480},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/spawner.rs","byte_start":8450421,"byte_end":8450428,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/spawner.rs","byte_start":8451148,"byte_end":8451155,"line_start":53,"line_end":53,"column_start":21,"column_end":28},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4728},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/slice.rs","byte_start":8452095,"byte_end":8452098,"line_start":29,"line_end":29,"column_start":22,"column_end":25},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4523},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/slice.rs","byte_start":8452123,"byte_end":8452126,"line_start":30,"line_end":30,"column_start":22,"column_end":25},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4523},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/slice.rs","byte_start":8452136,"byte_end":8452139,"line_start":32,"line_end":32,"column_start":6,"column_end":9},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/slice.rs","byte_start":8455879,"byte_end":8455882,"line_start":167,"line_end":167,"column_start":15,"column_end":18},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4523},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/shared.rs","byte_start":8456739,"byte_end":8456745,"line_start":30,"line_end":30,"column_start":22,"column_end":28},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4562},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/shared.rs","byte_start":8456770,"byte_end":8456776,"line_start":31,"line_end":31,"column_start":22,"column_end":28},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4562},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/shared.rs","byte_start":8456786,"byte_end":8456792,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/shared.rs","byte_start":8457366,"byte_end":8457372,"line_start":59,"line_end":59,"column_start":19,"column_end":25},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4562},"to":{"krate":0,"index":6974}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/shared.rs","byte_start":8458432,"byte_end":8458438,"line_start":94,"line_end":94,"column_start":27,"column_end":33},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4562},"to":{"krate":0,"index":6979}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/worker.rs","byte_start":8460474,"byte_end":8460480,"line_start":67,"line_end":67,"column_start":22,"column_end":28},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4600},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/worker.rs","byte_start":8461680,"byte_end":8461686,"line_start":116,"line_end":116,"column_start":6,"column_end":12},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/worker.rs","byte_start":8463060,"byte_end":8463065,"line_start":156,"line_end":156,"column_start":43,"column_end":48},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4626},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/worker.rs","byte_start":8468073,"byte_end":8468088,"line_start":284,"line_end":284,"column_start":6,"column_end":21},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/mod.rs","byte_start":8415771,"byte_end":8415781,"line_start":56,"line_end":56,"column_start":6,"column_end":16},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/mod.rs","byte_start":8417043,"byte_end":8417053,"line_start":107,"line_end":107,"column_start":21,"column_end":31},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4673},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/mod.rs","byte_start":8417192,"byte_end":8417202,"line_start":113,"line_end":113,"column_start":15,"column_end":25},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4673},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/thread_pool/mod.rs","byte_start":8417284,"byte_end":8417291,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/runtime/mod.rs","byte_start":97076,"byte_end":97083,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/registry.rs","byte_start":8482859,"byte_end":8482862,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"kind":{"Impl":{"id":342}},"from":{"krate":5,"index":4064},"to":{"krate":0,"index":4782}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/registry.rs","byte_start":8483584,"byte_end":8483592,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/registry.rs","byte_start":8483682,"byte_end":8483690,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/registry.rs","byte_start":8485838,"byte_end":8485845,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4805},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/registry.rs","byte_start":8485953,"byte_end":8485960,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8492027,"byte_end":8492036,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4850},"to":{"krate":0,"index":4792}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8492150,"byte_end":8492159,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4850},"to":{"krate":0,"index":4782}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8492547,"byte_end":8492558,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4916},"to":{"krate":0,"index":4792}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8492844,"byte_end":8492854,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8496650,"byte_end":8496660,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4877},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8499006,"byte_end":8499012,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8499297,"byte_end":8499303,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8505442,"byte_end":8505448,"line_start":421,"line_end":421,"column_start":6,"column_end":12},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/signal/unix.rs","byte_start":8507304,"byte_end":8507310,"line_start":485,"line_end":485,"column_start":36,"column_end":42},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4933},"to":{"krate":26,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8519353,"byte_end":8519357,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":5013},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/iter.rs","byte_start":8520019,"byte_end":8520023,"line_start":40,"line_end":40,"column_start":20,"column_end":24},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5013},"to":{"krate":26,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/map.rs","byte_start":8520680,"byte_end":8520683,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":8121},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/map.rs","byte_start":8520901,"byte_end":8520904,"line_start":29,"line_end":29,"column_start":16,"column_end":19},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":8121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/map.rs","byte_start":8521088,"byte_end":8521091,"line_start":38,"line_end":38,"column_start":27,"column_end":30},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":8121},"to":{"krate":26,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/next.rs","byte_start":8521883,"byte_end":8521887,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5019},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/next.rs","byte_start":8521938,"byte_end":8521942,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":5019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/next.rs","byte_start":8522083,"byte_end":8522087,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":5019},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8516849,"byte_end":8516855,"line_start":20,"line_end":20,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":26,"index":68},"to":{"krate":0,"index":5006}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/stream/mod.rs","byte_start":8519090,"byte_end":8519091,"line_start":93,"line_end":93,"column_start":31,"column_end":32},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":5012},"to":{"krate":0,"index":5006}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8524999,"byte_end":8525006,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":6035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/barrier.rs","byte_start":8528286,"byte_end":8528303,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":6047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541029,"byte_end":8541035,"line_start":416,"line_end":416,"column_start":31,"column_end":37},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":5061},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541072,"byte_end":8541078,"line_start":417,"line_end":417,"column_start":31,"column_end":37},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":5061},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541116,"byte_end":8541124,"line_start":419,"line_end":419,"column_start":31,"column_end":39},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":5064},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541161,"byte_end":8541169,"line_start":420,"line_end":420,"column_start":31,"column_end":39},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":5064},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8541185,"byte_end":8541191,"line_start":422,"line_end":422,"column_start":9,"column_end":15},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":5061},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8547453,"byte_end":8547459,"line_start":632,"line_end":632,"column_start":19,"column_end":25},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":5061},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8547639,"byte_end":8547645,"line_start":641,"line_end":641,"column_start":18,"column_end":24},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":5061},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8547799,"byte_end":8547807,"line_start":649,"line_end":649,"column_start":9,"column_end":17},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":5064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8549469,"byte_end":8549477,"line_start":704,"line_end":704,"column_start":9,"column_end":17},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8555016,"byte_end":8555024,"line_start":866,"line_end":866,"column_start":18,"column_end":26},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":5064},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8555701,"byte_end":8555707,"line_start":890,"line_end":890,"column_start":18,"column_end":24},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":5069},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8556032,"byte_end":8556038,"line_start":902,"line_end":902,"column_start":24,"column_end":30},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":5061},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8556182,"byte_end":8556190,"line_start":908,"line_end":908,"column_start":24,"column_end":32},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":5064},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8556321,"byte_end":8556325,"line_start":914,"line_end":914,"column_start":9,"column_end":13},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":5080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8557522,"byte_end":8557531,"line_start":955,"line_end":955,"column_start":13,"column_end":22},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/broadcast.rs","byte_start":8557939,"byte_end":8557948,"line_start":976,"line_end":976,"column_start":22,"column_end":31},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5089},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/block.rs","byte_start":8562918,"byte_end":8562923,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":5187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/block.rs","byte_start":8572897,"byte_end":8572903,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":5201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/block.rs","byte_start":8573385,"byte_end":8573391,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":5201},"to":{"krate":2,"index":2133}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8573939,"byte_end":8573945,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":5255},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8574077,"byte_end":8574083,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":5255},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8574498,"byte_end":8574506,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":5264},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8576277,"byte_end":8576285,"line_start":98,"line_end":98,"column_start":9,"column_end":17},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8578712,"byte_end":8578720,"line_start":177,"line_end":177,"column_start":19,"column_end":27},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":5264},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8578780,"byte_end":8578788,"line_start":180,"line_end":180,"column_start":39,"column_end":47},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5264},"to":{"krate":26,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/bounded.rs","byte_start":8578976,"byte_end":8578982,"line_start":189,"line_end":189,"column_start":9,"column_end":15},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8584345,"byte_end":8584347,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5323},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8584748,"byte_end":8584750,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5332},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8585057,"byte_end":8585066,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":6104},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8585328,"byte_end":8585340,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":6111},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8587035,"byte_end":8587039,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":5356},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8587672,"byte_end":8587680,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":5368},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8587946,"byte_end":8587950,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":5356},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8587999,"byte_end":8588003,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":5356},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8588482,"byte_end":8588484,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":5323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8589026,"byte_end":8589028,"line_start":199,"line_end":199,"column_start":9,"column_end":11},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":5323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8589206,"byte_end":8589208,"line_start":205,"line_end":205,"column_start":22,"column_end":24},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":5323},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8589608,"byte_end":8589610,"line_start":221,"line_end":221,"column_start":21,"column_end":23},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5323},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8590019,"byte_end":8590021,"line_start":242,"line_end":242,"column_start":12,"column_end":14},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8592906,"byte_end":8592908,"line_start":327,"line_end":327,"column_start":21,"column_end":23},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5332},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8593344,"byte_end":8593348,"line_start":348,"line_end":348,"column_start":12,"column_end":16},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8593812,"byte_end":8593816,"line_start":370,"line_end":370,"column_start":21,"column_end":25},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5356},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8594365,"byte_end":8594377,"line_start":387,"line_end":387,"column_start":32,"column_end":44},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":6091},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/chan.rs","byte_start":8595771,"byte_end":8595782,"line_start":451,"line_end":451,"column_start":20,"column_end":31},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":355},"to":{"krate":0,"index":5346}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/list.rs","byte_start":8598499,"byte_end":8598501,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/list.rs","byte_start":8604202,"byte_end":8604204,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5476},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/list.rs","byte_start":8604481,"byte_end":8604483,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/list.rs","byte_start":8607879,"byte_end":8607881,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5480},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8608563,"byte_end":8608578,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5516},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8608719,"byte_end":8608734,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5516},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8609200,"byte_end":8609217,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5525},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8610194,"byte_end":8610211,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8612682,"byte_end":8612699,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5525},"to":{"krate":26,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/unbounded.rs","byte_start":8612865,"byte_end":8612880,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8613388,"byte_end":8613397,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":6104},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8613559,"byte_end":8613568,"line_start":16,"line_end":16,"column_start":45,"column_end":54},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":6104},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8614054,"byte_end":8614066,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":6111},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8614099,"byte_end":8614111,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":6111},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8614451,"byte_end":8614463,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":6111},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8614692,"byte_end":8614701,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":6122},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8614831,"byte_end":8614840,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":6122},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8615315,"byte_end":8615327,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":6127},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8615633,"byte_end":8615645,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":6127},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8615803,"byte_end":8615814,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":6134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8615913,"byte_end":8615924,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":6134},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mpsc/error.rs","byte_start":8616054,"byte_end":8616065,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":6134},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618591,"byte_end":8618596,"line_start":72,"line_end":72,"column_start":25,"column_end":30},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":6139},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618641,"byte_end":8618646,"line_start":73,"line_end":73,"column_start":25,"column_end":30},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":6139},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618695,"byte_end":8618705,"line_start":74,"line_end":74,"column_start":29,"column_end":39},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5594},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8618987,"byte_end":8618999,"line_start":84,"line_end":84,"column_start":23,"column_end":35},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":6146},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8619142,"byte_end":8619154,"line_start":90,"line_end":90,"column_start":16,"column_end":28},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":6146},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8619273,"byte_end":8619278,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":6139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8620452,"byte_end":8620462,"line_start":134,"line_end":134,"column_start":22,"column_end":32},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5594},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8620569,"byte_end":8620574,"line_start":140,"line_end":140,"column_start":21,"column_end":26},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":6139},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8620658,"byte_end":8620663,"line_start":146,"line_end":146,"column_start":21,"column_end":26},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":6139},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8620781,"byte_end":8620791,"line_start":155,"line_end":155,"column_start":23,"column_end":33},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5594},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8620978,"byte_end":8620988,"line_start":163,"line_end":163,"column_start":26,"column_end":36},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5594},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8621184,"byte_end":8621194,"line_start":170,"line_end":170,"column_start":40,"column_end":50},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5594},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/mutex.rs","byte_start":8621355,"byte_end":8621365,"line_start":176,"line_end":176,"column_start":44,"column_end":54},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5594},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8622921,"byte_end":8622930,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":6163},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8623094,"byte_end":8623103,"line_start":60,"line_end":60,"column_start":34,"column_end":43},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":6163},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8623172,"byte_end":8623184,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":6168},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8623485,"byte_end":8623497,"line_start":73,"line_end":73,"column_start":34,"column_end":46},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":6168},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8625308,"byte_end":8625314,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":6151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631167,"byte_end":8631173,"line_start":348,"line_end":348,"column_start":18,"column_end":24},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":6151},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8631312,"byte_end":8631320,"line_start":356,"line_end":356,"column_start":9,"column_end":17},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":6157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8635674,"byte_end":8635682,"line_start":504,"line_end":504,"column_start":18,"column_end":26},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":6157},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8635829,"byte_end":8635837,"line_start":512,"line_end":512,"column_start":20,"column_end":28},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":6157},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8636300,"byte_end":8636305,"line_start":528,"line_end":528,"column_start":9,"column_end":14},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8640424,"byte_end":8640429,"line_start":667,"line_end":667,"column_start":31,"column_end":36},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":5676},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8640466,"byte_end":8640471,"line_start":668,"line_end":668,"column_start":31,"column_end":36},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":5676},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8640496,"byte_end":8640501,"line_start":670,"line_end":670,"column_start":18,"column_end":23},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":5676},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8640864,"byte_end":8640869,"line_start":688,"line_end":688,"column_start":36,"column_end":41},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":5676},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8641264,"byte_end":8641269,"line_start":703,"line_end":703,"column_start":6,"column_end":11},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":6175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/oneshot.rs","byte_start":8642982,"byte_end":8642987,"line_start":769,"line_end":769,"column_start":21,"column_end":26},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":6175},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8647509,"byte_end":8647518,"line_start":149,"line_end":149,"column_start":6,"column_end":15},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":5792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8659580,"byte_end":8659589,"line_start":483,"line_end":483,"column_start":21,"column_end":30},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":5792},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8659967,"byte_end":8659976,"line_start":494,"line_end":494,"column_start":22,"column_end":31},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":5792},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8660001,"byte_end":8660010,"line_start":495,"line_end":495,"column_start":22,"column_end":31},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":5792},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8660048,"byte_end":8660054,"line_start":499,"line_end":499,"column_start":6,"column_end":12},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":6181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8663554,"byte_end":8663560,"line_start":614,"line_end":614,"column_start":18,"column_end":24},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":6181},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8663657,"byte_end":8663669,"line_start":622,"line_end":622,"column_start":6,"column_end":18},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":6186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8663851,"byte_end":8663863,"line_start":632,"line_end":632,"column_start":23,"column_end":35},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":6186},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8664009,"byte_end":8664021,"line_start":638,"line_end":638,"column_start":30,"column_end":42},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":6186},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8664068,"byte_end":8664083,"line_start":642,"line_end":642,"column_start":6,"column_end":21},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":6191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8664848,"byte_end":8664863,"line_start":673,"line_end":673,"column_start":23,"column_end":38},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":6191},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8665164,"byte_end":8665179,"line_start":683,"line_end":683,"column_start":30,"column_end":45},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":6191},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8665221,"byte_end":8665231,"line_start":687,"line_end":687,"column_start":6,"column_end":16},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":6202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8670139,"byte_end":8670147,"line_start":843,"line_end":843,"column_start":6,"column_end":14},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":6208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8674526,"byte_end":8674534,"line_start":1002,"line_end":1002,"column_start":21,"column_end":29},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":6208},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore_ll.rs","byte_start":8674885,"byte_end":8674894,"line_start":1018,"line_end":1018,"column_start":6,"column_end":15},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":6232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8677427,"byte_end":8677436,"line_start":39,"line_end":39,"column_start":6,"column_end":15},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8678610,"byte_end":8678625,"line_start":78,"line_end":78,"column_start":10,"column_end":25},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/semaphore.rs","byte_start":8678889,"byte_end":8678904,"line_start":87,"line_end":87,"column_start":19,"column_end":34},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":6263},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/task/atomic_waker.rs","byte_start":8685174,"byte_end":8685185,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":5926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/task/atomic_waker.rs","byte_start":8691112,"byte_end":8691123,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":5926},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/task/atomic_waker.rs","byte_start":8691209,"byte_end":8691220,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":5926},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/task/atomic_waker.rs","byte_start":8691353,"byte_end":8691364,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":5926},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/task/atomic_waker.rs","byte_start":8691389,"byte_end":8691400,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":5926},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/task/atomic_waker.rs","byte_start":8691496,"byte_end":8691501,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":486}},"from":{"krate":2,"index":8157},"to":{"krate":0,"index":5949}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8695140,"byte_end":8695149,"line_start":114,"line_end":114,"column_start":42,"column_end":51},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":6298},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8695331,"byte_end":8695340,"line_start":120,"line_end":120,"column_start":49,"column_end":58},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":6298},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8697455,"byte_end":8697463,"line_start":214,"line_end":214,"column_start":9,"column_end":17},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":6275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8698734,"byte_end":8698742,"line_start":259,"line_end":259,"column_start":16,"column_end":24},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":6275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8699104,"byte_end":8699112,"line_start":271,"line_end":271,"column_start":42,"column_end":50},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":6275},"to":{"krate":26,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8699371,"byte_end":8699379,"line_start":281,"line_end":281,"column_start":19,"column_end":27},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":6275},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8699906,"byte_end":8699914,"line_start":307,"line_end":307,"column_start":18,"column_end":26},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":6275},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8700068,"byte_end":8700078,"line_start":314,"line_end":314,"column_start":6,"column_end":16},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":6318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8700191,"byte_end":8700197,"line_start":322,"line_end":322,"column_start":9,"column_end":15},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":6284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8701772,"byte_end":8701778,"line_start":376,"line_end":376,"column_start":18,"column_end":24},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6284},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8702017,"byte_end":8702020,"line_start":387,"line_end":387,"column_start":24,"column_end":27},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":6290},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/sync/watch.rs","byte_start":8702161,"byte_end":8702167,"line_start":397,"line_end":397,"column_start":18,"column_end":24},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":6304},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/core.rs","byte_start":8719338,"byte_end":8719342,"line_start":77,"line_end":77,"column_start":17,"column_end":21},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":6358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/core.rs","byte_start":8720193,"byte_end":8720197,"line_start":104,"line_end":104,"column_start":17,"column_end":21},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":6363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/core.rs","byte_start":8721640,"byte_end":8721646,"line_start":152,"line_end":152,"column_start":6,"column_end":12},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":6366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/error.rs","byte_start":8722037,"byte_end":8722046,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":6857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/error.rs","byte_start":8722599,"byte_end":8722608,"line_start":44,"line_end":44,"column_start":23,"column_end":32},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":6857},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/error.rs","byte_start":8722851,"byte_end":8722860,"line_start":53,"line_end":53,"column_start":21,"column_end":30},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":6857},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/error.rs","byte_start":8723137,"byte_end":8723146,"line_start":62,"line_end":62,"column_start":28,"column_end":37},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6857},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/error.rs","byte_start":8723180,"byte_end":8723185,"line_start":64,"line_end":64,"column_start":30,"column_end":35},"kind":{"Impl":{"id":506}},"from":{"krate":1,"index":2481},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/harness.rs","byte_start":8723957,"byte_end":8723964,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":6449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/harness.rs","byte_start":8724530,"byte_end":8724537,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/harness.rs","byte_start":8726904,"byte_end":8726909,"line_start":107,"line_end":107,"column_start":42,"column_end":47},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":6469},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/join.rs","byte_start":8743970,"byte_end":8743980,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":6859},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/join.rs","byte_start":8744017,"byte_end":8744027,"line_start":86,"line_end":86,"column_start":31,"column_end":41},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6859},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/join.rs","byte_start":8744043,"byte_end":8744053,"line_start":88,"line_end":88,"column_start":9,"column_end":19},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/join.rs","byte_start":8744229,"byte_end":8744239,"line_start":97,"line_end":97,"column_start":19,"column_end":29},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":6859},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/join.rs","byte_start":8744266,"byte_end":8744276,"line_start":99,"line_end":99,"column_start":20,"column_end":30},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6859},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/join.rs","byte_start":8745315,"byte_end":8745325,"line_start":138,"line_end":138,"column_start":18,"column_end":28},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":6859},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/join.rs","byte_start":8745583,"byte_end":8745593,"line_start":150,"line_end":150,"column_start":24,"column_end":34},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6859},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/list.rs","byte_start":8745969,"byte_end":8745978,"line_start":12,"line_end":12,"column_start":18,"column_end":27},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/list.rs","byte_start":8748242,"byte_end":8748251,"line_start":92,"line_end":92,"column_start":33,"column_end":42},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6551},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/queue.rs","byte_start":8750184,"byte_end":8750194,"line_start":58,"line_end":58,"column_start":9,"column_end":19},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/queue.rs","byte_start":8758258,"byte_end":8758268,"line_start":292,"line_end":292,"column_start":24,"column_end":34},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6580},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/queue.rs","byte_start":8758607,"byte_end":8758618,"line_start":304,"line_end":304,"column_start":9,"column_end":20},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/queue.rs","byte_start":8759215,"byte_end":8759226,"line_start":324,"line_end":324,"column_start":24,"column_end":35},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6586},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/raw.rs","byte_start":8761231,"byte_end":8761238,"line_start":58,"line_end":58,"column_start":10,"column_end":17},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/raw.rs","byte_start":8761476,"byte_end":8761483,"line_start":69,"line_end":69,"column_start":6,"column_end":13},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/raw.rs","byte_start":8764069,"byte_end":8764076,"line_start":149,"line_end":149,"column_start":16,"column_end":23},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6635},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/raw.rs","byte_start":8764166,"byte_end":8764173,"line_start":155,"line_end":155,"column_start":15,"column_end":22},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6635},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/stack.rs","byte_start":8769410,"byte_end":8769423,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/stack.rs","byte_start":8770768,"byte_end":8770772,"line_start":57,"line_end":57,"column_start":39,"column_end":43},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6718},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/stack.rs","byte_start":8771234,"byte_end":8771238,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6718},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/state.rs","byte_start":8773123,"byte_end":8773128,"line_start":59,"line_end":59,"column_start":6,"column_end":11},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/state.rs","byte_start":8783946,"byte_end":8783954,"line_start":416,"line_end":416,"column_start":6,"column_end":14},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/state.rs","byte_start":8785596,"byte_end":8785601,"line_start":472,"line_end":472,"column_start":21,"column_end":26},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6740},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/state.rs","byte_start":8785903,"byte_end":8785911,"line_start":484,"line_end":484,"column_start":21,"column_end":29},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6869},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/waker.rs","byte_start":8787383,"byte_end":8787391,"line_start":38,"line_end":38,"column_start":24,"column_end":32},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":6821},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/yield_now.rs","byte_start":8789097,"byte_end":8789105,"line_start":13,"line_end":13,"column_start":25,"column_end":33},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6878},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8794727,"byte_end":8794735,"line_start":163,"line_end":163,"column_start":6,"column_end":14},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8799131,"byte_end":8799139,"line_start":292,"line_end":292,"column_start":18,"column_end":26},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6943},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8799225,"byte_end":8799236,"line_start":298,"line_end":298,"column_start":28,"column_end":39},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":8084},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8799935,"byte_end":8799944,"line_start":323,"line_end":323,"column_start":19,"column_end":28},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6947},"to":{"krate":0,"index":6974}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8800736,"byte_end":8800745,"line_start":357,"line_end":357,"column_start":6,"column_end":15},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8801090,"byte_end":8801097,"line_start":371,"line_end":371,"column_start":27,"column_end":34},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":6926},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/local.rs","byte_start":8803055,"byte_end":8803064,"line_start":429,"line_end":429,"column_start":15,"column_end":24},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":6947},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8711383,"byte_end":8711387,"line_start":278,"line_end":278,"column_start":57,"column_end":61},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6966},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8711524,"byte_end":8711529,"line_start":283,"line_end":283,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1888},"to":{"krate":0,"index":6974}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8712414,"byte_end":8712422,"line_start":305,"line_end":305,"column_start":40,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":6974},"to":{"krate":0,"index":6979}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8712425,"byte_end":8712429,"line_start":305,"line_end":305,"column_start":51,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":6979}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8712432,"byte_end":8712436,"line_start":305,"line_end":305,"column_start":58,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":6979}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8713400,"byte_end":8713404,"line_start":345,"line_end":345,"column_start":22,"column_end":26},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":6966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8713882,"byte_end":8713886,"line_start":364,"line_end":364,"column_start":23,"column_end":27},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":6966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8714719,"byte_end":8714723,"line_start":390,"line_end":390,"column_start":31,"column_end":35},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":6966},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/task/mod.rs","byte_start":8714836,"byte_end":8714840,"line_start":396,"line_end":396,"column_start":28,"column_end":32},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6966},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/clock.rs","byte_start":8819748,"byte_end":8819753,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":7482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8832363,"byte_end":8832373,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":7487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8849172,"byte_end":8849182,"line_start":725,"line_end":725,"column_start":19,"column_end":29},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":7487},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8849210,"byte_end":8849220,"line_start":727,"line_end":727,"column_start":21,"column_end":31},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":7487},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8849357,"byte_end":8849367,"line_start":734,"line_end":734,"column_start":34,"column_end":44},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":7487},"to":{"krate":26,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8849749,"byte_end":8849754,"line_start":744,"line_end":744,"column_start":26,"column_end":31},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":7512},"to":{"krate":0,"index":7432}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8851881,"byte_end":8851886,"line_start":826,"line_end":826,"column_start":21,"column_end":26},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":7512},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8852016,"byte_end":8852019,"line_start":835,"line_end":835,"column_start":6,"column_end":9},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":7506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay_queue.rs","byte_start":8852106,"byte_end":8852113,"line_start":841,"line_end":841,"column_start":9,"column_end":16},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":7498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8854083,"byte_end":8854088,"line_start":51,"line_end":51,"column_start":6,"column_end":11},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":7529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/delay.rs","byte_start":8855063,"byte_end":8855068,"line_start":81,"line_end":81,"column_start":17,"column_end":22},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":7529},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/atomic_stack.rs","byte_start":8867628,"byte_end":8867639,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":7533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/atomic_stack.rs","byte_start":8869613,"byte_end":8869631,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":7537},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/atomic_stack.rs","byte_start":8870205,"byte_end":8870223,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":7537},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/entry.rs","byte_start":8874175,"byte_end":8874180,"line_start":106,"line_end":106,"column_start":6,"column_end":11},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":7541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/entry.rs","byte_start":8880146,"byte_end":8880151,"line_start":328,"line_end":328,"column_start":15,"column_end":20},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":7541},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/entry.rs","byte_start":8880359,"byte_end":8880364,"line_start":339,"line_end":339,"column_start":22,"column_end":27},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":7541},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/entry.rs","byte_start":8880389,"byte_end":8880394,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":7541},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/handle.rs","byte_start":8881131,"byte_end":8881143,"line_start":25,"line_end":25,"column_start":15,"column_end":27},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":7573},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/handle.rs","byte_start":8881816,"byte_end":8881822,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":7565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/handle.rs","byte_start":8882502,"byte_end":8882508,"line_start":77,"line_end":77,"column_start":21,"column_end":27},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":7565},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/registration.rs","byte_start":8882943,"byte_end":8882955,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":7580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/registration.rs","byte_start":8883645,"byte_end":8883657,"line_start":44,"line_end":44,"column_start":15,"column_end":27},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":7580},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/stack.rs","byte_start":8883941,"byte_end":8883946,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":7584},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/stack.rs","byte_start":8884037,"byte_end":8884042,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":7584},"to":{"krate":0,"index":7432}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/mod.rs","byte_start":8859957,"byte_end":8859963,"line_start":124,"line_end":124,"column_start":9,"column_end":15},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":7588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/mod.rs","byte_start":8863605,"byte_end":8863611,"line_start":236,"line_end":236,"column_start":18,"column_end":24},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":7588},"to":{"krate":0,"index":462}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/mod.rs","byte_start":8865063,"byte_end":8865069,"line_start":296,"line_end":296,"column_start":18,"column_end":24},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":7588},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/mod.rs","byte_start":8865546,"byte_end":8865551,"line_start":315,"line_end":315,"column_start":6,"column_end":11},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":7248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/driver/mod.rs","byte_start":8866985,"byte_end":8866990,"line_start":373,"line_end":373,"column_start":21,"column_end":26},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":7248},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8888313,"byte_end":8888318,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":7597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8889031,"byte_end":8889036,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":7597},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/error.rs","byte_start":8889063,"byte_end":8889068,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":7597},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8889709,"byte_end":8889716,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":7609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8893490,"byte_end":8893497,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":7609},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8893626,"byte_end":8893633,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"kind":{"Impl":{"id":583}},"from":{"krate":1,"index":7619},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8893748,"byte_end":8893755,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7609},"to":{"krate":2,"index":1946}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8893920,"byte_end":8893927,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7609},"to":{"krate":2,"index":1979}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8894032,"byte_end":8894039,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":7609},"to":{"krate":2,"index":1951}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8894180,"byte_end":8894187,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":7609},"to":{"krate":2,"index":1951}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8894348,"byte_end":8894355,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":7609},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/instant.rs","byte_start":8894462,"byte_end":8894469,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":7609},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8897194,"byte_end":8897202,"line_start":88,"line_end":88,"column_start":6,"column_end":14},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":7627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/interval.rs","byte_start":8898497,"byte_end":8898505,"line_start":133,"line_end":133,"column_start":32,"column_end":40},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":7627},"to":{"krate":26,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8901693,"byte_end":8901700,"line_start":113,"line_end":113,"column_start":9,"column_end":16},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":7632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8902238,"byte_end":8902245,"line_start":134,"line_end":134,"column_start":20,"column_end":27},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":7632},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8903046,"byte_end":8903053,"line_start":164,"line_end":164,"column_start":23,"column_end":30},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":7639},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8903197,"byte_end":8903204,"line_start":170,"line_end":170,"column_start":28,"column_end":35},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":7639},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/timeout.rs","byte_start":8903241,"byte_end":8903246,"line_start":172,"line_end":172,"column_start":33,"column_end":38},"kind":{"Impl":{"id":596}},"from":{"krate":1,"index":2481},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8921403,"byte_end":8921411,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":8075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/throttle.rs","byte_start":8922226,"byte_end":8922234,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":8075},"to":{"krate":26,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/wheel/level.rs","byte_start":8913144,"byte_end":8913149,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":7405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/wheel/level.rs","byte_start":8917901,"byte_end":8917906,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":7405},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/wheel/stack.rs","byte_start":8919024,"byte_end":8919031,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1874},"to":{"krate":0,"index":7432}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/wheel/mod.rs","byte_start":8904965,"byte_end":8904970,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":7677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/time/wheel/mod.rs","byte_start":8910678,"byte_end":8910682,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":7691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/bit.rs","byte_start":8923140,"byte_end":8923144,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":7886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/bit.rs","byte_start":8924656,"byte_end":8924660,"line_start":66,"line_end":66,"column_start":21,"column_end":25},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":7886},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/addr.rs","byte_start":8931864,"byte_end":8931871,"line_start":77,"line_end":77,"column_start":6,"column_end":13},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":7892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/entry.rs","byte_start":8934506,"byte_end":8934513,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1874},"to":{"krate":0,"index":7741}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/generation.rs","byte_start":8934900,"byte_end":8934910,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":7907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/page.rs","byte_start":8936049,"byte_end":8936054,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":7764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/page.rs","byte_start":8936396,"byte_end":8936402,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":7766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/page.rs","byte_start":8940354,"byte_end":8940359,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":7764},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/page.rs","byte_start":8940665,"byte_end":8940671,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":7766},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/shard.rs","byte_start":8942814,"byte_end":8942819,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/shard.rs","byte_start":8944531,"byte_end":8944536,"line_start":102,"line_end":102,"column_start":24,"column_end":29},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7810},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/slot.rs","byte_start":8944913,"byte_end":8944917,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":7833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/stack.rs","byte_start":8945888,"byte_end":8945901,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":7854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/stack.rs","byte_start":8946729,"byte_end":8946742,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":7854},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/mod.rs","byte_start":8926212,"byte_end":8926216,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":7869},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/mod.rs","byte_start":8926253,"byte_end":8926257,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":7869},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/mod.rs","byte_start":8926280,"byte_end":8926284,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":7869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/slab/mod.rs","byte_start":8927799,"byte_end":8927803,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":7869},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/pad.rs","byte_start":8947891,"byte_end":8947902,"line_start":17,"line_end":17,"column_start":31,"column_end":42},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":8003},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/pad.rs","byte_start":8947939,"byte_end":8947950,"line_start":18,"line_end":18,"column_start":31,"column_end":42},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":8003},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/pad.rs","byte_start":8947966,"byte_end":8947977,"line_start":20,"line_end":20,"column_start":9,"column_end":20},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":8003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/pad.rs","byte_start":8948096,"byte_end":8948107,"line_start":26,"line_end":26,"column_start":19,"column_end":30},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":8003},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/pad.rs","byte_start":8948213,"byte_end":8948224,"line_start":34,"line_end":34,"column_start":22,"column_end":33},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":8003},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/pad.rs","byte_start":8948338,"byte_end":8948349,"line_start":40,"line_end":40,"column_start":36,"column_end":47},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":8003},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/pad.rs","byte_start":8948548,"byte_end":8948559,"line_start":48,"line_end":48,"column_start":21,"column_end":32},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":8003},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/rand.rs","byte_start":8949131,"byte_end":8949139,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":8029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/try_lock.rs","byte_start":8950490,"byte_end":8950497,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":7973},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/try_lock.rs","byte_start":8950535,"byte_end":8950542,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":7973},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/try_lock.rs","byte_start":8950581,"byte_end":8950590,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":7977},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/try_lock.rs","byte_start":8950611,"byte_end":8950618,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":7973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/try_lock.rs","byte_start":8951150,"byte_end":8951159,"line_start":45,"line_end":45,"column_start":19,"column_end":28},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":7977},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/try_lock.rs","byte_start":8951291,"byte_end":8951300,"line_start":53,"line_end":53,"column_start":22,"column_end":31},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":7977},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.6/src/util/try_lock.rs","byte_start":8951422,"byte_end":8951431,"line_start":59,"line_end":59,"column_start":18,"column_end":27},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":7977},"to":{"krate":2,"index":2076}}]}