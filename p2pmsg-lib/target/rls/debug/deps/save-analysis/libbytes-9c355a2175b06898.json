{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3","program":"/home/ivan/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bytes","--edition=2018","/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=9c355a2175b06898","-C","extra-filename=-9c355a2175b06898","--out-dir","/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps","-L","dependency=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/ivan/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libbytes-9c355a2175b06898.rmeta"},"prelude":{"crate_id":{"name":"bytes","disambiguator":[8357608236844742768,7778654025855472338]},"crate_root":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src","external_crates":[{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8347428267238659886,10332094417061409504]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[1363863465332800457,13848166988694336684]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[12137614861726203495,15548133240156816566]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[18056567842020430853,9313265962764064672]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[7827686636389194820,15662552692549508232]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17764581655047699045,8969240834890926963]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15105272547384731958,12075926336353145446]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18440455352970948901,15112185841299963639]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1364483041201605089,13268241566818872575]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14006621007583817116,4233624759020785085]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8672076995780005164,5844773395501633050]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[7980643601488589141,11238545750628155236]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[812282429613043422,12768483485645190371]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[16394268894339983760,18168038129299562657]}}],"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":0,"byte_end":3451,"line_start":1,"line_end":118,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":932},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":60731,"byte_end":60736,"line_start":13,"line_end":13,"column_start":22,"column_end":27},"alias_span":null,"name":"Limit","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":945},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":60758,"byte_end":60762,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":923},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":60785,"byte_end":60790,"line_start":15,"line_end":15,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":939},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":60840,"byte_end":60846,"line_start":18,"line_end":18,"column_start":24,"column_end":30},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":952},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":60856,"byte_end":60862,"line_start":18,"line_end":18,"column_start":40,"column_end":46},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4279,"byte_end":4282,"line_start":25,"line_end":25,"column_start":25,"column_end":28},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4307,"byte_end":4313,"line_start":26,"line_end":26,"column_start":24,"column_end":30},"alias_span":null,"name":"BufMut","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":272},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4335,"byte_end":4341,"line_start":27,"line_end":27,"column_start":21,"column_end":27},"alias_span":null,"name":"BufExt","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":279},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4343,"byte_end":4352,"line_start":27,"line_end":27,"column_start":29,"column_end":38},"alias_span":null,"name":"BufMutExt","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4402,"byte_end":4412,"line_start":29,"line_end":29,"column_start":24,"column_end":34},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":958},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4434,"byte_end":4442,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2899,"byte_end":2902,"line_start":83,"line_end":83,"column_start":5,"column_end":8},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2908,"byte_end":2914,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"alias_span":null,"name":"BufMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":357},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":3002,"byte_end":3010,"line_start":92,"line_end":92,"column_start":27,"column_end":35},"alias_span":null,"name":"BytesMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":579},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":3034,"byte_end":3039,"line_start":93,"line_end":93,"column_start":23,"column_end":28},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":0,"byte_end":3451,"line_start":1,"line_end":118,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":552},{"krate":0,"index":724},{"krate":0,"index":732},{"krate":0,"index":752},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762}],"decl_id":null,"docs":" Provides abstractions for working with bytes.","sig":null,"attributes":[{"value":"deny(warnings, missing_docs, missing_debug_implementations,\n       rust_2018_idioms)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":0,"byte_end":81,"line_start":1,"line_end":1,"column_start":1,"column_end":82}},{"value":"no_std","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":137,"byte_end":147,"line_start":3,"line_end":3,"column_start":1,"column_end":11}},{"value":"! Provides abstractions for working with bytes.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":149,"byte_end":198,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":199,"byte_end":202,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! The `bytes` crate provides an efficient byte buffer structure","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":203,"byte_end":268,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"! ([`Bytes`](struct.Bytes.html)) and traits for working with buffer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":269,"byte_end":338,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"! implementations ([`Buf`], [`BufMut`]).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":339,"byte_end":381,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":382,"byte_end":385,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! [`Buf`]: trait.Buf.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":386,"byte_end":413,"line_start":11,"line_end":11,"column_start":1,"column_end":28}},{"value":"! [`BufMut`]: trait.BufMut.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":414,"byte_end":447,"line_start":12,"line_end":12,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":448,"byte_end":451,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! # `Bytes`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":452,"byte_end":465,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":466,"byte_end":469,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! `Bytes` is an efficient container for storing and operating on contiguous","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":470,"byte_end":547,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"! slices of memory. It is intended for use primarily in networking code, but","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":548,"byte_end":626,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"! could have applications elsewhere as well.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":627,"byte_end":673,"line_start":18,"line_end":18,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":674,"byte_end":677,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! `Bytes` values facilitate zero-copy network programming by allowing multiple","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":678,"byte_end":758,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"! `Bytes` objects to point to the same underlying memory. This is managed by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":759,"byte_end":837,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"! using a reference count to track when the memory is no longer needed and can","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":838,"byte_end":918,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"! be freed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":919,"byte_end":932,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":933,"byte_end":936,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! A `Bytes` handle can be created directly from an existing byte store (such as `&[u8]`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":937,"byte_end":1026,"line_start":25,"line_end":25,"column_start":1,"column_end":90}},{"value":"! or `Vec<u8>`), but usually a `BytesMut` is used first and written to. For","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1027,"byte_end":1104,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"! example:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1105,"byte_end":1117,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1118,"byte_end":1121,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1122,"byte_end":1133,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"! use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1134,"byte_end":1168,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1169,"byte_end":1172,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! let mut buf = BytesMut::with_capacity(1024);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1173,"byte_end":1221,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"! buf.put(&b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1222,"byte_end":1255,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"! buf.put_u16(1234);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1256,"byte_end":1278,"line_start":34,"line_end":34,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1279,"byte_end":1282,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! let a = buf.split();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1283,"byte_end":1307,"line_start":36,"line_end":36,"column_start":1,"column_end":25}},{"value":"! assert_eq!(a, b\"hello world\\x04\\xD2\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1308,"byte_end":1354,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1355,"byte_end":1358,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! buf.put(&b\"goodbye world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1359,"byte_end":1394,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1395,"byte_end":1398,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! let b = buf.split();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1399,"byte_end":1423,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"! assert_eq!(b, b\"goodbye world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1424,"byte_end":1464,"line_start":42,"line_end":42,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1465,"byte_end":1468,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! assert_eq!(buf.capacity(), 998);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1469,"byte_end":1505,"line_start":44,"line_end":44,"column_start":1,"column_end":37}},{"value":"! ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1506,"byte_end":1513,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1514,"byte_end":1517,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! In the above example, only a single buffer of 1024 is allocated. The handles","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1518,"byte_end":1598,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"! `a` and `b` will share the underlying buffer and maintain indices tracking","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1599,"byte_end":1677,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"! the view into the buffer represented by the handle.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1678,"byte_end":1733,"line_start":49,"line_end":49,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1734,"byte_end":1737,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! See the [struct docs] for more details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1738,"byte_end":1781,"line_start":51,"line_end":51,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1782,"byte_end":1785,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! [struct docs]: struct.Bytes.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1786,"byte_end":1822,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1823,"byte_end":1826,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! # `Buf`, `BufMut`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1827,"byte_end":1848,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1849,"byte_end":1852,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! These two traits provide read and write access to buffers. The underlying","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1853,"byte_end":1930,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"! storage may or may not be in contiguous memory. For example, `Bytes` is a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":1931,"byte_end":2008,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"! buffer that guarantees contiguous memory, but a [rope] stores the bytes in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2009,"byte_end":2087,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"! disjoint chunks. `Buf` and `BufMut` maintain cursors tracking the current","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2088,"byte_end":2165,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"! position in the underlying byte storage. When bytes are read or written, the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2166,"byte_end":2246,"line_start":61,"line_end":61,"column_start":1,"column_end":81}},{"value":"! cursor is advanced.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2247,"byte_end":2270,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2271,"byte_end":2274,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! [rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2275,"byte_end":2338,"line_start":64,"line_end":64,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2339,"byte_end":2342,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! ## Relation with `Read` and `Write`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2343,"byte_end":2382,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2383,"byte_end":2386,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! At first glance, it may seem that `Buf` and `BufMut` overlap in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2387,"byte_end":2454,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"! functionality with `std::io::Read` and `std::io::Write`. However, they","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2455,"byte_end":2529,"line_start":69,"line_end":69,"column_start":1,"column_end":75}},{"value":"! serve different purposes. A buffer is the value that is provided as an","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2530,"byte_end":2604,"line_start":70,"line_end":70,"column_start":1,"column_end":75}},{"value":"! argument to `Read::read` and `Write::write`. `Read` and `Write` may then","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2605,"byte_end":2681,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"! perform a syscall, which has the potential of failing. Operations on `Buf`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2682,"byte_end":2760,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"! and `BufMut` are infallible.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2761,"byte_end":2793,"line_start":73,"line_end":73,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buf","qualname":"::buf","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":72},{"krate":0,"index":150},{"krate":0,"index":286},{"krate":0,"index":301},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":314}],"decl_id":null,"docs":" Utilities for working with buffers.","sig":null,"attributes":[{"value":"! Utilities for working with buffers.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":3453,"byte_end":3492,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":3493,"byte_end":3496,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! A buffer is any structure that contains a sequence of bytes. The bytes may","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":3497,"byte_end":3575,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"! or may not be stored in contiguous memory. This module contains traits used","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":3576,"byte_end":3655,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"! to abstract over buffers as well as utilities for working with buffer types.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":3656,"byte_end":3736,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":3737,"byte_end":3740,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! # `Buf`, `BufMut`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":3741,"byte_end":3762,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":3763,"byte_end":3766,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! These are the two foundational traits for abstractly working with buffers.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":3767,"byte_end":3845,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"! They can be thought as iterators for byte structures. They offer additional","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":3846,"byte_end":3925,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"! performance over `Iterator` by providing an API optimized for byte slices.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":3926,"byte_end":4004,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4005,"byte_end":4008,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! See [`Buf`] and [`BufMut`] for more details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4009,"byte_end":4057,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4058,"byte_end":4061,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! [rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4062,"byte_end":4125,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"! [`Buf`]: trait.Buf.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4126,"byte_end":4153,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"! [`BufMut`]: trait.BufMut.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4154,"byte_end":4187,"line_start":17,"line_end":17,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":16},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6882,"byte_end":6885,"line_start":71,"line_end":71,"column_start":11,"column_end":14},"name":"Buf","qualname":"::buf::buf_impl::Buf","value":"Buf","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50}],"decl_id":null,"docs":" Read bytes from a buffer.","sig":null,"attributes":[{"value":"/ Read bytes from a buffer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6165,"byte_end":6194,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6195,"byte_end":6198,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ A buffer stores bytes in memory such that read operations are infallible.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6199,"byte_end":6276,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ The underlying storage may or may not be in contiguous memory. A `Buf` value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6277,"byte_end":6357,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ is a cursor into the buffer. Reading from `Buf` advances the cursor","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6358,"byte_end":6429,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/ position. It can be thought of as an efficient `Iterator` for collections of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6430,"byte_end":6510,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ bytes.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6511,"byte_end":6521,"line_start":53,"line_end":53,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6522,"byte_end":6525,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The simplest `Buf` is a `&[u8]`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6526,"byte_end":6562,"line_start":55,"line_end":55,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6563,"byte_end":6566,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6567,"byte_end":6574,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6575,"byte_end":6594,"line_start":58,"line_end":58,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6595,"byte_end":6598,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6599,"byte_end":6637,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6638,"byte_end":6641,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(b'h', buf.get_u8());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6642,"byte_end":6677,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(b'e', buf.get_u8());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6678,"byte_end":6713,"line_start":63,"line_end":63,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(b'l', buf.get_u8());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6714,"byte_end":6749,"line_start":64,"line_end":64,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6750,"byte_end":6753,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let mut rest = [0; 8];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6754,"byte_end":6780,"line_start":66,"line_end":66,"column_start":1,"column_end":27}},{"value":"/ buf.copy_to_slice(&mut rest);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6781,"byte_end":6814,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6815,"byte_end":6818,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&rest[..], &b\"lo world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6819,"byte_end":6863,"line_start":69,"line_end":69,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6864,"byte_end":6871,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7632,"byte_end":7641,"line_start":97,"line_end":97,"column_start":8,"column_end":17},"name":"remaining","qualname":"::buf::buf_impl::Buf::remaining","value":"fn (&self) -> usize","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Returns the number of bytes between the current position and the end of\n the buffer.","sig":null,"attributes":[{"value":"/ Returns the number of bytes between the current position and the end of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6892,"byte_end":6967,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/ the buffer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6972,"byte_end":6987,"line_start":73,"line_end":73,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":6992,"byte_end":6995,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This value is greater than or equal to the length of the slice returned","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7000,"byte_end":7075,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ by `bytes`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7080,"byte_end":7095,"line_start":76,"line_end":76,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7100,"byte_end":7103,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7108,"byte_end":7122,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7127,"byte_end":7130,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7135,"byte_end":7142,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7147,"byte_end":7166,"line_start":81,"line_end":81,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7171,"byte_end":7174,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7179,"byte_end":7217,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7222,"byte_end":7225,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.remaining(), 11);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7230,"byte_end":7266,"line_start":85,"line_end":85,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7271,"byte_end":7274,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ buf.get_u8();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7279,"byte_end":7296,"line_start":87,"line_end":87,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7301,"byte_end":7304,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.remaining(), 10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7309,"byte_end":7345,"line_start":89,"line_end":89,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7350,"byte_end":7357,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7362,"byte_end":7365,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7370,"byte_end":7393,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7398,"byte_end":7401,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Implementations of `remaining` should ensure that the return value does","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7406,"byte_end":7481,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ not change unless a call is made to `advance` or any other function that","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7486,"byte_end":7562,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/ is documented to change the `Buf`'s current position.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7567,"byte_end":7624,"line_start":96,"line_end":96,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8493,"byte_end":8498,"line_start":125,"line_end":125,"column_start":8,"column_end":13},"name":"bytes","qualname":"::buf::buf_impl::Buf::bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Returns a slice starting at the current position and of length between 0\n and `Buf::remaining()`. Note that this *can* return shorter slice (this allows\n non-continuous internal representation).","sig":null,"attributes":[{"value":"/ Returns a slice starting at the current position and of length between 0","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7664,"byte_end":7740,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ and `Buf::remaining()`. Note that this *can* return shorter slice (this allows","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7745,"byte_end":7827,"line_start":100,"line_end":100,"column_start":5,"column_end":87}},{"value":"/ non-continuous internal representation).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7832,"byte_end":7876,"line_start":101,"line_end":101,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7881,"byte_end":7884,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7889,"byte_end":7960,"line_start":103,"line_end":103,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7965,"byte_end":7979,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7984,"byte_end":7987,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":7992,"byte_end":8006,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8011,"byte_end":8014,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8019,"byte_end":8026,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8031,"byte_end":8050,"line_start":109,"line_end":109,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8055,"byte_end":8058,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8063,"byte_end":8101,"line_start":111,"line_end":111,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8106,"byte_end":8109,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.bytes(), &b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8114,"byte_end":8163,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8168,"byte_end":8171,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ buf.advance(6);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8176,"byte_end":8195,"line_start":115,"line_end":115,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8200,"byte_end":8203,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.bytes(), &b\"world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8208,"byte_end":8251,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8256,"byte_end":8263,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8268,"byte_end":8271,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8276,"byte_end":8299,"line_start":120,"line_end":120,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8304,"byte_end":8307,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. Once the end of the buffer is reached,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8312,"byte_end":8388,"line_start":122,"line_end":122,"column_start":5,"column_end":81}},{"value":"/ i.e., `Buf::remaining` returns 0, calls to `bytes` should return an","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8393,"byte_end":8464,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ empty slice.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8469,"byte_end":8485,"line_start":124,"line_end":124,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9869,"byte_end":9883,"line_start":155,"line_end":155,"column_start":8,"column_end":22},"name":"bytes_vectored","qualname":"::buf::buf_impl::Buf::bytes_vectored","value":"fn <'a> (&'a self, dst: &mut [IoSlice<'a>]) -> usize","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Fills `dst` with potentially multiple slices starting at `self`'s\n current position.","sig":null,"attributes":[{"value":"/ Fills `dst` with potentially multiple slices starting at `self`'s","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8521,"byte_end":8590,"line_start":127,"line_end":127,"column_start":5,"column_end":74}},{"value":"/ current position.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8595,"byte_end":8616,"line_start":128,"line_end":128,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8621,"byte_end":8624,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the `Buf` is backed by disjoint slices of bytes, `bytes_vectored` enables","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8629,"byte_end":8709,"line_start":130,"line_end":130,"column_start":5,"column_end":85}},{"value":"/ fetching more than one slice at once. `dst` is a slice of `IoSlice`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8714,"byte_end":8785,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ references, enabling the slice to be directly used with [`writev`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8790,"byte_end":8860,"line_start":132,"line_end":132,"column_start":5,"column_end":75}},{"value":"/ without any further conversion. The sum of the lengths of all the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8865,"byte_end":8934,"line_start":133,"line_end":133,"column_start":5,"column_end":74}},{"value":"/ buffers in `dst` will be less than or equal to `Buf::remaining()`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":8939,"byte_end":9009,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9014,"byte_end":9017,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ The entries in `dst` will be overwritten, but the data **contained** by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9022,"byte_end":9097,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ the slices **will not** be modified. If `bytes_vectored` does not fill every","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9102,"byte_end":9182,"line_start":137,"line_end":137,"column_start":5,"column_end":85}},{"value":"/ entry in `dst`, then `dst` is guaranteed to contain all remaining slices","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9187,"byte_end":9263,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/ in `self.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9268,"byte_end":9281,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9286,"byte_end":9289,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9294,"byte_end":9365,"line_start":141,"line_end":141,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9370,"byte_end":9384,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9389,"byte_end":9392,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9397,"byte_end":9420,"line_start":144,"line_end":144,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9425,"byte_end":9428,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. Once the end of the buffer is reached,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9433,"byte_end":9509,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ i.e., `Buf::remaining` returns 0, calls to `bytes_vectored` must return 0","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9514,"byte_end":9591,"line_start":147,"line_end":147,"column_start":5,"column_end":82}},{"value":"/ without mutating `dst`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9596,"byte_end":9623,"line_start":148,"line_end":148,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9628,"byte_end":9631,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Implementations should also take care to properly handle being called","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9636,"byte_end":9709,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ with `dst` being a zero length slice.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9714,"byte_end":9755,"line_start":151,"line_end":151,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9760,"byte_end":9763,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`writev`]: http://man7.org/linux/man-pages/man2/readv.2.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9768,"byte_end":9833,"line_start":153,"line_end":153,"column_start":5,"column_end":70}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":9838,"byte_end":9861,"line_start":154,"line_end":154,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11025,"byte_end":11032,"line_start":198,"line_end":198,"column_start":8,"column_end":15},"name":"advance","qualname":"::buf::buf_impl::Buf::advance","value":"fn (&mut self, cnt: usize) -> ()","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Advance the internal cursor of the Buf","sig":null,"attributes":[{"value":"/ Advance the internal cursor of the Buf","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10144,"byte_end":10186,"line_start":168,"line_end":168,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10191,"byte_end":10194,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The next call to `bytes` will return a slice starting `cnt` bytes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10199,"byte_end":10268,"line_start":170,"line_end":170,"column_start":5,"column_end":74}},{"value":"/ further into the underlying buffer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10273,"byte_end":10312,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10317,"byte_end":10320,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10325,"byte_end":10339,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10344,"byte_end":10347,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10352,"byte_end":10359,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10364,"byte_end":10383,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10388,"byte_end":10391,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10396,"byte_end":10434,"line_start":178,"line_end":178,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10439,"byte_end":10442,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.bytes(), &b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10447,"byte_end":10496,"line_start":180,"line_end":180,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10501,"byte_end":10504,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ buf.advance(6);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10509,"byte_end":10528,"line_start":182,"line_end":182,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10533,"byte_end":10536,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.bytes(), &b\"world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10541,"byte_end":10584,"line_start":184,"line_end":184,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10589,"byte_end":10596,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10601,"byte_end":10604,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10609,"byte_end":10621,"line_start":187,"line_end":187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10626,"byte_end":10629,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ This function **may** panic if `cnt > self.remaining()`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10634,"byte_end":10694,"line_start":189,"line_end":189,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10699,"byte_end":10702,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10707,"byte_end":10730,"line_start":191,"line_end":191,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10735,"byte_end":10738,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ It is recommended for implementations of `advance` to panic if `cnt >","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10743,"byte_end":10816,"line_start":193,"line_end":193,"column_start":5,"column_end":78}},{"value":"/ self.remaining()`. If the implementation does not panic, the call must","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10821,"byte_end":10895,"line_start":194,"line_end":194,"column_start":5,"column_end":79}},{"value":"/ behave as if `cnt == self.remaining()`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10900,"byte_end":10943,"line_start":195,"line_end":195,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10948,"byte_end":10951,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ A call with `cnt == 0` should never panic and be a no-op.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":10956,"byte_end":11017,"line_start":197,"line_end":197,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11435,"byte_end":11448,"line_start":217,"line_end":217,"column_start":8,"column_end":21},"name":"has_remaining","qualname":"::buf::buf_impl::Buf::has_remaining","value":"fn (&self) -> bool","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Returns true if there are any more bytes to consume","sig":null,"attributes":[{"value":"/ Returns true if there are any more bytes to consume","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11062,"byte_end":11117,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11122,"byte_end":11125,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.remaining() != 0`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11130,"byte_end":11180,"line_start":202,"line_end":202,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11185,"byte_end":11188,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11193,"byte_end":11207,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11212,"byte_end":11215,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11220,"byte_end":11227,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11232,"byte_end":11251,"line_start":207,"line_end":207,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11256,"byte_end":11259,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"a\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11264,"byte_end":11292,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11297,"byte_end":11300,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.has_remaining());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11305,"byte_end":11338,"line_start":211,"line_end":211,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11343,"byte_end":11346,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ buf.get_u8();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11351,"byte_end":11368,"line_start":213,"line_end":213,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11373,"byte_end":11376,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ assert!(!buf.has_remaining());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11381,"byte_end":11415,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11420,"byte_end":11427,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12073,"byte_end":12086,"line_start":242,"line_end":242,"column_start":8,"column_end":21},"name":"copy_to_slice","qualname":"::buf::buf_impl::Buf::copy_to_slice","value":"fn (&mut self, dst: &mut [u8]) -> ()","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Copies bytes from `self` into `dst`.","sig":null,"attributes":[{"value":"/ Copies bytes from `self` into `dst`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11506,"byte_end":11546,"line_start":221,"line_end":221,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11551,"byte_end":11554,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The cursor is advanced by the number of bytes copied. `self` must have","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11559,"byte_end":11633,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ enough remaining bytes to fill `dst`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11638,"byte_end":11679,"line_start":224,"line_end":224,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11684,"byte_end":11687,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11692,"byte_end":11706,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11711,"byte_end":11714,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11719,"byte_end":11726,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11731,"byte_end":11750,"line_start":229,"line_end":229,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11755,"byte_end":11758,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11763,"byte_end":11801,"line_start":231,"line_end":231,"column_start":5,"column_end":43}},{"value":"/ let mut dst = [0; 5];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11806,"byte_end":11831,"line_start":232,"line_end":232,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11836,"byte_end":11839,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ buf.copy_to_slice(&mut dst);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11844,"byte_end":11876,"line_start":234,"line_end":234,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(&b\"hello\"[..], &dst);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11881,"byte_end":11917,"line_start":235,"line_end":235,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(6, buf.remaining());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11922,"byte_end":11957,"line_start":236,"line_end":236,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11962,"byte_end":11969,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11974,"byte_end":11977,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11982,"byte_end":11994,"line_start":239,"line_end":239,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":11999,"byte_end":12002,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This function panics if `self.remaining() < dst.len()`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12007,"byte_end":12065,"line_start":241,"line_end":241,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12958,"byte_end":12964,"line_start":280,"line_end":280,"column_start":8,"column_end":14},"name":"get_u8","qualname":"::buf::buf_impl::Buf::get_u8","value":"fn (&mut self) -> u8","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned 8 bit integer from `self`.","sig":null,"attributes":[{"value":"/ Gets an unsigned 8 bit integer from `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12570,"byte_end":12617,"line_start":264,"line_end":264,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12622,"byte_end":12625,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12630,"byte_end":12672,"line_start":266,"line_end":266,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12677,"byte_end":12680,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12685,"byte_end":12699,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12704,"byte_end":12707,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12712,"byte_end":12719,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12724,"byte_end":12743,"line_start":271,"line_end":271,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12748,"byte_end":12751,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12756,"byte_end":12793,"line_start":273,"line_end":273,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(8, buf.get_u8());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12798,"byte_end":12830,"line_start":274,"line_end":274,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12835,"byte_end":12842,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12847,"byte_end":12850,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12855,"byte_end":12867,"line_start":277,"line_end":277,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12872,"byte_end":12875,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is no more remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":12880,"byte_end":12950,"line_start":279,"line_end":279,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13492,"byte_end":13498,"line_start":303,"line_end":303,"column_start":8,"column_end":14},"name":"get_i8","qualname":"::buf::buf_impl::Buf::get_i8","value":"fn (&mut self) -> i8","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed 8 bit integer from `self`.","sig":null,"attributes":[{"value":"/ Gets a signed 8 bit integer from `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13107,"byte_end":13151,"line_start":287,"line_end":287,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13156,"byte_end":13159,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13164,"byte_end":13206,"line_start":289,"line_end":289,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13211,"byte_end":13214,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13219,"byte_end":13233,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13238,"byte_end":13241,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13246,"byte_end":13253,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13258,"byte_end":13277,"line_start":294,"line_end":294,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13282,"byte_end":13285,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13290,"byte_end":13327,"line_start":296,"line_end":296,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(8, buf.get_i8());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13332,"byte_end":13364,"line_start":297,"line_end":297,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13369,"byte_end":13376,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13381,"byte_end":13384,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13389,"byte_end":13401,"line_start":300,"line_end":300,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13406,"byte_end":13409,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is no more remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13414,"byte_end":13484,"line_start":302,"line_end":302,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14074,"byte_end":14081,"line_start":326,"line_end":326,"column_start":8,"column_end":15},"name":"get_u16","qualname":"::buf::buf_impl::Buf::get_u16","value":"fn (&mut self) -> u16","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 16 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13647,"byte_end":13720,"line_start":310,"line_end":310,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13725,"byte_end":13728,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13733,"byte_end":13775,"line_start":312,"line_end":312,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13780,"byte_end":13783,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13788,"byte_end":13802,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13807,"byte_end":13810,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13815,"byte_end":13822,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13827,"byte_end":13846,"line_start":317,"line_end":317,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13851,"byte_end":13854,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13859,"byte_end":13900,"line_start":319,"line_end":319,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_u16());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13905,"byte_end":13943,"line_start":320,"line_end":320,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13948,"byte_end":13955,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13960,"byte_end":13963,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13968,"byte_end":13980,"line_start":323,"line_end":323,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13985,"byte_end":13988,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":13993,"byte_end":14066,"line_start":325,"line_end":325,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14595,"byte_end":14605,"line_start":346,"line_end":346,"column_start":8,"column_end":18},"name":"get_u16_le","qualname":"::buf::buf_impl::Buf::get_u16_le","value":"fn (&mut self) -> u16","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 16 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14162,"byte_end":14238,"line_start":330,"line_end":330,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14243,"byte_end":14246,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14251,"byte_end":14293,"line_start":332,"line_end":332,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14298,"byte_end":14301,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14306,"byte_end":14320,"line_start":334,"line_end":334,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14325,"byte_end":14328,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14333,"byte_end":14340,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14345,"byte_end":14364,"line_start":337,"line_end":337,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14369,"byte_end":14372,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x09\\x08 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14377,"byte_end":14418,"line_start":339,"line_end":339,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_u16_le());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14423,"byte_end":14464,"line_start":340,"line_end":340,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14469,"byte_end":14476,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14481,"byte_end":14484,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14489,"byte_end":14501,"line_start":343,"line_end":343,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14506,"byte_end":14509,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14514,"byte_end":14587,"line_start":345,"line_end":345,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15110,"byte_end":15117,"line_start":366,"line_end":366,"column_start":8,"column_end":15},"name":"get_i16","qualname":"::buf::buf_impl::Buf::get_i16","value":"fn (&mut self) -> i16","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 16 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14686,"byte_end":14756,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14761,"byte_end":14764,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14769,"byte_end":14811,"line_start":352,"line_end":352,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14816,"byte_end":14819,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14824,"byte_end":14838,"line_start":354,"line_end":354,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14843,"byte_end":14846,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14851,"byte_end":14858,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14863,"byte_end":14882,"line_start":357,"line_end":357,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14887,"byte_end":14890,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14895,"byte_end":14936,"line_start":359,"line_end":359,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_i16());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14941,"byte_end":14979,"line_start":360,"line_end":360,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14984,"byte_end":14991,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":14996,"byte_end":14999,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15004,"byte_end":15016,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15021,"byte_end":15024,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15029,"byte_end":15102,"line_start":365,"line_end":365,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15628,"byte_end":15638,"line_start":386,"line_end":386,"column_start":8,"column_end":18},"name":"get_i16_le","qualname":"::buf::buf_impl::Buf::get_i16_le","value":"fn (&mut self) -> i16","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 16 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15198,"byte_end":15271,"line_start":370,"line_end":370,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15276,"byte_end":15279,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15284,"byte_end":15326,"line_start":372,"line_end":372,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15331,"byte_end":15334,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15339,"byte_end":15353,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15358,"byte_end":15361,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15366,"byte_end":15373,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15378,"byte_end":15397,"line_start":377,"line_end":377,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15402,"byte_end":15405,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x09\\x08 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15410,"byte_end":15451,"line_start":379,"line_end":379,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_i16_le());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15456,"byte_end":15497,"line_start":380,"line_end":380,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15502,"byte_end":15509,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15514,"byte_end":15517,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15522,"byte_end":15534,"line_start":383,"line_end":383,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15539,"byte_end":15542,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15547,"byte_end":15620,"line_start":385,"line_end":385,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16162,"byte_end":16169,"line_start":406,"line_end":406,"column_start":8,"column_end":15},"name":"get_u32","qualname":"::buf::buf_impl::Buf::get_u32","value":"fn (&mut self) -> u32","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 32 bit integer from `self` in the big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15719,"byte_end":15796,"line_start":390,"line_end":390,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15801,"byte_end":15804,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15809,"byte_end":15851,"line_start":392,"line_end":392,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15856,"byte_end":15859,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15864,"byte_end":15878,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15883,"byte_end":15886,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15891,"byte_end":15898,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15903,"byte_end":15922,"line_start":397,"line_end":397,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15927,"byte_end":15930,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15935,"byte_end":15984,"line_start":399,"line_end":399,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_u32());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":15989,"byte_end":16031,"line_start":400,"line_end":400,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16036,"byte_end":16043,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16048,"byte_end":16051,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16056,"byte_end":16068,"line_start":403,"line_end":403,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16073,"byte_end":16076,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16081,"byte_end":16154,"line_start":405,"line_end":405,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16699,"byte_end":16709,"line_start":426,"line_end":426,"column_start":8,"column_end":18},"name":"get_u32_le","qualname":"::buf::buf_impl::Buf::get_u32_le","value":"fn (&mut self) -> u32","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in the little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 32 bit integer from `self` in the little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16250,"byte_end":16330,"line_start":410,"line_end":410,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16335,"byte_end":16338,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16343,"byte_end":16385,"line_start":412,"line_end":412,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16390,"byte_end":16393,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16398,"byte_end":16412,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16417,"byte_end":16420,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16425,"byte_end":16432,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16437,"byte_end":16456,"line_start":417,"line_end":417,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16461,"byte_end":16464,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16469,"byte_end":16518,"line_start":419,"line_end":419,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_u32_le());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16523,"byte_end":16568,"line_start":420,"line_end":420,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16573,"byte_end":16580,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16585,"byte_end":16588,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16593,"byte_end":16605,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16610,"byte_end":16613,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16618,"byte_end":16691,"line_start":425,"line_end":425,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17226,"byte_end":17233,"line_start":446,"line_end":446,"column_start":8,"column_end":15},"name":"get_i32","qualname":"::buf::buf_impl::Buf::get_i32","value":"fn (&mut self) -> i32","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 32 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16790,"byte_end":16860,"line_start":430,"line_end":430,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16865,"byte_end":16868,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16873,"byte_end":16915,"line_start":432,"line_end":432,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16920,"byte_end":16923,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16928,"byte_end":16942,"line_start":434,"line_end":434,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16947,"byte_end":16950,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16955,"byte_end":16962,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16967,"byte_end":16986,"line_start":437,"line_end":437,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16991,"byte_end":16994,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":16999,"byte_end":17048,"line_start":439,"line_end":439,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_i32());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17053,"byte_end":17095,"line_start":440,"line_end":440,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17100,"byte_end":17107,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17112,"byte_end":17115,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17120,"byte_end":17132,"line_start":443,"line_end":443,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17137,"byte_end":17140,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17145,"byte_end":17218,"line_start":445,"line_end":445,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17756,"byte_end":17766,"line_start":466,"line_end":466,"column_start":8,"column_end":18},"name":"get_i32_le","qualname":"::buf::buf_impl::Buf::get_i32_le","value":"fn (&mut self) -> i32","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 32 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17314,"byte_end":17387,"line_start":450,"line_end":450,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17392,"byte_end":17395,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17400,"byte_end":17442,"line_start":452,"line_end":452,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17447,"byte_end":17450,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17455,"byte_end":17469,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17474,"byte_end":17477,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17482,"byte_end":17489,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17494,"byte_end":17513,"line_start":457,"line_end":457,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17518,"byte_end":17521,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17526,"byte_end":17575,"line_start":459,"line_end":459,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_i32_le());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17580,"byte_end":17625,"line_start":460,"line_end":460,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17630,"byte_end":17637,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17642,"byte_end":17645,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17650,"byte_end":17662,"line_start":463,"line_end":463,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17667,"byte_end":17670,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17675,"byte_end":17748,"line_start":465,"line_end":465,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18310,"byte_end":18317,"line_start":486,"line_end":486,"column_start":8,"column_end":15},"name":"get_u64","qualname":"::buf::buf_impl::Buf::get_u64","value":"fn (&mut self) -> u64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 64 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17847,"byte_end":17920,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17925,"byte_end":17928,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17933,"byte_end":17975,"line_start":472,"line_end":472,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17980,"byte_end":17983,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":17988,"byte_end":18002,"line_start":474,"line_end":474,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18007,"byte_end":18010,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18015,"byte_end":18022,"line_start":476,"line_end":476,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18027,"byte_end":18046,"line_start":477,"line_end":477,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18051,"byte_end":18054,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18059,"byte_end":18124,"line_start":479,"line_end":479,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_u64());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18129,"byte_end":18179,"line_start":480,"line_end":480,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18184,"byte_end":18191,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18196,"byte_end":18199,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18204,"byte_end":18216,"line_start":483,"line_end":483,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18221,"byte_end":18224,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18229,"byte_end":18302,"line_start":485,"line_end":485,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18867,"byte_end":18877,"line_start":506,"line_end":506,"column_start":8,"column_end":18},"name":"get_u64_le","qualname":"::buf::buf_impl::Buf::get_u64_le","value":"fn (&mut self) -> u64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 64 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18398,"byte_end":18474,"line_start":490,"line_end":490,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18479,"byte_end":18482,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18487,"byte_end":18529,"line_start":492,"line_end":492,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18534,"byte_end":18537,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18542,"byte_end":18556,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18561,"byte_end":18564,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18569,"byte_end":18576,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18581,"byte_end":18600,"line_start":497,"line_end":497,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18605,"byte_end":18608,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18613,"byte_end":18678,"line_start":499,"line_end":499,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_u64_le());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18683,"byte_end":18736,"line_start":500,"line_end":500,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18741,"byte_end":18748,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18753,"byte_end":18756,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18761,"byte_end":18773,"line_start":503,"line_end":503,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18778,"byte_end":18781,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18786,"byte_end":18859,"line_start":505,"line_end":505,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19418,"byte_end":19425,"line_start":526,"line_end":526,"column_start":8,"column_end":15},"name":"get_i64","qualname":"::buf::buf_impl::Buf::get_i64","value":"fn (&mut self) -> i64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 64 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":18958,"byte_end":19028,"line_start":510,"line_end":510,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19033,"byte_end":19036,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19041,"byte_end":19083,"line_start":512,"line_end":512,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19088,"byte_end":19091,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19096,"byte_end":19110,"line_start":514,"line_end":514,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19115,"byte_end":19118,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19123,"byte_end":19130,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19135,"byte_end":19154,"line_start":517,"line_end":517,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19159,"byte_end":19162,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19167,"byte_end":19232,"line_start":519,"line_end":519,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_i64());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19237,"byte_end":19287,"line_start":520,"line_end":520,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19292,"byte_end":19299,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19304,"byte_end":19307,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19312,"byte_end":19324,"line_start":523,"line_end":523,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19329,"byte_end":19332,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19337,"byte_end":19410,"line_start":525,"line_end":525,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19972,"byte_end":19982,"line_start":546,"line_end":546,"column_start":8,"column_end":18},"name":"get_i64_le","qualname":"::buf::buf_impl::Buf::get_i64_le","value":"fn (&mut self) -> i64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 64 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19506,"byte_end":19579,"line_start":530,"line_end":530,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19584,"byte_end":19587,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19592,"byte_end":19634,"line_start":532,"line_end":532,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19639,"byte_end":19642,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19647,"byte_end":19661,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19666,"byte_end":19669,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19674,"byte_end":19681,"line_start":536,"line_end":536,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19686,"byte_end":19705,"line_start":537,"line_end":537,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19710,"byte_end":19713,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19718,"byte_end":19783,"line_start":539,"line_end":539,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_i64_le());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19788,"byte_end":19841,"line_start":540,"line_end":540,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19846,"byte_end":19853,"line_start":541,"line_end":541,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19858,"byte_end":19861,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19866,"byte_end":19878,"line_start":543,"line_end":543,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19883,"byte_end":19886,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":19891,"byte_end":19964,"line_start":545,"line_end":545,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20577,"byte_end":20585,"line_start":566,"line_end":566,"column_start":8,"column_end":16},"name":"get_u128","qualname":"::buf::buf_impl::Buf::get_u128","value":"fn (&mut self) -> u128","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned 128 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 128 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20063,"byte_end":20137,"line_start":550,"line_end":550,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20142,"byte_end":20145,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20150,"byte_end":20193,"line_start":552,"line_end":552,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20198,"byte_end":20201,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20206,"byte_end":20220,"line_start":554,"line_end":554,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20225,"byte_end":20228,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20233,"byte_end":20240,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20245,"byte_end":20264,"line_start":557,"line_end":557,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20269,"byte_end":20272,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20277,"byte_end":20374,"line_start":559,"line_end":559,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_u128());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20379,"byte_end":20446,"line_start":560,"line_end":560,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20451,"byte_end":20458,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20463,"byte_end":20466,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20471,"byte_end":20483,"line_start":563,"line_end":563,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20488,"byte_end":20491,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20496,"byte_end":20569,"line_start":565,"line_end":565,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21188,"byte_end":21199,"line_start":586,"line_end":586,"column_start":8,"column_end":19},"name":"get_u128_le","qualname":"::buf::buf_impl::Buf::get_u128_le","value":"fn (&mut self) -> u128","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned 128 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 128 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20668,"byte_end":20745,"line_start":570,"line_end":570,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20750,"byte_end":20753,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20758,"byte_end":20801,"line_start":572,"line_end":572,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20806,"byte_end":20809,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20814,"byte_end":20828,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20833,"byte_end":20836,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20841,"byte_end":20848,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20853,"byte_end":20872,"line_start":577,"line_end":577,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20877,"byte_end":20880,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20885,"byte_end":20982,"line_start":579,"line_end":579,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_u128_le());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":20987,"byte_end":21057,"line_start":580,"line_end":580,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21062,"byte_end":21069,"line_start":581,"line_end":581,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21074,"byte_end":21077,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21082,"byte_end":21094,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21099,"byte_end":21102,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21107,"byte_end":21180,"line_start":585,"line_end":585,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21793,"byte_end":21801,"line_start":606,"line_end":606,"column_start":8,"column_end":16},"name":"get_i128","qualname":"::buf::buf_impl::Buf::get_i128","value":"fn (&mut self) -> i128","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed 128 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 128 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21282,"byte_end":21353,"line_start":590,"line_end":590,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21358,"byte_end":21361,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21366,"byte_end":21409,"line_start":592,"line_end":592,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21414,"byte_end":21417,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21422,"byte_end":21436,"line_start":594,"line_end":594,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21441,"byte_end":21444,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21449,"byte_end":21456,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21461,"byte_end":21480,"line_start":597,"line_end":597,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21485,"byte_end":21488,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21493,"byte_end":21590,"line_start":599,"line_end":599,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_i128());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21595,"byte_end":21662,"line_start":600,"line_end":600,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21667,"byte_end":21674,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21679,"byte_end":21682,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21687,"byte_end":21699,"line_start":603,"line_end":603,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21704,"byte_end":21707,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21712,"byte_end":21785,"line_start":605,"line_end":605,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22401,"byte_end":22412,"line_start":626,"line_end":626,"column_start":8,"column_end":19},"name":"get_i128_le","qualname":"::buf::buf_impl::Buf::get_i128_le","value":"fn (&mut self) -> i128","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed 128 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 128 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21884,"byte_end":21958,"line_start":610,"line_end":610,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21963,"byte_end":21966,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":21971,"byte_end":22014,"line_start":612,"line_end":612,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22019,"byte_end":22022,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22027,"byte_end":22041,"line_start":614,"line_end":614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22046,"byte_end":22049,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22054,"byte_end":22061,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22066,"byte_end":22085,"line_start":617,"line_end":617,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22090,"byte_end":22093,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22098,"byte_end":22195,"line_start":619,"line_end":619,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_i128_le());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22200,"byte_end":22270,"line_start":620,"line_end":620,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22275,"byte_end":22282,"line_start":621,"line_end":621,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22287,"byte_end":22290,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22295,"byte_end":22307,"line_start":623,"line_end":623,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22312,"byte_end":22315,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22320,"byte_end":22393,"line_start":625,"line_end":625,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22937,"byte_end":22945,"line_start":646,"line_end":646,"column_start":8,"column_end":16},"name":"get_uint","qualname":"::buf::buf_impl::Buf::get_uint","value":"fn (&mut self, nbytes: usize) -> u64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned n-byte integer from `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22495,"byte_end":22568,"line_start":630,"line_end":630,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22573,"byte_end":22576,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22581,"byte_end":22630,"line_start":632,"line_end":632,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22635,"byte_end":22638,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22643,"byte_end":22657,"line_start":634,"line_end":634,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22662,"byte_end":22665,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22670,"byte_end":22677,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22682,"byte_end":22701,"line_start":637,"line_end":637,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22706,"byte_end":22709,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22714,"byte_end":22759,"line_start":639,"line_end":639,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_uint(3));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22764,"byte_end":22806,"line_start":640,"line_end":640,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22811,"byte_end":22818,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22823,"byte_end":22826,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22831,"byte_end":22843,"line_start":643,"line_end":643,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22848,"byte_end":22851,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":22856,"byte_end":22929,"line_start":645,"line_end":645,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23488,"byte_end":23499,"line_start":666,"line_end":666,"column_start":8,"column_end":19},"name":"get_uint_le","qualname":"::buf::buf_impl::Buf::get_uint_le","value":"fn (&mut self, nbytes: usize) -> u64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned n-byte integer from `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23040,"byte_end":23116,"line_start":650,"line_end":650,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23121,"byte_end":23124,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23129,"byte_end":23178,"line_start":652,"line_end":652,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23183,"byte_end":23186,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23191,"byte_end":23205,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23210,"byte_end":23213,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23218,"byte_end":23225,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23230,"byte_end":23249,"line_start":657,"line_end":657,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23254,"byte_end":23257,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23262,"byte_end":23307,"line_start":659,"line_end":659,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_uint_le(3));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23312,"byte_end":23357,"line_start":660,"line_end":660,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23362,"byte_end":23369,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23374,"byte_end":23377,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23382,"byte_end":23394,"line_start":663,"line_end":663,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23399,"byte_end":23402,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23407,"byte_end":23480,"line_start":665,"line_end":665,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24032,"byte_end":24039,"line_start":686,"line_end":686,"column_start":8,"column_end":15},"name":"get_int","qualname":"::buf::buf_impl::Buf::get_int","value":"fn (&mut self, nbytes: usize) -> i64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed n-byte integer from `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23594,"byte_end":23664,"line_start":670,"line_end":670,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23669,"byte_end":23672,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23677,"byte_end":23726,"line_start":672,"line_end":672,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23731,"byte_end":23734,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23739,"byte_end":23753,"line_start":674,"line_end":674,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23758,"byte_end":23761,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23766,"byte_end":23773,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23778,"byte_end":23797,"line_start":677,"line_end":677,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23802,"byte_end":23805,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23810,"byte_end":23855,"line_start":679,"line_end":679,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_int(3));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23860,"byte_end":23901,"line_start":680,"line_end":680,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23906,"byte_end":23913,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23918,"byte_end":23921,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23926,"byte_end":23938,"line_start":683,"line_end":683,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23943,"byte_end":23946,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":23951,"byte_end":24024,"line_start":685,"line_end":685,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24578,"byte_end":24588,"line_start":706,"line_end":706,"column_start":8,"column_end":18},"name":"get_int_le","qualname":"::buf::buf_impl::Buf::get_int_le","value":"fn (&mut self, nbytes: usize) -> i64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed n-byte integer from `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24134,"byte_end":24207,"line_start":690,"line_end":690,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24212,"byte_end":24215,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24220,"byte_end":24269,"line_start":692,"line_end":692,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24274,"byte_end":24277,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24282,"byte_end":24296,"line_start":694,"line_end":694,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24301,"byte_end":24304,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24309,"byte_end":24316,"line_start":696,"line_end":696,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24321,"byte_end":24340,"line_start":697,"line_end":697,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24345,"byte_end":24348,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24353,"byte_end":24398,"line_start":699,"line_end":699,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_int_le(3));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24403,"byte_end":24447,"line_start":700,"line_end":700,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24452,"byte_end":24459,"line_start":701,"line_end":701,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24464,"byte_end":24467,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24472,"byte_end":24484,"line_start":703,"line_end":703,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24489,"byte_end":24492,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24497,"byte_end":24570,"line_start":705,"line_end":705,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25159,"byte_end":25166,"line_start":727,"line_end":727,"column_start":8,"column_end":15},"name":"get_f32","qualname":"::buf::buf_impl::Buf::get_f32","value":"fn (&mut self) -> f32","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 single-precision (4 bytes) floating point number from","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24683,"byte_end":24756,"line_start":710,"line_end":710,"column_start":5,"column_end":78}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24761,"byte_end":24797,"line_start":711,"line_end":711,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24802,"byte_end":24805,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24810,"byte_end":24852,"line_start":713,"line_end":713,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24857,"byte_end":24860,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24865,"byte_end":24879,"line_start":715,"line_end":715,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24884,"byte_end":24887,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24892,"byte_end":24899,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24904,"byte_end":24923,"line_start":718,"line_end":718,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24928,"byte_end":24931,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x3F\\x99\\x99\\x9A hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24936,"byte_end":24985,"line_start":720,"line_end":720,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(1.2f32, buf.get_f32());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":24990,"byte_end":25028,"line_start":721,"line_end":721,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25033,"byte_end":25040,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25045,"byte_end":25048,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25053,"byte_end":25065,"line_start":724,"line_end":724,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25070,"byte_end":25073,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25078,"byte_end":25151,"line_start":726,"line_end":726,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25724,"byte_end":25734,"line_start":748,"line_end":748,"column_start":8,"column_end":18},"name":"get_f32_le","qualname":"::buf::buf_impl::Buf::get_f32_le","value":"fn (&mut self) -> f32","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 single-precision (4 bytes) floating point number from","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25242,"byte_end":25315,"line_start":731,"line_end":731,"column_start":5,"column_end":78}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25320,"byte_end":25359,"line_start":732,"line_end":732,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25364,"byte_end":25367,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25372,"byte_end":25414,"line_start":734,"line_end":734,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25419,"byte_end":25422,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25427,"byte_end":25441,"line_start":736,"line_end":736,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25446,"byte_end":25449,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25454,"byte_end":25461,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25466,"byte_end":25485,"line_start":739,"line_end":739,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25490,"byte_end":25493,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x9A\\x99\\x99\\x3F hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25498,"byte_end":25547,"line_start":741,"line_end":741,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(1.2f32, buf.get_f32_le());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25552,"byte_end":25593,"line_start":742,"line_end":742,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25598,"byte_end":25605,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25610,"byte_end":25613,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25618,"byte_end":25630,"line_start":745,"line_end":745,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25635,"byte_end":25638,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25643,"byte_end":25716,"line_start":747,"line_end":747,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26305,"byte_end":26312,"line_start":769,"line_end":769,"column_start":8,"column_end":15},"name":"get_f64","qualname":"::buf::buf_impl::Buf::get_f64","value":"fn (&mut self) -> f64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 double-precision (8 bytes) floating point number from","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25813,"byte_end":25886,"line_start":752,"line_end":752,"column_start":5,"column_end":78}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25891,"byte_end":25927,"line_start":753,"line_end":753,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25932,"byte_end":25935,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25940,"byte_end":25982,"line_start":755,"line_end":755,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25987,"byte_end":25990,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":25995,"byte_end":26009,"line_start":757,"line_end":757,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26014,"byte_end":26017,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26022,"byte_end":26029,"line_start":759,"line_end":759,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26034,"byte_end":26053,"line_start":760,"line_end":760,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26058,"byte_end":26061,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33 hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26066,"byte_end":26131,"line_start":762,"line_end":762,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.2f64, buf.get_f64());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26136,"byte_end":26174,"line_start":763,"line_end":763,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26179,"byte_end":26186,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26191,"byte_end":26194,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26199,"byte_end":26211,"line_start":766,"line_end":766,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26216,"byte_end":26219,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26224,"byte_end":26297,"line_start":768,"line_end":768,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26886,"byte_end":26896,"line_start":790,"line_end":790,"column_start":8,"column_end":18},"name":"get_f64_le","qualname":"::buf::buf_impl::Buf::get_f64_le","value":"fn (&mut self) -> f64","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 double-precision (8 bytes) floating point number from","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26388,"byte_end":26461,"line_start":773,"line_end":773,"column_start":5,"column_end":78}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26466,"byte_end":26505,"line_start":774,"line_end":774,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26510,"byte_end":26513,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26518,"byte_end":26560,"line_start":776,"line_end":776,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26565,"byte_end":26568,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26573,"byte_end":26587,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26592,"byte_end":26595,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26600,"byte_end":26607,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26612,"byte_end":26631,"line_start":781,"line_end":781,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26636,"byte_end":26639,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F hello\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26644,"byte_end":26709,"line_start":783,"line_end":783,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.2f64, buf.get_f64_le());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26714,"byte_end":26755,"line_start":784,"line_end":784,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26760,"byte_end":26767,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26772,"byte_end":26775,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26780,"byte_end":26792,"line_start":787,"line_end":787,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26797,"byte_end":26800,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26805,"byte_end":26878,"line_start":789,"line_end":789,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":27257,"byte_end":27265,"line_start":804,"line_end":804,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::buf::buf_impl::Buf::to_bytes","value":"fn (&mut self) -> crate::Bytes","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Consumes remaining bytes inside self and returns new instance of `Bytes`","sig":null,"attributes":[{"value":"/ Consumes remaining bytes inside self and returns new instance of `Bytes`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":26975,"byte_end":27051,"line_start":794,"line_end":794,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":27056,"byte_end":27059,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":27064,"byte_end":27078,"line_start":796,"line_end":796,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":27083,"byte_end":27086,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":27091,"byte_end":27098,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":27103,"byte_end":27122,"line_start":799,"line_end":799,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":27127,"byte_end":27130,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ let bytes = (&b\"hello world\"[..]).to_bytes();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":27135,"byte_end":27184,"line_start":801,"line_end":801,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(&bytes[..], &b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":27189,"byte_end":27237,"line_start":802,"line_end":802,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":27242,"byte_end":27249,"line_start":803,"line_end":803,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":84},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32004,"byte_end":32010,"line_start":28,"line_end":28,"column_start":11,"column_end":17},"name":"BufMut","qualname":"::buf::buf_mut::BufMut","value":"BufMut","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"decl_id":null,"docs":" A trait for values that provide sequential write access to bytes.","sig":null,"attributes":[{"value":"/ A trait for values that provide sequential write access to bytes.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31440,"byte_end":31509,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31510,"byte_end":31513,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Write bytes to a buffer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31514,"byte_end":31541,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31542,"byte_end":31545,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A buffer stores bytes in memory such that write operations are infallible.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31546,"byte_end":31624,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ The underlying storage may or may not be in contiguous memory. A `BufMut`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31625,"byte_end":31702,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ value is a cursor into the buffer. Writing to `BufMut` advances the cursor","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31703,"byte_end":31781,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ position.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31782,"byte_end":31795,"line_start":15,"line_end":15,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31796,"byte_end":31799,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The simplest `BufMut` is a `Vec<u8>`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31800,"byte_end":31841,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31842,"byte_end":31845,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31846,"byte_end":31853,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31854,"byte_end":31876,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31877,"byte_end":31880,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31881,"byte_end":31906,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31907,"byte_end":31910,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ buf.put(&b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31911,"byte_end":31944,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31945,"byte_end":31948,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buf, b\"hello world\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31949,"byte_end":31985,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":31986,"byte_end":31993,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32868,"byte_end":32881,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"remaining_mut","qualname":"::buf::buf_mut::BufMut::remaining_mut","value":"fn (&self) -> usize","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be written from the current\n position until the end of the buffer is reached.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that can be written from the current","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32017,"byte_end":32085,"line_start":29,"line_end":29,"column_start":5,"column_end":73}},{"value":"/ position until the end of the buffer is reached.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32090,"byte_end":32142,"line_start":30,"line_end":30,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32147,"byte_end":32150,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This value is greater than or equal to the length of the slice returned","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32155,"byte_end":32230,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ by `bytes_mut`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32235,"byte_end":32254,"line_start":33,"line_end":33,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32259,"byte_end":32262,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32267,"byte_end":32281,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32286,"byte_end":32289,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32294,"byte_end":32301,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32306,"byte_end":32328,"line_start":38,"line_end":38,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32333,"byte_end":32336,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 10];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32341,"byte_end":32367,"line_start":40,"line_end":40,"column_start":5,"column_end":31}},{"value":"/ let mut buf = &mut dst[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32372,"byte_end":32403,"line_start":41,"line_end":41,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32408,"byte_end":32411,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let original_remaining = buf.remaining_mut();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32416,"byte_end":32465,"line_start":43,"line_end":43,"column_start":5,"column_end":54}},{"value":"/ buf.put(&b\"hello\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32470,"byte_end":32497,"line_start":44,"line_end":44,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32502,"byte_end":32505,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(original_remaining - 5, buf.remaining_mut());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32510,"byte_end":32570,"line_start":46,"line_end":46,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32575,"byte_end":32582,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32587,"byte_end":32590,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32595,"byte_end":32618,"line_start":49,"line_end":49,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32623,"byte_end":32626,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Implementations of `remaining_mut` should ensure that the return value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32631,"byte_end":32705,"line_start":51,"line_end":51,"column_start":5,"column_end":79}},{"value":"/ does not change unless a call is made to `advance_mut` or any other","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32710,"byte_end":32781,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ function that is documented to change the `BufMut`'s current position.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32786,"byte_end":32860,"line_start":53,"line_end":53,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34331,"byte_end":34342,"line_start":100,"line_end":100,"column_start":15,"column_end":26},"name":"advance_mut","qualname":"::buf::buf_mut::BufMut::advance_mut","value":"fn (&mut self, cnt: usize) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Advance the internal cursor of the BufMut","sig":null,"attributes":[{"value":"/ Advance the internal cursor of the BufMut","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32904,"byte_end":32949,"line_start":56,"line_end":56,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32954,"byte_end":32957,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The next call to `bytes_mut` will return a slice starting `cnt` bytes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":32962,"byte_end":33035,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ further into the underlying buffer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33040,"byte_end":33079,"line_start":59,"line_end":59,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33084,"byte_end":33087,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because there is no guarantee that the bytes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33092,"byte_end":33164,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ being advanced past have been initialized.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33169,"byte_end":33215,"line_start":62,"line_end":62,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33220,"byte_end":33223,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33228,"byte_end":33242,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33247,"byte_end":33250,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33255,"byte_end":33262,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33267,"byte_end":33289,"line_start":67,"line_end":67,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33294,"byte_end":33297,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Vec::with_capacity(16);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33302,"byte_end":33343,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33348,"byte_end":33351,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33356,"byte_end":33368,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/     // MaybeUninit::as_mut_ptr","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33373,"byte_end":33407,"line_start":72,"line_end":72,"column_start":5,"column_end":39}},{"value":"/     buf.bytes_mut()[0].as_mut_ptr().write(b'h');","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33412,"byte_end":33464,"line_start":73,"line_end":73,"column_start":5,"column_end":57}},{"value":"/     buf.bytes_mut()[1].as_mut_ptr().write(b'e');","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33469,"byte_end":33521,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33526,"byte_end":33529,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     buf.advance_mut(2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33534,"byte_end":33561,"line_start":76,"line_end":76,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33566,"byte_end":33569,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/     buf.bytes_mut()[0].as_mut_ptr().write(b'l');","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33574,"byte_end":33626,"line_start":78,"line_end":78,"column_start":5,"column_end":57}},{"value":"/     buf.bytes_mut()[1].as_mut_ptr().write(b'l');","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33631,"byte_end":33683,"line_start":79,"line_end":79,"column_start":5,"column_end":57}},{"value":"/     buf.bytes_mut()[2].as_mut_ptr().write(b'o');","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33688,"byte_end":33740,"line_start":80,"line_end":80,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33745,"byte_end":33748,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/     buf.advance_mut(3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33753,"byte_end":33780,"line_start":82,"line_end":82,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33785,"byte_end":33790,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33795,"byte_end":33798,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5, buf.len());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33803,"byte_end":33832,"line_start":85,"line_end":85,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"hello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33837,"byte_end":33867,"line_start":86,"line_end":86,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33872,"byte_end":33879,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33884,"byte_end":33887,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33892,"byte_end":33904,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33909,"byte_end":33912,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function **may** panic if `cnt > self.remaining_mut()`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33917,"byte_end":33981,"line_start":91,"line_end":91,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33986,"byte_end":33989,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":33994,"byte_end":34017,"line_start":93,"line_end":93,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34022,"byte_end":34025,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ It is recommended for implementations of `advance_mut` to panic if","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34030,"byte_end":34100,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ `cnt > self.remaining_mut()`. If the implementation does not panic,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34105,"byte_end":34176,"line_start":96,"line_end":96,"column_start":5,"column_end":76}},{"value":"/ the call must behave as if `cnt == self.remaining_mut()`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34181,"byte_end":34242,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34247,"byte_end":34250,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ A call with `cnt == 0` should never panic and be a no-op.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34255,"byte_end":34316,"line_start":99,"line_end":99,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34808,"byte_end":34825,"line_start":120,"line_end":120,"column_start":8,"column_end":25},"name":"has_remaining_mut","qualname":"::buf::buf_mut::BufMut::has_remaining_mut","value":"fn (&self) -> bool","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Returns true if there is space in `self` for more bytes.","sig":null,"attributes":[{"value":"/ Returns true if there is space in `self` for more bytes.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34372,"byte_end":34432,"line_start":102,"line_end":102,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34437,"byte_end":34440,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.remaining_mut() != 0`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34445,"byte_end":34499,"line_start":104,"line_end":104,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34504,"byte_end":34507,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34512,"byte_end":34526,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34531,"byte_end":34534,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34539,"byte_end":34546,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34551,"byte_end":34573,"line_start":109,"line_end":109,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34578,"byte_end":34581,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 5];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34586,"byte_end":34611,"line_start":111,"line_end":111,"column_start":5,"column_end":30}},{"value":"/ let mut buf = &mut dst[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34616,"byte_end":34647,"line_start":112,"line_end":112,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34652,"byte_end":34655,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.has_remaining_mut());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34660,"byte_end":34697,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34702,"byte_end":34705,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ buf.put(&b\"hello\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34710,"byte_end":34737,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34742,"byte_end":34745,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert!(!buf.has_remaining_mut());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34750,"byte_end":34788,"line_start":118,"line_end":118,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34793,"byte_end":34800,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36378,"byte_end":36387,"line_start":165,"line_end":165,"column_start":8,"column_end":17},"name":"bytes_mut","qualname":"::buf::buf_mut::BufMut::bytes_mut","value":"fn (&mut self) -> &mut [MaybeUninit<u8>]","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Returns a mutable slice starting at the current BufMut position and of\n length between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the\n whole remainder of the buffer (this allows non-continuous implementation).","sig":null,"attributes":[{"value":"/ Returns a mutable slice starting at the current BufMut position and of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34887,"byte_end":34961,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/ length between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":34966,"byte_end":35058,"line_start":125,"line_end":125,"column_start":5,"column_end":97}},{"value":"/ whole remainder of the buffer (this allows non-continuous implementation).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35063,"byte_end":35141,"line_start":126,"line_end":126,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35146,"byte_end":35149,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35154,"byte_end":35225,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35230,"byte_end":35244,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35249,"byte_end":35252,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ The returned byte slice may represent uninitialized memory.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35257,"byte_end":35320,"line_start":131,"line_end":131,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35325,"byte_end":35328,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35333,"byte_end":35347,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35352,"byte_end":35355,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35360,"byte_end":35367,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35372,"byte_end":35394,"line_start":136,"line_end":136,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35399,"byte_end":35402,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Vec::with_capacity(16);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35407,"byte_end":35448,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35453,"byte_end":35456,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35461,"byte_end":35473,"line_start":140,"line_end":140,"column_start":5,"column_end":17}},{"value":"/     // MaybeUninit::as_mut_ptr","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35478,"byte_end":35512,"line_start":141,"line_end":141,"column_start":5,"column_end":39}},{"value":"/     buf.bytes_mut()[0].as_mut_ptr().write(b'h');","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35517,"byte_end":35569,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/     buf.bytes_mut()[1].as_mut_ptr().write(b'e');","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35574,"byte_end":35626,"line_start":143,"line_end":143,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35631,"byte_end":35634,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/     buf.advance_mut(2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35639,"byte_end":35666,"line_start":145,"line_end":145,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35671,"byte_end":35674,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     buf.bytes_mut()[0].as_mut_ptr().write(b'l');","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35679,"byte_end":35731,"line_start":147,"line_end":147,"column_start":5,"column_end":57}},{"value":"/     buf.bytes_mut()[1].as_mut_ptr().write(b'l');","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35736,"byte_end":35788,"line_start":148,"line_end":148,"column_start":5,"column_end":57}},{"value":"/     buf.bytes_mut()[2].as_mut_ptr().write(b'o');","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35793,"byte_end":35845,"line_start":149,"line_end":149,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35850,"byte_end":35853,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/     buf.advance_mut(3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35858,"byte_end":35885,"line_start":151,"line_end":151,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35890,"byte_end":35895,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35900,"byte_end":35903,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5, buf.len());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35908,"byte_end":35937,"line_start":154,"line_end":154,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"hello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35942,"byte_end":35972,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35977,"byte_end":35984,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35989,"byte_end":35992,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":35997,"byte_end":36020,"line_start":158,"line_end":158,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36025,"byte_end":36028,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. `bytes_mut` should return an empty","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36033,"byte_end":36105,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ slice **if and only if** `remaining_mut` returns 0. In other words,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36110,"byte_end":36181,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ `bytes_mut` returning an empty slice implies that `remaining_mut` will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36186,"byte_end":36260,"line_start":162,"line_end":162,"column_start":5,"column_end":79}},{"value":"/ return 0 and `remaining_mut` returning 0 implies that `bytes_mut` will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36265,"byte_end":36339,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ return an empty slice.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36344,"byte_end":36370,"line_start":164,"line_end":164,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37830,"byte_end":37848,"line_start":196,"line_end":196,"column_start":8,"column_end":26},"name":"bytes_vectored_mut","qualname":"::buf::buf_mut::BufMut::bytes_vectored_mut","value":"fn <'a> (&'a mut self, dst: &mut [IoSliceMut<'a>]) -> usize","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Fills `dst` with potentially multiple mutable slices starting at `self`'s\n current position.","sig":null,"attributes":[{"value":"/ Fills `dst` with potentially multiple mutable slices starting at `self`'s","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36431,"byte_end":36508,"line_start":167,"line_end":167,"column_start":5,"column_end":82}},{"value":"/ current position.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36513,"byte_end":36534,"line_start":168,"line_end":168,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36539,"byte_end":36542,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the `BufMut` is backed by disjoint slices of bytes, `bytes_vectored_mut`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36547,"byte_end":36626,"line_start":170,"line_end":170,"column_start":5,"column_end":84}},{"value":"/ enables fetching more than one slice at once. `dst` is a slice of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36631,"byte_end":36700,"line_start":171,"line_end":171,"column_start":5,"column_end":74}},{"value":"/ mutable `IoSliceMut` references, enabling the slice to be directly used with","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36705,"byte_end":36785,"line_start":172,"line_end":172,"column_start":5,"column_end":85}},{"value":"/ [`readv`] without any further conversion. The sum of the lengths of all","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36790,"byte_end":36865,"line_start":173,"line_end":173,"column_start":5,"column_end":80}},{"value":"/ the buffers in `dst` will be less than or equal to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36870,"byte_end":36924,"line_start":174,"line_end":174,"column_start":5,"column_end":59}},{"value":"/ `Buf::remaining_mut()`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36929,"byte_end":36956,"line_start":175,"line_end":175,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36961,"byte_end":36964,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The entries in `dst` will be overwritten, but the data **contained** by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":36969,"byte_end":37044,"line_start":177,"line_end":177,"column_start":5,"column_end":80}},{"value":"/ the slices **will not** be modified. If `bytes_vectored_mut` does not fill every","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37049,"byte_end":37133,"line_start":178,"line_end":178,"column_start":5,"column_end":89}},{"value":"/ entry in `dst`, then `dst` is guaranteed to contain all remaining slices","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37138,"byte_end":37214,"line_start":179,"line_end":179,"column_start":5,"column_end":81}},{"value":"/ in `self.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37219,"byte_end":37232,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37237,"byte_end":37240,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37245,"byte_end":37316,"line_start":182,"line_end":182,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37321,"byte_end":37335,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37340,"byte_end":37343,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37348,"byte_end":37371,"line_start":185,"line_end":185,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37376,"byte_end":37379,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. Once the end of the buffer is reached,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37384,"byte_end":37460,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ i.e., `BufMut::remaining_mut` returns 0, calls to `bytes_vectored_mut` must","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37465,"byte_end":37544,"line_start":188,"line_end":188,"column_start":5,"column_end":84}},{"value":"/ return 0 without mutating `dst`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37549,"byte_end":37585,"line_start":189,"line_end":189,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37590,"byte_end":37593,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Implementations should also take care to properly handle being called","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37598,"byte_end":37671,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/ with `dst` being a zero length slice.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37676,"byte_end":37717,"line_start":192,"line_end":192,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37722,"byte_end":37725,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ [`readv`]: http://man7.org/linux/man-pages/man2/readv.2.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37730,"byte_end":37794,"line_start":194,"line_end":194,"column_start":5,"column_end":69}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":37799,"byte_end":37822,"line_start":195,"line_end":195,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38617,"byte_end":38620,"line_start":229,"line_end":229,"column_start":8,"column_end":11},"name":"put","qualname":"::buf::buf_mut::BufMut::put","value":"fn <T> (&mut self, mut src: T) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Transfer bytes into `self` from `src` and advance the cursor by the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Transfer bytes into `self` from `src` and advance the cursor by the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38128,"byte_end":38199,"line_start":209,"line_end":209,"column_start":5,"column_end":76}},{"value":"/ number of bytes written.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38204,"byte_end":38232,"line_start":210,"line_end":210,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38237,"byte_end":38240,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38245,"byte_end":38259,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38264,"byte_end":38267,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38272,"byte_end":38279,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38284,"byte_end":38306,"line_start":215,"line_end":215,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38311,"byte_end":38314,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38319,"byte_end":38344,"line_start":217,"line_end":217,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38349,"byte_end":38352,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ buf.put_u8(b'h');","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38357,"byte_end":38378,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/ buf.put(&b\"ello\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38383,"byte_end":38409,"line_start":220,"line_end":220,"column_start":5,"column_end":31}},{"value":"/ buf.put(&b\" world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38414,"byte_end":38442,"line_start":221,"line_end":221,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38447,"byte_end":38450,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf, b\"hello world\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38455,"byte_end":38491,"line_start":223,"line_end":223,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38496,"byte_end":38503,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38508,"byte_end":38511,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38516,"byte_end":38528,"line_start":226,"line_end":226,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38533,"byte_end":38536,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Panics if `self` does not have enough capacity to contain `src`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":38541,"byte_end":38609,"line_start":228,"line_end":228,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39696,"byte_end":39705,"line_start":270,"line_end":270,"column_start":8,"column_end":17},"name":"put_slice","qualname":"::buf::buf_mut::BufMut::put_slice","value":"fn (&mut self, src: &[u8]) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Transfer bytes into `self` from `src` and advance the cursor by the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Transfer bytes into `self` from `src` and advance the cursor by the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39196,"byte_end":39267,"line_start":251,"line_end":251,"column_start":5,"column_end":76}},{"value":"/ number of bytes written.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39272,"byte_end":39300,"line_start":252,"line_end":252,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39305,"byte_end":39308,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ `self` must have enough remaining capacity to contain all of `src`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39313,"byte_end":39384,"line_start":254,"line_end":254,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39389,"byte_end":39392,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39397,"byte_end":39404,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39409,"byte_end":39431,"line_start":257,"line_end":257,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39436,"byte_end":39439,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 6];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39444,"byte_end":39469,"line_start":259,"line_end":259,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39474,"byte_end":39477,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39482,"byte_end":39487,"line_start":261,"line_end":261,"column_start":5,"column_end":10}},{"value":"/     let mut buf = &mut dst[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39492,"byte_end":39527,"line_start":262,"line_end":262,"column_start":5,"column_end":40}},{"value":"/     buf.put_slice(b\"hello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39532,"byte_end":39564,"line_start":263,"line_end":263,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39569,"byte_end":39572,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, buf.remaining_mut());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39577,"byte_end":39620,"line_start":265,"line_end":265,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39625,"byte_end":39630,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39635,"byte_end":39638,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"hello\\0\", &dst);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39643,"byte_end":39676,"line_start":268,"line_end":268,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":39681,"byte_end":39688,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40755,"byte_end":40761,"line_start":313,"line_end":313,"column_start":8,"column_end":14},"name":"put_u8","qualname":"::buf::buf_mut::BufMut::put_u8","value":"fn (&mut self, n: u8) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned 8 bit integer to `self`.","sig":null,"attributes":[{"value":"/ Writes an unsigned 8 bit integer to `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40338,"byte_end":40385,"line_start":295,"line_end":295,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40390,"byte_end":40393,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40398,"byte_end":40440,"line_start":297,"line_end":297,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40445,"byte_end":40448,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40453,"byte_end":40467,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40472,"byte_end":40475,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40480,"byte_end":40487,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40492,"byte_end":40514,"line_start":302,"line_end":302,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40519,"byte_end":40522,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40527,"byte_end":40552,"line_start":304,"line_end":304,"column_start":5,"column_end":30}},{"value":"/ buf.put_u8(0x01);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40557,"byte_end":40578,"line_start":305,"line_end":305,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(buf, b\"\\x01\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40583,"byte_end":40612,"line_start":306,"line_end":306,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40617,"byte_end":40624,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40629,"byte_end":40632,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40637,"byte_end":40649,"line_start":309,"line_end":309,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40654,"byte_end":40657,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40662,"byte_end":40731,"line_start":311,"line_end":311,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40736,"byte_end":40747,"line_start":312,"line_end":312,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41260,"byte_end":41266,"line_start":336,"line_end":336,"column_start":8,"column_end":14},"name":"put_i8","qualname":"::buf::buf_mut::BufMut::put_i8","value":"fn (&mut self, n: i8) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed 8 bit integer to `self`.","sig":null,"attributes":[{"value":"/ Writes a signed 8 bit integer to `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40846,"byte_end":40890,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40895,"byte_end":40898,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40903,"byte_end":40945,"line_start":320,"line_end":320,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40950,"byte_end":40953,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40958,"byte_end":40972,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40977,"byte_end":40980,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40985,"byte_end":40992,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":40997,"byte_end":41019,"line_start":325,"line_end":325,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41024,"byte_end":41027,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41032,"byte_end":41057,"line_start":327,"line_end":327,"column_start":5,"column_end":30}},{"value":"/ buf.put_i8(0x01);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41062,"byte_end":41083,"line_start":328,"line_end":328,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(buf, b\"\\x01\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41088,"byte_end":41117,"line_start":329,"line_end":329,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41122,"byte_end":41129,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41134,"byte_end":41137,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41142,"byte_end":41154,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41159,"byte_end":41162,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41167,"byte_end":41236,"line_start":334,"line_end":334,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41241,"byte_end":41252,"line_start":335,"line_end":335,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41806,"byte_end":41813,"line_start":359,"line_end":359,"column_start":8,"column_end":15},"name":"put_u16","qualname":"::buf::buf_mut::BufMut::put_u16","value":"fn (&mut self, n: u16) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 16 bit integer to `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41356,"byte_end":41429,"line_start":341,"line_end":341,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41434,"byte_end":41437,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41442,"byte_end":41484,"line_start":343,"line_end":343,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41489,"byte_end":41492,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41497,"byte_end":41511,"line_start":345,"line_end":345,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41516,"byte_end":41519,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41524,"byte_end":41531,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41536,"byte_end":41558,"line_start":348,"line_end":348,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41563,"byte_end":41566,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41571,"byte_end":41596,"line_start":350,"line_end":350,"column_start":5,"column_end":30}},{"value":"/ buf.put_u16(0x0809);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41601,"byte_end":41625,"line_start":351,"line_end":351,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41630,"byte_end":41663,"line_start":352,"line_end":352,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41668,"byte_end":41675,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41680,"byte_end":41683,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41688,"byte_end":41700,"line_start":355,"line_end":355,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41705,"byte_end":41708,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41713,"byte_end":41782,"line_start":357,"line_end":357,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41787,"byte_end":41798,"line_start":358,"line_end":358,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42343,"byte_end":42353,"line_start":381,"line_end":381,"column_start":8,"column_end":18},"name":"put_u16_le","qualname":"::buf::buf_mut::BufMut::put_u16_le","value":"fn (&mut self, n: u16) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 16 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41887,"byte_end":41963,"line_start":363,"line_end":363,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41968,"byte_end":41971,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":41976,"byte_end":42018,"line_start":365,"line_end":365,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42023,"byte_end":42026,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42031,"byte_end":42045,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42050,"byte_end":42053,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42058,"byte_end":42065,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42070,"byte_end":42092,"line_start":370,"line_end":370,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42097,"byte_end":42100,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42105,"byte_end":42130,"line_start":372,"line_end":372,"column_start":5,"column_end":30}},{"value":"/ buf.put_u16_le(0x0809);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42135,"byte_end":42162,"line_start":373,"line_end":373,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x09\\x08\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42167,"byte_end":42200,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42205,"byte_end":42212,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42217,"byte_end":42220,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42225,"byte_end":42237,"line_start":377,"line_end":377,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42242,"byte_end":42245,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42250,"byte_end":42319,"line_start":379,"line_end":379,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42324,"byte_end":42335,"line_start":380,"line_end":380,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42874,"byte_end":42881,"line_start":403,"line_end":403,"column_start":8,"column_end":15},"name":"put_i16","qualname":"::buf::buf_mut::BufMut::put_i16","value":"fn (&mut self, n: i16) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 16 bit integer to `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42427,"byte_end":42497,"line_start":385,"line_end":385,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42502,"byte_end":42505,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42510,"byte_end":42552,"line_start":387,"line_end":387,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42557,"byte_end":42560,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42565,"byte_end":42579,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42584,"byte_end":42587,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42592,"byte_end":42599,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42604,"byte_end":42626,"line_start":392,"line_end":392,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42631,"byte_end":42634,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42639,"byte_end":42664,"line_start":394,"line_end":394,"column_start":5,"column_end":30}},{"value":"/ buf.put_i16(0x0809);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42669,"byte_end":42693,"line_start":395,"line_end":395,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42698,"byte_end":42731,"line_start":396,"line_end":396,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42736,"byte_end":42743,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42748,"byte_end":42751,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42756,"byte_end":42768,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42773,"byte_end":42776,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42781,"byte_end":42850,"line_start":401,"line_end":401,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42855,"byte_end":42866,"line_start":402,"line_end":402,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43408,"byte_end":43418,"line_start":425,"line_end":425,"column_start":8,"column_end":18},"name":"put_i16_le","qualname":"::buf::buf_mut::BufMut::put_i16_le","value":"fn (&mut self, n: i16) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 16 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":42955,"byte_end":43028,"line_start":407,"line_end":407,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43033,"byte_end":43036,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43041,"byte_end":43083,"line_start":409,"line_end":409,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43088,"byte_end":43091,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43096,"byte_end":43110,"line_start":411,"line_end":411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43115,"byte_end":43118,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43123,"byte_end":43130,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43135,"byte_end":43157,"line_start":414,"line_end":414,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43162,"byte_end":43165,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43170,"byte_end":43195,"line_start":416,"line_end":416,"column_start":5,"column_end":30}},{"value":"/ buf.put_i16_le(0x0809);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43200,"byte_end":43227,"line_start":417,"line_end":417,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x09\\x08\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43232,"byte_end":43265,"line_start":418,"line_end":418,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43270,"byte_end":43277,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43282,"byte_end":43285,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43290,"byte_end":43302,"line_start":421,"line_end":421,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43307,"byte_end":43310,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43315,"byte_end":43384,"line_start":423,"line_end":423,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43389,"byte_end":43400,"line_start":424,"line_end":424,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43954,"byte_end":43961,"line_start":447,"line_end":447,"column_start":8,"column_end":15},"name":"put_u32","qualname":"::buf::buf_mut::BufMut::put_u32","value":"fn (&mut self, n: u32) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 32 bit integer to `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43492,"byte_end":43565,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43570,"byte_end":43573,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43578,"byte_end":43620,"line_start":431,"line_end":431,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43625,"byte_end":43628,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43633,"byte_end":43647,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43652,"byte_end":43655,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43660,"byte_end":43667,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43672,"byte_end":43694,"line_start":436,"line_end":436,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43699,"byte_end":43702,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43707,"byte_end":43732,"line_start":438,"line_end":438,"column_start":5,"column_end":30}},{"value":"/ buf.put_u32(0x0809A0A1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43737,"byte_end":43765,"line_start":439,"line_end":439,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43770,"byte_end":43811,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43816,"byte_end":43823,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43828,"byte_end":43831,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43836,"byte_end":43848,"line_start":443,"line_end":443,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43853,"byte_end":43856,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43861,"byte_end":43930,"line_start":445,"line_end":445,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":43935,"byte_end":43946,"line_start":446,"line_end":446,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44503,"byte_end":44513,"line_start":469,"line_end":469,"column_start":8,"column_end":18},"name":"put_u32_le","qualname":"::buf::buf_mut::BufMut::put_u32_le","value":"fn (&mut self, n: u32) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 32 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44035,"byte_end":44111,"line_start":451,"line_end":451,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44116,"byte_end":44119,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44124,"byte_end":44166,"line_start":453,"line_end":453,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44171,"byte_end":44174,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44179,"byte_end":44193,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44198,"byte_end":44201,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44206,"byte_end":44213,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44218,"byte_end":44240,"line_start":458,"line_end":458,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44245,"byte_end":44248,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44253,"byte_end":44278,"line_start":460,"line_end":460,"column_start":5,"column_end":30}},{"value":"/ buf.put_u32_le(0x0809A0A1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44283,"byte_end":44314,"line_start":461,"line_end":461,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44319,"byte_end":44360,"line_start":462,"line_end":462,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44365,"byte_end":44372,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44377,"byte_end":44380,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44385,"byte_end":44397,"line_start":465,"line_end":465,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44402,"byte_end":44405,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44410,"byte_end":44479,"line_start":467,"line_end":467,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44484,"byte_end":44495,"line_start":468,"line_end":468,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45046,"byte_end":45053,"line_start":491,"line_end":491,"column_start":8,"column_end":15},"name":"put_i32","qualname":"::buf::buf_mut::BufMut::put_i32","value":"fn (&mut self, n: i32) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 32 bit integer to `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44587,"byte_end":44657,"line_start":473,"line_end":473,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44662,"byte_end":44665,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44670,"byte_end":44712,"line_start":475,"line_end":475,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44717,"byte_end":44720,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44725,"byte_end":44739,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44744,"byte_end":44747,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44752,"byte_end":44759,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44764,"byte_end":44786,"line_start":480,"line_end":480,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44791,"byte_end":44794,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44799,"byte_end":44824,"line_start":482,"line_end":482,"column_start":5,"column_end":30}},{"value":"/ buf.put_i32(0x0809A0A1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44829,"byte_end":44857,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44862,"byte_end":44903,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44908,"byte_end":44915,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44920,"byte_end":44923,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44928,"byte_end":44940,"line_start":487,"line_end":487,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44945,"byte_end":44948,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":44953,"byte_end":45022,"line_start":489,"line_end":489,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45027,"byte_end":45038,"line_start":490,"line_end":490,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45592,"byte_end":45602,"line_start":513,"line_end":513,"column_start":8,"column_end":18},"name":"put_i32_le","qualname":"::buf::buf_mut::BufMut::put_i32_le","value":"fn (&mut self, n: i32) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 32 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45127,"byte_end":45200,"line_start":495,"line_end":495,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45205,"byte_end":45208,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45213,"byte_end":45255,"line_start":497,"line_end":497,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45260,"byte_end":45263,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45268,"byte_end":45282,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45287,"byte_end":45290,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45295,"byte_end":45302,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45307,"byte_end":45329,"line_start":502,"line_end":502,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45334,"byte_end":45337,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45342,"byte_end":45367,"line_start":504,"line_end":504,"column_start":5,"column_end":30}},{"value":"/ buf.put_i32_le(0x0809A0A1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45372,"byte_end":45403,"line_start":505,"line_end":505,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45408,"byte_end":45449,"line_start":506,"line_end":506,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45454,"byte_end":45461,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45466,"byte_end":45469,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45474,"byte_end":45486,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45491,"byte_end":45494,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45499,"byte_end":45568,"line_start":511,"line_end":511,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45573,"byte_end":45584,"line_start":512,"line_end":512,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46166,"byte_end":46173,"line_start":535,"line_end":535,"column_start":8,"column_end":15},"name":"put_u64","qualname":"::buf::buf_mut::BufMut::put_u64","value":"fn (&mut self, n: u64) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 64 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45676,"byte_end":45753,"line_start":517,"line_end":517,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45758,"byte_end":45761,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45766,"byte_end":45808,"line_start":519,"line_end":519,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45813,"byte_end":45816,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45821,"byte_end":45835,"line_start":521,"line_end":521,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45840,"byte_end":45843,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45848,"byte_end":45855,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45860,"byte_end":45882,"line_start":524,"line_end":524,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45887,"byte_end":45890,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45895,"byte_end":45920,"line_start":526,"line_end":526,"column_start":5,"column_end":30}},{"value":"/ buf.put_u64(0x0102030405060708);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45925,"byte_end":45961,"line_start":527,"line_end":527,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":45966,"byte_end":46023,"line_start":528,"line_end":528,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46028,"byte_end":46035,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46040,"byte_end":46043,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46048,"byte_end":46060,"line_start":531,"line_end":531,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46065,"byte_end":46068,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46073,"byte_end":46142,"line_start":533,"line_end":533,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46147,"byte_end":46158,"line_start":534,"line_end":534,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46739,"byte_end":46749,"line_start":557,"line_end":557,"column_start":8,"column_end":18},"name":"put_u64_le","qualname":"::buf::buf_mut::BufMut::put_u64_le","value":"fn (&mut self, n: u64) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 64 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46247,"byte_end":46323,"line_start":539,"line_end":539,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46328,"byte_end":46331,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46336,"byte_end":46378,"line_start":541,"line_end":541,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46383,"byte_end":46386,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46391,"byte_end":46405,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46410,"byte_end":46413,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46418,"byte_end":46425,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46430,"byte_end":46452,"line_start":546,"line_end":546,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46457,"byte_end":46460,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46465,"byte_end":46490,"line_start":548,"line_end":548,"column_start":5,"column_end":30}},{"value":"/ buf.put_u64_le(0x0102030405060708);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46495,"byte_end":46534,"line_start":549,"line_end":549,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46539,"byte_end":46596,"line_start":550,"line_end":550,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46601,"byte_end":46608,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46613,"byte_end":46616,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46621,"byte_end":46633,"line_start":553,"line_end":553,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46638,"byte_end":46641,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46646,"byte_end":46715,"line_start":555,"line_end":555,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46720,"byte_end":46731,"line_start":556,"line_end":556,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47310,"byte_end":47317,"line_start":579,"line_end":579,"column_start":8,"column_end":15},"name":"put_i64","qualname":"::buf::buf_mut::BufMut::put_i64","value":"fn (&mut self, n: i64) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 64 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46823,"byte_end":46897,"line_start":561,"line_end":561,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46902,"byte_end":46905,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46910,"byte_end":46952,"line_start":563,"line_end":563,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46957,"byte_end":46960,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46965,"byte_end":46979,"line_start":565,"line_end":565,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46984,"byte_end":46987,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":46992,"byte_end":46999,"line_start":567,"line_end":567,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47004,"byte_end":47026,"line_start":568,"line_end":568,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47031,"byte_end":47034,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47039,"byte_end":47064,"line_start":570,"line_end":570,"column_start":5,"column_end":30}},{"value":"/ buf.put_i64(0x0102030405060708);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47069,"byte_end":47105,"line_start":571,"line_end":571,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47110,"byte_end":47167,"line_start":572,"line_end":572,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47172,"byte_end":47179,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47184,"byte_end":47187,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47192,"byte_end":47204,"line_start":575,"line_end":575,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47209,"byte_end":47212,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47217,"byte_end":47286,"line_start":577,"line_end":577,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47291,"byte_end":47302,"line_start":578,"line_end":578,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47880,"byte_end":47890,"line_start":601,"line_end":601,"column_start":8,"column_end":18},"name":"put_i64_le","qualname":"::buf::buf_mut::BufMut::put_i64_le","value":"fn (&mut self, n: i64) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 64 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47391,"byte_end":47464,"line_start":583,"line_end":583,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47469,"byte_end":47472,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47477,"byte_end":47519,"line_start":585,"line_end":585,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47524,"byte_end":47527,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47532,"byte_end":47546,"line_start":587,"line_end":587,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47551,"byte_end":47554,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47559,"byte_end":47566,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47571,"byte_end":47593,"line_start":590,"line_end":590,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47598,"byte_end":47601,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47606,"byte_end":47631,"line_start":592,"line_end":592,"column_start":5,"column_end":30}},{"value":"/ buf.put_i64_le(0x0102030405060708);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47636,"byte_end":47675,"line_start":593,"line_end":593,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47680,"byte_end":47737,"line_start":594,"line_end":594,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47742,"byte_end":47749,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47754,"byte_end":47757,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47762,"byte_end":47774,"line_start":597,"line_end":597,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47779,"byte_end":47782,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47787,"byte_end":47856,"line_start":599,"line_end":599,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47861,"byte_end":47872,"line_start":600,"line_end":600,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48505,"byte_end":48513,"line_start":623,"line_end":623,"column_start":8,"column_end":16},"name":"put_u128","qualname":"::buf::buf_mut::BufMut::put_u128","value":"fn (&mut self, n: u128) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned 128 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 128 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":47964,"byte_end":48042,"line_start":605,"line_end":605,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48047,"byte_end":48050,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48055,"byte_end":48098,"line_start":607,"line_end":607,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48103,"byte_end":48106,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48111,"byte_end":48125,"line_start":609,"line_end":609,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48130,"byte_end":48133,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48138,"byte_end":48145,"line_start":611,"line_end":611,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48150,"byte_end":48172,"line_start":612,"line_end":612,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48177,"byte_end":48180,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48185,"byte_end":48210,"line_start":614,"line_end":614,"column_start":5,"column_end":30}},{"value":"/ buf.put_u128(0x01020304050607080910111213141516);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48215,"byte_end":48268,"line_start":615,"line_end":615,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48273,"byte_end":48362,"line_start":616,"line_end":616,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48367,"byte_end":48374,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48379,"byte_end":48382,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48387,"byte_end":48399,"line_start":619,"line_end":619,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48404,"byte_end":48407,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48412,"byte_end":48481,"line_start":621,"line_end":621,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48486,"byte_end":48497,"line_start":622,"line_end":622,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49131,"byte_end":49142,"line_start":645,"line_end":645,"column_start":8,"column_end":19},"name":"put_u128_le","qualname":"::buf::buf_mut::BufMut::put_u128_le","value":"fn (&mut self, n: u128) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned 128 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 128 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48588,"byte_end":48665,"line_start":627,"line_end":627,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48670,"byte_end":48673,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48678,"byte_end":48721,"line_start":629,"line_end":629,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48726,"byte_end":48729,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48734,"byte_end":48748,"line_start":631,"line_end":631,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48753,"byte_end":48756,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48761,"byte_end":48768,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48773,"byte_end":48795,"line_start":634,"line_end":634,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48800,"byte_end":48803,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48808,"byte_end":48833,"line_start":636,"line_end":636,"column_start":5,"column_end":30}},{"value":"/ buf.put_u128_le(0x01020304050607080910111213141516);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48838,"byte_end":48894,"line_start":637,"line_end":637,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48899,"byte_end":48988,"line_start":638,"line_end":638,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":48993,"byte_end":49000,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49005,"byte_end":49008,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49013,"byte_end":49025,"line_start":641,"line_end":641,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49030,"byte_end":49033,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49038,"byte_end":49107,"line_start":643,"line_end":643,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49112,"byte_end":49123,"line_start":644,"line_end":644,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49755,"byte_end":49763,"line_start":667,"line_end":667,"column_start":8,"column_end":16},"name":"put_i128","qualname":"::buf::buf_mut::BufMut::put_i128","value":"fn (&mut self, n: i128) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed 128 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 128 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49217,"byte_end":49292,"line_start":649,"line_end":649,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49297,"byte_end":49300,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49305,"byte_end":49348,"line_start":651,"line_end":651,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49353,"byte_end":49356,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49361,"byte_end":49375,"line_start":653,"line_end":653,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49380,"byte_end":49383,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49388,"byte_end":49395,"line_start":655,"line_end":655,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49400,"byte_end":49422,"line_start":656,"line_end":656,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49427,"byte_end":49430,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49435,"byte_end":49460,"line_start":658,"line_end":658,"column_start":5,"column_end":30}},{"value":"/ buf.put_i128(0x01020304050607080910111213141516);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49465,"byte_end":49518,"line_start":659,"line_end":659,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49523,"byte_end":49612,"line_start":660,"line_end":660,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49617,"byte_end":49624,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49629,"byte_end":49632,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49637,"byte_end":49649,"line_start":663,"line_end":663,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49654,"byte_end":49657,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49662,"byte_end":49731,"line_start":665,"line_end":665,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49736,"byte_end":49747,"line_start":666,"line_end":666,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50378,"byte_end":50389,"line_start":689,"line_end":689,"column_start":8,"column_end":19},"name":"put_i128_le","qualname":"::buf::buf_mut::BufMut::put_i128_le","value":"fn (&mut self, n: i128) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed 128 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 128 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49838,"byte_end":49912,"line_start":671,"line_end":671,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49917,"byte_end":49920,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49925,"byte_end":49968,"line_start":673,"line_end":673,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49973,"byte_end":49976,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":49981,"byte_end":49995,"line_start":675,"line_end":675,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50000,"byte_end":50003,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50008,"byte_end":50015,"line_start":677,"line_end":677,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50020,"byte_end":50042,"line_start":678,"line_end":678,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50047,"byte_end":50050,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50055,"byte_end":50080,"line_start":680,"line_end":680,"column_start":5,"column_end":30}},{"value":"/ buf.put_i128_le(0x01020304050607080910111213141516);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50085,"byte_end":50141,"line_start":681,"line_end":681,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50146,"byte_end":50235,"line_start":682,"line_end":682,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50240,"byte_end":50247,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50252,"byte_end":50255,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50260,"byte_end":50272,"line_start":685,"line_end":685,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50277,"byte_end":50280,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50285,"byte_end":50354,"line_start":687,"line_end":687,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50359,"byte_end":50370,"line_start":688,"line_end":688,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50931,"byte_end":50939,"line_start":711,"line_end":711,"column_start":8,"column_end":16},"name":"put_uint","qualname":"::buf::buf_mut::BufMut::put_uint","value":"fn (&mut self, n: u64, nbytes: usize) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned n-byte integer to `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50464,"byte_end":50537,"line_start":693,"line_end":693,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50542,"byte_end":50545,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50550,"byte_end":50599,"line_start":695,"line_end":695,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50604,"byte_end":50607,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50612,"byte_end":50626,"line_start":697,"line_end":697,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50631,"byte_end":50634,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50639,"byte_end":50646,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50651,"byte_end":50673,"line_start":700,"line_end":700,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50678,"byte_end":50681,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50686,"byte_end":50711,"line_start":702,"line_end":702,"column_start":5,"column_end":30}},{"value":"/ buf.put_uint(0x010203, 3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50716,"byte_end":50746,"line_start":703,"line_end":703,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50751,"byte_end":50788,"line_start":704,"line_end":704,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50793,"byte_end":50800,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50805,"byte_end":50808,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50813,"byte_end":50825,"line_start":707,"line_end":707,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50830,"byte_end":50833,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50838,"byte_end":50907,"line_start":709,"line_end":709,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":50912,"byte_end":50923,"line_start":710,"line_end":710,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51539,"byte_end":51550,"line_start":733,"line_end":733,"column_start":8,"column_end":19},"name":"put_uint_le","qualname":"::buf::buf_mut::BufMut::put_uint_le","value":"fn (&mut self, n: u64, nbytes: usize) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in the little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned n-byte integer to `self` in the little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51062,"byte_end":51142,"line_start":715,"line_end":715,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51147,"byte_end":51150,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51155,"byte_end":51204,"line_start":717,"line_end":717,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51209,"byte_end":51212,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51217,"byte_end":51231,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51236,"byte_end":51239,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51244,"byte_end":51251,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51256,"byte_end":51278,"line_start":722,"line_end":722,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51283,"byte_end":51286,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51291,"byte_end":51316,"line_start":724,"line_end":724,"column_start":5,"column_end":30}},{"value":"/ buf.put_uint_le(0x010203, 3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51321,"byte_end":51354,"line_start":725,"line_end":725,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(buf, b\"\\x03\\x02\\x01\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51359,"byte_end":51396,"line_start":726,"line_end":726,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51401,"byte_end":51408,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51413,"byte_end":51416,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51421,"byte_end":51433,"line_start":729,"line_end":729,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51438,"byte_end":51441,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51446,"byte_end":51515,"line_start":731,"line_end":731,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51520,"byte_end":51531,"line_start":732,"line_end":732,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52114,"byte_end":52121,"line_start":755,"line_end":755,"column_start":8,"column_end":15},"name":"put_int","qualname":"::buf::buf_mut::BufMut::put_int","value":"fn (&mut self, n: i64, nbytes: usize) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed n-byte integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed n-byte integer to `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51651,"byte_end":51721,"line_start":737,"line_end":737,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51726,"byte_end":51729,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51734,"byte_end":51783,"line_start":739,"line_end":739,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51788,"byte_end":51791,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51796,"byte_end":51810,"line_start":741,"line_end":741,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51815,"byte_end":51818,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51823,"byte_end":51830,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51835,"byte_end":51857,"line_start":744,"line_end":744,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51862,"byte_end":51865,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51870,"byte_end":51895,"line_start":746,"line_end":746,"column_start":5,"column_end":30}},{"value":"/ buf.put_int(0x010203, 3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51900,"byte_end":51929,"line_start":747,"line_end":747,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51934,"byte_end":51971,"line_start":748,"line_end":748,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51976,"byte_end":51983,"line_start":749,"line_end":749,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51988,"byte_end":51991,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":51996,"byte_end":52008,"line_start":751,"line_end":751,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52013,"byte_end":52016,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52021,"byte_end":52090,"line_start":753,"line_end":753,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52095,"byte_end":52106,"line_start":754,"line_end":754,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52713,"byte_end":52723,"line_start":777,"line_end":777,"column_start":8,"column_end":18},"name":"put_int_le","qualname":"::buf::buf_mut::BufMut::put_int_le","value":"fn (&mut self, n: i64, nbytes: usize) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes a signed n-byte integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed n-byte integer to `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52244,"byte_end":52317,"line_start":759,"line_end":759,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52322,"byte_end":52325,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52330,"byte_end":52379,"line_start":761,"line_end":761,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52384,"byte_end":52387,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52392,"byte_end":52406,"line_start":763,"line_end":763,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52411,"byte_end":52414,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52419,"byte_end":52426,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52431,"byte_end":52453,"line_start":766,"line_end":766,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52458,"byte_end":52461,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52466,"byte_end":52491,"line_start":768,"line_end":768,"column_start":5,"column_end":30}},{"value":"/ buf.put_int_le(0x010203, 3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52496,"byte_end":52528,"line_start":769,"line_end":769,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(buf, b\"\\x03\\x02\\x01\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52533,"byte_end":52570,"line_start":770,"line_end":770,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52575,"byte_end":52582,"line_start":771,"line_end":771,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52587,"byte_end":52590,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52595,"byte_end":52607,"line_start":773,"line_end":773,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52612,"byte_end":52615,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52620,"byte_end":52689,"line_start":775,"line_end":775,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52694,"byte_end":52705,"line_start":776,"line_end":776,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53324,"byte_end":53331,"line_start":800,"line_end":800,"column_start":8,"column_end":15},"name":"put_f32","qualname":"::buf::buf_mut::BufMut::put_f32","value":"fn (&mut self, n: f32) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 single-precision (4 bytes) floating point number to\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 single-precision (4 bytes) floating point number to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52824,"byte_end":52898,"line_start":781,"line_end":781,"column_start":5,"column_end":79}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52903,"byte_end":52939,"line_start":782,"line_end":782,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52944,"byte_end":52947,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52952,"byte_end":52994,"line_start":784,"line_end":784,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":52999,"byte_end":53002,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53007,"byte_end":53021,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53026,"byte_end":53029,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53034,"byte_end":53041,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53046,"byte_end":53068,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53073,"byte_end":53076,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53081,"byte_end":53106,"line_start":791,"line_end":791,"column_start":5,"column_end":30}},{"value":"/ buf.put_f32(1.2f32);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53111,"byte_end":53135,"line_start":792,"line_end":792,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x3F\\x99\\x99\\x9A\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53140,"byte_end":53181,"line_start":793,"line_end":793,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53186,"byte_end":53193,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53198,"byte_end":53201,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53206,"byte_end":53218,"line_start":796,"line_end":796,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53223,"byte_end":53226,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53231,"byte_end":53300,"line_start":798,"line_end":798,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53305,"byte_end":53316,"line_start":799,"line_end":799,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53905,"byte_end":53915,"line_start":823,"line_end":823,"column_start":8,"column_end":18},"name":"put_f32_le","qualname":"::buf::buf_mut::BufMut::put_f32_le","value":"fn (&mut self, n: f32) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 single-precision (4 bytes) floating point number to\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 single-precision (4 bytes) floating point number to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53399,"byte_end":53473,"line_start":804,"line_end":804,"column_start":5,"column_end":79}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53478,"byte_end":53517,"line_start":805,"line_end":805,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53522,"byte_end":53525,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53530,"byte_end":53572,"line_start":807,"line_end":807,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53577,"byte_end":53580,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53585,"byte_end":53599,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53604,"byte_end":53607,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53612,"byte_end":53619,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53624,"byte_end":53646,"line_start":812,"line_end":812,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53651,"byte_end":53654,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53659,"byte_end":53684,"line_start":814,"line_end":814,"column_start":5,"column_end":30}},{"value":"/ buf.put_f32_le(1.2f32);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53689,"byte_end":53716,"line_start":815,"line_end":815,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x9A\\x99\\x99\\x3F\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53721,"byte_end":53762,"line_start":816,"line_end":816,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53767,"byte_end":53774,"line_start":817,"line_end":817,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53779,"byte_end":53782,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53787,"byte_end":53799,"line_start":819,"line_end":819,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53804,"byte_end":53807,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53812,"byte_end":53881,"line_start":821,"line_end":821,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53886,"byte_end":53897,"line_start":822,"line_end":822,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54502,"byte_end":54509,"line_start":846,"line_end":846,"column_start":8,"column_end":15},"name":"put_f64","qualname":"::buf::buf_mut::BufMut::put_f64","value":"fn (&mut self, n: f64) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 double-precision (8 bytes) floating point number to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":53986,"byte_end":54060,"line_start":827,"line_end":827,"column_start":5,"column_end":79}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54065,"byte_end":54101,"line_start":828,"line_end":828,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54106,"byte_end":54109,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54114,"byte_end":54156,"line_start":830,"line_end":830,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54161,"byte_end":54164,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54169,"byte_end":54183,"line_start":832,"line_end":832,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54188,"byte_end":54191,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54196,"byte_end":54203,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54208,"byte_end":54230,"line_start":835,"line_end":835,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54235,"byte_end":54238,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54243,"byte_end":54268,"line_start":837,"line_end":837,"column_start":5,"column_end":30}},{"value":"/ buf.put_f64(1.2f64);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54273,"byte_end":54297,"line_start":838,"line_end":838,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54302,"byte_end":54359,"line_start":839,"line_end":839,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54364,"byte_end":54371,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54376,"byte_end":54379,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54384,"byte_end":54396,"line_start":842,"line_end":842,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54401,"byte_end":54404,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54409,"byte_end":54478,"line_start":844,"line_end":844,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54483,"byte_end":54494,"line_start":845,"line_end":845,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":55099,"byte_end":55109,"line_start":869,"line_end":869,"column_start":8,"column_end":18},"name":"put_f64_le","qualname":"::buf::buf_mut::BufMut::put_f64_le","value":"fn (&mut self, n: f64) -> ()","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 double-precision (8 bytes) floating point number to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54577,"byte_end":54651,"line_start":850,"line_end":850,"column_start":5,"column_end":79}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54656,"byte_end":54695,"line_start":851,"line_end":851,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54700,"byte_end":54703,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54708,"byte_end":54750,"line_start":853,"line_end":853,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54755,"byte_end":54758,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54763,"byte_end":54777,"line_start":855,"line_end":855,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54782,"byte_end":54785,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54790,"byte_end":54797,"line_start":857,"line_end":857,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54802,"byte_end":54824,"line_start":858,"line_end":858,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54829,"byte_end":54832,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54837,"byte_end":54862,"line_start":860,"line_end":860,"column_start":5,"column_end":30}},{"value":"/ buf.put_f64_le(1.2f64);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54867,"byte_end":54894,"line_start":861,"line_end":861,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54899,"byte_end":54956,"line_start":862,"line_end":862,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54961,"byte_end":54968,"line_start":863,"line_end":863,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54973,"byte_end":54976,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54981,"byte_end":54993,"line_start":865,"line_end":865,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":54998,"byte_end":55001,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":55006,"byte_end":55075,"line_start":867,"line_end":867,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":55080,"byte_end":55091,"line_start":868,"line_end":868,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":138},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59667,"byte_end":59677,"line_start":1061,"line_end":1061,"column_start":12,"column_end":22},"name":"IoSliceMut","qualname":"::buf::buf_mut::IoSliceMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" A buffer type used for `readv`.","sig":null,"attributes":[{"value":"/ A buffer type used for `readv`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59188,"byte_end":59223,"line_start":1051,"line_end":1051,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59224,"byte_end":59227,"line_start":1052,"line_end":1052,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper around an `std::io::IoSliceMut`, but does not expose","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59228,"byte_end":59302,"line_start":1053,"line_end":1053,"column_start":1,"column_end":75}},{"value":"/ the inner bytes in a safe API, as they may point at uninitialized memory.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59303,"byte_end":59380,"line_start":1054,"line_end":1054,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59381,"byte_end":59384,"line_start":1055,"line_end":1055,"column_start":1,"column_end":4}},{"value":"/ This is `repr(transparent)` of the `std::io::IoSliceMut`, so it is valid to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59385,"byte_end":59464,"line_start":1056,"line_end":1056,"column_start":1,"column_end":80}},{"value":"/ transmute them. However, as the memory might be uninitialized, care must be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59465,"byte_end":59544,"line_start":1057,"line_end":1057,"column_start":1,"column_end":80}},{"value":"/ taken to not *read* the internal bytes, only *write* to them.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59545,"byte_end":59610,"line_start":1058,"line_end":1058,"column_start":1,"column_end":66}},{"value":"repr(transparent)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59611,"byte_end":59631,"line_start":1059,"line_end":1059,"column_start":1,"column_end":21}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59632,"byte_end":59655,"line_start":1060,"line_end":1060,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":150},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::buf::ext","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":194},{"krate":0,"index":213},{"krate":0,"index":233},{"krate":0,"index":250},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":284}],"decl_id":null,"docs":" Extra utilities for `Buf` and `BufMut` types.\n","sig":null,"attributes":[{"value":"! Extra utilities for `Buf` and `BufMut` types.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":60527,"byte_end":60576,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":923},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66267,"byte_end":66272,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"Chain","qualname":"::buf::ext::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927}],"decl_id":null,"docs":" A `Chain` sequences two buffers.","sig":null,"attributes":[{"value":"/ A `Chain` sequences two buffers.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":65490,"byte_end":65526,"line_start":11,"line_end":11,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":65527,"byte_end":65530,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Chain` is an adapter that links two underlying buffers and provides a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":65531,"byte_end":65605,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ continuous view across both buffers. It is able to sequence either immutable","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":65606,"byte_end":65686,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ buffers ([`Buf`] values) or mutable buffers ([`BufMut`] values).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":65687,"byte_end":65755,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":65756,"byte_end":65759,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`Buf::chain`]. Please see that","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":65760,"byte_end":65839,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ function's documentation for more detail.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":65840,"byte_end":65885,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":65886,"byte_end":65889,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":65890,"byte_end":65904,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":65905,"byte_end":65908,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":65909,"byte_end":65916,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use bytes::{Bytes, Buf, buf::BufExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":65917,"byte_end":65958,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":65959,"byte_end":65962,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut buf = (&b\"hello \"[..])","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":65963,"byte_end":65997,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":65998,"byte_end":66028,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66029,"byte_end":66032,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let full: Bytes = buf.to_bytes();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66033,"byte_end":66070,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(full[..], b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66071,"byte_end":66116,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66117,"byte_end":66124,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66125,"byte_end":66128,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`Buf::chain`]: trait.Buf.html#method.chain","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66129,"byte_end":66176,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66177,"byte_end":66204,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/ [`BufMut`]: trait.BufMut.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66205,"byte_end":66238,"line_start":34,"line_end":34,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66402,"byte_end":66405,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Chain<T, U>>::new","value":"fn (a: T, b: U) -> Chain<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Chain` sequencing the provided values.\n","sig":null,"attributes":[{"value":"/ Creates a new `Chain` sequencing the provided values.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66333,"byte_end":66390,"line_start":42,"line_end":42,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66796,"byte_end":66805,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"first_ref","qualname":"<Chain<T, U>>::first_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the first underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the first underlying `Buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66502,"byte_end":66553,"line_start":50,"line_end":50,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66558,"byte_end":66561,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66566,"byte_end":66580,"line_start":52,"line_end":52,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66585,"byte_end":66588,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66593,"byte_end":66600,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"/ use bytes::buf::BufExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66605,"byte_end":66632,"line_start":55,"line_end":55,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66637,"byte_end":66640,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ let buf = (&b\"hello\"[..])","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66645,"byte_end":66674,"line_start":57,"line_end":57,"column_start":5,"column_end":34}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66679,"byte_end":66709,"line_start":58,"line_end":58,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66714,"byte_end":66717,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.first_ref()[..], b\"hello\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66722,"byte_end":66772,"line_start":60,"line_end":60,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66777,"byte_end":66784,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67229,"byte_end":67238,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<Chain<T, U>>::first_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the first underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the first underlying `Buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66848,"byte_end":66907,"line_start":66,"line_end":66,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66912,"byte_end":66915,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66920,"byte_end":66934,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66939,"byte_end":66942,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66947,"byte_end":66954,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Buf, buf::BufExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66959,"byte_end":66993,"line_start":71,"line_end":71,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66998,"byte_end":67001,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let mut buf = (&b\"hello\"[..])","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67006,"byte_end":67039,"line_start":73,"line_end":73,"column_start":5,"column_end":38}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67044,"byte_end":67074,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67079,"byte_end":67082,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ buf.first_mut().advance(1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67087,"byte_end":67118,"line_start":76,"line_end":76,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67123,"byte_end":67126,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ let full = buf.to_bytes();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67131,"byte_end":67161,"line_start":78,"line_end":78,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(full, b\"elloworld\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67166,"byte_end":67205,"line_start":79,"line_end":79,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67210,"byte_end":67217,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67585,"byte_end":67593,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"last_ref","qualname":"<Chain<T, U>>::last_ref","value":"fn (&self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the last underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the last underlying `Buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67293,"byte_end":67343,"line_start":85,"line_end":85,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67348,"byte_end":67351,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67356,"byte_end":67370,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67375,"byte_end":67378,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67383,"byte_end":67390,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use bytes::buf::BufExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67395,"byte_end":67422,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67427,"byte_end":67430,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let buf = (&b\"hello\"[..])","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67435,"byte_end":67464,"line_start":92,"line_end":92,"column_start":5,"column_end":34}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67469,"byte_end":67499,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67504,"byte_end":67507,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.last_ref()[..], b\"world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67512,"byte_end":67561,"line_start":95,"line_end":95,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67566,"byte_end":67573,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68017,"byte_end":68025,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<Chain<T, U>>::last_mut","value":"fn (&mut self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the last underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the last underlying `Buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67636,"byte_end":67694,"line_start":101,"line_end":101,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67699,"byte_end":67702,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67707,"byte_end":67721,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67726,"byte_end":67729,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67734,"byte_end":67741,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Buf, buf::BufExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67746,"byte_end":67780,"line_start":106,"line_end":106,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67785,"byte_end":67788,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let mut buf = (&b\"hello \"[..])","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67793,"byte_end":67827,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67832,"byte_end":67862,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67867,"byte_end":67870,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ buf.last_mut().advance(1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67875,"byte_end":67905,"line_start":111,"line_end":111,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67910,"byte_end":67913,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let full = buf.to_bytes();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67918,"byte_end":67948,"line_start":113,"line_end":113,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(full, b\"hello orld\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67953,"byte_end":67993,"line_start":114,"line_end":114,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":67998,"byte_end":68005,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68466,"byte_end":68476,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn (self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Chain`, returning the underlying values.","sig":null,"attributes":[{"value":"/ Consumes this `Chain`, returning the underlying values.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68080,"byte_end":68139,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68144,"byte_end":68147,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68152,"byte_end":68166,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68171,"byte_end":68174,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68179,"byte_end":68186,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ use bytes::buf::BufExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68191,"byte_end":68218,"line_start":125,"line_end":125,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68223,"byte_end":68226,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let chain = (&b\"hello\"[..])","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68231,"byte_end":68262,"line_start":127,"line_end":127,"column_start":5,"column_end":36}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68267,"byte_end":68297,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68302,"byte_end":68305,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let (first, last) = chain.into_inner();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68310,"byte_end":68353,"line_start":130,"line_end":130,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(first[..], b\"hello\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68358,"byte_end":68398,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(last[..], b\"world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68403,"byte_end":68442,"line_start":132,"line_end":132,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68447,"byte_end":68454,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":932},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":70832,"byte_end":70837,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Limit","qualname":"::buf::ext::limit::Limit","value":"Limit {  }","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935}],"decl_id":null,"docs":" A `BufMut` adapter which limits the amount of bytes that can be written\n to an underlying buffer.\n","sig":null,"attributes":[{"value":"/ A `BufMut` adapter which limits the amount of bytes that can be written","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":70699,"byte_end":70774,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ to an underlying buffer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":70775,"byte_end":70803,"line_start":6,"line_end":6,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71081,"byte_end":71091,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Limit<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Limit`, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this `Limit`, returning the underlying value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71011,"byte_end":71069,"line_start":21,"line_end":21,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71275,"byte_end":71282,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Limit<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `BufMut`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71135,"byte_end":71183,"line_start":26,"line_end":26,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71188,"byte_end":71191,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71196,"byte_end":71263,"line_start":28,"line_end":28,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71477,"byte_end":71484,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Limit<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `BufMut`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71329,"byte_end":71385,"line_start":33,"line_end":33,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71390,"byte_end":71393,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71398,"byte_end":71465,"line_start":35,"line_end":35,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71780,"byte_end":71785,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"limit","qualname":"<Limit<T>>::limit","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of bytes that can be written","sig":null,"attributes":[{"value":"/ Returns the maximum number of bytes that can be written","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71543,"byte_end":71602,"line_start":40,"line_end":40,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71607,"byte_end":71610,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71615,"byte_end":71625,"line_start":42,"line_end":42,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71630,"byte_end":71633,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ If the inner `BufMut` has fewer bytes than indicated by this method then","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71638,"byte_end":71714,"line_start":44,"line_end":44,"column_start":5,"column_end":81}},{"value":"/ that is the actual number of available bytes.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71719,"byte_end":71768,"line_start":45,"line_end":45,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":72050,"byte_end":72059,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Limit<T>>::set_limit","value":"fn (&mut self, lim: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of bytes that can be written.","sig":null,"attributes":[{"value":"/ Sets the maximum number of bytes that can be written.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71834,"byte_end":71891,"line_start":50,"line_end":50,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71896,"byte_end":71899,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71904,"byte_end":71914,"line_start":52,"line_end":52,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71919,"byte_end":71922,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ If the inner `BufMut` has fewer bytes than `lim` then that is the actual","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":71927,"byte_end":72003,"line_start":54,"line_end":54,"column_start":5,"column_end":81}},{"value":"/ number of available bytes.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":72008,"byte_end":72038,"line_start":55,"line_end":55,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":939},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":72906,"byte_end":72912,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Reader","qualname":"::buf::ext::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":941}],"decl_id":null,"docs":" A `Buf` adapter which implements `io::Read` for the inner value.","sig":null,"attributes":[{"value":"/ A `Buf` adapter which implements `io::Read` for the inner value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":72646,"byte_end":72714,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":72715,"byte_end":72718,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling `reader()` on `Buf`. See","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":72719,"byte_end":72791,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ documentation of [`reader()`](trait.Buf.html#method.reader) for more","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":72792,"byte_end":72864,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/ details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":72865,"byte_end":72877,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73365,"byte_end":73372,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Reader<B>>::get_ref","value":"fn (&self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `Buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73021,"byte_end":73066,"line_start":20,"line_end":20,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73071,"byte_end":73074,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73079,"byte_end":73144,"line_start":22,"line_end":22,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73149,"byte_end":73152,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73157,"byte_end":73171,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73176,"byte_end":73179,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73184,"byte_end":73195,"line_start":26,"line_end":26,"column_start":5,"column_end":16}},{"value":"/ use bytes::buf::BufExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73200,"byte_end":73227,"line_start":27,"line_end":27,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73232,"byte_end":73235,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".reader();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73240,"byte_end":73282,"line_start":29,"line_end":29,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73287,"byte_end":73290,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"hello world\", buf.get_ref());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73295,"byte_end":73341,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73346,"byte_end":73353,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73560,"byte_end":73567,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Reader<B>>::get_mut","value":"fn (&mut self) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `Buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73417,"byte_end":73470,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73475,"byte_end":73478,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73483,"byte_end":73548,"line_start":39,"line_end":39,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":74042,"byte_end":74052,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<B>>::into_inner","value":"fn (self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Reader`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `Reader`, returning the underlying value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73624,"byte_end":73683,"line_start":44,"line_end":44,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73688,"byte_end":73691,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73696,"byte_end":73710,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73715,"byte_end":73718,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73723,"byte_end":73734,"line_start":48,"line_end":48,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, buf::BufExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73739,"byte_end":73773,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/ use std::io;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73778,"byte_end":73794,"line_start":50,"line_end":50,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73799,"byte_end":73802,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".reader();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73807,"byte_end":73849,"line_start":52,"line_end":52,"column_start":5,"column_end":47}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73854,"byte_end":73879,"line_start":53,"line_end":53,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73884,"byte_end":73887,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ io::copy(&mut buf, &mut dst).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73892,"byte_end":73934,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73939,"byte_end":73942,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ let buf = buf.into_inner();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73947,"byte_end":73978,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(0, buf.remaining());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73983,"byte_end":74018,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":74023,"byte_end":74030,"line_start":59,"line_end":59,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":945},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":74850,"byte_end":74854,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Take","qualname":"::buf::ext::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948}],"decl_id":null,"docs":" A `Buf` adapter which limits the bytes read from an underlying buffer.","sig":null,"attributes":[{"value":"/ A `Buf` adapter which limits the bytes read from an underlying buffer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":74594,"byte_end":74668,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":74669,"byte_end":74672,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling `take()` on `Buf`. See","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":74673,"byte_end":74743,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ documentation of [`take()`](trait.Buf.html#method.take) for more details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":74744,"byte_end":74821,"line_start":8,"line_end":8,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75501,"byte_end":75511,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Take`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `Take`, returning the underlying value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75018,"byte_end":75075,"line_start":23,"line_end":23,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75080,"byte_end":75083,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75088,"byte_end":75102,"line_start":25,"line_end":25,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75107,"byte_end":75110,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75115,"byte_end":75126,"line_start":27,"line_end":27,"column_start":5,"column_end":16}},{"value":"/ use bytes::buf::{Buf, BufMut, BufExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75131,"byte_end":75173,"line_start":28,"line_end":28,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75178,"byte_end":75181,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75186,"byte_end":75227,"line_start":30,"line_end":30,"column_start":5,"column_end":46}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75232,"byte_end":75257,"line_start":31,"line_end":31,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75262,"byte_end":75265,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75270,"byte_end":75292,"line_start":33,"line_end":33,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"he\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75297,"byte_end":75329,"line_start":34,"line_end":34,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75334,"byte_end":75337,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let mut buf = buf.into_inner();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75342,"byte_end":75377,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75382,"byte_end":75385,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ dst.clear();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75390,"byte_end":75406,"line_start":38,"line_end":38,"column_start":5,"column_end":21}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75411,"byte_end":75433,"line_start":39,"line_end":39,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"llo world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75438,"byte_end":75477,"line_start":40,"line_end":40,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75482,"byte_end":75489,"line_start":41,"line_end":41,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75905,"byte_end":75912,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `Buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75555,"byte_end":75600,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75605,"byte_end":75608,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75613,"byte_end":75678,"line_start":48,"line_end":48,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75683,"byte_end":75686,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75691,"byte_end":75705,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75710,"byte_end":75713,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75718,"byte_end":75729,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, buf::BufExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75734,"byte_end":75768,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75773,"byte_end":75776,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75781,"byte_end":75822,"line_start":55,"line_end":55,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75827,"byte_end":75830,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(11, buf.get_ref().remaining());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75835,"byte_end":75881,"line_start":57,"line_end":57,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75886,"byte_end":75893,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76410,"byte_end":76417,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `Buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75959,"byte_end":76012,"line_start":63,"line_end":63,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76017,"byte_end":76020,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76025,"byte_end":76090,"line_start":65,"line_end":65,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76095,"byte_end":76098,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76103,"byte_end":76117,"line_start":67,"line_end":67,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76122,"byte_end":76125,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76130,"byte_end":76141,"line_start":69,"line_end":69,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BufMut, buf::BufExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76146,"byte_end":76188,"line_start":70,"line_end":70,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76193,"byte_end":76196,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76201,"byte_end":76242,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76247,"byte_end":76272,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76277,"byte_end":76280,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ buf.get_mut().advance(2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76285,"byte_end":76314,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76319,"byte_end":76322,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76327,"byte_end":76349,"line_start":77,"line_end":77,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"ll\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76354,"byte_end":76386,"line_start":78,"line_end":78,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76391,"byte_end":76398,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76984,"byte_end":76989,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of bytes that can be read.","sig":null,"attributes":[{"value":"/ Returns the maximum number of bytes that can be read.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76476,"byte_end":76533,"line_start":84,"line_end":84,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76538,"byte_end":76541,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76546,"byte_end":76556,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76561,"byte_end":76564,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If the inner `Buf` has fewer bytes than indicated by this method then","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76569,"byte_end":76642,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ that is the actual number of available bytes.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76647,"byte_end":76696,"line_start":89,"line_end":89,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76701,"byte_end":76704,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76709,"byte_end":76723,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76728,"byte_end":76731,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76736,"byte_end":76747,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, buf::BufExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76752,"byte_end":76786,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76791,"byte_end":76794,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76799,"byte_end":76840,"line_start":96,"line_end":96,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76845,"byte_end":76848,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, buf.limit());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76853,"byte_end":76884,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(b'h', buf.get_u8());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76889,"byte_end":76924,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(1, buf.limit());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76929,"byte_end":76960,"line_start":100,"line_end":100,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":76965,"byte_end":76972,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77642,"byte_end":77651,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"fn (&mut self, lim: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of bytes that can be read.","sig":null,"attributes":[{"value":"/ Sets the maximum number of bytes that can be read.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77038,"byte_end":77092,"line_start":106,"line_end":106,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77097,"byte_end":77100,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77105,"byte_end":77115,"line_start":108,"line_end":108,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77120,"byte_end":77123,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ If the inner `Buf` has fewer bytes than `lim` then that is the actual","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77128,"byte_end":77201,"line_start":110,"line_end":110,"column_start":5,"column_end":78}},{"value":"/ number of available bytes.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77206,"byte_end":77236,"line_start":111,"line_end":111,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77241,"byte_end":77244,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77249,"byte_end":77263,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77268,"byte_end":77271,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77276,"byte_end":77287,"line_start":115,"line_end":115,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BufMut, buf::BufExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77292,"byte_end":77334,"line_start":116,"line_end":116,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77339,"byte_end":77342,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77347,"byte_end":77388,"line_start":118,"line_end":118,"column_start":5,"column_end":46}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77393,"byte_end":77418,"line_start":119,"line_end":119,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77423,"byte_end":77426,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77431,"byte_end":77453,"line_start":121,"line_end":121,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"he\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77458,"byte_end":77490,"line_start":122,"line_end":122,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77495,"byte_end":77498,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ dst.clear();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77503,"byte_end":77519,"line_start":124,"line_end":124,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77524,"byte_end":77527,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ buf.set_limit(3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77532,"byte_end":77553,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77558,"byte_end":77580,"line_start":127,"line_end":127,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"llo\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77585,"byte_end":77618,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77623,"byte_end":77630,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":952},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78423,"byte_end":78429,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Writer","qualname":"::buf::ext::writer::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":954}],"decl_id":null,"docs":" A `BufMut` adapter which implements `io::Write` for the inner value.","sig":null,"attributes":[{"value":"/ A `BufMut` adapter which implements `io::Write` for the inner value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78153,"byte_end":78225,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78226,"byte_end":78229,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling `writer()` on `BufMut`. See","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78230,"byte_end":78305,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ documentation of [`writer()`](trait.BufMut.html#method.writer) for more","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78306,"byte_end":78381,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ details.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78382,"byte_end":78394,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78904,"byte_end":78911,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Writer<B>>::get_ref","value":"fn (&self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `BufMut`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78541,"byte_end":78589,"line_start":20,"line_end":20,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78594,"byte_end":78597,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78602,"byte_end":78669,"line_start":22,"line_end":22,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78674,"byte_end":78677,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78682,"byte_end":78696,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78701,"byte_end":78704,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78709,"byte_end":78720,"line_start":26,"line_end":26,"column_start":5,"column_end":16}},{"value":"/ use bytes::buf::BufMutExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78725,"byte_end":78755,"line_start":27,"line_end":27,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78760,"byte_end":78763,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Vec::with_capacity(1024).writer();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78768,"byte_end":78820,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78825,"byte_end":78828,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1024, buf.get_ref().capacity());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78833,"byte_end":78880,"line_start":31,"line_end":31,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78885,"byte_end":78892,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79354,"byte_end":79361,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Writer<B>>::get_mut","value":"fn (&mut self) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `BufMut`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78956,"byte_end":79012,"line_start":37,"line_end":37,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79017,"byte_end":79020,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79025,"byte_end":79092,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79097,"byte_end":79100,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79105,"byte_end":79119,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79124,"byte_end":79127,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79132,"byte_end":79143,"line_start":43,"line_end":43,"column_start":5,"column_end":16}},{"value":"/ use bytes::buf::BufMutExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79148,"byte_end":79178,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79183,"byte_end":79186,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![].writer();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79191,"byte_end":79225,"line_start":46,"line_end":46,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79230,"byte_end":79233,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ buf.get_mut().reserve(1024);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79238,"byte_end":79270,"line_start":48,"line_end":48,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79275,"byte_end":79278,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1024, buf.get_ref().capacity());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79283,"byte_end":79330,"line_start":50,"line_end":50,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79335,"byte_end":79342,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79843,"byte_end":79853,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Writer<B>>::into_inner","value":"fn (self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Writer`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `Writer`, returning the underlying value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79418,"byte_end":79477,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79482,"byte_end":79485,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79490,"byte_end":79504,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79509,"byte_end":79512,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79517,"byte_end":79528,"line_start":60,"line_end":60,"column_start":5,"column_end":16}},{"value":"/ use bytes::buf::BufMutExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79533,"byte_end":79563,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79568,"byte_end":79584,"line_start":62,"line_end":62,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79589,"byte_end":79592,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![].writer();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79597,"byte_end":79631,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/ let mut src = &b\"hello world\"[..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79636,"byte_end":79674,"line_start":65,"line_end":65,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79679,"byte_end":79682,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ io::copy(&mut src, &mut buf).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79687,"byte_end":79729,"line_start":67,"line_end":67,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79734,"byte_end":79737,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let buf = buf.into_inner();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79742,"byte_end":79773,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(*buf, b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79778,"byte_end":79819,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79824,"byte_end":79831,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":272},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":60924,"byte_end":60930,"line_start":21,"line_end":21,"column_start":11,"column_end":17},"name":"BufExt","qualname":"::buf::ext::BufExt","value":"BufExt: Buf","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":276}],"decl_id":null,"docs":" Extra methods for implementations of `Buf`.\n","sig":null,"attributes":[{"value":"/ Extra methods for implementations of `Buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":60866,"byte_end":60913,"line_start":20,"line_end":20,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61528,"byte_end":61532,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"take","qualname":"::buf::ext::BufExt::take","value":"fn (self, limit: usize) -> Take<Self>","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":" Creates an adaptor which will read at most `limit` bytes from `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will read at most `limit` bytes from `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":60942,"byte_end":61015,"line_start":22,"line_end":22,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61020,"byte_end":61023,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This function returns a new instance of `Buf` which will read at most","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61028,"byte_end":61101,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ `limit` bytes.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61106,"byte_end":61124,"line_start":25,"line_end":25,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61129,"byte_end":61132,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61137,"byte_end":61151,"line_start":27,"line_end":27,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61156,"byte_end":61159,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61164,"byte_end":61171,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Buf, BufMut, buf::BufExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61176,"byte_end":61218,"line_start":30,"line_end":30,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61223,"byte_end":61226,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\"[..].take(5);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61231,"byte_end":61276,"line_start":32,"line_end":32,"column_start":5,"column_end":50}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61281,"byte_end":61306,"line_start":33,"line_end":33,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61311,"byte_end":61314,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61319,"byte_end":61341,"line_start":35,"line_end":35,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(dst, b\"hello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61346,"byte_end":61376,"line_start":36,"line_end":36,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61381,"byte_end":61384,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let mut buf = buf.into_inner();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61389,"byte_end":61424,"line_start":38,"line_end":38,"column_start":5,"column_end":40}},{"value":"/ dst.clear();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61429,"byte_end":61445,"line_start":39,"line_end":39,"column_start":5,"column_end":21}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61450,"byte_end":61472,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(dst, b\" world\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61477,"byte_end":61508,"line_start":41,"line_end":41,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61513,"byte_end":61520,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62128,"byte_end":62133,"line_start":64,"line_end":64,"column_start":8,"column_end":13},"name":"chain","qualname":"::buf::ext::BufExt::chain","value":"fn <U> (self, next: U) -> Chain<Self, U>","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this buffer with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this buffer with another.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61641,"byte_end":61706,"line_start":49,"line_end":49,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61711,"byte_end":61714,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The returned `Buf` instance will first consume all bytes from `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61719,"byte_end":61792,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ Afterwards the output is equivalent to the output of next.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61797,"byte_end":61859,"line_start":52,"line_end":52,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61864,"byte_end":61867,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61872,"byte_end":61886,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61891,"byte_end":61894,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61899,"byte_end":61906,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Buf, buf::BufExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61911,"byte_end":61945,"line_start":57,"line_end":57,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61950,"byte_end":61953,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let mut chain = b\"hello \"[..].chain(&b\"world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":61958,"byte_end":62013,"line_start":59,"line_end":59,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62018,"byte_end":62021,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ let full = chain.to_bytes();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62026,"byte_end":62058,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(full.bytes(), b\"hello world\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62063,"byte_end":62108,"line_start":62,"line_end":62,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62113,"byte_end":62120,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63031,"byte_end":63037,"line_start":94,"line_end":94,"column_start":8,"column_end":14},"name":"reader","qualname":"::buf::ext::BufExt::reader","value":"fn (self) -> Reader<Self>","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":" Creates an adaptor which implements the `Read` trait for `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which implements the `Read` trait for `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62249,"byte_end":62317,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62322,"byte_end":62325,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This function returns a new value which implements `Read` by adapting","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62330,"byte_end":62403,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ the `Read` trait functions to the `Buf` trait functions. Given that","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62408,"byte_end":62479,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ `Buf` operations are infallible, none of the `Read` functions will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62484,"byte_end":62554,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ return with `Err`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62559,"byte_end":62581,"line_start":75,"line_end":75,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62586,"byte_end":62589,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62594,"byte_end":62608,"line_start":77,"line_end":77,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62613,"byte_end":62616,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62621,"byte_end":62628,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Buf, Bytes, buf::BufExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62633,"byte_end":62674,"line_start":80,"line_end":80,"column_start":5,"column_end":46}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62679,"byte_end":62701,"line_start":81,"line_end":81,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62706,"byte_end":62709,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from(\"hello world\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62714,"byte_end":62755,"line_start":83,"line_end":83,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62760,"byte_end":62763,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let mut reader = buf.reader();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62768,"byte_end":62802,"line_start":85,"line_end":85,"column_start":5,"column_end":39}},{"value":"/ let mut dst = [0; 1024];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62807,"byte_end":62835,"line_start":86,"line_end":86,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62840,"byte_end":62843,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let num = reader.read(&mut dst).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62848,"byte_end":62893,"line_start":88,"line_end":88,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62898,"byte_end":62901,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(11, num);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62906,"byte_end":62930,"line_start":90,"line_end":90,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(&dst[..11], &b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62935,"byte_end":62983,"line_start":91,"line_end":91,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":62988,"byte_end":62995,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63000,"byte_end":63023,"line_start":93,"line_end":93,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":279},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63215,"byte_end":63224,"line_start":102,"line_end":102,"column_start":11,"column_end":20},"name":"BufMutExt","qualname":"::buf::ext::BufMutExt","value":"BufMutExt: BufMut","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282}],"decl_id":null,"docs":" Extra methods for implementations of `BufMut`.\n","sig":null,"attributes":[{"value":"/ Extra methods for implementations of `BufMut`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63154,"byte_end":63204,"line_start":101,"line_end":101,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63601,"byte_end":63606,"line_start":116,"line_end":116,"column_start":8,"column_end":13},"name":"limit","qualname":"::buf::ext::BufMutExt::limit","value":"fn (self, limit: usize) -> Limit<Self>","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Creates an adaptor which can write at most `limit` bytes to `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which can write at most `limit` bytes to `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63239,"byte_end":63310,"line_start":103,"line_end":103,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63315,"byte_end":63318,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63323,"byte_end":63337,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63342,"byte_end":63345,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63350,"byte_end":63357,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BufMut, buf::BufMutExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63362,"byte_end":63402,"line_start":108,"line_end":108,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63407,"byte_end":63410,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let arr = &mut [0u8; 128][..];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63415,"byte_end":63449,"line_start":110,"line_end":110,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(arr.remaining_mut(), 128);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63454,"byte_end":63495,"line_start":111,"line_end":111,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63500,"byte_end":63503,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let dst = arr.limit(10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63508,"byte_end":63536,"line_start":113,"line_end":113,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(dst.remaining_mut(), 10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63541,"byte_end":63581,"line_start":114,"line_end":114,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63586,"byte_end":63593,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64468,"byte_end":64474,"line_start":145,"line_end":145,"column_start":8,"column_end":14},"name":"writer","qualname":"::buf::ext::BufMutExt::writer","value":"fn (self) -> Writer<Self>","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Creates an adaptor which implements the `Write` trait for `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which implements the `Write` trait for `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63717,"byte_end":63786,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63791,"byte_end":63794,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function returns a new value which implements `Write` by adapting","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63799,"byte_end":63873,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/ the `Write` trait functions to the `BufMut` trait functions. Given that","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63878,"byte_end":63953,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/ `BufMut` operations are infallible, none of the `Write` functions will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63958,"byte_end":64032,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ return with `Err`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64037,"byte_end":64059,"line_start":127,"line_end":127,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64064,"byte_end":64067,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64072,"byte_end":64086,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64091,"byte_end":64094,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64099,"byte_end":64106,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BufMut, buf::BufMutExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64111,"byte_end":64151,"line_start":132,"line_end":132,"column_start":5,"column_end":45}},{"value":"/ use std::io::Write;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64156,"byte_end":64179,"line_start":133,"line_end":133,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64184,"byte_end":64187,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![].writer();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64192,"byte_end":64226,"line_start":135,"line_end":135,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64231,"byte_end":64234,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let num = buf.write(&b\"hello world\"[..]).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64239,"byte_end":64293,"line_start":137,"line_end":137,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(11, num);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64298,"byte_end":64322,"line_start":138,"line_end":138,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64327,"byte_end":64330,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ let buf = buf.into_inner();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64335,"byte_end":64366,"line_start":140,"line_end":140,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64371,"byte_end":64374,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*buf, b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64379,"byte_end":64420,"line_start":142,"line_end":142,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64425,"byte_end":64432,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64437,"byte_end":64460,"line_start":144,"line_end":144,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":65136,"byte_end":65145,"line_start":169,"line_end":169,"column_start":8,"column_end":17},"name":"chain_mut","qualname":"::buf::ext::BufMutExt::chain_mut","value":"fn <U> (self, next: U) -> Chain<Self, U>","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Creates an adapter which will chain this buffer with another.","sig":null,"attributes":[{"value":"/ Creates an adapter which will chain this buffer with another.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64554,"byte_end":64619,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64624,"byte_end":64627,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ The returned `BufMut` instance will first write to all bytes from","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64632,"byte_end":64701,"line_start":151,"line_end":151,"column_start":5,"column_end":74}},{"value":"/ `self`. Afterwards, it will write to `next`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64706,"byte_end":64754,"line_start":152,"line_end":152,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64759,"byte_end":64762,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64767,"byte_end":64781,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64786,"byte_end":64789,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64794,"byte_end":64801,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BufMut, buf::BufMutExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64806,"byte_end":64846,"line_start":157,"line_end":157,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64851,"byte_end":64854,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let mut a = [0u8; 5];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64859,"byte_end":64884,"line_start":159,"line_end":159,"column_start":5,"column_end":30}},{"value":"/ let mut b = [0u8; 6];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64889,"byte_end":64914,"line_start":160,"line_end":160,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64919,"byte_end":64922,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let mut chain = (&mut a[..]).chain_mut(&mut b[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64927,"byte_end":64982,"line_start":162,"line_end":162,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64987,"byte_end":64990,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ chain.put_slice(b\"hello world\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":64995,"byte_end":65031,"line_start":164,"line_end":164,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":65036,"byte_end":65039,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"hello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":65044,"byte_end":65077,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&b[..], b\" world\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":65082,"byte_end":65116,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":65121,"byte_end":65128,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":958},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80757,"byte_end":80765,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::buf::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":960}],"decl_id":null,"docs":" Iterator over the bytes contained by the buffer.","sig":null,"attributes":[{"value":"/ Iterator over the bytes contained by the buffer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80206,"byte_end":80258,"line_start":3,"line_end":3,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80259,"byte_end":80262,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`iter`] method on [`Buf`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80263,"byte_end":80324,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80325,"byte_end":80328,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80329,"byte_end":80343,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80344,"byte_end":80347,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80348,"byte_end":80364,"line_start":9,"line_end":9,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80365,"byte_end":80368,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80369,"byte_end":80376,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use bytes::{Buf, Bytes};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80377,"byte_end":80405,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80406,"byte_end":80409,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let buf = Bytes::from(&b\"abc\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80410,"byte_end":80449,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80450,"byte_end":80485,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80486,"byte_end":80489,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80490,"byte_end":80530,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(iter.next(), Some(b'b'));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80531,"byte_end":80571,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(iter.next(), Some(b'c'));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80572,"byte_end":80612,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80613,"byte_end":80647,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80648,"byte_end":80655,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80656,"byte_end":80659,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: trait.Buf.html#method.iter","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80660,"byte_end":80700,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80701,"byte_end":80728,"line_start":24,"line_end":24,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81294,"byte_end":81297,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<IntoIter<T>>::new","value":"fn (inner: T) -> IntoIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator over the bytes contained by the buffer.","sig":null,"attributes":[{"value":"/ Creates an iterator over the bytes contained by the buffer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80814,"byte_end":80877,"line_start":31,"line_end":31,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80882,"byte_end":80885,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80890,"byte_end":80904,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80909,"byte_end":80912,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80917,"byte_end":80924,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Buf, Bytes};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80929,"byte_end":80957,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"/ use bytes::buf::IntoIter;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80962,"byte_end":80991,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80996,"byte_end":80999,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from_static(b\"abc\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81004,"byte_end":81045,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/ let mut iter = IntoIter::new(buf);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81050,"byte_end":81088,"line_start":40,"line_end":40,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81093,"byte_end":81096,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81101,"byte_end":81141,"line_start":42,"line_end":42,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(iter.next(), Some(b'b'));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81146,"byte_end":81186,"line_start":43,"line_end":43,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(iter.next(), Some(b'c'));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81191,"byte_end":81231,"line_start":44,"line_end":44,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81236,"byte_end":81270,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81275,"byte_end":81282,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81761,"byte_end":81771,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoIter<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `IntoIter`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `IntoIter`, returning the underlying value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81362,"byte_end":81423,"line_start":50,"line_end":50,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81428,"byte_end":81431,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81436,"byte_end":81450,"line_start":52,"line_end":52,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81455,"byte_end":81458,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81463,"byte_end":81474,"line_start":54,"line_end":54,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, Bytes};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81479,"byte_end":81507,"line_start":55,"line_end":55,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81512,"byte_end":81515,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from(&b\"abc\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81520,"byte_end":81559,"line_start":57,"line_end":57,"column_start":5,"column_end":44}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81564,"byte_end":81599,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81604,"byte_end":81607,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81612,"byte_end":81652,"line_start":60,"line_end":60,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81657,"byte_end":81660,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let buf = iter.into_inner();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81665,"byte_end":81697,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(2, buf.remaining());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81702,"byte_end":81737,"line_start":63,"line_end":63,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81742,"byte_end":81749,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82250,"byte_end":82257,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<IntoIter<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `Buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81815,"byte_end":81860,"line_start":69,"line_end":69,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81865,"byte_end":81868,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81873,"byte_end":81938,"line_start":71,"line_end":71,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81943,"byte_end":81946,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81951,"byte_end":81965,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81970,"byte_end":81973,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81978,"byte_end":81989,"line_start":75,"line_end":75,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, Bytes};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":81994,"byte_end":82022,"line_start":76,"line_end":76,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82027,"byte_end":82030,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from(&b\"abc\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82035,"byte_end":82074,"line_start":78,"line_end":78,"column_start":5,"column_end":44}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82079,"byte_end":82114,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82119,"byte_end":82122,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82127,"byte_end":82167,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82172,"byte_end":82175,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, iter.get_ref().remaining());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82180,"byte_end":82226,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82231,"byte_end":82238,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82790,"byte_end":82797,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IntoIter<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `Buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82304,"byte_end":82357,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82362,"byte_end":82365,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82370,"byte_end":82435,"line_start":91,"line_end":91,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82440,"byte_end":82443,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82448,"byte_end":82462,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82467,"byte_end":82470,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82475,"byte_end":82486,"line_start":95,"line_end":95,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BytesMut};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82491,"byte_end":82522,"line_start":96,"line_end":96,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82527,"byte_end":82530,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let buf = BytesMut::from(&b\"abc\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82535,"byte_end":82577,"line_start":98,"line_end":98,"column_start":5,"column_end":47}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82582,"byte_end":82617,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82622,"byte_end":82625,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82630,"byte_end":82670,"line_start":101,"line_end":101,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82675,"byte_end":82678,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ iter.get_mut().advance(1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82683,"byte_end":82713,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82718,"byte_end":82721,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'c'));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82726,"byte_end":82766,"line_start":105,"line_end":105,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82771,"byte_end":82778,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":357},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":85175,"byte_end":85183,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"BytesMut","qualname":"::bytes_mut::BytesMut","value":"BytesMut {  }","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361}],"decl_id":null,"docs":" A unique reference to a contiguous slice of memory.","sig":null,"attributes":[{"value":"/ A unique reference to a contiguous slice of memory.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84139,"byte_end":84194,"line_start":15,"line_end":15,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84195,"byte_end":84198,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `BytesMut` represents a unique view into a potentially shared memory region.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84199,"byte_end":84279,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ Given the uniqueness guarantee, owners of `BytesMut` handles are able to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84280,"byte_end":84356,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ mutate the memory. It is similar to a `Vec<u8>` but with less copies and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84357,"byte_end":84433,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ allocations.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84434,"byte_end":84450,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84451,"byte_end":84454,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Growth","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84455,"byte_end":84467,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84468,"byte_end":84471,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `BytesMut`'s `BufMut` implementation will implicitly grow its buffer as","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84472,"byte_end":84547,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ necessary. However, explicitly reserving the required space up-front before","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84548,"byte_end":84627,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ a series of inserts will be more efficient.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84628,"byte_end":84675,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84676,"byte_end":84679,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84680,"byte_end":84694,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84695,"byte_end":84698,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84699,"byte_end":84706,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84707,"byte_end":84741,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84742,"byte_end":84745,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::with_capacity(64);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84746,"byte_end":84792,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84793,"byte_end":84796,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ buf.put_u8(b'h');","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84797,"byte_end":84818,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/ buf.put_u8(b'e');","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84819,"byte_end":84840,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ buf.put(&b\"llo\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84841,"byte_end":84866,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84867,"byte_end":84870,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&buf[..], b\"hello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84871,"byte_end":84906,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84907,"byte_end":84910,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // Freeze the buffer so that it can be shared","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84911,"byte_end":84960,"line_start":41,"line_end":41,"column_start":1,"column_end":50}},{"value":"/ let a = buf.freeze();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84961,"byte_end":84986,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84987,"byte_end":84990,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // This does not allocate, instead `b` points to the same memory.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":84991,"byte_end":85060,"line_start":44,"line_end":44,"column_start":1,"column_end":70}},{"value":"/ let b = a.clone();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":85061,"byte_end":85083,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":85084,"byte_end":85087,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&a[..], b\"hello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":85088,"byte_end":85121,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":85122,"byte_end":85155,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":85156,"byte_end":85163,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88003,"byte_end":88016,"line_start":132,"line_end":132,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BytesMut>::with_capacity","value":"fn (capacity: usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BytesMut` with the specified capacity.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87187,"byte_end":87244,"line_start":108,"line_end":108,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87249,"byte_end":87252,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ The returned `BytesMut` will be able to hold at least `capacity` bytes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87257,"byte_end":87331,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ without reallocating. If `capacity` is under `4 * size_of::<usize>() - 1`,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87336,"byte_end":87414,"line_start":111,"line_end":111,"column_start":5,"column_end":83}},{"value":"/ then `BytesMut` will not allocate.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87419,"byte_end":87457,"line_start":112,"line_end":112,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87462,"byte_end":87465,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ It is important to note that this function does not specify the length","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87470,"byte_end":87544,"line_start":114,"line_end":114,"column_start":5,"column_end":79}},{"value":"/ of the returned `BytesMut`, but only the capacity.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87549,"byte_end":87603,"line_start":115,"line_end":115,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87608,"byte_end":87611,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87616,"byte_end":87630,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87635,"byte_end":87638,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87643,"byte_end":87650,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87655,"byte_end":87689,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87694,"byte_end":87697,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let mut bytes = BytesMut::with_capacity(64);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87702,"byte_end":87750,"line_start":122,"line_end":122,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87755,"byte_end":87758,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ // `bytes` contains no data, even though there is capacity","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87763,"byte_end":87825,"line_start":124,"line_end":124,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(bytes.len(), 0);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87830,"byte_end":87861,"line_start":125,"line_end":125,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87866,"byte_end":87869,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ bytes.put(&b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87874,"byte_end":87909,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87914,"byte_end":87917,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&bytes[..], b\"hello world\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87922,"byte_end":87965,"line_start":129,"line_end":129,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87970,"byte_end":87977,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87982,"byte_end":87991,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88615,"byte_end":88618,"line_start":156,"line_end":156,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesMut>::new","value":"fn () -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut` with default capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BytesMut` with default capacity.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88116,"byte_end":88167,"line_start":136,"line_end":136,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88172,"byte_end":88175,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Resulting object has length 0 and unspecified capacity.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88180,"byte_end":88239,"line_start":138,"line_end":138,"column_start":5,"column_end":64}},{"value":"/ This function does not allocate.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88244,"byte_end":88280,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88285,"byte_end":88288,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88293,"byte_end":88307,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88312,"byte_end":88315,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88320,"byte_end":88327,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88332,"byte_end":88366,"line_start":144,"line_end":144,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88371,"byte_end":88374,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let mut bytes = BytesMut::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88379,"byte_end":88415,"line_start":146,"line_end":146,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88420,"byte_end":88423,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, bytes.len());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88428,"byte_end":88459,"line_start":148,"line_end":148,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88464,"byte_end":88467,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ bytes.reserve(2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88472,"byte_end":88493,"line_start":150,"line_end":150,"column_start":5,"column_end":26}},{"value":"/ bytes.put_slice(b\"xy\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88498,"byte_end":88525,"line_start":151,"line_end":151,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88530,"byte_end":88533,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b\"xy\"[..], &bytes[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88538,"byte_end":88577,"line_start":153,"line_end":153,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88582,"byte_end":88589,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88594,"byte_end":88603,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88943,"byte_end":88946,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"len","qualname":"<BytesMut>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `BytesMut`.","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in this `BytesMut`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88681,"byte_end":88742,"line_start":160,"line_end":160,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88747,"byte_end":88750,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88755,"byte_end":88769,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88774,"byte_end":88777,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88782,"byte_end":88789,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88794,"byte_end":88818,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88823,"byte_end":88826,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let b = BytesMut::from(&b\"hello\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88831,"byte_end":88873,"line_start":167,"line_end":167,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(b.len(), 5);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88878,"byte_end":88905,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88910,"byte_end":88917,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88922,"byte_end":88931,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89244,"byte_end":89252,"line_start":186,"line_end":186,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BytesMut>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `BytesMut` has a length of 0.","sig":null,"attributes":[{"value":"/ Returns true if the `BytesMut` has a length of 0.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":88993,"byte_end":89046,"line_start":175,"line_end":175,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89051,"byte_end":89054,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89059,"byte_end":89073,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89078,"byte_end":89081,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89086,"byte_end":89093,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89098,"byte_end":89122,"line_start":180,"line_end":180,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89127,"byte_end":89130,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let b = BytesMut::with_capacity(64);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89135,"byte_end":89175,"line_start":182,"line_end":182,"column_start":5,"column_end":45}},{"value":"/ assert!(b.is_empty());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89180,"byte_end":89206,"line_start":183,"line_end":183,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89211,"byte_end":89218,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89223,"byte_end":89232,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89585,"byte_end":89593,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BytesMut>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes the `BytesMut` can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of bytes the `BytesMut` can hold without reallocating.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89303,"byte_end":89380,"line_start":190,"line_end":190,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89385,"byte_end":89388,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89393,"byte_end":89407,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89412,"byte_end":89415,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89420,"byte_end":89427,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89432,"byte_end":89456,"line_start":195,"line_end":195,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89461,"byte_end":89464,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let b = BytesMut::with_capacity(64);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89469,"byte_end":89509,"line_start":197,"line_end":197,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(b.capacity(), 64);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89514,"byte_end":89547,"line_start":198,"line_end":198,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89552,"byte_end":89559,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89564,"byte_end":89573,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":90409,"byte_end":90415,"line_start":230,"line_end":230,"column_start":12,"column_end":18},"name":"freeze","qualname":"<BytesMut>::freeze","value":"fn (mut self) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an immutable `Bytes`.","sig":null,"attributes":[{"value":"/ Converts `self` into an immutable `Bytes`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89640,"byte_end":89686,"line_start":205,"line_end":205,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89691,"byte_end":89694,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ The conversion is zero cost and is used to indicate that the slice","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89699,"byte_end":89769,"line_start":207,"line_end":207,"column_start":5,"column_end":75}},{"value":"/ referenced by the handle will no longer be mutated. Once the conversion","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89774,"byte_end":89849,"line_start":208,"line_end":208,"column_start":5,"column_end":80}},{"value":"/ is done, the handle can be cloned and shared across threads.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89854,"byte_end":89918,"line_start":209,"line_end":209,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89923,"byte_end":89926,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89931,"byte_end":89945,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89950,"byte_end":89953,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89958,"byte_end":89965,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":89970,"byte_end":90004,"line_start":214,"line_end":214,"column_start":5,"column_end":39}},{"value":"/ use std::thread;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":90009,"byte_end":90029,"line_start":215,"line_end":215,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":90034,"byte_end":90037,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut b = BytesMut::with_capacity(64);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":90042,"byte_end":90086,"line_start":217,"line_end":217,"column_start":5,"column_end":49}},{"value":"/ b.put(&b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":90091,"byte_end":90122,"line_start":218,"line_end":218,"column_start":5,"column_end":36}},{"value":"/ let b1 = b.freeze();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":90127,"byte_end":90151,"line_start":219,"line_end":219,"column_start":5,"column_end":29}},{"value":"/ let b2 = b1.clone();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":90156,"byte_end":90180,"line_start":220,"line_end":220,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":90185,"byte_end":90188,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let th = thread::spawn(move || {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":90193,"byte_end":90229,"line_start":222,"line_end":222,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(&b1[..], b\"hello world\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":90234,"byte_end":90278,"line_start":223,"line_end":223,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":90283,"byte_end":90290,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":90295,"byte_end":90298,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b2[..], b\"hello world\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":90303,"byte_end":90343,"line_start":226,"line_end":226,"column_start":5,"column_end":45}},{"value":"/ th.join().unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":90348,"byte_end":90371,"line_start":227,"line_end":227,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":90376,"byte_end":90383,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":90388,"byte_end":90397,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91898,"byte_end":91907,"line_start":279,"line_end":279,"column_start":12,"column_end":21},"name":"split_off","qualname":"<BytesMut>::split_off","value":"fn (&mut self, at: usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the bytes into two at the given index.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91113,"byte_end":91162,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91167,"byte_end":91170,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[0, at)`, and the returned","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91175,"byte_end":91242,"line_start":254,"line_end":254,"column_start":5,"column_end":72}},{"value":"/ `BytesMut` contains elements `[at, capacity)`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91247,"byte_end":91297,"line_start":255,"line_end":255,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91302,"byte_end":91305,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91310,"byte_end":91381,"line_start":257,"line_end":257,"column_start":5,"column_end":76}},{"value":"/ and sets a few indices.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91386,"byte_end":91413,"line_start":258,"line_end":258,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91418,"byte_end":91421,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91426,"byte_end":91440,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91445,"byte_end":91448,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91453,"byte_end":91460,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91465,"byte_end":91489,"line_start":263,"line_end":263,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91494,"byte_end":91497,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let mut a = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91502,"byte_end":91554,"line_start":265,"line_end":265,"column_start":5,"column_end":57}},{"value":"/ let mut b = a.split_off(5);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91559,"byte_end":91590,"line_start":266,"line_end":266,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91595,"byte_end":91598,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ a[0] = b'j';","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91603,"byte_end":91619,"line_start":268,"line_end":268,"column_start":5,"column_end":21}},{"value":"/ b[0] = b'!';","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91624,"byte_end":91640,"line_start":269,"line_end":269,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91645,"byte_end":91648,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"jello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91653,"byte_end":91686,"line_start":271,"line_end":271,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&b[..], b\"!world\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91691,"byte_end":91725,"line_start":272,"line_end":272,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91730,"byte_end":91737,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91742,"byte_end":91745,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91750,"byte_end":91762,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91767,"byte_end":91770,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > capacity`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91775,"byte_end":91805,"line_start":277,"line_end":277,"column_start":5,"column_end":35}},{"value":"must_use = \"consider BytesMut::truncate if you don't need the other half\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":91810,"byte_end":91886,"line_start":278,"line_end":278,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93029,"byte_end":93034,"line_start":315,"line_end":315,"column_start":12,"column_end":17},"name":"split","qualname":"<BytesMut>::split","value":"fn (&mut self) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Removes the bytes from the current view, returning them in a new\n `BytesMut` handle.","sig":null,"attributes":[{"value":"/ Removes the bytes from the current view, returning them in a new","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92153,"byte_end":92221,"line_start":289,"line_end":289,"column_start":5,"column_end":73}},{"value":"/ `BytesMut` handle.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92226,"byte_end":92248,"line_start":290,"line_end":290,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92253,"byte_end":92256,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Afterwards, `self` will be empty, but will retain any additional","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92261,"byte_end":92329,"line_start":292,"line_end":292,"column_start":5,"column_end":73}},{"value":"/ capacity that it had before the operation. This is identical to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92334,"byte_end":92401,"line_start":293,"line_end":293,"column_start":5,"column_end":72}},{"value":"/ `self.split_to(self.len())`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92406,"byte_end":92438,"line_start":294,"line_end":294,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92443,"byte_end":92446,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92451,"byte_end":92526,"line_start":296,"line_end":296,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92531,"byte_end":92554,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92559,"byte_end":92562,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92567,"byte_end":92581,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92586,"byte_end":92589,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92594,"byte_end":92601,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92606,"byte_end":92640,"line_start":302,"line_end":302,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92645,"byte_end":92648,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(1024);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92653,"byte_end":92701,"line_start":304,"line_end":304,"column_start":5,"column_end":53}},{"value":"/ buf.put(&b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92706,"byte_end":92739,"line_start":305,"line_end":305,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92744,"byte_end":92747,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let other = buf.split();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92752,"byte_end":92780,"line_start":307,"line_end":307,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92785,"byte_end":92788,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92793,"byte_end":92821,"line_start":309,"line_end":309,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(1013, buf.capacity());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92826,"byte_end":92863,"line_start":310,"line_end":310,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92868,"byte_end":92871,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(other, b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92876,"byte_end":92918,"line_start":312,"line_end":312,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92923,"byte_end":92930,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"must_use =\n  \"consider BytesMut::advance(len()) if you don't need the other half\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":92935,"byte_end":93017,"line_start":314,"line_end":314,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93902,"byte_end":93910,"line_start":347,"line_end":347,"column_start":12,"column_end":20},"name":"split_to","qualname":"<BytesMut>::split_to","value":"fn (&mut self, at: usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Splits the buffer into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the buffer into two at the given index.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93128,"byte_end":93178,"line_start":320,"line_end":320,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93183,"byte_end":93186,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[at, len)`, and the returned `BytesMut`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93191,"byte_end":93271,"line_start":322,"line_end":322,"column_start":5,"column_end":85}},{"value":"/ contains elements `[0, at)`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93276,"byte_end":93308,"line_start":323,"line_end":323,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93313,"byte_end":93316,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93321,"byte_end":93396,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93401,"byte_end":93424,"line_start":326,"line_end":326,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93429,"byte_end":93432,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93437,"byte_end":93451,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93456,"byte_end":93459,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93464,"byte_end":93471,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93476,"byte_end":93500,"line_start":331,"line_end":331,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93505,"byte_end":93508,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let mut a = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93513,"byte_end":93565,"line_start":333,"line_end":333,"column_start":5,"column_end":57}},{"value":"/ let mut b = a.split_to(5);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93570,"byte_end":93600,"line_start":334,"line_end":334,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93605,"byte_end":93608,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ a[0] = b'!';","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93613,"byte_end":93629,"line_start":336,"line_end":336,"column_start":5,"column_end":21}},{"value":"/ b[0] = b'j';","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93634,"byte_end":93650,"line_start":337,"line_end":337,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93655,"byte_end":93658,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"!world\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93663,"byte_end":93697,"line_start":339,"line_end":339,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(&b[..], b\"jello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93702,"byte_end":93735,"line_start":340,"line_end":340,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93740,"byte_end":93747,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93752,"byte_end":93755,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93760,"byte_end":93772,"line_start":343,"line_end":343,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93777,"byte_end":93780,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93785,"byte_end":93810,"line_start":345,"line_end":345,"column_start":5,"column_end":30}},{"value":"must_use = \"consider BytesMut::advance if you don't need the other half\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":93815,"byte_end":93890,"line_start":346,"line_end":346,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94756,"byte_end":94764,"line_start":378,"line_end":378,"column_start":12,"column_end":20},"name":"truncate","qualname":"<BytesMut>::truncate","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, keeping the first `len` bytes and dropping the\n rest.","sig":null,"attributes":[{"value":"/ Shortens the buffer, keeping the first `len` bytes and dropping the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94152,"byte_end":94223,"line_start":358,"line_end":358,"column_start":5,"column_end":76}},{"value":"/ rest.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94228,"byte_end":94237,"line_start":359,"line_end":359,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94242,"byte_end":94245,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the buffer's current length, this has no","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94250,"byte_end":94319,"line_start":361,"line_end":361,"column_start":5,"column_end":74}},{"value":"/ effect.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94324,"byte_end":94335,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94340,"byte_end":94343,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ The [`split_off`] method can emulate `truncate`, but this causes the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94348,"byte_end":94420,"line_start":364,"line_end":364,"column_start":5,"column_end":77}},{"value":"/ excess bytes to be returned instead of dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94425,"byte_end":94476,"line_start":365,"line_end":365,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94481,"byte_end":94484,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94489,"byte_end":94503,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94508,"byte_end":94511,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94516,"byte_end":94523,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94528,"byte_end":94552,"line_start":370,"line_end":370,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94557,"byte_end":94560,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94565,"byte_end":94619,"line_start":372,"line_end":372,"column_start":5,"column_end":59}},{"value":"/ buf.truncate(5);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94624,"byte_end":94644,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(buf, b\"hello\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94649,"byte_end":94683,"line_start":374,"line_end":374,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94688,"byte_end":94695,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94700,"byte_end":94703,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ [`split_off`]: #method.split_off","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94708,"byte_end":94744,"line_start":377,"line_end":377,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95146,"byte_end":95151,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"clear","qualname":"<BytesMut>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, removing all data.","sig":null,"attributes":[{"value":"/ Clears the buffer, removing all data.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94884,"byte_end":94925,"line_start":384,"line_end":384,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94930,"byte_end":94933,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94938,"byte_end":94952,"line_start":386,"line_end":386,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94957,"byte_end":94960,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94965,"byte_end":94972,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":94977,"byte_end":95001,"line_start":389,"line_end":389,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95006,"byte_end":95009,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95014,"byte_end":95068,"line_start":391,"line_end":391,"column_start":5,"column_end":59}},{"value":"/ buf.clear();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95073,"byte_end":95089,"line_start":392,"line_end":392,"column_start":5,"column_end":21}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95094,"byte_end":95122,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95127,"byte_end":95134,"line_start":394,"line_end":394,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95876,"byte_end":95882,"line_start":421,"line_end":421,"column_start":12,"column_end":18},"name":"resize","qualname":"<BytesMut>::resize","value":"fn (&mut self, new_len: usize, value: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resizes the buffer so that `len` is equal to `new_len`.","sig":null,"attributes":[{"value":"/ Resizes the buffer so that `len` is equal to `new_len`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95202,"byte_end":95261,"line_start":399,"line_end":399,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95266,"byte_end":95269,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is greater than `len`, the buffer is extended by the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95274,"byte_end":95343,"line_start":401,"line_end":401,"column_start":5,"column_end":74}},{"value":"/ difference with each additional byte set to `value`. If `new_len` is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95348,"byte_end":95420,"line_start":402,"line_end":402,"column_start":5,"column_end":77}},{"value":"/ less than `len`, the buffer is simply truncated.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95425,"byte_end":95477,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95482,"byte_end":95485,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95490,"byte_end":95504,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95509,"byte_end":95512,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95517,"byte_end":95524,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95529,"byte_end":95553,"line_start":408,"line_end":408,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95558,"byte_end":95561,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95566,"byte_end":95600,"line_start":410,"line_end":410,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95605,"byte_end":95608,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ buf.resize(3, 0x1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95613,"byte_end":95636,"line_start":412,"line_end":412,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(&buf[..], &[0x1, 0x1, 0x1]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95641,"byte_end":95684,"line_start":413,"line_end":413,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95689,"byte_end":95692,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ buf.resize(2, 0x2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95697,"byte_end":95720,"line_start":415,"line_end":415,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(&buf[..], &[0x1, 0x1]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95725,"byte_end":95763,"line_start":416,"line_end":416,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95768,"byte_end":95771,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ buf.resize(4, 0x3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95776,"byte_end":95799,"line_start":418,"line_end":418,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(&buf[..], &[0x1, 0x1, 0x3, 0x3]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95804,"byte_end":95852,"line_start":419,"line_end":419,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":95857,"byte_end":95864,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96941,"byte_end":96948,"line_start":461,"line_end":461,"column_start":19,"column_end":26},"name":"set_len","qualname":"<BytesMut>::set_len","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the length of the buffer.","sig":null,"attributes":[{"value":"/ Sets the length of the buffer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96325,"byte_end":96359,"line_start":436,"line_end":436,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96364,"byte_end":96367,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This will explicitly set the size of the buffer without actually","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96372,"byte_end":96440,"line_start":438,"line_end":438,"column_start":5,"column_end":73}},{"value":"/ modifying the data, so it is up to the caller to ensure that the data","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96445,"byte_end":96518,"line_start":439,"line_end":439,"column_start":5,"column_end":78}},{"value":"/ has been initialized.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96523,"byte_end":96548,"line_start":440,"line_end":440,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96553,"byte_end":96556,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96561,"byte_end":96575,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96580,"byte_end":96583,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96588,"byte_end":96595,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96600,"byte_end":96624,"line_start":445,"line_end":445,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96629,"byte_end":96632,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let mut b = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96637,"byte_end":96689,"line_start":447,"line_end":447,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96694,"byte_end":96697,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96702,"byte_end":96714,"line_start":449,"line_end":449,"column_start":5,"column_end":17}},{"value":"/     b.set_len(5);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96719,"byte_end":96740,"line_start":450,"line_end":450,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96745,"byte_end":96750,"line_start":451,"line_end":451,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96755,"byte_end":96758,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96763,"byte_end":96796,"line_start":453,"line_end":453,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96801,"byte_end":96804,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96809,"byte_end":96821,"line_start":455,"line_end":455,"column_start":5,"column_end":17}},{"value":"/     b.set_len(11);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96826,"byte_end":96848,"line_start":456,"line_end":456,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96853,"byte_end":96858,"line_start":457,"line_end":457,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96863,"byte_end":96866,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b[..], b\"hello world\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96871,"byte_end":96910,"line_start":459,"line_end":459,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":96915,"byte_end":96922,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98719,"byte_end":98726,"line_start":516,"line_end":516,"column_start":12,"column_end":19},"name":"reserve","qualname":"<BytesMut>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bytes to be inserted\n into the given `BytesMut`.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more bytes to be inserted","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97049,"byte_end":97122,"line_start":466,"line_end":466,"column_start":5,"column_end":78}},{"value":"/ into the given `BytesMut`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97127,"byte_end":97157,"line_start":467,"line_end":467,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97162,"byte_end":97165,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ More than `additional` bytes may be reserved in order to avoid frequent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97170,"byte_end":97245,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ reallocations. A call to `reserve` may result in an allocation.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97250,"byte_end":97317,"line_start":470,"line_end":470,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97322,"byte_end":97325,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ Before allocating new buffer space, the function will attempt to reclaim","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97330,"byte_end":97406,"line_start":472,"line_end":472,"column_start":5,"column_end":81}},{"value":"/ space in the existing buffer. If the current handle references a small","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97411,"byte_end":97485,"line_start":473,"line_end":473,"column_start":5,"column_end":79}},{"value":"/ view in the original buffer and all other handles have been dropped,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97490,"byte_end":97562,"line_start":474,"line_end":474,"column_start":5,"column_end":77}},{"value":"/ and the requested capacity is less than or equal to the existing","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97567,"byte_end":97635,"line_start":475,"line_end":475,"column_start":5,"column_end":73}},{"value":"/ buffer's capacity, then the current view will be copied to the front of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97640,"byte_end":97715,"line_start":476,"line_end":476,"column_start":5,"column_end":80}},{"value":"/ the buffer and the handle will take ownership of the full buffer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97720,"byte_end":97789,"line_start":477,"line_end":477,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97794,"byte_end":97797,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97802,"byte_end":97816,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97821,"byte_end":97824,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ In the following example, a new buffer is allocated.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97829,"byte_end":97885,"line_start":481,"line_end":481,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97890,"byte_end":97893,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97898,"byte_end":97905,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97910,"byte_end":97934,"line_start":484,"line_end":484,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97939,"byte_end":97942,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::from(&b\"hello\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":97947,"byte_end":97995,"line_start":486,"line_end":486,"column_start":5,"column_end":53}},{"value":"/ buf.reserve(64);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98000,"byte_end":98020,"line_start":487,"line_end":487,"column_start":5,"column_end":25}},{"value":"/ assert!(buf.capacity() >= 69);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98025,"byte_end":98059,"line_start":488,"line_end":488,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98064,"byte_end":98071,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98076,"byte_end":98079,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ In the following example, the existing buffer is reclaimed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98084,"byte_end":98147,"line_start":491,"line_end":491,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98152,"byte_end":98155,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98160,"byte_end":98167,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98172,"byte_end":98206,"line_start":494,"line_end":494,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98211,"byte_end":98214,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(128);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98219,"byte_end":98266,"line_start":496,"line_end":496,"column_start":5,"column_end":52}},{"value":"/ buf.put(&[0; 64][..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98271,"byte_end":98297,"line_start":497,"line_end":497,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98302,"byte_end":98305,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let ptr = buf.as_ptr();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98310,"byte_end":98337,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/ let other = buf.split();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98342,"byte_end":98370,"line_start":500,"line_end":500,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98375,"byte_end":98378,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98383,"byte_end":98411,"line_start":502,"line_end":502,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(buf.capacity(), 64);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98416,"byte_end":98451,"line_start":503,"line_end":503,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98456,"byte_end":98459,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ drop(other);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98464,"byte_end":98480,"line_start":505,"line_end":505,"column_start":5,"column_end":21}},{"value":"/ buf.reserve(128);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98485,"byte_end":98506,"line_start":506,"line_end":506,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98511,"byte_end":98514,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.capacity(), 128);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98519,"byte_end":98555,"line_start":508,"line_end":508,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf.as_ptr(), ptr);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98560,"byte_end":98594,"line_start":509,"line_end":509,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98599,"byte_end":98606,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98611,"byte_end":98614,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98619,"byte_end":98631,"line_start":512,"line_end":512,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98636,"byte_end":98639,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98644,"byte_end":98693,"line_start":514,"line_end":514,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":98698,"byte_end":98707,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104247,"byte_end":104264,"line_start":662,"line_end":662,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<BytesMut>::extend_from_slice","value":"fn (&mut self, extend: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends given bytes to this object.","sig":null,"attributes":[{"value":"/ Appends given bytes to this object.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":103746,"byte_end":103785,"line_start":646,"line_end":646,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":103790,"byte_end":103793,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ If this `BytesMut` object has not enough capacity, it is resized first.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":103798,"byte_end":103873,"line_start":648,"line_end":648,"column_start":5,"column_end":80}},{"value":"/ So unlike `put_slice` operation, `extend_from_slice` does not panic.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":103878,"byte_end":103950,"line_start":649,"line_end":649,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":103955,"byte_end":103958,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":103963,"byte_end":103977,"line_start":651,"line_end":651,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":103982,"byte_end":103985,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":103990,"byte_end":103997,"line_start":653,"line_end":653,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104002,"byte_end":104026,"line_start":654,"line_end":654,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104031,"byte_end":104034,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(0);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104039,"byte_end":104084,"line_start":656,"line_end":656,"column_start":5,"column_end":50}},{"value":"/ buf.extend_from_slice(b\"aaabbb\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104089,"byte_end":104126,"line_start":657,"line_end":657,"column_start":5,"column_end":42}},{"value":"/ buf.extend_from_slice(b\"cccddd\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104131,"byte_end":104168,"line_start":658,"line_end":658,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104173,"byte_end":104176,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"aaabbbcccddd\", &buf[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104181,"byte_end":104223,"line_start":660,"line_end":660,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104228,"byte_end":104235,"line_start":661,"line_end":661,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":105277,"byte_end":105284,"line_start":700,"line_end":700,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<BytesMut>::unsplit","value":"fn (&mut self, other: BytesMut) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Combine splitted BytesMut objects back as contiguous.","sig":null,"attributes":[{"value":"/ Combine splitted BytesMut objects back as contiguous.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104698,"byte_end":104755,"line_start":681,"line_end":681,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104760,"byte_end":104763,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ If `BytesMut` objects were not contiguous originally, they will be extended.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104768,"byte_end":104848,"line_start":683,"line_end":683,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104853,"byte_end":104856,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104861,"byte_end":104875,"line_start":685,"line_end":685,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104880,"byte_end":104883,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104888,"byte_end":104895,"line_start":687,"line_end":687,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104900,"byte_end":104924,"line_start":688,"line_end":688,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104929,"byte_end":104932,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(64);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104937,"byte_end":104983,"line_start":690,"line_end":690,"column_start":5,"column_end":51}},{"value":"/ buf.extend_from_slice(b\"aaabbbcccddd\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":104988,"byte_end":105031,"line_start":691,"line_end":691,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":105036,"byte_end":105039,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ let splitted = buf.split_off(6);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":105044,"byte_end":105080,"line_start":693,"line_end":693,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(b\"aaabbb\", &buf[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":105085,"byte_end":105121,"line_start":694,"line_end":694,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(b\"cccddd\", &splitted[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":105126,"byte_end":105167,"line_start":695,"line_end":695,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":105172,"byte_end":105175,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ buf.unsplit(splitted);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":105180,"byte_end":105206,"line_start":697,"line_end":697,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(b\"aaabbbcccddd\", &buf[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":105211,"byte_end":105253,"line_start":698,"line_end":698,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":105258,"byte_end":105265,"line_start":699,"line_end":699,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":579},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129950,"byte_end":129955,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583}],"decl_id":null,"docs":" A reference counted contiguous slice of memory.","sig":null,"attributes":[{"value":"/ A reference counted contiguous slice of memory.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":127841,"byte_end":127892,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":127893,"byte_end":127896,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `Bytes` is an efficient container for storing and operating on contiguous","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":127897,"byte_end":127974,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ slices of memory. It is intended for use primarily in networking code, but","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":127975,"byte_end":128053,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ could have applications elsewhere as well.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128054,"byte_end":128100,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128101,"byte_end":128104,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `Bytes` values facilitate zero-copy network programming by allowing multiple","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128105,"byte_end":128185,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ `Bytes` objects to point to the same underlying memory. This is managed by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128186,"byte_end":128264,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ using a reference count to track when the memory is no longer needed and can","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128265,"byte_end":128345,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ be freed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128346,"byte_end":128359,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128360,"byte_end":128363,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128364,"byte_end":128371,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128372,"byte_end":128393,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128394,"byte_end":128397,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut mem = Bytes::from(\"Hello world\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128398,"byte_end":128443,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ let a = mem.slice(0..5);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128444,"byte_end":128472,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128473,"byte_end":128476,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a, \"Hello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128477,"byte_end":128504,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128505,"byte_end":128508,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let b = mem.split_to(6);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128509,"byte_end":128537,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128538,"byte_end":128541,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(mem, \"world\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128542,"byte_end":128571,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(b, \"Hello \");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128572,"byte_end":128600,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128601,"byte_end":128608,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128609,"byte_end":128612,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Memory layout","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128613,"byte_end":128632,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128633,"byte_end":128636,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The `Bytes` struct itself is fairly small, limited to 4 `usize` fields used","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128637,"byte_end":128716,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ to track information about which segment of the underlying memory the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128717,"byte_end":128790,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ `Bytes` handle has access to.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128791,"byte_end":128824,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128825,"byte_end":128828,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ `Bytes` keeps both a pointer to the shared `Arc` containing the full memory","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128829,"byte_end":128908,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ slice and a pointer to the start of the region visible by the handle.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128909,"byte_end":128982,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/ `Bytes` also tracks the length of its view into the memory.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":128983,"byte_end":129046,"line_start":45,"line_end":45,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129047,"byte_end":129050,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Sharing","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129051,"byte_end":129064,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129065,"byte_end":129068,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The memory itself is reference counted, and multiple `Bytes` objects may","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129069,"byte_end":129145,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ point to the same region. Each `Bytes` handle point to different sections within","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129146,"byte_end":129230,"line_start":50,"line_end":50,"column_start":1,"column_end":85}},{"value":"/ the memory region, and `Bytes` handle may or may not have overlapping views","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129231,"byte_end":129310,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ into the memory.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129311,"byte_end":129331,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129332,"byte_end":129335,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129336,"byte_end":129339,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129340,"byte_end":129351,"line_start":55,"line_end":55,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129352,"byte_end":129355,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/    Arc ptrs                   +---------+","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129356,"byte_end":129401,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/    ________________________ / | Bytes 2 |","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129402,"byte_end":129447,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/   /                           +---------+","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129448,"byte_end":129493,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"/  /          +-----------+     |         |","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129494,"byte_end":129539,"line_start":60,"line_end":60,"column_start":1,"column_end":46}},{"value":"/ |_________/ |  Bytes 1  |     |         |","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129540,"byte_end":129585,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/ |           +-----------+     |         |","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129586,"byte_end":129631,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ |           |           | ___/ data     | tail","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129632,"byte_end":129682,"line_start":63,"line_end":63,"column_start":1,"column_end":51}},{"value":"/ |      data |      tail |/              |","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129683,"byte_end":129728,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/ v           v           v               v","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129729,"byte_end":129774,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/ +-----+---------------------------------+-----+","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129775,"byte_end":129826,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/ | Arc |     |           |               |     |","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129827,"byte_end":129878,"line_start":67,"line_end":67,"column_start":1,"column_end":52}},{"value":"/ +-----+---------------------------------+-----+","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129879,"byte_end":129930,"line_start":68,"line_end":68,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":129931,"byte_end":129938,"line_start":69,"line_end":69,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130614,"byte_end":130617,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<Bytes>::new","value":"fn () -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `Bytes`.","sig":null,"attributes":[{"value":"/ Creates a new empty `Bytes`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130314,"byte_end":130346,"line_start":86,"line_end":86,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130351,"byte_end":130354,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This will not allocate and the returned `Bytes` handle will be empty.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130359,"byte_end":130432,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130437,"byte_end":130440,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130445,"byte_end":130459,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130464,"byte_end":130467,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130472,"byte_end":130479,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130484,"byte_end":130505,"line_start":93,"line_end":93,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130510,"byte_end":130513,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130518,"byte_end":130543,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(&b[..], b\"\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130548,"byte_end":130576,"line_start":96,"line_end":96,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130581,"byte_end":130588,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130593,"byte_end":130602,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131083,"byte_end":131094,"line_start":118,"line_end":118,"column_start":18,"column_end":29},"name":"from_static","qualname":"<Bytes>::from_static","value":"fn (bytes: &'static [u8]) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Bytes` from a static slice.","sig":null,"attributes":[{"value":"/ Creates a new `Bytes` from a static slice.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130674,"byte_end":130720,"line_start":103,"line_end":103,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130725,"byte_end":130728,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The returned `Bytes` will point directly to the static slice. There is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130733,"byte_end":130807,"line_start":105,"line_end":105,"column_start":5,"column_end":79}},{"value":"/ no allocating or copying.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130812,"byte_end":130841,"line_start":106,"line_end":106,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130846,"byte_end":130849,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130854,"byte_end":130868,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130873,"byte_end":130876,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130881,"byte_end":130888,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130893,"byte_end":130914,"line_start":111,"line_end":111,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130919,"byte_end":130922,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::from_static(b\"hello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130927,"byte_end":130968,"line_start":113,"line_end":113,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130973,"byte_end":131006,"line_start":114,"line_end":114,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131011,"byte_end":131018,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131023,"byte_end":131032,"line_start":116,"line_end":116,"column_start":5,"column_end":14}},{"value":"cfg(not (all (loom, test)))","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131037,"byte_end":131065,"line_start":117,"line_end":117,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131835,"byte_end":131838,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"len","qualname":"<Bytes>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `Bytes`.","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in this `Bytes`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131582,"byte_end":131640,"line_start":137,"line_end":137,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131645,"byte_end":131648,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131653,"byte_end":131667,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131672,"byte_end":131675,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131680,"byte_end":131687,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131692,"byte_end":131713,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131718,"byte_end":131721,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::from(&b\"hello\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131726,"byte_end":131765,"line_start":144,"line_end":144,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(b.len(), 5);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131770,"byte_end":131797,"line_start":145,"line_end":145,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131802,"byte_end":131809,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131814,"byte_end":131823,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132115,"byte_end":132123,"line_start":163,"line_end":163,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Bytes>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Bytes` has a length of 0.","sig":null,"attributes":[{"value":"/ Returns true if the `Bytes` has a length of 0.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131885,"byte_end":131935,"line_start":152,"line_end":152,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131940,"byte_end":131943,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131948,"byte_end":131962,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131967,"byte_end":131970,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131975,"byte_end":131982,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":131987,"byte_end":132008,"line_start":157,"line_end":157,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132013,"byte_end":132016,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132021,"byte_end":132046,"line_start":159,"line_end":159,"column_start":5,"column_end":30}},{"value":"/ assert!(b.is_empty());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132051,"byte_end":132077,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132082,"byte_end":132089,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132094,"byte_end":132103,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132241,"byte_end":132256,"line_start":169,"line_end":169,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<Bytes>::copy_from_slice","value":"fn (data: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Creates `Bytes` instance from slice, by copying it.\n","sig":null,"attributes":[{"value":"/Creates `Bytes` instance from slice, by copying it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132175,"byte_end":132229,"line_start":168,"line_end":168,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132916,"byte_end":132921,"line_start":195,"line_end":195,"column_start":12,"column_end":17},"name":"slice","qualname":"<Bytes>::slice","value":"fn (&self, range: impl RangeBounds<usize>) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self for the provided range.","sig":null,"attributes":[{"value":"/ Returns a slice of self for the provided range.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132320,"byte_end":132371,"line_start":173,"line_end":173,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132376,"byte_end":132379,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This will increment the reference count for the underlying memory and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132384,"byte_end":132457,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ return a new `Bytes` handle set to the slice.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132462,"byte_end":132511,"line_start":176,"line_end":176,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132516,"byte_end":132519,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This operation is `O(1)`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132524,"byte_end":132553,"line_start":178,"line_end":178,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132558,"byte_end":132561,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132566,"byte_end":132580,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132585,"byte_end":132588,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132593,"byte_end":132600,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132605,"byte_end":132626,"line_start":183,"line_end":183,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132631,"byte_end":132634,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let a = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132639,"byte_end":132684,"line_start":185,"line_end":185,"column_start":5,"column_end":50}},{"value":"/ let b = a.slice(2..5);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132689,"byte_end":132715,"line_start":186,"line_end":186,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132720,"byte_end":132723,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b[..], b\"llo\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132728,"byte_end":132759,"line_start":188,"line_end":188,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132764,"byte_end":132771,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132776,"byte_end":132779,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132784,"byte_end":132796,"line_start":191,"line_end":191,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132801,"byte_end":132804,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Requires that `begin <= end` and `end <= self.len()`, otherwise slicing","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132809,"byte_end":132884,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/ will panic.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":132889,"byte_end":132904,"line_start":194,"line_end":194,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134589,"byte_end":134598,"line_start":253,"line_end":253,"column_start":12,"column_end":21},"name":"slice_ref","qualname":"<Bytes>::slice_ref","value":"fn (&self, subset: &[u8]) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self that is equivalent to the given `subset`.","sig":null,"attributes":[{"value":"/ Returns a slice of self that is equivalent to the given `subset`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":133667,"byte_end":133736,"line_start":228,"line_end":228,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":133741,"byte_end":133744,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ When processing a `Bytes` buffer with other tools, one often gets a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":133749,"byte_end":133820,"line_start":230,"line_end":230,"column_start":5,"column_end":76}},{"value":"/ `&[u8]` which is in fact a slice of the `Bytes`, i.e. a subset of it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":133825,"byte_end":133898,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/ This function turns that `&[u8]` into another `Bytes`, as if one had","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":133903,"byte_end":133975,"line_start":232,"line_end":232,"column_start":5,"column_end":77}},{"value":"/ called `self.slice()` with the offsets that correspond to `subset`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":133980,"byte_end":134051,"line_start":233,"line_end":233,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134056,"byte_end":134059,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ This operation is `O(1)`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134064,"byte_end":134093,"line_start":235,"line_end":235,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134098,"byte_end":134101,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134106,"byte_end":134120,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134125,"byte_end":134128,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134133,"byte_end":134140,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134145,"byte_end":134166,"line_start":240,"line_end":240,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134171,"byte_end":134174,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let bytes = Bytes::from(&b\"012345678\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134179,"byte_end":134226,"line_start":242,"line_end":242,"column_start":5,"column_end":52}},{"value":"/ let as_slice = bytes.as_ref();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134231,"byte_end":134265,"line_start":243,"line_end":243,"column_start":5,"column_end":39}},{"value":"/ let subset = &as_slice[2..6];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134270,"byte_end":134303,"line_start":244,"line_end":244,"column_start":5,"column_end":38}},{"value":"/ let subslice = bytes.slice_ref(&subset);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134308,"byte_end":134352,"line_start":245,"line_end":245,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(&subslice[..], b\"2345\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134357,"byte_end":134396,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134401,"byte_end":134408,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134413,"byte_end":134416,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134421,"byte_end":134433,"line_start":249,"line_end":249,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134438,"byte_end":134441,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Requires that the given `sub` slice is in fact contained within the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134446,"byte_end":134517,"line_start":251,"line_end":251,"column_start":5,"column_end":76}},{"value":"/ `Bytes` buffer; otherwise this function will panic.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":134522,"byte_end":134577,"line_start":252,"line_end":252,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136083,"byte_end":136092,"line_start":304,"line_end":304,"column_start":12,"column_end":21},"name":"split_off","qualname":"<Bytes>::split_off","value":"fn (&mut self, at: usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the bytes into two at the given index.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135374,"byte_end":135423,"line_start":280,"line_end":280,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135428,"byte_end":135431,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[0, at)`, and the returned `Bytes`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135436,"byte_end":135511,"line_start":282,"line_end":282,"column_start":5,"column_end":80}},{"value":"/ contains elements `[at, len)`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135516,"byte_end":135550,"line_start":283,"line_end":283,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135555,"byte_end":135558,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135563,"byte_end":135638,"line_start":285,"line_end":285,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135643,"byte_end":135666,"line_start":286,"line_end":286,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135671,"byte_end":135674,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135679,"byte_end":135693,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135698,"byte_end":135701,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135706,"byte_end":135713,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135718,"byte_end":135739,"line_start":291,"line_end":291,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135744,"byte_end":135747,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut a = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135752,"byte_end":135801,"line_start":293,"line_end":293,"column_start":5,"column_end":54}},{"value":"/ let b = a.split_off(5);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135806,"byte_end":135833,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135838,"byte_end":135841,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"hello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135846,"byte_end":135879,"line_start":296,"line_end":296,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&b[..], b\" world\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135884,"byte_end":135918,"line_start":297,"line_end":297,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135923,"byte_end":135930,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135935,"byte_end":135938,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135943,"byte_end":135955,"line_start":300,"line_end":300,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135960,"byte_end":135963,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135968,"byte_end":135993,"line_start":302,"line_end":302,"column_start":5,"column_end":30}},{"value":"must_use = \"consider Bytes::truncate if you don't need the other half\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":135998,"byte_end":136071,"line_start":303,"line_end":303,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137151,"byte_end":137159,"line_start":348,"line_end":348,"column_start":12,"column_end":20},"name":"split_to","qualname":"<Bytes>::split_to","value":"fn (&mut self, at: usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the bytes into two at the given index.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136444,"byte_end":136493,"line_start":324,"line_end":324,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136498,"byte_end":136501,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[at, len)`, and the returned","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136506,"byte_end":136575,"line_start":326,"line_end":326,"column_start":5,"column_end":74}},{"value":"/ `Bytes` contains elements `[0, at)`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136580,"byte_end":136620,"line_start":327,"line_end":327,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136625,"byte_end":136628,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136633,"byte_end":136708,"line_start":329,"line_end":329,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136713,"byte_end":136736,"line_start":330,"line_end":330,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136741,"byte_end":136744,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136749,"byte_end":136763,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136768,"byte_end":136771,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136776,"byte_end":136783,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136788,"byte_end":136809,"line_start":335,"line_end":335,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136814,"byte_end":136817,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let mut a = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136822,"byte_end":136871,"line_start":337,"line_end":337,"column_start":5,"column_end":54}},{"value":"/ let b = a.split_to(5);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136876,"byte_end":136902,"line_start":338,"line_end":338,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136907,"byte_end":136910,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\" world\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136915,"byte_end":136949,"line_start":340,"line_end":340,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136954,"byte_end":136987,"line_start":341,"line_end":341,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":136992,"byte_end":136999,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137004,"byte_end":137007,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137012,"byte_end":137024,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137029,"byte_end":137032,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137037,"byte_end":137062,"line_start":346,"line_end":346,"column_start":5,"column_end":30}},{"value":"must_use = \"consider Bytes::advance if you don't need the other half\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137067,"byte_end":137139,"line_start":347,"line_end":347,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138123,"byte_end":138131,"line_start":389,"line_end":389,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Bytes>::truncate","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, keeping the first `len` bytes and dropping the\n rest.","sig":null,"attributes":[{"value":"/ Shortens the buffer, keeping the first `len` bytes and dropping the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137511,"byte_end":137582,"line_start":368,"line_end":368,"column_start":5,"column_end":76}},{"value":"/ rest.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137587,"byte_end":137596,"line_start":369,"line_end":369,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137601,"byte_end":137604,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the buffer's current length, this has no","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137609,"byte_end":137678,"line_start":371,"line_end":371,"column_start":5,"column_end":74}},{"value":"/ effect.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137683,"byte_end":137694,"line_start":372,"line_end":372,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137699,"byte_end":137702,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ The [`split_off`] method can emulate `truncate`, but this causes the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137707,"byte_end":137779,"line_start":374,"line_end":374,"column_start":5,"column_end":77}},{"value":"/ excess bytes to be returned instead of dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137784,"byte_end":137835,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137840,"byte_end":137843,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137848,"byte_end":137862,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137867,"byte_end":137870,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137875,"byte_end":137882,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137887,"byte_end":137908,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137913,"byte_end":137916,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137921,"byte_end":137972,"line_start":382,"line_end":382,"column_start":5,"column_end":56}},{"value":"/ buf.truncate(5);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":137977,"byte_end":137997,"line_start":383,"line_end":383,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(buf, b\"hello\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138002,"byte_end":138036,"line_start":384,"line_end":384,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138041,"byte_end":138048,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138053,"byte_end":138056,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`split_off`]: #method.split_off","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138061,"byte_end":138097,"line_start":387,"line_end":387,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138102,"byte_end":138111,"line_start":388,"line_end":388,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138504,"byte_end":138509,"line_start":407,"line_end":407,"column_start":12,"column_end":17},"name":"clear","qualname":"<Bytes>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, removing all data.","sig":null,"attributes":[{"value":"/ Clears the buffer, removing all data.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138234,"byte_end":138275,"line_start":395,"line_end":395,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138280,"byte_end":138283,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138288,"byte_end":138302,"line_start":397,"line_end":397,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138307,"byte_end":138310,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138315,"byte_end":138322,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138327,"byte_end":138348,"line_start":400,"line_end":400,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138353,"byte_end":138356,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138361,"byte_end":138412,"line_start":402,"line_end":402,"column_start":5,"column_end":56}},{"value":"/ buf.clear();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138417,"byte_end":138433,"line_start":403,"line_end":403,"column_start":5,"column_end":21}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138438,"byte_end":138466,"line_start":404,"line_end":404,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138471,"byte_end":138478,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":138483,"byte_end":138492,"line_start":406,"line_end":406,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":29577,"byte_end":29580,"line_start":922,"line_end":922,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":29882,"byte_end":29888,"line_start":943,"line_end":943,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":30456,"byte_end":30462,"line_start":972,"line_end":972,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":56874,"byte_end":56877,"line_start":959,"line_end":959,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":57460,"byte_end":57463,"line_start":983,"line_end":983,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59753,"byte_end":59763,"line_start":1064,"line_end":1064,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59998,"byte_end":60008,"line_start":1073,"line_end":1073,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":60194,"byte_end":60204,"line_start":1080,"line_end":1080,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66315,"byte_end":66320,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68548,"byte_end":68553,"line_start":139,"line_end":139,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":69448,"byte_end":69453,"line_start":181,"line_end":181,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":70455,"byte_end":70460,"line_start":223,"line_end":223,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":70996,"byte_end":71001,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":72146,"byte_end":72151,"line_start":61,"line_end":61,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73005,"byte_end":73011,"line_start":19,"line_end":19,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":74126,"byte_end":74132,"line_start":65,"line_end":65,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":74385,"byte_end":74391,"line_start":74,"line_end":74,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75004,"byte_end":75008,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77732,"byte_end":77736,"line_start":135,"line_end":135,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78525,"byte_end":78531,"line_start":19,"line_end":19,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79931,"byte_end":79937,"line_start":77,"line_end":77,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63148,"byte_end":63149,"line_start":99,"line_end":99,"column_start":34,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":65301,"byte_end":65302,"line_start":176,"line_end":176,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80796,"byte_end":80804,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82881,"byte_end":82889,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":83289,"byte_end":83297,"line_start":133,"line_end":133,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/vec_deque.rs","byte_start":83371,"byte_end":83379,"line_start":5,"line_end":5,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87172,"byte_end":87180,"line_start":107,"line_end":107,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":111788,"byte_end":111796,"line_start":905,"line_end":905,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":112230,"byte_end":112238,"line_start":922,"line_end":922,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":112670,"byte_end":112678,"line_start":944,"line_end":944,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":113661,"byte_end":113669,"line_start":982,"line_end":982,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":113766,"byte_end":113774,"line_start":989,"line_end":989,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":113899,"byte_end":113907,"line_start":998,"line_end":998,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114005,"byte_end":114013,"line_start":1004,"line_end":1004,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114132,"byte_end":114140,"line_start":1011,"line_end":1011,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114261,"byte_end":114269,"line_start":1017,"line_end":1017,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114379,"byte_end":114387,"line_start":1023,"line_end":1023,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114508,"byte_end":114516,"line_start":1029,"line_end":1029,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114666,"byte_end":114674,"line_start":1035,"line_end":1035,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114799,"byte_end":114807,"line_start":1041,"line_end":1041,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114830,"byte_end":114838,"line_start":1044,"line_end":1044,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114939,"byte_end":114947,"line_start":1051,"line_end":1051,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115108,"byte_end":115116,"line_start":1057,"line_end":1057,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115272,"byte_end":115280,"line_start":1064,"line_end":1064,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115371,"byte_end":115379,"line_start":1070,"line_end":1070,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115477,"byte_end":115485,"line_start":1076,"line_end":1076,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115864,"byte_end":115872,"line_start":1093,"line_end":1093,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115974,"byte_end":115982,"line_start":1099,"line_end":1099,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":116345,"byte_end":116353,"line_start":1117,"line_end":1117,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":116792,"byte_end":116800,"line_start":1134,"line_end":1134,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":116964,"byte_end":116972,"line_start":1140,"line_end":1140,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":117141,"byte_end":117149,"line_start":1146,"line_end":1146,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":118787,"byte_end":118793,"line_start":1195,"line_end":1195,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":121634,"byte_end":121642,"line_start":1275,"line_end":1275,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":121667,"byte_end":121675,"line_start":1276,"line_end":1276,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":121757,"byte_end":121765,"line_start":1284,"line_end":1284,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":121869,"byte_end":121877,"line_start":1290,"line_end":1290,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":122279,"byte_end":122287,"line_start":1308,"line_end":1308,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":122400,"byte_end":122408,"line_start":1314,"line_end":1314,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":122822,"byte_end":122830,"line_start":1332,"line_end":1332,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":122943,"byte_end":122951,"line_start":1338,"line_end":1338,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123103,"byte_end":123106,"line_start":1344,"line_end":1344,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123221,"byte_end":123224,"line_start":1350,"line_end":1350,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123370,"byte_end":123378,"line_start":1356,"line_end":1356,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123489,"byte_end":123497,"line_start":1362,"line_end":1362,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123654,"byte_end":123660,"line_start":1368,"line_end":1368,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123771,"byte_end":123777,"line_start":1374,"line_end":1374,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123933,"byte_end":123941,"line_start":1380,"line_end":1380,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":124095,"byte_end":124103,"line_start":1388,"line_end":1388,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":124807,"byte_end":124812,"line_start":1420,"line_end":1420,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":124927,"byte_end":124935,"line_start":1426,"line_end":1426,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130302,"byte_end":130307,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139256,"byte_end":139261,"line_start":440,"line_end":440,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139286,"byte_end":139291,"line_start":441,"line_end":441,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139310,"byte_end":139315,"line_start":443,"line_end":443,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139475,"byte_end":139480,"line_start":452,"line_end":452,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139648,"byte_end":139653,"line_start":461,"line_end":461,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139803,"byte_end":139808,"line_start":467,"line_end":467,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140270,"byte_end":140275,"line_start":491,"line_end":491,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140402,"byte_end":140407,"line_start":500,"line_end":500,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140509,"byte_end":140514,"line_start":507,"line_end":507,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140646,"byte_end":140651,"line_start":513,"line_end":513,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140741,"byte_end":140746,"line_start":519,"line_end":519,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141111,"byte_end":141116,"line_start":537,"line_end":537,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141269,"byte_end":141274,"line_start":545,"line_end":545,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141392,"byte_end":141397,"line_start":551,"line_end":551,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141544,"byte_end":141549,"line_start":557,"line_end":557,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141671,"byte_end":141676,"line_start":563,"line_end":563,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141706,"byte_end":141711,"line_start":565,"line_end":565,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141823,"byte_end":141828,"line_start":571,"line_end":571,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":142225,"byte_end":142230,"line_start":589,"line_end":589,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":142351,"byte_end":142356,"line_start":595,"line_end":595,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":142765,"byte_end":142770,"line_start":613,"line_end":613,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":142883,"byte_end":142888,"line_start":619,"line_end":619,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143044,"byte_end":143047,"line_start":625,"line_end":625,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143156,"byte_end":143159,"line_start":631,"line_end":631,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143302,"byte_end":143307,"line_start":637,"line_end":637,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143418,"byte_end":143423,"line_start":643,"line_end":643,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143584,"byte_end":143590,"line_start":649,"line_end":649,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143695,"byte_end":143701,"line_start":655,"line_end":655,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144358,"byte_end":144363,"line_start":685,"line_end":685,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144514,"byte_end":144519,"line_start":693,"line_end":693,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144696,"byte_end":144701,"line_start":703,"line_end":703,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144805,"byte_end":144810,"line_start":710,"line_end":710,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144929,"byte_end":144934,"line_start":716,"line_end":716,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":145058,"byte_end":145063,"line_start":722,"line_end":722,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":145860,"byte_end":145865,"line_start":752,"line_end":752,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":145995,"byte_end":146001,"line_start":760,"line_end":760,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/debug.rs","byte_start":154008,"byte_end":154015,"line_start":15,"line_end":15,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/hex.rs","byte_start":155009,"byte_end":155017,"line_start":6,"line_end":6,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/hex.rs","byte_start":155196,"byte_end":155204,"line_start":15,"line_end":15,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/lib.rs","byte_start":2868,"byte_end":2871,"line_start":81,"line_end":81,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/mod.rs","byte_start":4224,"byte_end":4227,"line_start":21,"line_end":21,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":150}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":29577,"byte_end":29580,"line_start":922,"line_end":922,"column_start":31,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":4,"index":84},"to":{"krate":0,"index":16}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":29882,"byte_end":29888,"line_start":943,"line_end":943,"column_start":14,"column_end":20},"kind":{"Impl":{"id":1}},"from":{"krate":1,"index":29308},"to":{"krate":0,"index":16}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_impl.rs","byte_start":30456,"byte_end":30462,"line_start":972,"line_end":972,"column_start":39,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":6507},"to":{"krate":0,"index":16}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":56874,"byte_end":56877,"line_start":959,"line_end":959,"column_start":37,"column_end":40},"kind":{"Impl":{"id":3}},"from":{"krate":4,"index":84},"to":{"krate":0,"index":84}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":57460,"byte_end":57463,"line_start":983,"line_end":983,"column_start":17,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":4,"index":4064},"to":{"krate":0,"index":84}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59753,"byte_end":59763,"line_start":1064,"line_end":1064,"column_start":21,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":138},"to":{"krate":1,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":59998,"byte_end":60008,"line_start":1073,"line_end":1073,"column_start":33,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":138},"to":{"krate":1,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/buf_mut.rs","byte_start":60194,"byte_end":60204,"line_start":1080,"line_end":1080,"column_start":46,"column_end":56},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":138},"to":{"krate":1,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":66315,"byte_end":66320,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":68548,"byte_end":68553,"line_start":139,"line_end":139,"column_start":20,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":923},"to":{"krate":0,"index":16}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":69448,"byte_end":69453,"line_start":181,"line_end":181,"column_start":23,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":923},"to":{"krate":0,"index":84}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/chain.rs","byte_start":70455,"byte_end":70460,"line_start":223,"line_end":223,"column_start":29,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":923},"to":{"krate":1,"index":4680}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":70996,"byte_end":71001,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/limit.rs","byte_start":72146,"byte_end":72151,"line_start":61,"line_end":61,"column_start":28,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":932},"to":{"krate":0,"index":84}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":73005,"byte_end":73011,"line_start":19,"line_end":19,"column_start":14,"column_end":20},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":74126,"byte_end":74132,"line_start":65,"line_end":65,"column_start":35,"column_end":41},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":939},"to":{"krate":5,"index":2861}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/reader.rs","byte_start":74385,"byte_end":74391,"line_start":74,"line_end":74,"column_start":38,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":939},"to":{"krate":5,"index":2937}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":75004,"byte_end":75008,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/take.rs","byte_start":77732,"byte_end":77736,"line_start":135,"line_end":135,"column_start":22,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":945},"to":{"krate":0,"index":16}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":78525,"byte_end":78531,"line_start":19,"line_end":19,"column_start":17,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/writer.rs","byte_start":79931,"byte_end":79937,"line_start":77,"line_end":77,"column_start":39,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":952},"to":{"krate":5,"index":2915}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":60932,"byte_end":60935,"line_start":21,"line_end":21,"column_start":19,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":16},"to":{"krate":0,"index":272}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63148,"byte_end":63149,"line_start":99,"line_end":99,"column_start":34,"column_end":35},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":278},"to":{"krate":0,"index":272}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":63226,"byte_end":63232,"line_start":102,"line_end":102,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":84},"to":{"krate":0,"index":279}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/ext/mod.rs","byte_start":65301,"byte_end":65302,"line_start":176,"line_end":176,"column_start":40,"column_end":41},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":285},"to":{"krate":0,"index":279}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":80796,"byte_end":80804,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":82881,"byte_end":82889,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":958},"to":{"krate":1,"index":4773}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/iter.rs","byte_start":83289,"byte_end":83297,"line_start":133,"line_end":133,"column_start":36,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":958},"to":{"krate":1,"index":4728}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/buf/vec_deque.rs","byte_start":83371,"byte_end":83379,"line_start":5,"line_end":5,"column_start":14,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":4,"index":2419},"to":{"krate":0,"index":16}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":87172,"byte_end":87180,"line_start":107,"line_end":107,"column_start":6,"column_end":14},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":111788,"byte_end":111796,"line_start":905,"line_end":905,"column_start":15,"column_end":23},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":112230,"byte_end":112238,"line_start":922,"line_end":922,"column_start":14,"column_end":22},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":357},"to":{"krate":0,"index":16}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":112670,"byte_end":112678,"line_start":944,"line_end":944,"column_start":17,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":357},"to":{"krate":0,"index":84}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":113661,"byte_end":113669,"line_start":982,"line_end":982,"column_start":22,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":113766,"byte_end":113774,"line_start":989,"line_end":989,"column_start":16,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":2054}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":113899,"byte_end":113907,"line_start":998,"line_end":998,"column_start":22,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1801}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114005,"byte_end":114013,"line_start":1004,"line_end":1004,"column_start":19,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":2065}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114132,"byte_end":114140,"line_start":1011,"line_end":1011,"column_start":29,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114261,"byte_end":114269,"line_start":1017,"line_end":1017,"column_start":28,"column_end":36},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114379,"byte_end":114387,"line_start":1023,"line_end":1023,"column_start":20,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114508,"byte_end":114516,"line_start":1029,"line_end":1029,"column_start":21,"column_end":29},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1656}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114666,"byte_end":114674,"line_start":1035,"line_end":1035,"column_start":14,"column_end":22},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1645}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114799,"byte_end":114807,"line_start":1041,"line_end":1041,"column_start":13,"column_end":21},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114830,"byte_end":114838,"line_start":1044,"line_end":1044,"column_start":18,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1874}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":114939,"byte_end":114947,"line_start":1051,"line_end":1051,"column_start":21,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115108,"byte_end":115116,"line_start":1057,"line_end":1057,"column_start":21,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":6169}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115272,"byte_end":115280,"line_start":1064,"line_end":1064,"column_start":23,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1571}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115371,"byte_end":115379,"line_start":1070,"line_end":1070,"column_start":26,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1574}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115477,"byte_end":115485,"line_start":1076,"line_end":1076,"column_start":21,"column_end":29},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":5939}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115864,"byte_end":115872,"line_start":1093,"line_end":1093,"column_start":16,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1593}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":115974,"byte_end":115982,"line_start":1099,"line_end":1099,"column_start":23,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":4680}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":116345,"byte_end":116353,"line_start":1117,"line_end":1117,"column_start":21,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":4689}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":116792,"byte_end":116800,"line_start":1134,"line_end":1134,"column_start":29,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":4689}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":116964,"byte_end":116972,"line_start":1140,"line_end":1140,"column_start":27,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":4676}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":117141,"byte_end":117149,"line_start":1146,"line_end":1146,"column_start":35,"column_end":43},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":4676}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":118787,"byte_end":118793,"line_start":1195,"line_end":1195,"column_start":6,"column_end":12},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":121634,"byte_end":121642,"line_start":1275,"line_end":1275,"column_start":22,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":121667,"byte_end":121675,"line_start":1276,"line_end":1276,"column_start":22,"column_end":30},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":121757,"byte_end":121765,"line_start":1284,"line_end":1284,"column_start":26,"column_end":34},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":121869,"byte_end":121877,"line_start":1290,"line_end":1290,"column_start":27,"column_end":35},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1656}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":122279,"byte_end":122287,"line_start":1308,"line_end":1308,"column_start":25,"column_end":33},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":122400,"byte_end":122408,"line_start":1314,"line_end":1314,"column_start":26,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1656}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":122822,"byte_end":122830,"line_start":1332,"line_end":1332,"column_start":29,"column_end":37},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":122943,"byte_end":122951,"line_start":1338,"line_end":1338,"column_start":30,"column_end":38},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1656}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123103,"byte_end":123106,"line_start":1344,"line_end":1344,"column_start":30,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":4,"index":4064},"to":{"krate":1,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123221,"byte_end":123224,"line_start":1350,"line_end":1350,"column_start":31,"column_end":34},"kind":{"Impl":{"id":65}},"from":{"krate":4,"index":4064},"to":{"krate":1,"index":1656}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123370,"byte_end":123378,"line_start":1356,"line_end":1356,"column_start":28,"column_end":36},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123489,"byte_end":123497,"line_start":1362,"line_end":1362,"column_start":29,"column_end":37},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1656}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123654,"byte_end":123660,"line_start":1368,"line_end":1368,"column_start":30,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":4,"index":4732},"to":{"krate":1,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123771,"byte_end":123777,"line_start":1374,"line_end":1374,"column_start":31,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":4,"index":4732},"to":{"krate":1,"index":1656}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":123933,"byte_end":123941,"line_start":1380,"line_end":1380,"column_start":42,"column_end":50},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":124095,"byte_end":124103,"line_start":1388,"line_end":1388,"column_start":43,"column_end":51},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1656}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":124807,"byte_end":124812,"line_start":1420,"line_end":1420,"column_start":30,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes_mut.rs","byte_start":124927,"byte_end":124935,"line_start":1426,"line_end":1426,"column_start":27,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":357},"to":{"krate":1,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":130302,"byte_end":130307,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139256,"byte_end":139261,"line_start":440,"line_end":440,"column_start":22,"column_end":27},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139286,"byte_end":139291,"line_start":441,"line_end":441,"column_start":22,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139310,"byte_end":139315,"line_start":443,"line_end":443,"column_start":15,"column_end":20},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139475,"byte_end":139480,"line_start":452,"line_end":452,"column_start":16,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1593}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139648,"byte_end":139653,"line_start":461,"line_end":461,"column_start":21,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":139803,"byte_end":139808,"line_start":467,"line_end":467,"column_start":14,"column_end":19},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":579},"to":{"krate":0,"index":16}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140270,"byte_end":140275,"line_start":491,"line_end":491,"column_start":16,"column_end":21},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":2054}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140402,"byte_end":140407,"line_start":500,"line_end":500,"column_start":22,"column_end":27},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140509,"byte_end":140514,"line_start":507,"line_end":507,"column_start":21,"column_end":26},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":6169}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140646,"byte_end":140651,"line_start":513,"line_end":513,"column_start":23,"column_end":28},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1571}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":140741,"byte_end":140746,"line_start":519,"line_end":519,"column_start":23,"column_end":28},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":4680}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141111,"byte_end":141116,"line_start":537,"line_end":537,"column_start":27,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":4676}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141269,"byte_end":141274,"line_start":545,"line_end":545,"column_start":20,"column_end":25},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141392,"byte_end":141397,"line_start":551,"line_end":551,"column_start":21,"column_end":26},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1656}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141544,"byte_end":141549,"line_start":557,"line_end":557,"column_start":14,"column_end":19},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1645}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141671,"byte_end":141676,"line_start":563,"line_end":563,"column_start":13,"column_end":18},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141706,"byte_end":141711,"line_start":565,"line_end":565,"column_start":26,"column_end":31},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":141823,"byte_end":141828,"line_start":571,"line_end":571,"column_start":27,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1656}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":142225,"byte_end":142230,"line_start":589,"line_end":589,"column_start":25,"column_end":30},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":142351,"byte_end":142356,"line_start":595,"line_end":595,"column_start":26,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1656}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":142765,"byte_end":142770,"line_start":613,"line_end":613,"column_start":29,"column_end":34},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":142883,"byte_end":142888,"line_start":619,"line_end":619,"column_start":30,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1656}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143044,"byte_end":143047,"line_start":625,"line_end":625,"column_start":27,"column_end":30},"kind":{"Impl":{"id":99}},"from":{"krate":4,"index":4064},"to":{"krate":1,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143156,"byte_end":143159,"line_start":631,"line_end":631,"column_start":28,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":4,"index":4064},"to":{"krate":1,"index":1656}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143302,"byte_end":143307,"line_start":637,"line_end":637,"column_start":28,"column_end":33},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143418,"byte_end":143423,"line_start":643,"line_end":643,"column_start":29,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1656}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143584,"byte_end":143590,"line_start":649,"line_end":649,"column_start":27,"column_end":33},"kind":{"Impl":{"id":103}},"from":{"krate":4,"index":4732},"to":{"krate":1,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":143695,"byte_end":143701,"line_start":655,"line_end":655,"column_start":28,"column_end":34},"kind":{"Impl":{"id":104}},"from":{"krate":4,"index":4732},"to":{"krate":1,"index":1656}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144358,"byte_end":144363,"line_start":685,"line_end":685,"column_start":42,"column_end":47},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144514,"byte_end":144519,"line_start":693,"line_end":693,"column_start":43,"column_end":48},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1656}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144696,"byte_end":144701,"line_start":703,"line_end":703,"column_start":18,"column_end":23},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1874}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144805,"byte_end":144810,"line_start":710,"line_end":710,"column_start":30,"column_end":35},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":144929,"byte_end":144934,"line_start":716,"line_end":716,"column_start":29,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":145058,"byte_end":145063,"line_start":722,"line_end":722,"column_start":24,"column_end":29},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":145860,"byte_end":145865,"line_start":752,"line_end":752,"column_start":23,"column_end":28},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":579},"to":{"krate":1,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/bytes.rs","byte_start":145995,"byte_end":146001,"line_start":760,"line_end":760,"column_start":21,"column_end":27},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":584},"to":{"krate":1,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/debug.rs","byte_start":154008,"byte_end":154015,"line_start":15,"line_end":15,"column_start":21,"column_end":28},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/hex.rs","byte_start":155009,"byte_end":155017,"line_start":6,"line_end":6,"column_start":23,"column_end":31},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":741},"to":{"krate":1,"index":5989}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.3/src/hex.rs","byte_start":155196,"byte_end":155204,"line_start":15,"line_end":15,"column_start":23,"column_end":31},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":741},"to":{"krate":1,"index":5991}}]}