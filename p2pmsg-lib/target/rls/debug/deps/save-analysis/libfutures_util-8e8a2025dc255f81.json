{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1","program":"/home/ivan/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-await\"","--cfg","feature=\"async-await-macro\"","--cfg","feature=\"channel\"","--cfg","feature=\"futures-channel\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-macro\"","--cfg","feature=\"futures-sink\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"proc-macro-hack\"","--cfg","feature=\"proc-macro-nested\"","--cfg","feature=\"sink\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=8e8a2025dc255f81","-C","extra-filename=-8e8a2025dc255f81","--out-dir","/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps","-L","dependency=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps","--extern","futures_channel=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libfutures_channel-a4ce3674a9bb10f4.rmeta","--extern","futures_core=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libfutures_core-a432bea2d7cd63a6.rmeta","--extern","futures_io=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libfutures_io-556b1a9f48efb4d1.rmeta","--extern","futures_macro=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libfutures_macro-e5856c42a9a748e1.so","--extern","futures_sink=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libfutures_sink-f16fe027e602b0d1.rmeta","--extern","futures_task=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libfutures_task-acfb9894ca0b434e.rmeta","--extern","memchr=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libmemchr-9ffb1f310d7197d3.rmeta","--extern","pin_utils=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libpin_utils-76af49361780dad9.rmeta","--extern","proc_macro_hack=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libproc_macro_hack-322ba90c78c4b741.so","--extern","proc_macro_nested=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libproc_macro_nested-cbee41c3a2af4b87.rmeta","--extern","slab=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libslab-6d31b7d62c494fb2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ivan/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libfutures_util-8e8a2025dc255f81.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[11860238450043222894,9815676292907709591]},"crate_root":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src","external_crates":[{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7827686636389194820,15662552692549508232]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/poll.rs","num":2,"id":{"name":"core","disambiguator":[8347428267238659886,10332094417061409504]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1363863465332800457,13848166988694336684]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12137614861726203495,15548133240156816566]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18056567842020430853,9313265962764064672]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17764581655047699045,8969240834890926963]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15105272547384731958,12075926336353145446]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18440455352970948901,15112185841299963639]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1364483041201605089,13268241566818872575]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14006621007583817116,4233624759020785085]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8672076995780005164,5844773395501633050]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[7980643601488589141,11238545750628155236]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[812282429613043422,12768483485645190371]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[16394268894339983760,18168038129299562657]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","num":15,"id":{"name":"futures_core","disambiguator":[12488506343877259468,12744302483260328354]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","num":16,"id":{"name":"pin_utils","disambiguator":[9365580645200329468,12203046391775796805]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/join_mod.rs","num":17,"id":{"name":"proc_macro_hack","disambiguator":[10259031204396604635,2455946471765747952]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","num":18,"id":{"name":"futures_task","disambiguator":[6621929237073921347,4855924870055196035]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","num":19,"id":{"name":"futures_channel","disambiguator":[6017684133149773455,9842202736864853890]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","num":20,"id":{"name":"futures_sink","disambiguator":[11177315347313063590,10276619660450108214]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","num":21,"id":{"name":"slab","disambiguator":[12219235850092579412,5778732648905521594]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","num":22,"id":{"name":"futures_io","disambiguator":[12091782109879691138,2581324228382407792]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/join_mod.rs","num":23,"id":{"name":"futures_macro","disambiguator":[7613205735549366990,6091634247934676865]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/join_mod.rs","num":24,"id":{"name":"proc_macro_nested","disambiguator":[11014645657020077675,1401791706201183092]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_until.rs","num":25,"id":{"name":"memchr","disambiguator":[6827091138237897929,13858733323875644729]}}],"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":0,"byte_end":3616,"line_start":1,"line_end":119,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":131},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":1469,"byte_end":1474,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":7},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":1495,"byte_end":1502,"line_start":34,"line_end":34,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":17},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","byte_start":3853,"byte_end":3864,"line_start":10,"line_end":10,"column_start":31,"column_end":42},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":15,"index":82},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","byte_start":3911,"byte_end":3922,"line_start":12,"line_end":12,"column_start":31,"column_end":42},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","byte_start":3968,"byte_end":3969,"line_start":16,"line_end":16,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","byte_start":3968,"byte_end":3969,"line_start":16,"line_end":16,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","byte_start":3968,"byte_end":3969,"line_start":16,"line_end":16,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","byte_start":3968,"byte_end":3969,"line_start":16,"line_end":16,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","byte_start":3968,"byte_end":3969,"line_start":16,"line_end":16,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":1727,"byte_end":1728,"line_start":45,"line_end":45,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":168},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":1787,"byte_end":1800,"line_start":49,"line_end":49,"column_start":23,"column_end":36},"alias_span":null,"name":"core_reexport","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":11},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":17771,"byte_end":17780,"line_start":8,"line_end":8,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":15,"index":14},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":17782,"byte_end":17796,"line_start":8,"line_end":8,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":15,"index":17},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":17830,"byte_end":17841,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":8076},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":17843,"byte_end":17849,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":15,"index":32},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":17851,"byte_end":17860,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":18,"index":101},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":17886,"byte_end":17895,"line_start":10,"line_end":10,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":18,"index":67},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":17897,"byte_end":17911,"line_start":10,"line_end":10,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":18,"index":122},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":17913,"byte_end":17928,"line_start":10,"line_end":10,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5462},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":21951,"byte_end":21962,"line_start":60,"line_end":60,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":448},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":22376,"byte_end":22382,"line_start":74,"line_end":74,"column_start":23,"column_end":29},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":117},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18044,"byte_end":18051,"line_start":17,"line_end":17,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":146},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18053,"byte_end":18066,"line_start":17,"line_end":17,"column_start":14,"column_end":27},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5385},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18068,"byte_end":18072,"line_start":17,"line_end":17,"column_start":29,"column_end":33},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":544},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18074,"byte_end":18083,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5430},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18085,"byte_end":18092,"line_start":17,"line_end":17,"column_start":46,"column_end":53},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5394},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18094,"byte_end":18104,"line_start":17,"line_end":17,"column_start":55,"column_end":65},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5403},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18106,"byte_end":18109,"line_start":17,"line_end":17,"column_start":67,"column_end":70},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5453},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18111,"byte_end":18121,"line_start":17,"line_end":17,"column_start":72,"column_end":82},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5417},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18123,"byte_end":18127,"line_start":17,"line_end":17,"column_start":84,"column_end":88},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5444},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18129,"byte_end":18138,"line_start":17,"line_end":17,"column_start":90,"column_end":99},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5462},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18190,"byte_end":18201,"line_start":21,"line_end":21,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":407},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18279,"byte_end":18285,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"alias_span":null,"name":"Remote","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5471},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18287,"byte_end":18299,"line_start":25,"line_end":25,"column_start":32,"column_end":44},"alias_span":null,"name":"RemoteHandle","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":448},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18349,"byte_end":18355,"line_start":28,"line_end":28,"column_start":23,"column_end":29},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5526},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":68794,"byte_end":68805,"line_start":31,"line_end":31,"column_start":29,"column_end":40},"alias_span":null,"name":"FlattenSink","value":"","parent":{"krate":0,"index":588}},{"kind":"Use","ref_id":{"krate":0,"index":5501},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18406,"byte_end":18413,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5514},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18415,"byte_end":18422,"line_start":32,"line_end":32,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5551},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18424,"byte_end":18434,"line_start":32,"line_end":32,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5537},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18436,"byte_end":18445,"line_start":32,"line_end":32,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5565},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18447,"byte_end":18457,"line_start":32,"line_end":32,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5574},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18459,"byte_end":18465,"line_start":32,"line_end":32,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5588},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18467,"byte_end":18472,"line_start":32,"line_end":32,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5602},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18474,"byte_end":18480,"line_start":32,"line_end":32,"column_start":73,"column_end":79},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":881},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18482,"byte_end":18498,"line_start":32,"line_end":32,"column_start":81,"column_end":97},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1015},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18504,"byte_end":18516,"line_start":33,"line_end":33,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5618},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18518,"byte_end":18530,"line_start":33,"line_end":33,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5526},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18587,"byte_end":18598,"line_start":37,"line_end":37,"column_start":27,"column_end":38},"alias_span":null,"name":"FlattenSink","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1064},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18654,"byte_end":18658,"line_start":42,"line_end":42,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5668},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18660,"byte_end":18664,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1091},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18705,"byte_end":18712,"line_start":45,"line_end":45,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5674},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18714,"byte_end":18721,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1116},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18768,"byte_end":18778,"line_start":48,"line_end":48,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5680},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18780,"byte_end":18789,"line_start":48,"line_end":48,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5693},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18827,"byte_end":18839,"line_start":51,"line_end":51,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1166},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18879,"byte_end":18886,"line_start":54,"line_end":54,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1161},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18888,"byte_end":18894,"line_start":54,"line_end":54,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1202},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18931,"byte_end":18934,"line_start":57,"line_end":57,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1199},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18936,"byte_end":18938,"line_start":57,"line_end":57,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1197},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18940,"byte_end":18945,"line_start":57,"line_end":57,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5705},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18947,"byte_end":18952,"line_start":57,"line_end":57,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1225},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18987,"byte_end":18991,"line_start":60,"line_end":60,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1228},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":18993,"byte_end":18998,"line_start":60,"line_end":60,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1232},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19000,"byte_end":19005,"line_start":60,"line_end":60,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1237},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19007,"byte_end":19012,"line_start":60,"line_end":60,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5715},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19014,"byte_end":19018,"line_start":60,"line_end":60,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5737},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19020,"byte_end":19025,"line_start":60,"line_end":60,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5765},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19027,"byte_end":19032,"line_start":60,"line_end":60,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5799},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19034,"byte_end":19039,"line_start":60,"line_end":60,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1279},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19134,"byte_end":19142,"line_start":65,"line_end":65,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1273},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19144,"byte_end":19151,"line_start":65,"line_end":65,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1307},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19190,"byte_end":19196,"line_start":68,"line_end":68,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5892},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19198,"byte_end":19204,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1334},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19303,"byte_end":19313,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5900},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19315,"byte_end":19324,"line_start":73,"line_end":73,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1364},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19372,"byte_end":19380,"line_start":77,"line_end":77,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1367},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19382,"byte_end":19391,"line_start":77,"line_end":77,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1371},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19393,"byte_end":19402,"line_start":77,"line_end":77,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1376},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19404,"byte_end":19413,"line_start":77,"line_end":77,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5906},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19415,"byte_end":19422,"line_start":77,"line_end":77,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5924},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19424,"byte_end":19432,"line_start":77,"line_end":77,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5947},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19434,"byte_end":19442,"line_start":77,"line_end":77,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":5975},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19444,"byte_end":19452,"line_start":77,"line_end":77,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1428},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19557,"byte_end":19569,"line_start":83,"line_end":83,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1422},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19571,"byte_end":19581,"line_start":83,"line_end":83,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1456},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19628,"byte_end":19638,"line_start":86,"line_end":86,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":6061},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19640,"byte_end":19649,"line_start":86,"line_end":86,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":1481},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19746,"byte_end":19755,"line_start":91,"line_end":91,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":6069},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19757,"byte_end":19765,"line_start":91,"line_end":91,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":6075},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19803,"byte_end":19809,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":6112},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19946,"byte_end":19955,"line_start":100,"line_end":100,"column_start":31,"column_end":40},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":6129},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19957,"byte_end":19966,"line_start":100,"line_end":100,"column_start":42,"column_end":51},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":6143},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19968,"byte_end":19979,"line_start":100,"line_end":100,"column_start":53,"column_end":64},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":6139},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":19981,"byte_end":19998,"line_start":100,"line_end":100,"column_start":66,"column_end":83},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":6154},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":20000,"byte_end":20007,"line_start":100,"line_end":100,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":544},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3045,"byte_end":3054,"line_start":92,"line_end":92,"column_start":40,"column_end":49},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1015},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3056,"byte_end":3068,"line_start":92,"line_end":92,"column_start":51,"column_end":63},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":62},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162457,"byte_end":162466,"line_start":8,"line_end":8,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":15,"index":65},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162468,"byte_end":162482,"line_start":8,"line_end":8,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":15,"index":82},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162516,"byte_end":162527,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":15,"index":68},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162529,"byte_end":162535,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":15,"index":97},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162537,"byte_end":162546,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6277},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":166526,"byte_end":166533,"line_start":58,"line_end":58,"column_start":24,"column_end":31},"alias_span":null,"name":"Forward","value":"","parent":{"krate":0,"index":1598}},{"kind":"Use","ref_id":{"krate":0,"index":6475},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":168480,"byte_end":168486,"line_start":121,"line_end":121,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1598}},{"kind":"Use","ref_id":{"krate":0,"index":6721},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":169610,"byte_end":169621,"line_start":155,"line_end":155,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1598}},{"kind":"Use","ref_id":{"krate":0,"index":6167},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162662,"byte_end":162667,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6182},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162669,"byte_end":162676,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6196},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162678,"byte_end":162684,"line_start":16,"line_end":16,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6208},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162686,"byte_end":162695,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":1747},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162697,"byte_end":162703,"line_start":16,"line_end":16,"column_start":40,"column_end":46},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":1806},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162705,"byte_end":162714,"line_start":16,"line_end":16,"column_start":48,"column_end":57},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6250},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162716,"byte_end":162723,"line_start":16,"line_end":16,"column_start":59,"column_end":66},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":1898},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162725,"byte_end":162729,"line_start":16,"line_end":16,"column_start":68,"column_end":72},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":1995},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162731,"byte_end":162738,"line_start":16,"line_end":16,"column_start":74,"column_end":81},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6303},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162740,"byte_end":162744,"line_start":16,"line_end":16,"column_start":83,"column_end":87},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":2104},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162746,"byte_end":162753,"line_start":16,"line_end":16,"column_start":89,"column_end":96},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":2159},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162759,"byte_end":162762,"line_start":17,"line_end":17,"column_start":5,"column_end":8},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6346},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162764,"byte_end":162768,"line_start":17,"line_end":17,"column_start":10,"column_end":14},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6362},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162770,"byte_end":162778,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6354},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162780,"byte_end":162794,"line_start":17,"line_end":17,"column_start":26,"column_end":40},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6378},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162796,"byte_end":162800,"line_start":17,"line_end":17,"column_start":42,"column_end":46},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":2335},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162802,"byte_end":162811,"line_start":17,"line_end":17,"column_start":48,"column_end":57},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":2649},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162813,"byte_end":162822,"line_start":17,"line_end":17,"column_start":59,"column_end":68},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6319},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162824,"byte_end":162836,"line_start":17,"line_end":17,"column_start":70,"column_end":82},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6410},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162838,"byte_end":162842,"line_start":17,"line_end":17,"column_start":84,"column_end":88},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":2430},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162844,"byte_end":162853,"line_start":17,"line_end":17,"column_start":90,"column_end":99},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":2494},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162859,"byte_end":162863,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6454},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162865,"byte_end":162868,"line_start":18,"line_end":18,"column_start":11,"column_end":14},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6721},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162920,"byte_end":162931,"line_start":22,"line_end":22,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6475},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162982,"byte_end":162988,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6277},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163038,"byte_end":163045,"line_start":28,"line_end":28,"column_start":23,"column_end":30},"alias_span":null,"name":"Forward","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6510},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163176,"byte_end":163191,"line_start":32,"line_end":32,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6556},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163193,"byte_end":163201,"line_start":32,"line_end":32,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6600},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163203,"byte_end":163220,"line_start":32,"line_end":32,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6676},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163377,"byte_end":163389,"line_start":37,"line_end":37,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6712},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163391,"byte_end":163400,"line_start":37,"line_end":37,"column_start":38,"column_end":47},"alias_span":null,"name":"SplitSink","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6705},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163402,"byte_end":163413,"line_start":37,"line_end":37,"column_start":49,"column_end":60},"alias_span":null,"name":"SplitStream","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":7038},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":286588,"byte_end":286601,"line_start":103,"line_end":103,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":2751}},{"kind":"Use","ref_id":{"krate":0,"index":2776},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163465,"byte_end":163472,"line_start":41,"line_end":41,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6745},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163474,"byte_end":163481,"line_start":41,"line_end":41,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":2937},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163483,"byte_end":163493,"line_start":41,"line_end":41,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":2880},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163495,"byte_end":163504,"line_start":41,"line_end":41,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6779},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163506,"byte_end":163516,"line_start":41,"line_end":41,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3079},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163518,"byte_end":163524,"line_start":41,"line_end":41,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3024},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163526,"byte_end":163531,"line_start":41,"line_end":41,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3135},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163533,"byte_end":163539,"line_start":41,"line_end":41,"column_start":73,"column_end":79},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6881},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163541,"byte_end":163551,"line_start":41,"line_end":41,"column_start":81,"column_end":91},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6895},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163557,"byte_end":163566,"line_start":42,"line_end":42,"column_start":5,"column_end":14},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3265},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163568,"byte_end":163577,"line_start":42,"line_end":42,"column_start":16,"column_end":25},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3327},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163579,"byte_end":163591,"line_start":42,"line_end":42,"column_start":27,"column_end":39},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6864},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163593,"byte_end":163603,"line_start":42,"line_end":42,"column_start":41,"column_end":51},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3474},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163605,"byte_end":163612,"line_start":42,"line_end":42,"column_start":53,"column_end":60},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3222},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163614,"byte_end":163624,"line_start":42,"line_end":42,"column_start":62,"column_end":72},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6822},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163626,"byte_end":163633,"line_start":42,"line_end":42,"column_start":74,"column_end":81},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3529},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163635,"byte_end":163647,"line_start":42,"line_end":42,"column_start":83,"column_end":95},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3615},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163653,"byte_end":163665,"line_start":43,"line_end":43,"column_start":5,"column_end":17},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":7038},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163744,"byte_end":163757,"line_start":48,"line_end":48,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":7026},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163892,"byte_end":163910,"line_start":52,"line_end":52,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":6991},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163912,"byte_end":163932,"line_start":52,"line_end":52,"column_start":48,"column_end":68},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3695},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163989,"byte_end":163993,"line_start":57,"line_end":57,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":7057},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":163995,"byte_end":163999,"line_start":57,"line_end":57,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3713},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164038,"byte_end":164044,"line_start":60,"line_end":60,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":7063},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164046,"byte_end":164052,"line_start":60,"line_end":60,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3737},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164089,"byte_end":164094,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":7069},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164096,"byte_end":164101,"line_start":63,"line_end":63,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3762},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164136,"byte_end":164140,"line_start":66,"line_end":66,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":7075},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164142,"byte_end":164146,"line_start":66,"line_end":66,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3788},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164187,"byte_end":164194,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":7084},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164196,"byte_end":164203,"line_start":69,"line_end":69,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3818},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164244,"byte_end":164251,"line_start":72,"line_end":72,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3810},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164253,"byte_end":164259,"line_start":72,"line_end":72,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3843},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164298,"byte_end":164304,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":7090},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164306,"byte_end":164312,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3881},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164351,"byte_end":164357,"line_start":78,"line_end":78,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":3886},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164359,"byte_end":164365,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":7144},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164514,"byte_end":164528,"line_start":84,"line_end":84,"column_start":36,"column_end":50},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":7471},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8494794,"byte_end":8494798,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":7175}},{"kind":"Use","ref_id":{"krate":0,"index":7452},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8494800,"byte_end":8494807,"line_start":25,"line_end":25,"column_start":28,"column_end":35},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":7175}},{"kind":"Use","ref_id":{"krate":0,"index":7442},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8494809,"byte_end":8494819,"line_start":25,"line_end":25,"column_start":37,"column_end":47},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":7175}},{"kind":"Use","ref_id":{"krate":0,"index":7461},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8494821,"byte_end":8494831,"line_start":25,"line_end":25,"column_start":49,"column_end":59},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":7175}},{"kind":"Use","ref_id":{"krate":0,"index":7334},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164678,"byte_end":164694,"line_start":90,"line_end":90,"column_start":38,"column_end":54},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":7433},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164808,"byte_end":164818,"line_start":95,"line_end":95,"column_start":32,"column_end":42},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":7411},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164820,"byte_end":164829,"line_start":95,"line_end":95,"column_start":44,"column_end":53},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1590}},{"kind":"Use","ref_id":{"krate":0,"index":2649},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3127,"byte_end":3136,"line_start":95,"line_end":95,"column_start":40,"column_end":49},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3615},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3138,"byte_end":3150,"line_start":95,"line_end":95,"column_start":51,"column_end":63},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":9},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386165,"byte_end":386169,"line_start":16,"line_end":16,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":3925}},{"kind":"Use","ref_id":{"krate":0,"index":7480},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386204,"byte_end":386209,"line_start":19,"line_end":19,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":3925}},{"kind":"Use","ref_id":{"krate":0,"index":3962},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386245,"byte_end":386250,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"alias_span":null,"name":"drain","value":"","parent":{"krate":0,"index":3925}},{"kind":"Use","ref_id":{"krate":0,"index":7491},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386252,"byte_end":386257,"line_start":22,"line_end":22,"column_start":30,"column_end":35},"alias_span":null,"name":"Drain","value":"","parent":{"krate":0,"index":3925}},{"kind":"Use","ref_id":{"krate":0,"index":3987},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386295,"byte_end":386301,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"alias_span":null,"name":"Fanout","value":"","parent":{"krate":0,"index":3925}},{"kind":"Use","ref_id":{"krate":0,"index":7503},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386336,"byte_end":386341,"line_start":28,"line_end":28,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":3925}},{"kind":"Use","ref_id":{"krate":0,"index":7514},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386382,"byte_end":386393,"line_start":31,"line_end":31,"column_start":25,"column_end":36},"alias_span":null,"name":"SinkErrInto","value":"","parent":{"krate":0,"index":3925}},{"kind":"Use","ref_id":{"krate":0,"index":7531},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386432,"byte_end":386442,"line_start":34,"line_end":34,"column_start":24,"column_end":34},"alias_span":null,"name":"SinkMapErr","value":"","parent":{"krate":0,"index":3925}},{"kind":"Use","ref_id":{"krate":0,"index":7549},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386475,"byte_end":386479,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"alias_span":null,"name":"Send","value":"","parent":{"krate":0,"index":3925}},{"kind":"Use","ref_id":{"krate":0,"index":4163},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386520,"byte_end":386527,"line_start":40,"line_end":40,"column_start":25,"column_end":32},"alias_span":null,"name":"SendAll","value":"","parent":{"krate":0,"index":3925}},{"kind":"Use","ref_id":{"krate":0,"index":4206},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386560,"byte_end":386564,"line_start":43,"line_end":43,"column_start":21,"column_end":25},"alias_span":null,"name":"With","value":"","parent":{"krate":0,"index":3925}},{"kind":"Use","ref_id":{"krate":0,"index":4285},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386615,"byte_end":386626,"line_start":46,"line_end":46,"column_start":30,"column_end":41},"alias_span":null,"name":"WithFlatMap","value":"","parent":{"krate":0,"index":3925}},{"kind":"Use","ref_id":{"krate":0,"index":7576},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386715,"byte_end":386721,"line_start":51,"line_end":51,"column_start":23,"column_end":29},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":3925}},{"kind":"Use","ref_id":{"krate":0,"index":4396},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3254,"byte_end":3261,"line_start":100,"line_end":100,"column_start":37,"column_end":44},"alias_span":null,"name":"SinkExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":240},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425035,"byte_end":425042,"line_start":5,"line_end":5,"column_start":27,"column_end":34},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":18,"index":254},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425101,"byte_end":425106,"line_start":8,"line_end":8,"column_start":27,"column_end":32},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":18,"index":285},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425166,"byte_end":425175,"line_start":11,"line_end":11,"column_start":28,"column_end":37},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":18,"index":290},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425177,"byte_end":425185,"line_start":11,"line_end":11,"column_start":39,"column_end":47},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":15,"index":142},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425233,"byte_end":425244,"line_start":13,"line_end":13,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":4444},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425282,"byte_end":425290,"line_start":17,"line_end":17,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":0,"index":4449},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425292,"byte_end":425305,"line_start":17,"line_end":17,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":2,"index":8147},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425338,"byte_end":425345,"line_start":19,"line_end":19,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":2,"index":31865},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425347,"byte_end":425351,"line_start":19,"line_end":19,"column_start":39,"column_end":43},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":2,"index":8157},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425353,"byte_end":425358,"line_start":19,"line_end":19,"column_start":45,"column_end":50},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":2,"index":31905},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425360,"byte_end":425368,"line_start":19,"line_end":19,"column_start":52,"column_end":60},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":2,"index":31914},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425370,"byte_end":425384,"line_start":19,"line_end":19,"column_start":62,"column_end":76},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":18,"index":10},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425416,"byte_end":425421,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":18,"index":13},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425423,"byte_end":425433,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":18,"index":16},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425435,"byte_end":425445,"line_start":22,"line_end":22,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":18,"index":101},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425451,"byte_end":425460,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":18,"index":67},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425462,"byte_end":425476,"line_start":23,"line_end":23,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":18,"index":122},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425478,"byte_end":425493,"line_start":23,"line_end":23,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":18,"index":227},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425521,"byte_end":425531,"line_start":26,"line_end":26,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":18,"index":228},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":425579,"byte_end":425593,"line_start":28,"line_end":28,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":4426}},{"kind":"Use","ref_id":{"krate":22,"index":17},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":432555,"byte_end":432564,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":22,"index":20},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":432566,"byte_end":432576,"line_start":17,"line_end":17,"column_start":16,"column_end":26},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":22,"index":25},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":432578,"byte_end":432587,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":22,"index":27},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":432589,"byte_end":432601,"line_start":17,"line_end":17,"column_start":39,"column_end":51},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":1,"index":2481},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":432603,"byte_end":432608,"line_start":17,"line_end":17,"column_start":53,"column_end":58},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":1,"index":6536},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":432610,"byte_end":432619,"line_start":17,"line_end":17,"column_start":60,"column_end":69},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":1,"index":2894},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":432625,"byte_end":432632,"line_start":18,"line_end":18,"column_start":5,"column_end":12},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":1,"index":2875},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":432634,"byte_end":432644,"line_start":18,"line_end":18,"column_start":14,"column_end":24},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":1,"index":2479},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":432646,"byte_end":432652,"line_start":18,"line_end":18,"column_start":26,"column_end":32},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":1,"index":6604},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":432654,"byte_end":432662,"line_start":18,"line_end":18,"column_start":34,"column_end":42},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7599},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":433332,"byte_end":433342,"line_start":42,"line_end":42,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":4575},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":433387,"byte_end":433396,"line_start":45,"line_end":45,"column_start":27,"column_end":36},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":4625},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":433441,"byte_end":433450,"line_start":48,"line_end":48,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":4668},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":433485,"byte_end":433490,"line_start":51,"line_end":51,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7656},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":433525,"byte_end":433530,"line_start":54,"line_end":54,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":4735},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":433564,"byte_end":433568,"line_start":57,"line_end":57,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7664},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":433570,"byte_end":433574,"line_start":57,"line_end":57,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":4764},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":433617,"byte_end":433625,"line_start":60,"line_end":60,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7677},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":433627,"byte_end":433634,"line_start":60,"line_end":60,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7689},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":433672,"byte_end":433678,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":4833},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":433714,"byte_end":433719,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":4831},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":433721,"byte_end":433726,"line_start":66,"line_end":66,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7717},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":433762,"byte_end":433767,"line_start":69,"line_end":69,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7732},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":433860,"byte_end":433868,"line_start":74,"line_end":74,"column_start":26,"column_end":34},"alias_span":null,"name":"IntoSink","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7746},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":433903,"byte_end":433908,"line_start":77,"line_end":77,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7755},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":433941,"byte_end":433945,"line_start":80,"line_end":80,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7764},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":433996,"byte_end":434008,"line_start":83,"line_end":83,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7773},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434053,"byte_end":434062,"line_start":86,"line_end":86,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7782},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434105,"byte_end":434113,"line_start":89,"line_end":89,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7793},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434160,"byte_end":434169,"line_start":92,"line_end":92,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7803},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434222,"byte_end":434234,"line_start":95,"line_end":95,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7814},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434279,"byte_end":434288,"line_start":98,"line_end":98,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":5087},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434326,"byte_end":434332,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":5085},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434334,"byte_end":434340,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7825},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434374,"byte_end":434378,"line_start":104,"line_end":104,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":5129},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434412,"byte_end":434416,"line_start":107,"line_end":107,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":5127},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434418,"byte_end":434422,"line_start":107,"line_end":107,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7834},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434459,"byte_end":434467,"line_start":110,"line_end":110,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7840},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434469,"byte_end":434478,"line_start":110,"line_end":110,"column_start":33,"column_end":42},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7846},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434512,"byte_end":434516,"line_start":113,"line_end":113,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7858},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434553,"byte_end":434559,"line_start":116,"line_end":116,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7865},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434594,"byte_end":434599,"line_start":119,"line_end":119,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7874},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434652,"byte_end":434665,"line_start":122,"line_end":122,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":7883},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434708,"byte_end":434716,"line_start":125,"line_end":125,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":4474}},{"kind":"Use","ref_id":{"krate":0,"index":5294},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3480,"byte_end":3492,"line_start":114,"line_end":114,"column_start":36,"column_end":48},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5311},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3494,"byte_end":3507,"line_start":114,"line_end":114,"column_start":50,"column_end":63},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5324},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3509,"byte_end":3521,"line_start":114,"line_end":114,"column_start":65,"column_end":77},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5328},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3523,"byte_end":3538,"line_start":114,"line_end":114,"column_start":79,"column_end":94},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7914},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mod.rs","byte_start":8528620,"byte_end":8528625,"line_start":9,"line_end":9,"column_start":23,"column_end":28},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":7892}},{"kind":"Use","ref_id":{"krate":0,"index":7950},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mod.rs","byte_start":8528627,"byte_end":8528642,"line_start":9,"line_end":9,"column_start":30,"column_end":45},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":7892}},{"kind":"Use","ref_id":{"krate":0,"index":7969},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mod.rs","byte_start":8528644,"byte_end":8528654,"line_start":9,"line_end":9,"column_start":47,"column_end":57},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":7892}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":0,"byte_end":3616,"line_start":1,"line_end":119,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":1587},{"krate":0,"index":1590},{"krate":0,"index":3922},{"krate":0,"index":3925},{"krate":0,"index":4425},{"krate":0,"index":4426},{"krate":0,"index":4472},{"krate":0,"index":4474},{"krate":0,"index":5336},{"krate":0,"index":7892}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"! Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"! and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":322,"byte_end":410,"line_start":8,"line_end":8,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":578,"byte_end":599,"line_start":11,"line_end":11,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"async_await","qualname":"::async_await","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73}],"decl_id":null,"docs":" Await","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":1524,"byte_end":1547,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"cfg(feature = \"async-await\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":1548,"byte_end":1579,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"macro_use","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":1580,"byte_end":1592,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"! Await","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","byte_start":3618,"byte_end":3627,"line_start":1,"line_end":1,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","byte_start":3628,"byte_end":3631,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions and combinators for working","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","byte_start":3632,"byte_end":3706,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! with `async`/`await` code.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","byte_start":3707,"byte_end":3737,"line_start":4,"line_end":4,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/poll.rs","byte_start":5264,"byte_end":5268,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"poll","qualname":"::async_await::poll::poll","value":"fn <F> (future: F) -> PollOnce<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/poll.rs","byte_start":5409,"byte_end":5417,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"PollOnce","qualname":"::async_await::poll::PollOnce","value":"PollOnce {  }","parent":null,"children":[{"krate":0,"index":24}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/poll.rs","byte_start":5343,"byte_end":5382,"line_start":24,"line_end":24,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":37},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/pending.rs","byte_start":6472,"byte_end":6484,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"pending_once","qualname":"::async_await::pending::pending_once","value":"fn () -> PendingOnce","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":38},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/pending.rs","byte_start":6609,"byte_end":6620,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"PendingOnce","qualname":"::async_await::pending::PendingOnce","value":"PendingOnce {  }","parent":null,"children":[{"krate":0,"index":39}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/pending.rs","byte_start":6543,"byte_end":6582,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":61},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/random.rs","byte_start":16443,"byte_end":16450,"line_start":13,"line_end":13,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::async_await::random::shuffle","value":"fn <T> (slice: &mut [T]) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","byte_start":4477,"byte_end":4489,"line_start":41,"line_end":41,"column_start":8,"column_end":20},"name":"assert_unpin","qualname":"::async_await::assert_unpin","value":"fn <T> (_: &T) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","byte_start":4452,"byte_end":4469,"line_start":40,"line_end":40,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","byte_start":4551,"byte_end":4570,"line_start":45,"line_end":45,"column_start":8,"column_end":27},"name":"assert_fused_future","qualname":"::async_await::assert_fused_future","value":"fn <T> (_: &T) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","byte_start":4526,"byte_end":4543,"line_start":44,"line_end":44,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":73},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","byte_start":4647,"byte_end":4666,"line_start":49,"line_end":49,"column_start":8,"column_end":27},"name":"assert_fused_stream","qualname":"::async_await::assert_fused_stream","value":"fn <T> (_: &T) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/mod.rs","byte_start":4622,"byte_end":4639,"line_start":48,"line_end":48,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":79},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":87},{"krate":0,"index":91},{"krate":0,"index":572},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":1041},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1076},{"krate":0,"index":1079},{"krate":0,"index":1102},{"krate":0,"index":1105},{"krate":0,"index":1129},{"krate":0,"index":1132},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1177},{"krate":0,"index":1180},{"krate":0,"index":1205},{"krate":0,"index":1210},{"krate":0,"index":1243},{"krate":0,"index":1252},{"krate":0,"index":1290},{"krate":0,"index":1293},{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1345},{"krate":0,"index":1348},{"krate":0,"index":1382},{"krate":0,"index":1391},{"krate":0,"index":1439},{"krate":0,"index":1442},{"krate":0,"index":1464},{"krate":0,"index":1467},{"krate":0,"index":1492},{"krate":0,"index":1495},{"krate":0,"index":1583},{"krate":0,"index":6092},{"krate":0,"index":6123},{"krate":0,"index":1584}],"decl_id":null,"docs":" Futures","sig":null,"attributes":[{"value":"! Futures","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":17512,"byte_end":17523,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":17524,"byte_end":17527,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Future`s,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":17528,"byte_end":17602,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the [`FutureExt`] trait and the [`TryFutureExt`] trait which add","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":17603,"byte_end":17681,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! methods to `Future` types.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/mod.rs","byte_start":17682,"byte_end":17712,"line_start":5,"line_end":5,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":117},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten.rs","byte_start":38660,"byte_end":38667,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":119}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flatten`](super::FutureExt::flatten) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten.rs","byte_start":38515,"byte_end":38580,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten.rs","byte_start":38581,"byte_end":38648,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":146},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten_stream.rs","byte_start":40057,"byte_end":40070,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"FlattenStream","qualname":"::future::future::flatten_stream::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":148}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](super::FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`flatten_stream`](super::FutureExt::flatten_stream) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten_stream.rs","byte_start":39917,"byte_end":39996,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten_stream.rs","byte_start":39997,"byte_end":40045,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5385},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":42850,"byte_end":42854,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":5387}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fuse`](super::FutureExt::fuse) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":42694,"byte_end":42753,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":42771,"byte_end":42838,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44694,"byte_end":44704,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"fn () -> Fuse<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43072,"byte_end":43140,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43145,"byte_end":43148,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43153,"byte_end":43221,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43226,"byte_end":43271,"line_start":25,"line_end":25,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43276,"byte_end":43279,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43284,"byte_end":43298,"line_start":27,"line_end":27,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43303,"byte_end":43306,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43311,"byte_end":43318,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43323,"byte_end":43364,"line_start":30,"line_end":30,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43369,"byte_end":43400,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43405,"byte_end":43461,"line_start":32,"line_end":32,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43466,"byte_end":43490,"line_start":33,"line_end":33,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43495,"byte_end":43530,"line_start":34,"line_end":34,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43535,"byte_end":43560,"line_start":35,"line_end":35,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43565,"byte_end":43568,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43573,"byte_end":43622,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43627,"byte_end":43630,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43635,"byte_end":43677,"line_start":39,"line_end":39,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43682,"byte_end":43721,"line_start":40,"line_end":40,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43726,"byte_end":43765,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43770,"byte_end":43787,"line_start":42,"line_end":42,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43792,"byte_end":43795,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::termianted()` to create an already-terminated future","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43800,"byte_end":43870,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43875,"byte_end":43914,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43919,"byte_end":43960,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43965,"byte_end":43991,"line_start":47,"line_end":47,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":43996,"byte_end":43999,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44004,"byte_end":44014,"line_start":49,"line_end":49,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44019,"byte_end":44036,"line_start":50,"line_end":50,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44041,"byte_end":44075,"line_start":51,"line_end":51,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44080,"byte_end":44127,"line_start":52,"line_end":52,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44132,"byte_end":44181,"line_start":53,"line_end":53,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44186,"byte_end":44248,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44253,"byte_end":44277,"line_start":55,"line_end":55,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44282,"byte_end":44325,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44330,"byte_end":44387,"line_start":57,"line_end":57,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44392,"byte_end":44467,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44472,"byte_end":44502,"line_start":59,"line_end":59,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44507,"byte_end":44524,"line_start":60,"line_end":60,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44529,"byte_end":44543,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44548,"byte_end":44632,"line_start":62,"line_end":62,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44637,"byte_end":44646,"line_start":63,"line_end":63,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44651,"byte_end":44656,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44661,"byte_end":44670,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44675,"byte_end":44682,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5394},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/into_stream.rs","byte_start":45634,"byte_end":45644,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::future::future::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":5396}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`into_stream`](super::FutureExt::into_stream) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/into_stream.rs","byte_start":45483,"byte_end":45556,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/into_stream.rs","byte_start":45557,"byte_end":45605,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5403},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/map.rs","byte_start":46665,"byte_end":46668,"line_start":9,"line_end":9,"column_start":12,"column_end":15},"name":"Map","qualname":"::future::future::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":5406},{"krate":0,"index":5407}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`map`](super::FutureExt::map) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/map.rs","byte_start":46511,"byte_end":46568,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/map.rs","byte_start":46586,"byte_end":46653,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5417},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/then.rs","byte_start":47941,"byte_end":47945,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Then","qualname":"::future::future::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":5421}],"decl_id":null,"docs":" Future for the [`then`](super::FutureExt::then) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`then`](super::FutureExt::then) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/then.rs","byte_start":47785,"byte_end":47844,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/then.rs","byte_start":47862,"byte_end":47929,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5430},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/inspect.rs","byte_start":49185,"byte_end":49192,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::future::future::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":5433},{"krate":0,"index":5434}],"decl_id":null,"docs":" Future for the [`inspect`](super::FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`inspect`](super::FutureExt::inspect) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/inspect.rs","byte_start":49023,"byte_end":49088,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/inspect.rs","byte_start":49106,"byte_end":49173,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5444},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/unit_error.rs","byte_start":50465,"byte_end":50474,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"UnitError","qualname":"::future::future::unit_error::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":5446}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"/ Future for the [`unit_error`](super::FutureExt::unit_error) combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/unit_error.rs","byte_start":50293,"byte_end":50368,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/unit_error.rs","byte_start":50386,"byte_end":50453,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5453},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/never_error.rs","byte_start":51405,"byte_end":51415,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"NeverError","qualname":"::future::future::never_error::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":5455}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"/ Future for the [`never_error`](super::FutureExt::never_error) combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/never_error.rs","byte_start":51231,"byte_end":51308,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/never_error.rs","byte_start":51326,"byte_end":51393,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5462},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/catch_unwind.rs","byte_start":52401,"byte_end":52412,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":5464}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/catch_unwind.rs","byte_start":52229,"byte_end":52304,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/catch_unwind.rs","byte_start":52322,"byte_end":52389,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5471},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":53592,"byte_end":53604,"line_start":26,"line_end":26,"column_start":12,"column_end":24},"name":"RemoteHandle","qualname":"::future::future::remote_handle::RemoteHandle","value":"RemoteHandle {  }","parent":null,"children":[{"krate":0,"index":5473},{"krate":0,"index":5474}],"decl_id":null,"docs":" The handle to a remote future returned by\n [`remote_handle`](crate::future::FutureExt::remote_handle).\n","sig":null,"attributes":[{"value":"/ The handle to a remote future returned by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":53386,"byte_end":53431,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/ [`remote_handle`](crate::future::FutureExt::remote_handle).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":53432,"byte_end":53495,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":53496,"byte_end":53563,"line_start":24,"line_end":24,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":53903,"byte_end":53909,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"forget","qualname":"<RemoteHandle<T>>::forget","value":"fn (self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Drops this handle *without* canceling the underlying future.","sig":null,"attributes":[{"value":"/ Drops this handle *without* canceling the underlying future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":53715,"byte_end":53779,"line_start":32,"line_end":32,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":53784,"byte_end":53787,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This method can be used if you want to drop the handle, but let the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":53792,"byte_end":53863,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ execution continue.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":53868,"byte_end":53891,"line_start":35,"line_end":35,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":407},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":54671,"byte_end":54677,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"Remote","qualname":"::future::future::remote_handle::Remote","value":"Remote {  }","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411}],"decl_id":null,"docs":" A future which sends its output to the corresponding `RemoteHandle`.\n Created by [`remote_handle`](crate::future::FutureExt::remote_handle).\n","sig":null,"attributes":[{"value":"/ A future which sends its output to the corresponding `RemoteHandle`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":54444,"byte_end":54516,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ Created by [`remote_handle`](crate::future::FutureExt::remote_handle).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":54517,"byte_end":54591,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":54592,"byte_end":54659,"line_start":57,"line_end":57,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":448},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":56978,"byte_end":56984,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":56835,"byte_end":56898,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":56899,"byte_end":56966,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":59119,"byte_end":59123,"line_start":99,"line_end":99,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"fn (&self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":58850,"byte_end":58924,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":58929,"byte_end":59002,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":59007,"byte_end":59075,"line_start":97,"line_end":97,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":59080,"byte_end":59107,"line_start":98,"line_end":98,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":544},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":22610,"byte_end":22619,"line_start":85,"line_end":85,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":22511,"byte_end":22585,"line_start":83,"line_end":83,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":22586,"byte_end":22599,"line_start":84,"line_end":84,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23451,"byte_end":23454,"line_start":108,"line_end":108,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"fn <U, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":22634,"byte_end":22709,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":22714,"byte_end":22737,"line_start":87,"line_end":87,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":22742,"byte_end":22745,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":22750,"byte_end":22824,"line_start":89,"line_end":89,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":22829,"byte_end":22900,"line_start":90,"line_end":90,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":22905,"byte_end":22967,"line_start":91,"line_end":91,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":22972,"byte_end":22975,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":22980,"byte_end":23051,"line_start":93,"line_end":93,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23056,"byte_end":23127,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23132,"byte_end":23153,"line_start":95,"line_end":95,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23158,"byte_end":23161,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23166,"byte_end":23180,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23185,"byte_end":23188,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23193,"byte_end":23200,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23205,"byte_end":23246,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23251,"byte_end":23286,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23291,"byte_end":23294,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23299,"byte_end":23328,"line_start":103,"line_end":103,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23333,"byte_end":23376,"line_start":104,"line_end":104,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23381,"byte_end":23417,"line_start":105,"line_end":105,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23422,"byte_end":23431,"line_start":106,"line_end":106,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23436,"byte_end":23443,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24477,"byte_end":24481,"line_start":140,"line_end":140,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"fn <Fut, F> (self, f: F) -> Then<Self, Fut, F>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23624,"byte_end":23700,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23705,"byte_end":23748,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23753,"byte_end":23756,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23761,"byte_end":23832,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23837,"byte_end":23911,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23916,"byte_end":23932,"line_start":121,"line_end":121,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23937,"byte_end":23940,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":23945,"byte_end":24020,"line_start":123,"line_end":123,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24025,"byte_end":24036,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24041,"byte_end":24044,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24049,"byte_end":24120,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24125,"byte_end":24151,"line_start":127,"line_end":127,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24156,"byte_end":24159,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24164,"byte_end":24178,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24183,"byte_end":24186,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24191,"byte_end":24198,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24203,"byte_end":24244,"line_start":132,"line_end":132,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24249,"byte_end":24284,"line_start":133,"line_end":133,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24289,"byte_end":24292,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24297,"byte_end":24331,"line_start":135,"line_end":135,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24336,"byte_end":24401,"line_start":136,"line_end":136,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24406,"byte_end":24443,"line_start":137,"line_end":137,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24448,"byte_end":24457,"line_start":138,"line_end":138,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24462,"byte_end":24469,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25351,"byte_end":25362,"line_start":171,"line_end":171,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"fn <B> (self) -> Either<Self, B>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24693,"byte_end":24768,"line_start":149,"line_end":149,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24773,"byte_end":24794,"line_start":150,"line_end":150,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24799,"byte_end":24802,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24807,"byte_end":24887,"line_start":152,"line_end":152,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24892,"byte_end":24964,"line_start":153,"line_end":153,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24969,"byte_end":24972,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24977,"byte_end":24991,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":24996,"byte_end":24999,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25004,"byte_end":25011,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25016,"byte_end":25057,"line_start":158,"line_end":158,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25062,"byte_end":25097,"line_start":159,"line_end":159,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25102,"byte_end":25105,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25110,"byte_end":25124,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25129,"byte_end":25157,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25162,"byte_end":25198,"line_start":163,"line_end":163,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25203,"byte_end":25215,"line_start":164,"line_end":164,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25220,"byte_end":25258,"line_start":165,"line_end":165,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25263,"byte_end":25269,"line_start":166,"line_end":166,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25274,"byte_end":25277,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25282,"byte_end":25317,"line_start":168,"line_end":168,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25322,"byte_end":25331,"line_start":169,"line_end":169,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25336,"byte_end":25343,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26167,"byte_end":26179,"line_start":201,"line_end":201,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"fn <A> (self) -> Either<A, Self>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25508,"byte_end":25584,"line_start":179,"line_end":179,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25589,"byte_end":25610,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25615,"byte_end":25618,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25623,"byte_end":25702,"line_start":182,"line_end":182,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25707,"byte_end":25779,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25784,"byte_end":25787,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25792,"byte_end":25806,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25811,"byte_end":25814,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25819,"byte_end":25826,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25831,"byte_end":25872,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25877,"byte_end":25912,"line_start":189,"line_end":189,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25917,"byte_end":25920,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25925,"byte_end":25939,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25944,"byte_end":25972,"line_start":192,"line_end":192,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":25977,"byte_end":26013,"line_start":193,"line_end":193,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26018,"byte_end":26030,"line_start":194,"line_end":194,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26035,"byte_end":26073,"line_start":195,"line_end":195,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26078,"byte_end":26084,"line_start":196,"line_end":196,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26089,"byte_end":26092,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26097,"byte_end":26133,"line_start":198,"line_end":198,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26138,"byte_end":26147,"line_start":199,"line_end":199,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26152,"byte_end":26159,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26924,"byte_end":26935,"line_start":227,"line_end":227,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"fn (self) -> IntoStream<Self>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26326,"byte_end":26379,"line_start":209,"line_end":209,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26384,"byte_end":26387,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26392,"byte_end":26466,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26471,"byte_end":26534,"line_start":212,"line_end":212,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26539,"byte_end":26542,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26547,"byte_end":26561,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26566,"byte_end":26569,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26574,"byte_end":26581,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26586,"byte_end":26627,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26632,"byte_end":26667,"line_start":218,"line_end":218,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26672,"byte_end":26707,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26712,"byte_end":26715,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26720,"byte_end":26750,"line_start":221,"line_end":221,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26755,"byte_end":26793,"line_start":222,"line_end":222,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26798,"byte_end":26849,"line_start":223,"line_end":223,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26854,"byte_end":26890,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26895,"byte_end":26904,"line_start":225,"line_end":225,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":26909,"byte_end":26916,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27975,"byte_end":27982,"line_start":259,"line_end":259,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27040,"byte_end":27115,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ future is itself another future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27120,"byte_end":27156,"line_start":235,"line_end":235,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27161,"byte_end":27164,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27169,"byte_end":27238,"line_start":237,"line_end":237,"column_start":5,"column_end":74}},{"value":"/ computation out the final result. This method can only be called","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27243,"byte_end":27311,"line_start":238,"line_end":238,"column_start":5,"column_end":73}},{"value":"/ when the successful result of this future itself implements the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27316,"byte_end":27383,"line_start":239,"line_end":239,"column_start":5,"column_end":72}},{"value":"/ `IntoFuture` trait and the error can be created from this future's error","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27388,"byte_end":27464,"line_start":240,"line_end":240,"column_start":5,"column_end":81}},{"value":"/ type.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27469,"byte_end":27478,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27483,"byte_end":27486,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27491,"byte_end":27551,"line_start":243,"line_end":243,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27556,"byte_end":27559,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27564,"byte_end":27635,"line_start":245,"line_end":245,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27640,"byte_end":27666,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27671,"byte_end":27674,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27679,"byte_end":27693,"line_start":248,"line_end":248,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27698,"byte_end":27701,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27706,"byte_end":27713,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27718,"byte_end":27759,"line_start":251,"line_end":251,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27764,"byte_end":27799,"line_start":252,"line_end":252,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27804,"byte_end":27807,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27812,"byte_end":27858,"line_start":254,"line_end":254,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27863,"byte_end":27904,"line_start":255,"line_end":255,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27909,"byte_end":27941,"line_start":256,"line_end":256,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27946,"byte_end":27955,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":27960,"byte_end":27967,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29087,"byte_end":29101,"line_start":293,"line_end":293,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"fn (self) -> FlattenStream<Self>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28196,"byte_end":28271,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28276,"byte_end":28299,"line_start":269,"line_end":269,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28304,"byte_end":28307,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28312,"byte_end":28384,"line_start":271,"line_end":271,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28389,"byte_end":28462,"line_start":272,"line_end":272,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28467,"byte_end":28481,"line_start":273,"line_end":273,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28486,"byte_end":28489,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28494,"byte_end":28564,"line_start":275,"line_end":275,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28569,"byte_end":28587,"line_start":276,"line_end":276,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28592,"byte_end":28595,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28600,"byte_end":28614,"line_start":278,"line_end":278,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28619,"byte_end":28622,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28627,"byte_end":28634,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28639,"byte_end":28680,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28685,"byte_end":28720,"line_start":282,"line_end":282,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28725,"byte_end":28768,"line_start":283,"line_end":283,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28773,"byte_end":28776,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28781,"byte_end":28821,"line_start":285,"line_end":285,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28826,"byte_end":28892,"line_start":286,"line_end":286,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28897,"byte_end":28900,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28905,"byte_end":28958,"line_start":288,"line_end":288,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":28963,"byte_end":29009,"line_start":289,"line_end":289,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29014,"byte_end":29053,"line_start":290,"line_end":290,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29058,"byte_end":29067,"line_start":291,"line_end":291,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29072,"byte_end":29079,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30137,"byte_end":30141,"line_start":317,"line_end":317,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29242,"byte_end":29315,"line_start":301,"line_end":301,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29320,"byte_end":29386,"line_start":302,"line_end":302,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29391,"byte_end":29409,"line_start":303,"line_end":303,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29414,"byte_end":29417,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29422,"byte_end":29489,"line_start":305,"line_end":305,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29494,"byte_end":29559,"line_start":306,"line_end":306,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29564,"byte_end":29636,"line_start":307,"line_end":307,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29641,"byte_end":29715,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29720,"byte_end":29746,"line_start":309,"line_end":309,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29751,"byte_end":29754,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29759,"byte_end":29830,"line_start":311,"line_end":311,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29835,"byte_end":29910,"line_start":312,"line_end":312,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29915,"byte_end":29969,"line_start":313,"line_end":313,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29974,"byte_end":29977,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":29982,"byte_end":30056,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30061,"byte_end":30129,"line_start":316,"line_end":316,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30981,"byte_end":30988,"line_start":343,"line_end":343,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30287,"byte_end":30353,"line_start":325,"line_end":325,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30358,"byte_end":30361,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30366,"byte_end":30441,"line_start":327,"line_end":327,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30446,"byte_end":30519,"line_start":328,"line_end":328,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30524,"byte_end":30593,"line_start":329,"line_end":329,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30598,"byte_end":30648,"line_start":330,"line_end":330,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30653,"byte_end":30656,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30661,"byte_end":30675,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30680,"byte_end":30683,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30688,"byte_end":30695,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30700,"byte_end":30741,"line_start":335,"line_end":335,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30746,"byte_end":30781,"line_start":336,"line_end":336,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30786,"byte_end":30789,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30794,"byte_end":30823,"line_start":338,"line_end":338,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30828,"byte_end":30906,"line_start":339,"line_end":339,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30911,"byte_end":30947,"line_start":340,"line_end":340,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30952,"byte_end":30961,"line_start":341,"line_end":341,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":30966,"byte_end":30973,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32526,"byte_end":32538,"line_start":383,"line_end":383,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"fn (self) -> CatchUnwind<Self>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":31170,"byte_end":31224,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":31229,"byte_end":31232,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":31237,"byte_end":31312,"line_start":353,"line_end":353,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":31317,"byte_end":31391,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":31396,"byte_end":31470,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":31475,"byte_end":31526,"line_start":356,"line_end":356,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":31531,"byte_end":31534,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":31539,"byte_end":31614,"line_start":358,"line_end":358,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":31619,"byte_end":31689,"line_start":359,"line_end":359,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":31694,"byte_end":31761,"line_start":360,"line_end":360,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":31766,"byte_end":31841,"line_start":361,"line_end":361,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":31846,"byte_end":31918,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":31923,"byte_end":31926,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":31931,"byte_end":31995,"line_start":364,"line_end":364,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32000,"byte_end":32057,"line_start":365,"line_end":365,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32062,"byte_end":32065,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32070,"byte_end":32084,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32089,"byte_end":32092,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32097,"byte_end":32104,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32109,"byte_end":32150,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32155,"byte_end":32205,"line_start":371,"line_end":371,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32210,"byte_end":32213,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32218,"byte_end":32252,"line_start":373,"line_end":373,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32257,"byte_end":32306,"line_start":374,"line_end":374,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32311,"byte_end":32314,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32319,"byte_end":32368,"line_start":376,"line_end":376,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32373,"byte_end":32397,"line_start":377,"line_end":377,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32402,"byte_end":32409,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32414,"byte_end":32464,"line_start":379,"line_end":379,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32469,"byte_end":32478,"line_start":380,"line_end":380,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32483,"byte_end":32490,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32495,"byte_end":32518,"line_start":382,"line_end":382,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34194,"byte_end":34200,"line_start":436,"line_end":436,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"fn (self) -> Shared<Self>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32672,"byte_end":32747,"line_start":390,"line_end":390,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32752,"byte_end":32775,"line_start":391,"line_end":391,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32780,"byte_end":32783,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32788,"byte_end":32862,"line_start":393,"line_end":393,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32867,"byte_end":32940,"line_start":394,"line_end":394,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32945,"byte_end":32957,"line_start":395,"line_end":395,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32962,"byte_end":32965,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":32970,"byte_end":33034,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33039,"byte_end":33096,"line_start":398,"line_end":398,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33101,"byte_end":33104,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33109,"byte_end":33123,"line_start":400,"line_end":400,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33128,"byte_end":33131,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33136,"byte_end":33143,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33148,"byte_end":33189,"line_start":403,"line_end":403,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33194,"byte_end":33229,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33234,"byte_end":33237,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33242,"byte_end":33271,"line_start":406,"line_end":406,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33276,"byte_end":33310,"line_start":407,"line_end":407,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33315,"byte_end":33349,"line_start":408,"line_end":408,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33354,"byte_end":33357,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33362,"byte_end":33395,"line_start":410,"line_end":410,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33400,"byte_end":33433,"line_start":411,"line_end":411,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33438,"byte_end":33447,"line_start":412,"line_end":412,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33452,"byte_end":33459,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33464,"byte_end":33467,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33472,"byte_end":33479,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33484,"byte_end":33553,"line_start":416,"line_end":416,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33558,"byte_end":33633,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33638,"byte_end":33669,"line_start":418,"line_end":418,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33674,"byte_end":33677,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33682,"byte_end":33723,"line_start":420,"line_end":420,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33728,"byte_end":33763,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33768,"byte_end":33804,"line_start":422,"line_end":422,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33809,"byte_end":33829,"line_start":423,"line_end":423,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33834,"byte_end":33837,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33842,"byte_end":33871,"line_start":425,"line_end":425,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33876,"byte_end":33910,"line_start":426,"line_end":426,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33915,"byte_end":33949,"line_start":427,"line_end":427,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":33954,"byte_end":33999,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34004,"byte_end":34045,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34050,"byte_end":34057,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34062,"byte_end":34095,"line_start":431,"line_end":431,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34100,"byte_end":34132,"line_start":432,"line_end":432,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34137,"byte_end":34146,"line_start":433,"line_end":433,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34151,"byte_end":34158,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34163,"byte_end":34186,"line_start":435,"line_end":435,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34812,"byte_end":34825,"line_start":454,"line_end":454,"column_start":8,"column_end":21},"name":"remote_handle","qualname":"::future::future::FutureExt::remote_handle","value":"fn (self) -> (Remote<Self>, RemoteHandle<Self::Output>)","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Turn this future into a future that yields `()` on completion and sends\n its output to another future on a separate task.","sig":null,"attributes":[{"value":"/ Turn this future into a future that yields `()` on completion and sends","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34326,"byte_end":34401,"line_start":444,"line_end":444,"column_start":5,"column_end":80}},{"value":"/ its output to another future on a separate task.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34406,"byte_end":34458,"line_start":445,"line_end":445,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34463,"byte_end":34466,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This can be used with spawning executors to easily retrieve the result","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34471,"byte_end":34545,"line_start":447,"line_end":447,"column_start":5,"column_end":79}},{"value":"/ of a future executing on a separate task or thread.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34550,"byte_end":34605,"line_start":448,"line_end":448,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34610,"byte_end":34613,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34618,"byte_end":34682,"line_start":450,"line_end":450,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34687,"byte_end":34744,"line_start":451,"line_end":451,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"channel\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34749,"byte_end":34776,"line_start":452,"line_end":452,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34781,"byte_end":34804,"line_start":453,"line_end":453,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":35198,"byte_end":35203,"line_start":466,"line_end":466,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"fn <'a> (self) -> BoxFuture<'a, Self::Output>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":34969,"byte_end":35010,"line_start":461,"line_end":461,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":35015,"byte_end":35018,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":35023,"byte_end":35098,"line_start":463,"line_end":463,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":35103,"byte_end":35160,"line_start":464,"line_end":464,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":35165,"byte_end":35190,"line_start":465,"line_end":465,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":35629,"byte_end":35640,"line_start":480,"line_end":480,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"fn <'a> (self) -> LocalBoxFuture<'a, Self::Output>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":35328,"byte_end":35369,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":35374,"byte_end":35377,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":35382,"byte_end":35441,"line_start":475,"line_end":475,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":35446,"byte_end":35449,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":35454,"byte_end":35529,"line_start":477,"line_end":477,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":35534,"byte_end":35591,"line_start":478,"line_end":478,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":35596,"byte_end":35621,"line_start":479,"line_end":479,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":35896,"byte_end":35906,"line_start":489,"line_end":489,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"fn (self) -> UnitError<Self>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":35763,"byte_end":35812,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":35817,"byte_end":35888,"line_start":488,"line_end":488,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":36145,"byte_end":36156,"line_start":498,"line_end":498,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"fn (self) -> NeverError<Self>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":36009,"byte_end":36058,"line_start":496,"line_end":496,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":36063,"byte_end":36137,"line_start":497,"line_end":497,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":36338,"byte_end":36348,"line_start":506,"line_end":506,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Self::Output>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":36261,"byte_end":36330,"line_start":505,"line_end":505,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37744,"byte_end":37756,"line_start":544,"line_end":544,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"fn (mut self) -> Option<Self::Output>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":36484,"byte_end":36556,"line_start":513,"line_end":513,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":36561,"byte_end":36624,"line_start":514,"line_end":514,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":36629,"byte_end":36632,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":36637,"byte_end":36703,"line_start":516,"line_end":516,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":36708,"byte_end":36711,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":36716,"byte_end":36789,"line_start":518,"line_end":518,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":36794,"byte_end":36863,"line_start":519,"line_end":519,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":36868,"byte_end":36938,"line_start":520,"line_end":520,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":36943,"byte_end":36946,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":36951,"byte_end":36965,"line_start":522,"line_end":522,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":36970,"byte_end":36973,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":36978,"byte_end":36985,"line_start":524,"line_end":524,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":36990,"byte_end":37020,"line_start":525,"line_end":525,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37025,"byte_end":37075,"line_start":526,"line_end":526,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37080,"byte_end":37119,"line_start":527,"line_end":527,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37124,"byte_end":37175,"line_start":528,"line_end":528,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37180,"byte_end":37183,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37188,"byte_end":37248,"line_start":530,"line_end":530,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37253,"byte_end":37305,"line_start":531,"line_end":531,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37310,"byte_end":37317,"line_start":532,"line_end":532,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37322,"byte_end":37325,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37330,"byte_end":37399,"line_start":534,"line_end":534,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37404,"byte_end":37477,"line_start":535,"line_end":535,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37482,"byte_end":37514,"line_start":536,"line_end":536,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37519,"byte_end":37522,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37527,"byte_end":37534,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37539,"byte_end":37586,"line_start":539,"line_end":539,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37591,"byte_end":37630,"line_start":540,"line_end":540,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37635,"byte_end":37638,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37643,"byte_end":37724,"line_start":542,"line_end":542,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":37729,"byte_end":37736,"line_start":543,"line_end":543,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5501},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/and_then.rs","byte_start":84471,"byte_end":84478,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::future::try_future::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":5505}],"decl_id":null,"docs":" Future for the [`and_then`](super::TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`and_then`](super::TryFutureExt::and_then) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/and_then.rs","byte_start":84304,"byte_end":84374,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/and_then.rs","byte_start":84392,"byte_end":84459,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5514},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/err_into.rs","byte_start":86034,"byte_end":86041,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"ErrInto","qualname":"::future::try_future::err_into::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":5517},{"krate":0,"index":5518}],"decl_id":null,"docs":" Future for the [`err_into`](super::TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`err_into`](super::TryFutureExt::err_into) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/err_into.rs","byte_start":85867,"byte_end":85937,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/err_into.rs","byte_start":85955,"byte_end":86022,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5526},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_sink.rs","byte_start":87280,"byte_end":87291,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"FlattenSink","qualname":"::future::try_future::flatten_sink::FlattenSink","value":"FlattenSink {  }","parent":null,"children":[{"krate":0,"index":5529}],"decl_id":null,"docs":" Sink for the [`flatten_sink`](super::TryFutureExt::flatten_sink) method.\n","sig":null,"attributes":[{"value":"/ Sink for the [`flatten_sink`](super::TryFutureExt::flatten_sink) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_sink.rs","byte_start":87128,"byte_end":87204,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_sink.rs","byte_start":87222,"byte_end":87268,"line_start":11,"line_end":11,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":5537},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_ok.rs","byte_start":89199,"byte_end":89208,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"InspectOk","qualname":"::future::try_future::inspect_ok::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":5540},{"krate":0,"index":5541}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_ok.rs","byte_start":89028,"byte_end":89102,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_ok.rs","byte_start":89120,"byte_end":89187,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5551},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_err.rs","byte_start":90537,"byte_end":90547,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"InspectErr","qualname":"::future::try_future::inspect_err::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":5554},{"krate":0,"index":5555}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_err.rs","byte_start":90364,"byte_end":90440,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_err.rs","byte_start":90458,"byte_end":90525,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5565},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/into_future.rs","byte_start":91872,"byte_end":91882,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":5567}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::TryFutureExt::into_future) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/into_future.rs","byte_start":91699,"byte_end":91775,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/into_future.rs","byte_start":91793,"byte_end":91860,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5574},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_err.rs","byte_start":92816,"byte_end":92822,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::future::try_future::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":5577},{"krate":0,"index":5578}],"decl_id":null,"docs":" Future for the [`map_err`](super::TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`map_err`](super::TryFutureExt::map_err) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_err.rs","byte_start":92651,"byte_end":92719,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_err.rs","byte_start":92737,"byte_end":92804,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5588},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_ok.rs","byte_start":94214,"byte_end":94219,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"MapOk","qualname":"::future::try_future::map_ok::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":5591},{"krate":0,"index":5592}],"decl_id":null,"docs":" Future for the [`map_ok`](super::TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`map_ok`](super::TryFutureExt::map_ok) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_ok.rs","byte_start":94051,"byte_end":94117,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_ok.rs","byte_start":94135,"byte_end":94202,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5602},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/or_else.rs","byte_start":95632,"byte_end":95638,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::future::try_future::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":5606}],"decl_id":null,"docs":" Future for the [`or_else`](super::TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`or_else`](super::TryFutureExt::or_else) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/or_else.rs","byte_start":95467,"byte_end":95535,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/or_else.rs","byte_start":95553,"byte_end":95620,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":881},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/try_flatten_stream.rs","byte_start":97289,"byte_end":97305,"line_start":13,"line_end":13,"column_start":12,"column_end":28},"name":"TryFlattenStream","qualname":"::future::try_future::try_flatten_stream::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":883}],"decl_id":null,"docs":" Stream for the [`try_flatten_stream`](super::TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_flatten_stream`](super::TryFutureExt::try_flatten_stream) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/try_flatten_stream.rs","byte_start":97138,"byte_end":97228,"line_start":11,"line_end":11,"column_start":1,"column_end":91}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/try_flatten_stream.rs","byte_start":97229,"byte_end":97277,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5618},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/unwrap_or_else.rs","byte_start":99611,"byte_end":99623,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"UnwrapOrElse","qualname":"::future::try_future::unwrap_or_else::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":5621},{"krate":0,"index":5622}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](super::TryFutureExt::unwrap_or_else)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`unwrap_or_else`](super::TryFutureExt::unwrap_or_else)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/unwrap_or_else.rs","byte_start":99428,"byte_end":99502,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/unwrap_or_else.rs","byte_start":99503,"byte_end":99514,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/unwrap_or_else.rs","byte_start":99532,"byte_end":99599,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":1015},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70167,"byte_end":70179,"line_start":76,"line_end":76,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1040}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70103,"byte_end":70156,"line_start":75,"line_end":75,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71279,"byte_end":71291,"line_start":109,"line_end":109,"column_start":8,"column_end":20},"name":"flatten_sink","qualname":"::future::try_future::TryFutureExt::flatten_sink","value":"fn <Item> (self) -> FlattenSink<Self, Self::Ok>","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" Flattens the execution of this future when the successful result of this\n future is a [`Sink`].","sig":null,"attributes":[{"value":"/ Flattens the execution of this future when the successful result of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70197,"byte_end":70273,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ future is a [`Sink`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70278,"byte_end":70303,"line_start":78,"line_end":78,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70308,"byte_end":70311,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This can be useful when sink initialization is deferred, and it is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70316,"byte_end":70386,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ convenient to work with that sink as if the sink was available at the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70391,"byte_end":70464,"line_start":81,"line_end":81,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70469,"byte_end":70483,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70488,"byte_end":70491,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70496,"byte_end":70566,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70571,"byte_end":70589,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70594,"byte_end":70597,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70602,"byte_end":70616,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70621,"byte_end":70624,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70629,"byte_end":70636,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFutureExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70641,"byte_end":70689,"line_start":90,"line_end":90,"column_start":5,"column_end":53}},{"value":"/ use futures::sink::Sink;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70694,"byte_end":70722,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/ # use futures::channel::mpsc::{self, SendError};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70727,"byte_end":70779,"line_start":92,"line_end":92,"column_start":5,"column_end":57}},{"value":"/ # type T = i32;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70784,"byte_end":70803,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/ # type E = SendError;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70808,"byte_end":70833,"line_start":94,"line_end":94,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70838,"byte_end":70841,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ fn make_sink_async() -> impl Future<Output = Result<","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70846,"byte_end":70902,"line_start":96,"line_end":96,"column_start":5,"column_end":61}},{"value":"/     impl Sink<T, Error = E>,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70907,"byte_end":70939,"line_start":97,"line_end":97,"column_start":5,"column_end":37}},{"value":"/     E,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70944,"byte_end":70954,"line_start":98,"line_end":98,"column_start":5,"column_end":15}},{"value":"/ >> { // ... }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70959,"byte_end":70976,"line_start":99,"line_end":99,"column_start":5,"column_end":22}},{"value":"/ # let (tx, _rx) = mpsc::unbounded::<i32>();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70981,"byte_end":71028,"line_start":100,"line_end":100,"column_start":5,"column_end":52}},{"value":"/ # futures::future::ready(Ok(tx))","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71033,"byte_end":71069,"line_start":101,"line_end":101,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71074,"byte_end":71081,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/ fn take_sink(sink: impl Sink<T, Error = E>) { /* ... */ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71086,"byte_end":71147,"line_start":103,"line_end":103,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71152,"byte_end":71155,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let fut = make_sink_async();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71160,"byte_end":71192,"line_start":105,"line_end":105,"column_start":5,"column_end":37}},{"value":"/ take_sink(fut.flatten_sink())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71197,"byte_end":71230,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71235,"byte_end":71242,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71247,"byte_end":71271,"line_start":108,"line_end":108,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72837,"byte_end":72843,"line_start":155,"line_end":155,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"fn <T, F> (self, f: F) -> MapOk<Self, F>","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71465,"byte_end":71523,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71528,"byte_end":71531,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71536,"byte_end":71611,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71616,"byte_end":71686,"line_start":120,"line_end":120,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71691,"byte_end":71764,"line_start":121,"line_end":121,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71769,"byte_end":71798,"line_start":122,"line_end":122,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71803,"byte_end":71806,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71811,"byte_end":71886,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71891,"byte_end":71966,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":71971,"byte_end":72018,"line_start":126,"line_end":126,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72023,"byte_end":72026,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72031,"byte_end":72106,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72111,"byte_end":72137,"line_start":129,"line_end":129,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72142,"byte_end":72145,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72150,"byte_end":72164,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72169,"byte_end":72172,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72177,"byte_end":72184,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72189,"byte_end":72227,"line_start":134,"line_end":134,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72232,"byte_end":72235,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72240,"byte_end":72281,"line_start":136,"line_end":136,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72286,"byte_end":72331,"line_start":137,"line_end":137,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72336,"byte_end":72378,"line_start":138,"line_end":138,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72383,"byte_end":72419,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72424,"byte_end":72433,"line_start":140,"line_end":140,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72438,"byte_end":72445,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72450,"byte_end":72453,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72458,"byte_end":72530,"line_start":143,"line_end":143,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72535,"byte_end":72546,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72551,"byte_end":72554,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72559,"byte_end":72566,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72571,"byte_end":72609,"line_start":147,"line_end":147,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72614,"byte_end":72617,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72622,"byte_end":72663,"line_start":149,"line_end":149,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72668,"byte_end":72714,"line_start":150,"line_end":150,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72719,"byte_end":72761,"line_start":151,"line_end":151,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72766,"byte_end":72803,"line_start":152,"line_end":152,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72808,"byte_end":72817,"line_start":153,"line_end":153,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72822,"byte_end":72829,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74439,"byte_end":74446,"line_start":202,"line_end":202,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"fn <E, F> (self, f: F) -> MapErr<Self, F>","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":72990,"byte_end":73046,"line_start":163,"line_end":163,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73051,"byte_end":73054,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73059,"byte_end":73133,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73138,"byte_end":73199,"line_start":166,"line_end":166,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73204,"byte_end":73274,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73279,"byte_end":73354,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73359,"byte_end":73394,"line_start":169,"line_end":169,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73399,"byte_end":73402,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73407,"byte_end":73482,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73487,"byte_end":73562,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73567,"byte_end":73614,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73619,"byte_end":73622,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73627,"byte_end":73702,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73707,"byte_end":73733,"line_start":176,"line_end":176,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73738,"byte_end":73741,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73746,"byte_end":73760,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73765,"byte_end":73768,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73773,"byte_end":73780,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73785,"byte_end":73823,"line_start":181,"line_end":181,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73828,"byte_end":73831,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73836,"byte_end":73877,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73882,"byte_end":73928,"line_start":184,"line_end":184,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73933,"byte_end":73976,"line_start":185,"line_end":185,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":73981,"byte_end":74018,"line_start":186,"line_end":186,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74023,"byte_end":74032,"line_start":187,"line_end":187,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74037,"byte_end":74044,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74049,"byte_end":74052,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74057,"byte_end":74130,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74135,"byte_end":74149,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74154,"byte_end":74157,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74162,"byte_end":74169,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74174,"byte_end":74212,"line_start":194,"line_end":194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74217,"byte_end":74220,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74225,"byte_end":74266,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74271,"byte_end":74316,"line_start":197,"line_end":197,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74321,"byte_end":74364,"line_start":198,"line_end":198,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74369,"byte_end":74405,"line_start":199,"line_end":199,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74410,"byte_end":74419,"line_start":200,"line_end":200,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74424,"byte_end":74431,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75495,"byte_end":75503,"line_start":232,"line_end":232,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"fn <E> (self) -> ErrInto<Self, E>","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74598,"byte_end":74668,"line_start":210,"line_end":210,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74673,"byte_end":74722,"line_start":211,"line_end":211,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74727,"byte_end":74730,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74735,"byte_end":74798,"line_start":213,"line_end":213,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74803,"byte_end":74871,"line_start":214,"line_end":214,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74876,"byte_end":74949,"line_start":215,"line_end":215,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":74954,"byte_end":75030,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75035,"byte_end":75080,"line_start":217,"line_end":217,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75085,"byte_end":75088,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75093,"byte_end":75168,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75173,"byte_end":75199,"line_start":220,"line_end":220,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75204,"byte_end":75207,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75212,"byte_end":75226,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75231,"byte_end":75234,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75239,"byte_end":75246,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75251,"byte_end":75289,"line_start":225,"line_end":225,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75294,"byte_end":75297,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75302,"byte_end":75343,"line_start":227,"line_end":227,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75348,"byte_end":75399,"line_start":228,"line_end":228,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75404,"byte_end":75461,"line_start":229,"line_end":229,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75466,"byte_end":75475,"line_start":230,"line_end":230,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75480,"byte_end":75487,"line_start":231,"line_end":231,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77019,"byte_end":77027,"line_start":276,"line_end":276,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"fn <Fut, F> (self, f: F) -> AndThen<Self, Fut, F>","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75638,"byte_end":75707,"line_start":240,"line_end":240,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75712,"byte_end":75786,"line_start":241,"line_end":241,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75791,"byte_end":75794,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75799,"byte_end":75874,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75879,"byte_end":75949,"line_start":244,"line_end":244,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":75954,"byte_end":76019,"line_start":245,"line_end":245,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76024,"byte_end":76090,"line_start":246,"line_end":246,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76095,"byte_end":76129,"line_start":247,"line_end":247,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76134,"byte_end":76137,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76142,"byte_end":76217,"line_start":249,"line_end":249,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76222,"byte_end":76248,"line_start":250,"line_end":250,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76253,"byte_end":76256,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76261,"byte_end":76275,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76280,"byte_end":76283,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76288,"byte_end":76295,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76300,"byte_end":76338,"line_start":255,"line_end":255,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76343,"byte_end":76346,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76351,"byte_end":76392,"line_start":257,"line_end":257,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76397,"byte_end":76442,"line_start":258,"line_end":258,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76447,"byte_end":76522,"line_start":259,"line_end":259,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76527,"byte_end":76563,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76568,"byte_end":76577,"line_start":261,"line_end":261,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76582,"byte_end":76589,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76594,"byte_end":76597,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76602,"byte_end":76678,"line_start":264,"line_end":264,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76683,"byte_end":76694,"line_start":265,"line_end":265,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76699,"byte_end":76702,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76707,"byte_end":76714,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76719,"byte_end":76757,"line_start":268,"line_end":268,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76762,"byte_end":76765,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76770,"byte_end":76811,"line_start":270,"line_end":270,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76816,"byte_end":76862,"line_start":271,"line_end":271,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76867,"byte_end":76943,"line_start":272,"line_end":272,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76948,"byte_end":76985,"line_start":273,"line_end":273,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":76990,"byte_end":76999,"line_start":274,"line_end":274,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77004,"byte_end":77011,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78599,"byte_end":78606,"line_start":321,"line_end":321,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"fn <Fut, F> (self, f: F) -> OrElse<Self, Fut, F>","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77232,"byte_end":77297,"line_start":285,"line_end":285,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77302,"byte_end":77374,"line_start":286,"line_end":286,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77379,"byte_end":77382,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77387,"byte_end":77462,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77467,"byte_end":77537,"line_start":289,"line_end":289,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77542,"byte_end":77607,"line_start":290,"line_end":290,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77612,"byte_end":77688,"line_start":291,"line_end":291,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77693,"byte_end":77711,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77716,"byte_end":77719,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77724,"byte_end":77799,"line_start":294,"line_end":294,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77804,"byte_end":77830,"line_start":295,"line_end":295,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77835,"byte_end":77838,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77843,"byte_end":77857,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77862,"byte_end":77865,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77870,"byte_end":77877,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77882,"byte_end":77920,"line_start":300,"line_end":300,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77925,"byte_end":77928,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77933,"byte_end":77974,"line_start":302,"line_end":302,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":77979,"byte_end":78025,"line_start":303,"line_end":303,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78030,"byte_end":78105,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78110,"byte_end":78147,"line_start":305,"line_end":305,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78152,"byte_end":78161,"line_start":306,"line_end":306,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78166,"byte_end":78173,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78178,"byte_end":78181,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78186,"byte_end":78259,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78264,"byte_end":78278,"line_start":310,"line_end":310,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78283,"byte_end":78286,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78291,"byte_end":78298,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78303,"byte_end":78341,"line_start":313,"line_end":313,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78346,"byte_end":78349,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78354,"byte_end":78395,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78400,"byte_end":78445,"line_start":316,"line_end":316,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78450,"byte_end":78524,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78529,"byte_end":78565,"line_start":318,"line_end":318,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78570,"byte_end":78579,"line_start":319,"line_end":319,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78584,"byte_end":78591,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79533,"byte_end":79543,"line_start":348,"line_end":348,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"fn <F> (self, f: F) -> InspectOk<Self, F>","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78806,"byte_end":78879,"line_start":330,"line_end":330,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78884,"byte_end":78887,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78892,"byte_end":78967,"line_start":332,"line_end":332,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":78972,"byte_end":79045,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79050,"byte_end":79119,"line_start":334,"line_end":334,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79124,"byte_end":79177,"line_start":335,"line_end":335,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79182,"byte_end":79185,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79190,"byte_end":79204,"line_start":337,"line_end":337,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79209,"byte_end":79212,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79217,"byte_end":79224,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79229,"byte_end":79270,"line_start":340,"line_end":340,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79275,"byte_end":79313,"line_start":341,"line_end":341,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79318,"byte_end":79321,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79326,"byte_end":79368,"line_start":343,"line_end":343,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79373,"byte_end":79454,"line_start":344,"line_end":344,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79459,"byte_end":79499,"line_start":345,"line_end":345,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79504,"byte_end":79513,"line_start":346,"line_end":346,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79518,"byte_end":79525,"line_start":347,"line_end":347,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80418,"byte_end":80429,"line_start":374,"line_end":374,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"fn <F> (self, f: F) -> InspectErr<Self, F>","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79691,"byte_end":79762,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79767,"byte_end":79770,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79775,"byte_end":79850,"line_start":358,"line_end":358,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79855,"byte_end":79928,"line_start":359,"line_end":359,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":79933,"byte_end":80002,"line_start":360,"line_end":360,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80007,"byte_end":80061,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80066,"byte_end":80069,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80074,"byte_end":80088,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80093,"byte_end":80096,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80101,"byte_end":80108,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80113,"byte_end":80154,"line_start":366,"line_end":366,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80159,"byte_end":80197,"line_start":367,"line_end":367,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80202,"byte_end":80205,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80210,"byte_end":80253,"line_start":369,"line_end":369,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80258,"byte_end":80338,"line_start":370,"line_end":370,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80343,"byte_end":80384,"line_start":371,"line_end":371,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80389,"byte_end":80398,"line_start":372,"line_end":372,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80403,"byte_end":80410,"line_start":373,"line_end":373,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81526,"byte_end":81544,"line_start":407,"line_end":407,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"fn (self) -> TryFlattenStream<Self>","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80582,"byte_end":80657,"line_start":382,"line_end":382,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80662,"byte_end":80685,"line_start":383,"line_end":383,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80690,"byte_end":80693,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80698,"byte_end":80770,"line_start":385,"line_end":385,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80775,"byte_end":80848,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80853,"byte_end":80867,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80872,"byte_end":80875,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80880,"byte_end":80950,"line_start":389,"line_end":389,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80955,"byte_end":80973,"line_start":390,"line_end":390,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80978,"byte_end":80981,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":80986,"byte_end":81000,"line_start":392,"line_end":392,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81005,"byte_end":81008,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81013,"byte_end":81020,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81025,"byte_end":81066,"line_start":395,"line_end":395,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81071,"byte_end":81109,"line_start":396,"line_end":396,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81114,"byte_end":81160,"line_start":397,"line_end":397,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81165,"byte_end":81168,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81173,"byte_end":81233,"line_start":399,"line_end":399,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81238,"byte_end":81317,"line_start":400,"line_end":400,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81322,"byte_end":81325,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81330,"byte_end":81387,"line_start":402,"line_end":402,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81392,"byte_end":81444,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81449,"byte_end":81492,"line_start":404,"line_end":404,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81497,"byte_end":81506,"line_start":405,"line_end":405,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81511,"byte_end":81518,"line_start":406,"line_end":406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":82541,"byte_end":82555,"line_start":437,"line_end":437,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"fn <F> (self, f: F) -> UnwrapOrElse<Self, F>","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" Unwraps this future's ouput, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's ouput, producing a future with this future's","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81711,"byte_end":81781,"line_start":415,"line_end":415,"column_start":5,"column_end":75}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81786,"byte_end":81823,"line_start":416,"line_end":416,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81828,"byte_end":81877,"line_start":417,"line_end":417,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81882,"byte_end":81885,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81890,"byte_end":81959,"line_start":419,"line_end":419,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":81964,"byte_end":82037,"line_start":420,"line_end":420,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":82042,"byte_end":82112,"line_start":421,"line_end":421,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":82117,"byte_end":82135,"line_start":422,"line_end":422,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":82140,"byte_end":82143,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":82148,"byte_end":82216,"line_start":424,"line_end":424,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":82221,"byte_end":82224,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":82229,"byte_end":82243,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":82248,"byte_end":82251,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":82256,"byte_end":82263,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":82268,"byte_end":82306,"line_start":429,"line_end":429,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":82311,"byte_end":82314,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":82319,"byte_end":82360,"line_start":431,"line_end":431,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":82365,"byte_end":82417,"line_start":432,"line_end":432,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":82422,"byte_end":82469,"line_start":433,"line_end":433,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":82474,"byte_end":82507,"line_start":434,"line_end":434,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":82512,"byte_end":82521,"line_start":435,"line_end":435,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":82526,"byte_end":82533,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83725,"byte_end":83736,"line_start":476,"line_end":476,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"fn (self) -> IntoFuture<Self>","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83024,"byte_end":83077,"line_start":455,"line_end":455,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83082,"byte_end":83118,"line_start":456,"line_end":456,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83123,"byte_end":83126,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83131,"byte_end":83180,"line_start":458,"line_end":458,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83185,"byte_end":83252,"line_start":459,"line_end":459,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83257,"byte_end":83270,"line_start":460,"line_end":460,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83275,"byte_end":83278,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83283,"byte_end":83297,"line_start":462,"line_end":462,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83302,"byte_end":83305,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83310,"byte_end":83317,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83322,"byte_end":83381,"line_start":465,"line_end":465,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83386,"byte_end":83389,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83394,"byte_end":83413,"line_start":467,"line_end":467,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83418,"byte_end":83436,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83441,"byte_end":83513,"line_start":469,"line_end":469,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83518,"byte_end":83550,"line_start":470,"line_end":470,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83555,"byte_end":83562,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83567,"byte_end":83643,"line_start":472,"line_end":472,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83648,"byte_end":83651,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83656,"byte_end":83705,"line_start":474,"line_end":474,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83710,"byte_end":83717,"line_start":475,"line_end":475,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83944,"byte_end":83958,"line_start":485,"line_end":485,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<Self::Ok, Self::Error>>","parent":{"krate":0,"index":1015},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83841,"byte_end":83914,"line_start":483,"line_end":483,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":83919,"byte_end":83936,"line_start":484,"line_end":484,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5668},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":109719,"byte_end":109723,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":5670}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":109585,"byte_end":109622,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":109640,"byte_end":109707,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1064},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":110264,"byte_end":110268,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"fn <F, R> (f: F) -> Lazy<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":109827,"byte_end":109895,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":109896,"byte_end":109899,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":109900,"byte_end":109963,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":109964,"byte_end":109967,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":109968,"byte_end":109982,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":109983,"byte_end":109986,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":109987,"byte_end":109994,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":109995,"byte_end":110036,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":110037,"byte_end":110061,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":110062,"byte_end":110065,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":110066,"byte_end":110098,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":110099,"byte_end":110126,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":110127,"byte_end":110130,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":110131,"byte_end":110168,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":110169,"byte_end":110193,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":110194,"byte_end":110201,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":110202,"byte_end":110238,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":110239,"byte_end":110248,"line_start":32,"line_end":32,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":110249,"byte_end":110256,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5674},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111004,"byte_end":111011,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":5676}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":110865,"byte_end":110907,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":110925,"byte_end":110992,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1091},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111530,"byte_end":111537,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111152,"byte_end":111232,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111233,"byte_end":111246,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111247,"byte_end":111250,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111251,"byte_end":111313,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111314,"byte_end":111317,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111318,"byte_end":111332,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111333,"byte_end":111336,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111337,"byte_end":111350,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111351,"byte_end":111392,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111393,"byte_end":111417,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111418,"byte_end":111421,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111422,"byte_end":111457,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111458,"byte_end":111484,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111485,"byte_end":111504,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111505,"byte_end":111514,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111515,"byte_end":111522,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5682},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112249,"byte_end":112255,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":5680},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112214,"byte_end":112244,"line_start":13,"line_end":13,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5685},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112309,"byte_end":112313,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":5680},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112266,"byte_end":112304,"line_start":15,"line_end":15,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5688},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112475,"byte_end":112479,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":5680},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112332,"byte_end":112398,"line_start":17,"line_end":17,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112403,"byte_end":112470,"line_start":18,"line_end":18,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":5680},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112185,"byte_end":112194,"line_start":12,"line_end":12,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"MaybeDone::{Future, Done, Gone}","parent":null,"children":[{"krate":0,"index":5682},{"krate":0,"index":5685},{"krate":0,"index":5688}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112063,"byte_end":112100,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112101,"byte_end":112104,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112105,"byte_end":112158,"line_start":10,"line_end":10,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":1116},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":113058,"byte_end":113068,"line_start":42,"line_end":42,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"fn <Fut> (future: Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112597,"byte_end":112634,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112635,"byte_end":112638,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112639,"byte_end":112653,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112654,"byte_end":112657,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112658,"byte_end":112665,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112666,"byte_end":112707,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112708,"byte_end":112732,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112733,"byte_end":112758,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112759,"byte_end":112762,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112763,"byte_end":112812,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112813,"byte_end":112834,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112835,"byte_end":112887,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112888,"byte_end":112923,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112924,"byte_end":112979,"line_start":38,"line_end":38,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112980,"byte_end":113032,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":113033,"byte_end":113042,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":113043,"byte_end":113050,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":113485,"byte_end":113495,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"fn (self: Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":113187,"byte_end":113272,"line_start":47,"line_end":47,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":113277,"byte_end":113348,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":113353,"byte_end":113426,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":113431,"byte_end":113459,"line_start":50,"line_end":50,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":113464,"byte_end":113473,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":113872,"byte_end":113883,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"fn (self: Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":113752,"byte_end":113818,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":113823,"byte_end":113846,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":113851,"byte_end":113860,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5693},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115873,"byte_end":115885,"line_start":27,"line_end":27,"column_start":12,"column_end":24},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":5695}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"/ A future representing a value which may or may not be present.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115332,"byte_end":115398,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115399,"byte_end":115402,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Created by the [`From`] implementation for [`Option`](std::option::Option).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115403,"byte_end":115482,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115483,"byte_end":115486,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115487,"byte_end":115501,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115502,"byte_end":115505,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115506,"byte_end":115513,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115514,"byte_end":115555,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ use futures::future::OptionFuture;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115556,"byte_end":115594,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115595,"byte_end":115598,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let mut a: OptionFuture<_> = Some(async { 123 }).into();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115599,"byte_end":115659,"line_start":18,"line_end":18,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(a.await, Some(123));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115660,"byte_end":115695,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115696,"byte_end":115699,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ a = None.into();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115700,"byte_end":115720,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"/ assert_eq!(a.await, None);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115721,"byte_end":115751,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115752,"byte_end":115761,"line_start":23,"line_end":23,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115762,"byte_end":115769,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115794,"byte_end":115861,"line_start":26,"line_end":26,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1161},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":116936,"byte_end":116942,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":1163}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":116816,"byte_end":116856,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":116857,"byte_end":116924,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1166},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117529,"byte_end":117536,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn <T, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":116993,"byte_end":117064,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117065,"byte_end":117068,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117069,"byte_end":117135,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117136,"byte_end":117139,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117140,"byte_end":117154,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117155,"byte_end":117158,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117159,"byte_end":117166,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117167,"byte_end":117208,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117209,"byte_end":117242,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117243,"byte_end":117282,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117283,"byte_end":117286,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117287,"byte_end":117344,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117345,"byte_end":117388,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117389,"byte_end":117394,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117395,"byte_end":117398,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117399,"byte_end":117440,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117441,"byte_end":117503,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117504,"byte_end":117513,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117514,"byte_end":117521,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5705},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118256,"byte_end":118261,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118105,"byte_end":118152,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118177,"byte_end":118244,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1197},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118854,"byte_end":118859,"line_start":39,"line_end":39,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"fn <T> (t: T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118609,"byte_end":118668,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118669,"byte_end":118672,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118673,"byte_end":118687,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118688,"byte_end":118691,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118692,"byte_end":118699,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118700,"byte_end":118741,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118742,"byte_end":118766,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118767,"byte_end":118770,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118771,"byte_end":118800,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118801,"byte_end":118828,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118829,"byte_end":118838,"line_start":37,"line_end":37,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118839,"byte_end":118846,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1199},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119171,"byte_end":119173,"line_start":55,"line_end":55,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"fn <T, E> (t: T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118905,"byte_end":118972,"line_start":43,"line_end":43,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118973,"byte_end":118976,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118977,"byte_end":118991,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118992,"byte_end":118995,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118996,"byte_end":119003,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119004,"byte_end":119045,"line_start":48,"line_end":48,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119046,"byte_end":119070,"line_start":49,"line_end":49,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119071,"byte_end":119074,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119075,"byte_end":119113,"line_start":51,"line_end":51,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119114,"byte_end":119145,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119146,"byte_end":119155,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119156,"byte_end":119163,"line_start":54,"line_end":54,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1202},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119504,"byte_end":119507,"line_start":71,"line_end":71,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"fn <T, E> (err: E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119237,"byte_end":119303,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119304,"byte_end":119307,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119308,"byte_end":119322,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119323,"byte_end":119326,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119327,"byte_end":119334,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119335,"byte_end":119376,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119377,"byte_end":119401,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119402,"byte_end":119405,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119406,"byte_end":119445,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119446,"byte_end":119478,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119479,"byte_end":119488,"line_start":69,"line_end":69,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":119489,"byte_end":119496,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5715},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":121787,"byte_end":121791,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":5718},{"krate":0,"index":5719}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":119971,"byte_end":120038,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5737},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":121857,"byte_end":121862,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":5741},{"krate":0,"index":5742},{"krate":0,"index":5743}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":119971,"byte_end":120038,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5765},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":121934,"byte_end":121939,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":5770},{"krate":0,"index":5771},{"krate":0,"index":5772},{"krate":0,"index":5773}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":119971,"byte_end":120038,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5799},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122017,"byte_end":122022,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":5805},{"krate":0,"index":5806},{"krate":0,"index":5807},{"krate":0,"index":5808},{"krate":0,"index":5809}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":119971,"byte_end":120038,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":1225},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122637,"byte_end":122641,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"fn <Fut1, Fut2> (future1: Fut1, future2: Fut2) -> Join<Fut1, Fut2>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122060,"byte_end":122131,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122132,"byte_end":122135,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122136,"byte_end":122207,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122208,"byte_end":122283,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122284,"byte_end":122287,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122288,"byte_end":122357,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122358,"byte_end":122384,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122385,"byte_end":122388,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122389,"byte_end":122403,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122404,"byte_end":122407,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122408,"byte_end":122415,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122416,"byte_end":122457,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122458,"byte_end":122482,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122483,"byte_end":122486,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122487,"byte_end":122511,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122512,"byte_end":122536,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122537,"byte_end":122571,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122572,"byte_end":122575,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122576,"byte_end":122611,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122612,"byte_end":122621,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122622,"byte_end":122629,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1228},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123187,"byte_end":123192,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"fn <Fut1, Fut2, Fut3> (future1: Fut1, future2: Fut2, future3: Fut3) -> Join3<Fut1, Fut2, Fut3>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122848,"byte_end":122900,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122901,"byte_end":122904,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122905,"byte_end":122919,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122920,"byte_end":122923,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122924,"byte_end":122931,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122932,"byte_end":122973,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122974,"byte_end":122998,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":122999,"byte_end":123002,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123003,"byte_end":123027,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123028,"byte_end":123052,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123053,"byte_end":123077,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123078,"byte_end":123117,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123118,"byte_end":123121,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123122,"byte_end":123161,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123162,"byte_end":123171,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123172,"byte_end":123179,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1232},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123775,"byte_end":123780,"line_start":166,"line_end":166,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"fn <Fut1, Fut2, Fut3, Fut4> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4) -> Join4<Fut1, Fut2, Fut3, Fut4>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123405,"byte_end":123457,"line_start":149,"line_end":149,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123458,"byte_end":123461,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123462,"byte_end":123476,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123477,"byte_end":123480,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123481,"byte_end":123488,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123489,"byte_end":123530,"line_start":154,"line_end":154,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123531,"byte_end":123555,"line_start":155,"line_end":155,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123556,"byte_end":123559,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123560,"byte_end":123584,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123585,"byte_end":123609,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123610,"byte_end":123634,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123635,"byte_end":123659,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123660,"byte_end":123702,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123703,"byte_end":123706,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123707,"byte_end":123749,"line_start":163,"line_end":163,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123750,"byte_end":123759,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":123760,"byte_end":123767,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1237},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124452,"byte_end":124457,"line_start":199,"line_end":199,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"fn <Fut1, Fut2, Fut3, Fut4, Fut5> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4, future5: Fut5) -> Join5<Fut1, Fut2, Fut3, Fut4, Fut5>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124051,"byte_end":124103,"line_start":181,"line_end":181,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124104,"byte_end":124107,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124108,"byte_end":124122,"line_start":183,"line_end":183,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124123,"byte_end":124126,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124127,"byte_end":124134,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124135,"byte_end":124176,"line_start":186,"line_end":186,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124177,"byte_end":124201,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124202,"byte_end":124205,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124206,"byte_end":124230,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124231,"byte_end":124255,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124256,"byte_end":124280,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124281,"byte_end":124305,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124306,"byte_end":124330,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124331,"byte_end":124376,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124377,"byte_end":124380,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124381,"byte_end":124426,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124427,"byte_end":124436,"line_start":197,"line_end":197,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join.rs","byte_start":124437,"byte_end":124444,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1273},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":126482,"byte_end":126489,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1275}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":126361,"byte_end":126402,"line_start":59,"line_end":59,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":126403,"byte_end":126470,"line_start":60,"line_end":60,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1279},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":128031,"byte_end":128039,"line_start":115,"line_end":115,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"fn <I> (i: I) -> JoinAll<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":126822,"byte_end":126902,"line_start":80,"line_end":80,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":126903,"byte_end":126913,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":126914,"byte_end":126917,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":126918,"byte_end":126997,"line_start":83,"line_end":83,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":126998,"byte_end":127078,"line_start":84,"line_end":84,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127079,"byte_end":127097,"line_start":85,"line_end":85,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127098,"byte_end":127101,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127102,"byte_end":127179,"line_start":87,"line_end":87,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127180,"byte_end":127237,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127238,"byte_end":127241,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127242,"byte_end":127256,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127257,"byte_end":127260,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This is purposefully a very simple API for basic use-cases. In a lot of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127261,"byte_end":127336,"line_start":92,"line_end":92,"column_start":1,"column_end":76}},{"value":"/ cases you will want to use the more powerful","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127337,"byte_end":127385,"line_start":93,"line_end":93,"column_start":1,"column_end":49}},{"value":"/ [`FuturesUnordered`][crate::stream::FuturesUnordered] APIs, some","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127386,"byte_end":127454,"line_start":94,"line_end":94,"column_start":1,"column_end":69}},{"value":"/ examples of additional functionality that provides:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127455,"byte_end":127510,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127511,"byte_end":127514,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127515,"byte_end":127583,"line_start":97,"line_end":97,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127584,"byte_end":127587,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127588,"byte_end":127665,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127666,"byte_end":127747,"line_start":100,"line_end":100,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127748,"byte_end":127751,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127752,"byte_end":127766,"line_start":102,"line_end":102,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127767,"byte_end":127770,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127771,"byte_end":127778,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127779,"byte_end":127820,"line_start":105,"line_end":105,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127821,"byte_end":127855,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127856,"byte_end":127859,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127860,"byte_end":127897,"line_start":108,"line_end":108,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127898,"byte_end":127901,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127902,"byte_end":127949,"line_start":110,"line_end":110,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127950,"byte_end":127953,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":127954,"byte_end":128005,"line_start":112,"line_end":112,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":128006,"byte_end":128015,"line_start":113,"line_end":113,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":128016,"byte_end":128023,"line_start":114,"line_end":114,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5892},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":129552,"byte_end":129558,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":5895}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":129414,"byte_end":129455,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":129456,"byte_end":129523,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1307},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130827,"byte_end":130833,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"fn <A, B> (future1: A, future2: B) -> Select<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":129649,"byte_end":129719,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":129720,"byte_end":129723,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":129724,"byte_end":129802,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":129803,"byte_end":129879,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":129880,"byte_end":129952,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":129953,"byte_end":129956,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":129957,"byte_end":130029,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130030,"byte_end":130058,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130059,"byte_end":130062,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130063,"byte_end":130130,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130131,"byte_end":130195,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130196,"byte_end":130246,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130247,"byte_end":130250,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130251,"byte_end":130265,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130266,"byte_end":130269,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130270,"byte_end":130277,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130278,"byte_end":130337,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130338,"byte_end":130341,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130342,"byte_end":130395,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130396,"byte_end":130399,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B, E>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130400,"byte_end":130478,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130479,"byte_end":130511,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130512,"byte_end":130544,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130545,"byte_end":130550,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130551,"byte_end":130595,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130596,"byte_end":130622,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130623,"byte_end":130700,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130701,"byte_end":130780,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130781,"byte_end":130794,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130795,"byte_end":130805,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130806,"byte_end":130811,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":130812,"byte_end":130819,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5900},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132185,"byte_end":132194,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":5902}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132045,"byte_end":132088,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132106,"byte_end":132173,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1334},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132974,"byte_end":132984,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"fn <I> (iter: I) -> SelectAll<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132272,"byte_end":132338,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132339,"byte_end":132342,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132343,"byte_end":132423,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132424,"byte_end":132502,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132503,"byte_end":132571,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132572,"byte_end":132575,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132576,"byte_end":132656,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132657,"byte_end":132731,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132732,"byte_end":132735,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132736,"byte_end":132813,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132814,"byte_end":132871,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132872,"byte_end":132875,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132876,"byte_end":132888,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132889,"byte_end":132892,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132893,"byte_end":132966,"line_start":32,"line_end":32,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5906},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":137659,"byte_end":137666,"line_start":106,"line_end":106,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":5909},{"krate":0,"index":5910}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":134472,"byte_end":134539,"line_start":16,"line_end":16,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5924},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":137736,"byte_end":137744,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":5928},{"krate":0,"index":5929},{"krate":0,"index":5930}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":134472,"byte_end":134539,"line_start":16,"line_end":16,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5947},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":137820,"byte_end":137828,"line_start":112,"line_end":112,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":5952},{"krate":0,"index":5953},{"krate":0,"index":5954},{"krate":0,"index":5955}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":134472,"byte_end":134539,"line_start":16,"line_end":16,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5975},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":137910,"byte_end":137918,"line_start":115,"line_end":115,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":5981},{"krate":0,"index":5982},{"krate":0,"index":5983},{"krate":0,"index":5984},{"krate":0,"index":5985}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":134472,"byte_end":134539,"line_start":16,"line_end":16,"column_start":9,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":1364},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139190,"byte_end":139198,"line_start":160,"line_end":160,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"fn <Fut1, Fut2> (future1: Fut1, future2: Fut2) -> TryJoin<Fut1, Fut2>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":137956,"byte_end":138029,"line_start":118,"line_end":118,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138030,"byte_end":138062,"line_start":119,"line_end":119,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138063,"byte_end":138066,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138067,"byte_end":138138,"line_start":121,"line_end":121,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138139,"byte_end":138215,"line_start":122,"line_end":122,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccesful, it will complete with the first error","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138216,"byte_end":138287,"line_start":123,"line_end":123,"column_start":1,"column_end":72}},{"value":"/ encountered.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138288,"byte_end":138304,"line_start":124,"line_end":124,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138305,"byte_end":138308,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138309,"byte_end":138378,"line_start":126,"line_end":126,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138379,"byte_end":138405,"line_start":127,"line_end":127,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138406,"byte_end":138409,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138410,"byte_end":138424,"line_start":129,"line_end":129,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138425,"byte_end":138428,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138429,"byte_end":138505,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138506,"byte_end":138542,"line_start":132,"line_end":132,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138543,"byte_end":138546,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138547,"byte_end":138554,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138555,"byte_end":138596,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138597,"byte_end":138621,"line_start":136,"line_end":136,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138622,"byte_end":138625,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138626,"byte_end":138671,"line_start":138,"line_end":138,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138672,"byte_end":138717,"line_start":139,"line_end":139,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138718,"byte_end":138756,"line_start":140,"line_end":140,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138757,"byte_end":138760,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138761,"byte_end":138800,"line_start":142,"line_end":142,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138801,"byte_end":138810,"line_start":143,"line_end":143,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138811,"byte_end":138818,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138819,"byte_end":138822,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138823,"byte_end":138893,"line_start":146,"line_end":146,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138894,"byte_end":138909,"line_start":147,"line_end":147,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138910,"byte_end":138913,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138914,"byte_end":138921,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138922,"byte_end":138963,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138964,"byte_end":138988,"line_start":151,"line_end":151,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138989,"byte_end":138992,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":138993,"byte_end":139038,"line_start":153,"line_end":153,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139039,"byte_end":139085,"line_start":154,"line_end":154,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139086,"byte_end":139124,"line_start":155,"line_end":155,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139125,"byte_end":139128,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139129,"byte_end":139164,"line_start":157,"line_end":157,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139165,"byte_end":139174,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139175,"byte_end":139182,"line_start":159,"line_end":159,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1367},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139791,"byte_end":139800,"line_start":184,"line_end":184,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"fn <Fut1, Fut2, Fut3> (future1: Fut1, future2: Fut2, future3: Fut3) -> TryJoin3<Fut1, Fut2, Fut3>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139373,"byte_end":139433,"line_start":168,"line_end":168,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139434,"byte_end":139437,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139438,"byte_end":139452,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139453,"byte_end":139456,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139457,"byte_end":139464,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139465,"byte_end":139506,"line_start":173,"line_end":173,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139507,"byte_end":139531,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139532,"byte_end":139535,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139536,"byte_end":139581,"line_start":176,"line_end":176,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139582,"byte_end":139627,"line_start":177,"line_end":177,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139628,"byte_end":139673,"line_start":178,"line_end":178,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139674,"byte_end":139717,"line_start":179,"line_end":179,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139718,"byte_end":139721,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139722,"byte_end":139765,"line_start":181,"line_end":181,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139766,"byte_end":139775,"line_start":182,"line_end":182,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":139776,"byte_end":139783,"line_start":183,"line_end":183,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1371},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140540,"byte_end":140549,"line_start":214,"line_end":214,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"fn <Fut1, Fut2, Fut3, Fut4> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4) -> TryJoin4<Fut1, Fut2, Fut3, Fut4>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140070,"byte_end":140130,"line_start":197,"line_end":197,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140131,"byte_end":140134,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140135,"byte_end":140149,"line_start":199,"line_end":199,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140150,"byte_end":140153,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140154,"byte_end":140161,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140162,"byte_end":140203,"line_start":202,"line_end":202,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140204,"byte_end":140228,"line_start":203,"line_end":203,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140229,"byte_end":140232,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140233,"byte_end":140278,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140279,"byte_end":140324,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140325,"byte_end":140370,"line_start":207,"line_end":207,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140371,"byte_end":140416,"line_start":208,"line_end":208,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140417,"byte_end":140463,"line_start":209,"line_end":209,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140464,"byte_end":140467,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140468,"byte_end":140514,"line_start":211,"line_end":211,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140515,"byte_end":140524,"line_start":212,"line_end":212,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140525,"byte_end":140532,"line_start":213,"line_end":213,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1376},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":141423,"byte_end":141432,"line_start":247,"line_end":247,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"fn <Fut1, Fut2, Fut3, Fut4, Fut5> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4, future5: Fut5) -> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140901,"byte_end":140961,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140962,"byte_end":140965,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140966,"byte_end":140980,"line_start":231,"line_end":231,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140981,"byte_end":140984,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140985,"byte_end":140992,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":140993,"byte_end":141034,"line_start":234,"line_end":234,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":141035,"byte_end":141059,"line_start":235,"line_end":235,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":141060,"byte_end":141063,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":141064,"byte_end":141109,"line_start":237,"line_end":237,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":141110,"byte_end":141155,"line_start":238,"line_end":238,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":141156,"byte_end":141201,"line_start":239,"line_end":239,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":141202,"byte_end":141247,"line_start":240,"line_end":240,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":141248,"byte_end":141293,"line_start":241,"line_end":241,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":141294,"byte_end":141343,"line_start":242,"line_end":242,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":141344,"byte_end":141347,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":141348,"byte_end":141397,"line_start":244,"line_end":244,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":141398,"byte_end":141407,"line_start":245,"line_end":245,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join.rs","byte_start":141408,"byte_end":141415,"line_start":246,"line_end":246,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1422},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":143684,"byte_end":143694,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1424}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":143559,"byte_end":143604,"line_start":63,"line_end":63,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":143605,"byte_end":143672,"line_start":64,"line_end":64,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1428},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":145310,"byte_end":145322,"line_start":123,"line_end":123,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"fn <I> (i: I) -> TryJoinAll<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144061,"byte_end":144140,"line_start":85,"line_end":85,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144141,"byte_end":144171,"line_start":86,"line_end":86,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144172,"byte_end":144175,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144176,"byte_end":144255,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144256,"byte_end":144336,"line_start":89,"line_end":89,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144337,"byte_end":144355,"line_start":90,"line_end":90,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144356,"byte_end":144359,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144360,"byte_end":144438,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144439,"byte_end":144519,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144520,"byte_end":144594,"line_start":94,"line_end":94,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144595,"byte_end":144618,"line_start":95,"line_end":95,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144619,"byte_end":144622,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144623,"byte_end":144700,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144701,"byte_end":144758,"line_start":98,"line_end":98,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144759,"byte_end":144762,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144763,"byte_end":144777,"line_start":100,"line_end":100,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144778,"byte_end":144781,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144782,"byte_end":144789,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144790,"byte_end":144831,"line_start":103,"line_end":103,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144832,"byte_end":144878,"line_start":104,"line_end":104,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144879,"byte_end":144882,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144883,"byte_end":144906,"line_start":106,"line_end":106,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144907,"byte_end":144941,"line_start":107,"line_end":107,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144942,"byte_end":144976,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":144977,"byte_end":145011,"line_start":109,"line_end":109,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":145012,"byte_end":145018,"line_start":110,"line_end":110,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":145019,"byte_end":145022,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":145023,"byte_end":145086,"line_start":112,"line_end":112,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":145087,"byte_end":145090,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":145091,"byte_end":145114,"line_start":114,"line_end":114,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":145115,"byte_end":145149,"line_start":115,"line_end":115,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":145150,"byte_end":145185,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":145186,"byte_end":145220,"line_start":117,"line_end":117,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":145221,"byte_end":145227,"line_start":118,"line_end":118,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":145228,"byte_end":145231,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":145232,"byte_end":145284,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":145285,"byte_end":145294,"line_start":121,"line_end":121,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":145295,"byte_end":145302,"line_start":122,"line_end":122,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6061},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":147380,"byte_end":147389,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":6064}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":147238,"byte_end":147283,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":147284,"byte_end":147351,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1456},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148974,"byte_end":148984,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"fn <A, B> (future1: A, future2: B) -> TrySelect<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":147483,"byte_end":147553,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":147554,"byte_end":147557,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":147558,"byte_end":147636,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":147637,"byte_end":147713,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":147714,"byte_end":147786,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":147787,"byte_end":147790,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":147791,"byte_end":147863,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":147864,"byte_end":147892,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":147893,"byte_end":147896,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":147897,"byte_end":147964,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":147965,"byte_end":148036,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148037,"byte_end":148087,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148088,"byte_end":148091,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148092,"byte_end":148106,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148107,"byte_end":148110,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148111,"byte_end":148118,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148119,"byte_end":148203,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148204,"byte_end":148207,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148208,"byte_end":148265,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148266,"byte_end":148269,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148270,"byte_end":148352,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148353,"byte_end":148410,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148411,"byte_end":148468,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148469,"byte_end":148495,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148496,"byte_end":148501,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148502,"byte_end":148597,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148598,"byte_end":148621,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148622,"byte_end":148702,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148703,"byte_end":148784,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148785,"byte_end":148855,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148856,"byte_end":148927,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148928,"byte_end":148941,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148942,"byte_end":148952,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148953,"byte_end":148958,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":148959,"byte_end":148966,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6069},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":150473,"byte_end":150481,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":6071}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":150334,"byte_end":150376,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":150394,"byte_end":150461,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1481},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":151203,"byte_end":151212,"line_start":31,"line_end":31,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"fn <I> (iter: I) -> SelectOk<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":150558,"byte_end":150652,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":150653,"byte_end":150656,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":150657,"byte_end":150746,"line_start":20,"line_end":20,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":150747,"byte_end":150831,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":150832,"byte_end":150913,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":150914,"byte_end":150959,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":150960,"byte_end":150963,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":150964,"byte_end":151042,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":151043,"byte_end":151100,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":151101,"byte_end":151104,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":151105,"byte_end":151117,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":151118,"byte_end":151121,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":151122,"byte_end":151195,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6078},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":153481,"byte_end":153485,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":6075},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":153448,"byte_end":153476,"line_start":12,"line_end":12,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6081},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":153528,"byte_end":153533,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":6075},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":153494,"byte_end":153523,"line_start":14,"line_end":14,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":6075},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":153429,"byte_end":153435,"line_start":11,"line_end":11,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"Either::{Left, Right}","parent":null,"children":[{"krate":0,"index":6078},{"krate":0,"index":6081}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":153285,"byte_end":153385,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"/ type.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":153386,"byte_end":153395,"line_start":9,"line_end":9,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":153732,"byte_end":153744,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"fn (self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":153584,"byte_end":153642,"line_start":19,"line_end":19,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":153647,"byte_end":153650,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":153655,"byte_end":153720,"line_start":21,"line_end":21,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":154124,"byte_end":154137,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"fn (self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":153975,"byte_end":154033,"line_start":31,"line_end":31,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":154038,"byte_end":154041,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":154046,"byte_end":154112,"line_start":33,"line_end":33,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":154425,"byte_end":154435,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":154352,"byte_end":154413,"line_start":43,"line_end":43,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":6129},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8455815,"byte_end":8455824,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"Abortable","qualname":"::future::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":6131},{"krate":0,"index":6132}],"decl_id":null,"docs":" A future which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"/ A future which can be remotely short-circuited using an `AbortHandle`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8455637,"byte_end":8455711,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8455736,"byte_end":8455803,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6109},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456776,"byte_end":8456779,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<Fut>>::new","value":"fn (future: Fut, reg: AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future using an existing `AbortRegistration`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456009,"byte_end":8456084,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456089,"byte_end":8456157,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456162,"byte_end":8456165,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456170,"byte_end":8456242,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future will complete immediately without making","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456247,"byte_end":8456323,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ any further progress.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456328,"byte_end":8456353,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456358,"byte_end":8456361,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456366,"byte_end":8456378,"line_start":30,"line_end":30,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456383,"byte_end":8456386,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456391,"byte_end":8456398,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456403,"byte_end":8456444,"line_start":33,"line_end":33,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456449,"byte_end":8456508,"line_start":34,"line_end":34,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456513,"byte_end":8456516,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456521,"byte_end":8456590,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456595,"byte_end":8456660,"line_start":37,"line_end":37,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456665,"byte_end":8456690,"line_start":38,"line_end":38,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456695,"byte_end":8456738,"line_start":39,"line_end":39,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456743,"byte_end":8456752,"line_start":40,"line_end":40,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456757,"byte_end":8456764,"line_start":41,"line_end":41,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6139},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457107,"byte_end":8457124,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::future::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":6140}],"decl_id":null,"docs":" A registration handle for a `Abortable` future.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for a `Abortable` future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456916,"byte_end":8456967,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8456968,"byte_end":8457044,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457045,"byte_end":8457078,"line_start":52,"line_end":52,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":6143},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457231,"byte_end":8457242,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::future::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":6144}],"decl_id":null,"docs":" A handle to a `Abortable` future.\n","sig":null,"attributes":[{"value":"/ A handle to a `Abortable` future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457158,"byte_end":8457195,"line_start":58,"line_end":58,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6111},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457912,"byte_end":8457920,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"fn () -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457299,"byte_end":8457373,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ to abort a running future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457378,"byte_end":8457408,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457413,"byte_end":8457416,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to `Abortable::new`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457421,"byte_end":8457489,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457494,"byte_end":8457497,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457502,"byte_end":8457514,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457519,"byte_end":8457522,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457527,"byte_end":8457534,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457539,"byte_end":8457580,"line_start":73,"line_end":73,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457585,"byte_end":8457644,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457649,"byte_end":8457652,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457657,"byte_end":8457726,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457731,"byte_end":8457796,"line_start":77,"line_end":77,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457801,"byte_end":8457826,"line_start":78,"line_end":78,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457831,"byte_end":8457874,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457879,"byte_end":8457888,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457893,"byte_end":8457900,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":6112},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8458823,"byte_end":8458832,"line_start":114,"line_end":114,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"fn <Fut> (future: Fut) -> (Abortable<Fut>, AbortHandle)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8458454,"byte_end":8458540,"line_start":107,"line_end":107,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8458541,"byte_end":8458544,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8458545,"byte_end":8458621,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8458622,"byte_end":8458675,"line_start":110,"line_end":110,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8458676,"byte_end":8458679,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8458680,"byte_end":8458757,"line_start":112,"line_end":112,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8458758,"byte_end":8458815,"line_start":113,"line_end":113,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6154},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8459136,"byte_end":8459143,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::future::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` future was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` future was aborted.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8459025,"byte_end":8459079,"line_start":124,"line_end":124,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6122},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8460748,"byte_end":8460753,"line_start":173,"line_end":173,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` future associated with this handle.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8460384,"byte_end":8460445,"line_start":167,"line_end":167,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8460450,"byte_end":8460453,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable future associated with this handle that it","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8460458,"byte_end":8460527,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ should abort. Note that if the future is currently being polled on","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8460532,"byte_end":8460602,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8460607,"byte_end":8460681,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8460686,"byte_end":8460736,"line_start":172,"line_end":172,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":1590},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1591},{"krate":0,"index":1594},{"krate":0,"index":1598},{"krate":0,"index":2716},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2747},{"krate":0,"index":2751},{"krate":0,"index":3664},{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3687},{"krate":0,"index":3702},{"krate":0,"index":3705},{"krate":0,"index":3725},{"krate":0,"index":3728},{"krate":0,"index":3749},{"krate":0,"index":3752},{"krate":0,"index":3776},{"krate":0,"index":3779},{"krate":0,"index":3800},{"krate":0,"index":3803},{"krate":0,"index":3826},{"krate":0,"index":3829},{"krate":0,"index":3865},{"krate":0,"index":3868},{"krate":0,"index":3919},{"krate":0,"index":7107},{"krate":0,"index":7174},{"krate":0,"index":7175},{"krate":0,"index":7394},{"krate":0,"index":7395},{"krate":0,"index":7439}],"decl_id":null,"docs":" Streams","sig":null,"attributes":[{"value":"! Streams","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162199,"byte_end":162210,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162211,"byte_end":162214,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Stream`s,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162215,"byte_end":162289,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the [`StreamExt`] trait and the [`TryStreamExt`] trait which add","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162290,"byte_end":162368,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! methods to `Stream` types","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":162369,"byte_end":162398,"line_start":5,"line_end":5,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":6167},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chain.rs","byte_start":205406,"byte_end":205411,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6170},{"krate":0,"index":6171}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`chain`](super::StreamExt::chain) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chain.rs","byte_start":205267,"byte_end":205328,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chain.rs","byte_start":205346,"byte_end":205394,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":6182},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/collect.rs","byte_start":207569,"byte_end":207576,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":6185},{"krate":0,"index":6186}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`collect`](super::StreamExt::collect) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/collect.rs","byte_start":207407,"byte_end":207472,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/collect.rs","byte_start":207490,"byte_end":207557,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6196},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/concat.rs","byte_start":209065,"byte_end":209071,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":6198},{"krate":0,"index":6199}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`concat`](super::StreamExt::concat) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/concat.rs","byte_start":208905,"byte_end":208968,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/concat.rs","byte_start":208986,"byte_end":209053,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6208},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":210955,"byte_end":210964,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":6210},{"krate":0,"index":6211}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`enumerate`](super::StreamExt::enumerate) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":210808,"byte_end":210877,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":210895,"byte_end":210943,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":211397,"byte_end":211404,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Enumerate<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":211290,"byte_end":211363,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":211368,"byte_end":211385,"line_start":30,"line_end":30,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":211714,"byte_end":211721,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Enumerate<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":211453,"byte_end":211520,"line_start":35,"line_end":35,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":211525,"byte_end":211556,"line_start":36,"line_end":36,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":211561,"byte_end":211564,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":211569,"byte_end":211642,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":211647,"byte_end":211702,"line_start":39,"line_end":39,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":212050,"byte_end":212061,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Enumerate<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":211782,"byte_end":211856,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":211861,"byte_end":211892,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":211897,"byte_end":211900,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":211905,"byte_end":211978,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":211983,"byte_end":212038,"line_start":48,"line_end":48,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":212370,"byte_end":212380,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Enumerate<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":212135,"byte_end":212197,"line_start":53,"line_end":53,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":212202,"byte_end":212205,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":212210,"byte_end":212282,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":212287,"byte_end":212358,"line_start":56,"line_end":56,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1747},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":213758,"byte_end":213764,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`filter`](super::StreamExt::filter) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":213634,"byte_end":213697,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":213698,"byte_end":213746,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":214997,"byte_end":215004,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Filter<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":214890,"byte_end":214963,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":214968,"byte_end":214985,"line_start":62,"line_end":62,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":215314,"byte_end":215321,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Filter<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":215053,"byte_end":215120,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":215125,"byte_end":215156,"line_start":68,"line_end":68,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":215161,"byte_end":215164,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":215169,"byte_end":215242,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":215247,"byte_end":215302,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":215650,"byte_end":215661,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Filter<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":215382,"byte_end":215456,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":215461,"byte_end":215492,"line_start":77,"line_end":77,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":215497,"byte_end":215500,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":215505,"byte_end":215578,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":215583,"byte_end":215638,"line_start":80,"line_end":80,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":215970,"byte_end":215980,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Filter<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":215735,"byte_end":215797,"line_start":85,"line_end":85,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":215802,"byte_end":215805,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":215810,"byte_end":215882,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":215887,"byte_end":215958,"line_start":88,"line_end":88,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1806},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":218430,"byte_end":218439,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1812}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`filter_map`](super::StreamExt::filter_map) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":218298,"byte_end":218369,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":218370,"byte_end":218418,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":219378,"byte_end":219385,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FilterMap<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":219271,"byte_end":219344,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":219349,"byte_end":219366,"line_start":51,"line_end":51,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1828},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":219695,"byte_end":219702,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FilterMap<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":219434,"byte_end":219501,"line_start":56,"line_end":56,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":219506,"byte_end":219537,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":219542,"byte_end":219545,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":219550,"byte_end":219623,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":219628,"byte_end":219683,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1829},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":220031,"byte_end":220042,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FilterMap<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":219763,"byte_end":219837,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":219842,"byte_end":219873,"line_start":66,"line_end":66,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":219878,"byte_end":219881,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":219886,"byte_end":219959,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":219964,"byte_end":220019,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":220351,"byte_end":220361,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FilterMap<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":220116,"byte_end":220178,"line_start":74,"line_end":74,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":220183,"byte_end":220186,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":220191,"byte_end":220263,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":220268,"byte_end":220339,"line_start":77,"line_end":77,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6250},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":222583,"byte_end":222590,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":6252},{"krate":0,"index":6253}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`flatten`](super::StreamExt::flatten) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":222440,"byte_end":222505,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":222523,"byte_end":222571,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1869},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":223142,"byte_end":223149,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Flatten<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":223035,"byte_end":223108,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":223113,"byte_end":223130,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":223459,"byte_end":223466,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Flatten<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":223198,"byte_end":223265,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":223270,"byte_end":223301,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":223306,"byte_end":223309,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":223314,"byte_end":223387,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":223392,"byte_end":223447,"line_start":53,"line_end":53,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1871},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":223795,"byte_end":223806,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Flatten<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":223527,"byte_end":223601,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":223606,"byte_end":223637,"line_start":59,"line_end":59,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":223642,"byte_end":223645,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":223650,"byte_end":223723,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":223728,"byte_end":223783,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":224115,"byte_end":224125,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Flatten<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":223880,"byte_end":223942,"line_start":67,"line_end":67,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":223947,"byte_end":223950,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":223955,"byte_end":224027,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":224032,"byte_end":224103,"line_start":70,"line_end":70,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1898},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fold.rs","byte_start":225672,"byte_end":225676,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fold`](super::StreamExt::fold) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fold.rs","byte_start":225533,"byte_end":225592,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fold.rs","byte_start":225593,"byte_end":225660,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6277},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/forward.rs","byte_start":228446,"byte_end":228453,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Forward","qualname":"::stream::stream::forward::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":6280},{"krate":0,"index":6281},{"krate":0,"index":6282}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`forward`](super::StreamExt::forward) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/forward.rs","byte_start":228284,"byte_end":228349,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/forward.rs","byte_start":228367,"byte_end":228434,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1995},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each.rs","byte_start":231336,"byte_end":231343,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`for_each`](super::StreamExt::for_each) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each.rs","byte_start":231189,"byte_end":231256,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each.rs","byte_start":231257,"byte_end":231324,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6303},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":233594,"byte_end":233598,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":6305},{"krate":0,"index":6306}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`fuse`](super::StreamExt::fuse) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":233457,"byte_end":233516,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":233534,"byte_end":233582,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":234131,"byte_end":234138,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":233862,"byte_end":233924,"line_start":26,"line_end":26,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":233929,"byte_end":233932,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":233937,"byte_end":234005,"line_start":28,"line_end":28,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":234010,"byte_end":234076,"line_start":29,"line_end":29,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":234081,"byte_end":234119,"line_start":30,"line_end":30,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2046},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":234292,"byte_end":234299,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Fuse<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":234185,"byte_end":234258,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":234263,"byte_end":234280,"line_start":36,"line_end":36,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":234609,"byte_end":234616,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fuse<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":234348,"byte_end":234415,"line_start":41,"line_end":41,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":234420,"byte_end":234451,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":234456,"byte_end":234459,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":234464,"byte_end":234537,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":234542,"byte_end":234597,"line_start":45,"line_end":45,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":234945,"byte_end":234956,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Fuse<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":234677,"byte_end":234751,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":234756,"byte_end":234787,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":234792,"byte_end":234795,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":234800,"byte_end":234873,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":234878,"byte_end":234933,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":235265,"byte_end":235275,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fuse<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":235030,"byte_end":235092,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":235097,"byte_end":235100,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":235105,"byte_end":235177,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":235182,"byte_end":235253,"line_start":62,"line_end":62,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6319},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":236605,"byte_end":236617,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":6321}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":236435,"byte_end":236508,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":236526,"byte_end":236593,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":237288,"byte_end":237295,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"fn (&self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":236896,"byte_end":236969,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":236974,"byte_end":236991,"line_start":25,"line_end":25,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":236996,"byte_end":236999,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":237004,"byte_end":237085,"line_start":27,"line_end":27,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":237090,"byte_end":237172,"line_start":28,"line_end":28,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":237177,"byte_end":237256,"line_start":29,"line_end":29,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":237261,"byte_end":237276,"line_start":30,"line_end":30,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":237906,"byte_end":237913,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"fn (&mut self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":237360,"byte_end":237427,"line_start":35,"line_end":35,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":237432,"byte_end":237463,"line_start":36,"line_end":36,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":237468,"byte_end":237471,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":237476,"byte_end":237549,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":237554,"byte_end":237609,"line_start":39,"line_end":39,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":237614,"byte_end":237617,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":237622,"byte_end":237703,"line_start":41,"line_end":41,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":237708,"byte_end":237790,"line_start":42,"line_end":42,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":237795,"byte_end":237874,"line_start":43,"line_end":43,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":237879,"byte_end":237894,"line_start":44,"line_end":44,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":238539,"byte_end":238550,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":237986,"byte_end":238060,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":238065,"byte_end":238096,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":238101,"byte_end":238104,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":238109,"byte_end":238182,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":238187,"byte_end":238242,"line_start":53,"line_end":53,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":238247,"byte_end":238250,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":238255,"byte_end":238336,"line_start":55,"line_end":55,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":238341,"byte_end":238423,"line_start":56,"line_end":56,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":238428,"byte_end":238507,"line_start":57,"line_end":57,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":238512,"byte_end":238527,"line_start":58,"line_end":58,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":239165,"byte_end":239175,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"fn (self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":238645,"byte_end":238707,"line_start":63,"line_end":63,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":238712,"byte_end":238715,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":238720,"byte_end":238792,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":238797,"byte_end":238868,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":238873,"byte_end":238876,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":238881,"byte_end":238962,"line_start":68,"line_end":68,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":238967,"byte_end":239049,"line_start":69,"line_end":69,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":239054,"byte_end":239133,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":239138,"byte_end":239153,"line_start":71,"line_end":71,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2104},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":240167,"byte_end":240174,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::stream::stream::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":2107},{"krate":0,"index":2108}],"decl_id":null,"docs":" Stream for the [`inspect`](super::StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`inspect`](super::StreamExt::inspect) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":240041,"byte_end":240106,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":240107,"byte_end":240155,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":240853,"byte_end":240860,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Inspect<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":240746,"byte_end":240819,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":240824,"byte_end":240841,"line_start":41,"line_end":41,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":241170,"byte_end":241177,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Inspect<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":240909,"byte_end":240976,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":240981,"byte_end":241012,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":241017,"byte_end":241020,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":241025,"byte_end":241098,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":241103,"byte_end":241158,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":241506,"byte_end":241517,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Inspect<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":241238,"byte_end":241312,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":241317,"byte_end":241348,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":241353,"byte_end":241356,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":241361,"byte_end":241434,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":241439,"byte_end":241494,"line_start":59,"line_end":59,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":241826,"byte_end":241836,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Inspect<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":241591,"byte_end":241653,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":241658,"byte_end":241661,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":241666,"byte_end":241738,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":241743,"byte_end":241814,"line_start":67,"line_end":67,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2159},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":243283,"byte_end":243286,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":2162},{"krate":0,"index":2163}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`map`](super::StreamExt::map) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":243165,"byte_end":243222,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":243223,"byte_end":243271,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":243948,"byte_end":243955,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Map<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":243841,"byte_end":243914,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":243919,"byte_end":243936,"line_start":41,"line_end":41,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2177},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":244265,"byte_end":244272,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Map<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":244004,"byte_end":244071,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":244076,"byte_end":244107,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":244112,"byte_end":244115,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":244120,"byte_end":244193,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":244198,"byte_end":244253,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":244601,"byte_end":244612,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Map<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":244333,"byte_end":244407,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":244412,"byte_end":244443,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":244448,"byte_end":244451,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":244456,"byte_end":244529,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":244534,"byte_end":244589,"line_start":59,"line_end":59,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2179},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":244921,"byte_end":244931,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Map<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":244686,"byte_end":244748,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":244753,"byte_end":244756,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":244761,"byte_end":244833,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":244838,"byte_end":244909,"line_start":67,"line_end":67,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6346},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/next.rs","byte_start":246223,"byte_end":246227,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":6349}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/next.rs","byte_start":246067,"byte_end":246126,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/next.rs","byte_start":246144,"byte_end":246211,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6354},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/select_next_some.rs","byte_start":247233,"byte_end":247247,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":6357}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/select_next_some.rs","byte_start":247049,"byte_end":247124,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/select_next_some.rs","byte_start":247125,"byte_end":247136,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/select_next_some.rs","byte_start":247154,"byte_end":247221,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6362},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":248670,"byte_end":248678,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":6364},{"krate":0,"index":6365}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"/ A `Stream` that implements a `peek` method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":248378,"byte_end":248425,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":248426,"byte_end":248429,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The `peek` method can be used to retrieve a reference","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":248430,"byte_end":248487,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/ to the next `Stream::Item` if available. A subsequent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":248488,"byte_end":248545,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"/ call to `poll` will return the owned item.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":248546,"byte_end":248592,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":248610,"byte_end":248658,"line_start":15,"line_end":15,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2269},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":249178,"byte_end":249185,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Peekable<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":249071,"byte_end":249144,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":249149,"byte_end":249166,"line_start":35,"line_end":35,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":249504,"byte_end":249511,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Peekable<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":249243,"byte_end":249310,"line_start":40,"line_end":40,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":249315,"byte_end":249346,"line_start":41,"line_end":41,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":249351,"byte_end":249354,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":249359,"byte_end":249432,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":249437,"byte_end":249492,"line_start":44,"line_end":44,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2271},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":249845,"byte_end":249856,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Peekable<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":249577,"byte_end":249651,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":249656,"byte_end":249687,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":249692,"byte_end":249695,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":249700,"byte_end":249773,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":249778,"byte_end":249833,"line_start":53,"line_end":53,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":250179,"byte_end":250189,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Peekable<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":249944,"byte_end":250006,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":250011,"byte_end":250014,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":250019,"byte_end":250091,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":250096,"byte_end":250167,"line_start":61,"line_end":61,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":250486,"byte_end":250495,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"fn (mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":250248,"byte_end":250310,"line_start":66,"line_end":66,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":250315,"byte_end":250318,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":250323,"byte_end":250396,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":250401,"byte_end":250474,"line_start":69,"line_end":69,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":6378},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":252524,"byte_end":252528,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":6380},{"krate":0,"index":6381}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`skip`](super::StreamExt::skip) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":252387,"byte_end":252446,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":252464,"byte_end":252512,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":252963,"byte_end":252970,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Skip<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":252856,"byte_end":252929,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":252934,"byte_end":252951,"line_start":30,"line_end":30,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2305},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":253280,"byte_end":253287,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Skip<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":253019,"byte_end":253086,"line_start":35,"line_end":35,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":253091,"byte_end":253122,"line_start":36,"line_end":36,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":253127,"byte_end":253130,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":253135,"byte_end":253208,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":253213,"byte_end":253268,"line_start":39,"line_end":39,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2306},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":253616,"byte_end":253627,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Skip<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":253348,"byte_end":253422,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":253427,"byte_end":253458,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":253463,"byte_end":253466,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":253471,"byte_end":253544,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":253549,"byte_end":253604,"line_start":48,"line_end":48,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2307},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":253936,"byte_end":253946,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Skip<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":253701,"byte_end":253763,"line_start":53,"line_end":53,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":253768,"byte_end":253771,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":253776,"byte_end":253848,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":253853,"byte_end":253924,"line_start":56,"line_end":56,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2335},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":255548,"byte_end":255557,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2342},{"krate":0,"index":2343}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`skip_while`](super::StreamExt::skip_while) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":255416,"byte_end":255487,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":255488,"byte_end":255536,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":256951,"byte_end":256958,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SkipWhile<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":256844,"byte_end":256917,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":256922,"byte_end":256939,"line_start":60,"line_end":60,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2359},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":257268,"byte_end":257275,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SkipWhile<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":257007,"byte_end":257074,"line_start":65,"line_end":65,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":257079,"byte_end":257110,"line_start":66,"line_end":66,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":257115,"byte_end":257118,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":257123,"byte_end":257196,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":257201,"byte_end":257256,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":257604,"byte_end":257615,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SkipWhile<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":257336,"byte_end":257410,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":257415,"byte_end":257446,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":257451,"byte_end":257454,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":257459,"byte_end":257532,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":257537,"byte_end":257592,"line_start":78,"line_end":78,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2361},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":257924,"byte_end":257934,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SkipWhile<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":257689,"byte_end":257751,"line_start":83,"line_end":83,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":257756,"byte_end":257759,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":257764,"byte_end":257836,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":257841,"byte_end":257912,"line_start":86,"line_end":86,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6410},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":260506,"byte_end":260510,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":6412},{"krate":0,"index":6413}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`take`](super::StreamExt::take) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":260369,"byte_end":260428,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":260446,"byte_end":260494,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":260945,"byte_end":260952,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":260838,"byte_end":260911,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":260916,"byte_end":260933,"line_start":31,"line_end":31,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261262,"byte_end":261269,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261001,"byte_end":261068,"line_start":36,"line_end":36,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261073,"byte_end":261104,"line_start":37,"line_end":37,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261109,"byte_end":261112,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261117,"byte_end":261190,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261195,"byte_end":261250,"line_start":40,"line_end":40,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261598,"byte_end":261609,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261330,"byte_end":261404,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261409,"byte_end":261440,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261445,"byte_end":261448,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261453,"byte_end":261526,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261531,"byte_end":261586,"line_start":49,"line_end":49,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261918,"byte_end":261928,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261683,"byte_end":261745,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261750,"byte_end":261753,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261758,"byte_end":261830,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261835,"byte_end":261906,"line_start":57,"line_end":57,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2430},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":263730,"byte_end":263739,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`take_while`](super::StreamExt::take_while) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":263598,"byte_end":263669,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":263670,"byte_end":263718,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2457},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":265166,"byte_end":265173,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TakeWhile<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":265059,"byte_end":265132,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":265137,"byte_end":265154,"line_start":62,"line_end":62,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2458},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":265483,"byte_end":265490,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TakeWhile<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":265222,"byte_end":265289,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":265294,"byte_end":265325,"line_start":68,"line_end":68,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":265330,"byte_end":265333,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":265338,"byte_end":265411,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":265416,"byte_end":265471,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2459},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":265819,"byte_end":265830,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TakeWhile<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":265551,"byte_end":265625,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":265630,"byte_end":265661,"line_start":77,"line_end":77,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":265666,"byte_end":265669,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":265674,"byte_end":265747,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":265752,"byte_end":265807,"line_start":80,"line_end":80,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2460},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":266139,"byte_end":266149,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TakeWhile<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":265904,"byte_end":265966,"line_start":85,"line_end":85,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":265971,"byte_end":265974,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":265979,"byte_end":266051,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":266056,"byte_end":266127,"line_start":88,"line_end":88,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2494},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":268678,"byte_end":268682,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`then`](super::StreamExt::then) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":268558,"byte_end":268617,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":268618,"byte_end":268666,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":269623,"byte_end":269630,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Then<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":269516,"byte_end":269589,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":269594,"byte_end":269611,"line_start":52,"line_end":52,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2520},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":269940,"byte_end":269947,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Then<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":269679,"byte_end":269746,"line_start":57,"line_end":57,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":269751,"byte_end":269782,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":269787,"byte_end":269790,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":269795,"byte_end":269868,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":269873,"byte_end":269928,"line_start":61,"line_end":61,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2521},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":270276,"byte_end":270287,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Then<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":270008,"byte_end":270082,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":270087,"byte_end":270118,"line_start":67,"line_end":67,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":270123,"byte_end":270126,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":270131,"byte_end":270204,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":270209,"byte_end":270264,"line_start":70,"line_end":70,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2522},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":270596,"byte_end":270606,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Then<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":270361,"byte_end":270423,"line_start":75,"line_end":75,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":270428,"byte_end":270431,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":270436,"byte_end":270508,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":270513,"byte_end":270584,"line_start":78,"line_end":78,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6454},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":272602,"byte_end":272605,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":6457},{"krate":0,"index":6458},{"krate":0,"index":6459},{"krate":0,"index":6460}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`zip`](super::StreamExt::zip) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":272467,"byte_end":272524,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":272542,"byte_end":272590,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2564},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":273544,"byte_end":273551,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"fn (&self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":273436,"byte_end":273510,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":273515,"byte_end":273532,"line_start":43,"line_end":43,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2565},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":273907,"byte_end":273914,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"fn (&mut self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":273645,"byte_end":273713,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":273718,"byte_end":273749,"line_start":49,"line_end":49,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":273754,"byte_end":273757,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":273762,"byte_end":273835,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":273840,"byte_end":273895,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":274289,"byte_end":274300,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":274020,"byte_end":274095,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":274100,"byte_end":274131,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":274136,"byte_end":274139,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":274144,"byte_end":274217,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":274222,"byte_end":274277,"line_start":61,"line_end":61,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":274806,"byte_end":274816,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"fn (self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":274570,"byte_end":274633,"line_start":69,"line_end":69,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":274638,"byte_end":274641,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":274646,"byte_end":274718,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":274723,"byte_end":274794,"line_start":72,"line_end":72,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6475},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":277652,"byte_end":277658,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":6477},{"krate":0,"index":6478},{"krate":0,"index":6479}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`chunks`](super::StreamExt::chunks) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":277511,"byte_end":277574,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":277592,"byte_end":277640,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":278511,"byte_end":278518,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chunks<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":278404,"byte_end":278477,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":278482,"byte_end":278499,"line_start":42,"line_end":42,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2601},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":278837,"byte_end":278844,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chunks<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":278576,"byte_end":278643,"line_start":47,"line_end":47,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":278648,"byte_end":278679,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":278684,"byte_end":278687,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":278692,"byte_end":278765,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":278770,"byte_end":278825,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":279178,"byte_end":279189,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chunks<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":278910,"byte_end":278984,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":278989,"byte_end":279020,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":279025,"byte_end":279028,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":279033,"byte_end":279106,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":279111,"byte_end":279166,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2603},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":279512,"byte_end":279522,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chunks<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":279277,"byte_end":279339,"line_start":65,"line_end":65,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":279344,"byte_end":279347,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":279352,"byte_end":279424,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":279429,"byte_end":279500,"line_start":68,"line_end":68,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6510},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8461491,"byte_end":8461506,"line_start":14,"line_end":14,"column_start":12,"column_end":27},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":6512},{"krate":0,"index":6513},{"krate":0,"index":6514}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8461343,"byte_end":8461418,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8461419,"byte_end":8461430,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8461431,"byte_end":8461479,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6523},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8462650,"byte_end":8462657,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufferUnordered<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8462543,"byte_end":8462616,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8462621,"byte_end":8462638,"line_start":62,"line_end":62,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6524},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8462976,"byte_end":8462983,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufferUnordered<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8462715,"byte_end":8462782,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8462787,"byte_end":8462818,"line_start":68,"line_end":68,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8462823,"byte_end":8462826,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8462831,"byte_end":8462904,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8462909,"byte_end":8462964,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6525},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8463317,"byte_end":8463328,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufferUnordered<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8463049,"byte_end":8463123,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8463128,"byte_end":8463159,"line_start":77,"line_end":77,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8463164,"byte_end":8463167,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8463172,"byte_end":8463245,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8463250,"byte_end":8463305,"line_start":80,"line_end":80,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6526},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8463651,"byte_end":8463661,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufferUnordered<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8463416,"byte_end":8463478,"line_start":85,"line_end":85,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8463483,"byte_end":8463486,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8463491,"byte_end":8463563,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8463568,"byte_end":8463639,"line_start":88,"line_end":88,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6556},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8466082,"byte_end":8466090,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":6558},{"krate":0,"index":6559},{"krate":0,"index":6560}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`buffered`](super::StreamExt::buffered) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8465954,"byte_end":8466021,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8466022,"byte_end":8466070,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6569},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8467192,"byte_end":8467199,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Buffered<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8467085,"byte_end":8467158,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8467163,"byte_end":8467180,"line_start":60,"line_end":60,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6570},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8467518,"byte_end":8467525,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Buffered<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8467257,"byte_end":8467324,"line_start":65,"line_end":65,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8467329,"byte_end":8467360,"line_start":66,"line_end":66,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8467365,"byte_end":8467368,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8467373,"byte_end":8467446,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8467451,"byte_end":8467506,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6571},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8467859,"byte_end":8467870,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Buffered<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8467591,"byte_end":8467665,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8467670,"byte_end":8467701,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8467706,"byte_end":8467709,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8467714,"byte_end":8467787,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8467792,"byte_end":8467847,"line_start":78,"line_end":78,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6572},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8468193,"byte_end":8468203,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Buffered<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8467958,"byte_end":8468020,"line_start":83,"line_end":83,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8468025,"byte_end":8468028,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8468033,"byte_end":8468105,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8468110,"byte_end":8468181,"line_start":86,"line_end":86,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6600},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each_concurrent.rs","byte_start":8470412,"byte_end":8470429,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":6604},{"krate":0,"index":6605},{"krate":0,"index":6606},{"krate":0,"index":6607}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each_concurrent.rs","byte_start":8470239,"byte_end":8470320,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each_concurrent.rs","byte_start":8470321,"byte_end":8470332,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each_concurrent.rs","byte_start":8470333,"byte_end":8470400,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6705},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8474254,"byte_end":8474265,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"SplitStream","qualname":"::stream::stream::split::SplitStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Stream` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Stream` part of the split pair","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8474139,"byte_end":8474176,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8474194,"byte_end":8474242,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6648},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8474589,"byte_end":8474596,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitStream<S>>::reunite","value":"fn <Item> (self, other: SplitSink<S, Item>) -> Result<S, ReuniteError<S, Item>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `Stream::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8474355,"byte_end":8474423,"line_start":17,"line_end":17,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8474428,"byte_end":8474502,"line_start":18,"line_end":18,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `Stream::split`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8474507,"byte_end":8474577,"line_start":19,"line_end":19,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":6712},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8475240,"byte_end":8475249,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"SplitSink","qualname":"::stream::stream::split::SplitSink","value":"SplitSink {  }","parent":null,"children":[{"krate":0,"index":6715},{"krate":0,"index":6716}],"decl_id":null,"docs":" A `Sink` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Sink` part of the split pair","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8475129,"byte_end":8475164,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8475182,"byte_end":8475228,"line_start":45,"line_end":45,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":6663},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8475649,"byte_end":8475656,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitSink<S, Item>>::reunite","value":"fn (self, other: SplitStream<S>) -> Result<S, ReuniteError<S, Item>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `Stream::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8475415,"byte_end":8475483,"line_start":54,"line_end":54,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8475488,"byte_end":8475562,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `Stream::split`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8475567,"byte_end":8475637,"line_start":56,"line_end":56,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":6676},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8477535,"byte_end":8477547,"line_start":111,"line_end":111,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::stream::stream::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves\n of a `Stream + Split`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8477384,"byte_end":8477462,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ of a `Stream + Split`, and thus could not be `reunite`d.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8477463,"byte_end":8477523,"line_start":110,"line_end":110,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":6721},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/catch_unwind.rs","byte_start":281968,"byte_end":281979,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":6723},{"krate":0,"index":6724}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/catch_unwind.rs","byte_start":281815,"byte_end":281890,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/catch_unwind.rs","byte_start":281908,"byte_end":281956,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":2649},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":169787,"byte_end":169796,"line_start":161,"line_end":161,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2659},{"krate":0,"index":2663},{"krate":0,"index":2666},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2677},{"krate":0,"index":2680},{"krate":0,"index":2683},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2694},{"krate":0,"index":2696},{"krate":0,"index":2697},{"krate":0,"index":2698},{"krate":0,"index":2700},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2706},{"krate":0,"index":2708},{"krate":0,"index":2710},{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2715}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":169676,"byte_end":169750,"line_start":159,"line_end":159,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":169751,"byte_end":169776,"line_start":160,"line_end":160,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2650},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170706,"byte_end":170710,"line_start":185,"line_end":185,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"fn (&mut self) -> Next<'_, Self>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":169811,"byte_end":169877,"line_start":162,"line_end":162,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":169882,"byte_end":169885,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":169890,"byte_end":169958,"line_start":164,"line_end":164,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":169963,"byte_end":170038,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170043,"byte_end":170118,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170123,"byte_end":170177,"line_start":167,"line_end":167,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170182,"byte_end":170257,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170262,"byte_end":170272,"line_start":169,"line_end":169,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170277,"byte_end":170280,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170285,"byte_end":170299,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170304,"byte_end":170307,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170312,"byte_end":170319,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170324,"byte_end":170365,"line_start":174,"line_end":174,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170370,"byte_end":170413,"line_start":175,"line_end":175,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170418,"byte_end":170421,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170426,"byte_end":170467,"line_start":177,"line_end":177,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170472,"byte_end":170475,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170480,"byte_end":170525,"line_start":179,"line_end":179,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170530,"byte_end":170575,"line_start":180,"line_end":180,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170580,"byte_end":170625,"line_start":181,"line_end":181,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170630,"byte_end":170672,"line_start":182,"line_end":182,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170677,"byte_end":170686,"line_start":183,"line_end":183,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170691,"byte_end":170698,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171909,"byte_end":171920,"line_start":220,"line_end":220,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"fn (self) -> StreamFuture<Self>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170812,"byte_end":170884,"line_start":192,"line_end":192,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170889,"byte_end":170950,"line_start":193,"line_end":193,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170955,"byte_end":170958,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":170963,"byte_end":171038,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171043,"byte_end":171097,"line_start":196,"line_end":196,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171102,"byte_end":171105,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171110,"byte_end":171183,"line_start":198,"line_end":198,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171188,"byte_end":171250,"line_start":199,"line_end":199,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171255,"byte_end":171330,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171335,"byte_end":171389,"line_start":201,"line_end":201,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171394,"byte_end":171469,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171474,"byte_end":171484,"line_start":203,"line_end":203,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171489,"byte_end":171492,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171497,"byte_end":171511,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171516,"byte_end":171519,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171524,"byte_end":171531,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171536,"byte_end":171577,"line_start":208,"line_end":208,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171582,"byte_end":171625,"line_start":209,"line_end":209,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171630,"byte_end":171633,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171638,"byte_end":171675,"line_start":211,"line_end":211,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171680,"byte_end":171683,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171688,"byte_end":171740,"line_start":213,"line_end":213,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171745,"byte_end":171775,"line_start":214,"line_end":214,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171780,"byte_end":171783,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171788,"byte_end":171840,"line_start":216,"line_end":216,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171845,"byte_end":171875,"line_start":217,"line_end":217,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171880,"byte_end":171889,"line_start":218,"line_end":218,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":171894,"byte_end":171901,"line_start":219,"line_end":219,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2652},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172873,"byte_end":172876,"line_start":250,"line_end":250,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"fn <T, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172037,"byte_end":172112,"line_start":227,"line_end":227,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172117,"byte_end":172140,"line_start":228,"line_end":228,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172145,"byte_end":172148,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172153,"byte_end":172225,"line_start":230,"line_end":230,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172230,"byte_end":172294,"line_start":231,"line_end":231,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172299,"byte_end":172336,"line_start":232,"line_end":232,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172341,"byte_end":172344,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172349,"byte_end":172425,"line_start":234,"line_end":234,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172430,"byte_end":172501,"line_start":235,"line_end":235,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172506,"byte_end":172527,"line_start":236,"line_end":236,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172532,"byte_end":172535,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172540,"byte_end":172554,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172559,"byte_end":172562,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172567,"byte_end":172574,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172579,"byte_end":172620,"line_start":241,"line_end":241,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172625,"byte_end":172668,"line_start":242,"line_end":242,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172673,"byte_end":172676,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172681,"byte_end":172718,"line_start":244,"line_end":244,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172723,"byte_end":172762,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172767,"byte_end":172770,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172775,"byte_end":172839,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172844,"byte_end":172853,"line_start":248,"line_end":248,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":172858,"byte_end":172865,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174408,"byte_end":174417,"line_start":296,"line_end":296,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"fn (self) -> Enumerate<Self>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173020,"byte_end":173091,"line_start":258,"line_end":258,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173096,"byte_end":173115,"line_start":259,"line_end":259,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173120,"byte_end":173123,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173128,"byte_end":173193,"line_start":261,"line_end":261,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173198,"byte_end":173267,"line_start":262,"line_end":262,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173272,"byte_end":173283,"line_start":263,"line_end":263,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173288,"byte_end":173291,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173296,"byte_end":173371,"line_start":265,"line_end":265,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173376,"byte_end":173458,"line_start":266,"line_end":266,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173463,"byte_end":173481,"line_start":267,"line_end":267,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173486,"byte_end":173489,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173494,"byte_end":173517,"line_start":269,"line_end":269,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173522,"byte_end":173525,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173530,"byte_end":173605,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ [`usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173610,"byte_end":173692,"line_start":272,"line_end":272,"column_start":5,"column_end":87}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173697,"byte_end":173753,"line_start":273,"line_end":273,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173758,"byte_end":173761,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173766,"byte_end":173778,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173783,"byte_end":173786,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173791,"byte_end":173860,"line_start":277,"line_end":277,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173865,"byte_end":173890,"line_start":278,"line_end":278,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173895,"byte_end":173898,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173903,"byte_end":173917,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173922,"byte_end":173925,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173930,"byte_end":173937,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173942,"byte_end":173983,"line_start":283,"line_end":283,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":173988,"byte_end":174031,"line_start":284,"line_end":284,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174036,"byte_end":174039,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174044,"byte_end":174095,"line_start":286,"line_end":286,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174100,"byte_end":174103,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174108,"byte_end":174148,"line_start":288,"line_end":288,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174153,"byte_end":174156,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174161,"byte_end":174213,"line_start":290,"line_end":290,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174218,"byte_end":174270,"line_start":291,"line_end":291,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174275,"byte_end":174327,"line_start":292,"line_end":292,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174332,"byte_end":174374,"line_start":293,"line_end":293,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174379,"byte_end":174388,"line_start":294,"line_end":294,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174393,"byte_end":174400,"line_start":295,"line_end":295,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2656},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175605,"byte_end":175611,"line_start":329,"line_end":329,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"fn <Fut, F> (self, f: F) -> Filter<Self, Fut, F>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174520,"byte_end":174592,"line_start":303,"line_end":303,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174597,"byte_end":174624,"line_start":304,"line_end":304,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174629,"byte_end":174632,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174637,"byte_end":174712,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174717,"byte_end":174788,"line_start":307,"line_end":307,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174793,"byte_end":174865,"line_start":308,"line_end":308,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174870,"byte_end":174944,"line_start":309,"line_end":309,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":174949,"byte_end":175007,"line_start":310,"line_end":310,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175012,"byte_end":175015,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175020,"byte_end":175096,"line_start":312,"line_end":312,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175101,"byte_end":175175,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175180,"byte_end":175201,"line_start":314,"line_end":314,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175206,"byte_end":175209,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175214,"byte_end":175228,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175233,"byte_end":175236,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175241,"byte_end":175248,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175253,"byte_end":175294,"line_start":319,"line_end":319,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175299,"byte_end":175323,"line_start":320,"line_end":320,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175328,"byte_end":175371,"line_start":321,"line_end":321,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175376,"byte_end":175379,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175384,"byte_end":175422,"line_start":323,"line_end":323,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175427,"byte_end":175488,"line_start":324,"line_end":324,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175493,"byte_end":175496,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175501,"byte_end":175571,"line_start":326,"line_end":326,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175576,"byte_end":175585,"line_start":327,"line_end":327,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175590,"byte_end":175597,"line_start":328,"line_end":328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176904,"byte_end":176914,"line_start":363,"line_end":363,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"fn <Fut, T, F> (self, f: F) -> FilterMap<Self, Fut, F>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175807,"byte_end":175882,"line_start":338,"line_end":338,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175887,"byte_end":175963,"line_start":339,"line_end":339,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175968,"byte_end":175971,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":175976,"byte_end":176051,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176056,"byte_end":176131,"line_start":342,"line_end":342,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176136,"byte_end":176212,"line_start":343,"line_end":343,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176217,"byte_end":176282,"line_start":344,"line_end":344,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176287,"byte_end":176290,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176295,"byte_end":176371,"line_start":346,"line_end":346,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176376,"byte_end":176450,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176455,"byte_end":176480,"line_start":348,"line_end":348,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176485,"byte_end":176488,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176493,"byte_end":176507,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176512,"byte_end":176519,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176524,"byte_end":176565,"line_start":352,"line_end":352,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176570,"byte_end":176613,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176618,"byte_end":176621,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176626,"byte_end":176664,"line_start":355,"line_end":355,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176669,"byte_end":176719,"line_start":356,"line_end":356,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176724,"byte_end":176775,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176780,"byte_end":176787,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176792,"byte_end":176795,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176800,"byte_end":176870,"line_start":360,"line_end":360,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176875,"byte_end":176884,"line_start":361,"line_end":361,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":176889,"byte_end":176896,"line_start":362,"line_end":362,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177920,"byte_end":177924,"line_start":394,"line_end":394,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"fn <Fut, F> (self, f: F) -> Then<Self, Fut, F>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177123,"byte_end":177196,"line_start":372,"line_end":372,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177201,"byte_end":177229,"line_start":373,"line_end":373,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177234,"byte_end":177237,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177242,"byte_end":177316,"line_start":375,"line_end":375,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177321,"byte_end":177388,"line_start":376,"line_end":376,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177393,"byte_end":177438,"line_start":377,"line_end":377,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177443,"byte_end":177446,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177451,"byte_end":177527,"line_start":379,"line_end":379,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177532,"byte_end":177558,"line_start":380,"line_end":380,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177563,"byte_end":177566,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177571,"byte_end":177585,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177590,"byte_end":177593,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177598,"byte_end":177605,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177610,"byte_end":177651,"line_start":385,"line_end":385,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177656,"byte_end":177699,"line_start":386,"line_end":386,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177704,"byte_end":177707,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177712,"byte_end":177749,"line_start":388,"line_end":388,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177754,"byte_end":177809,"line_start":389,"line_end":389,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177814,"byte_end":177817,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177822,"byte_end":177886,"line_start":391,"line_end":391,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177891,"byte_end":177900,"line_start":392,"line_end":392,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":177905,"byte_end":177912,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2666},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178825,"byte_end":178832,"line_start":428,"line_end":428,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"fn <C> (self) -> Collect<Self, C>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178100,"byte_end":178154,"line_start":403,"line_end":403,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178159,"byte_end":178214,"line_start":404,"line_end":404,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178219,"byte_end":178222,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178227,"byte_end":178295,"line_start":406,"line_end":406,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178300,"byte_end":178303,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178308,"byte_end":178322,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178327,"byte_end":178330,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178335,"byte_end":178342,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178347,"byte_end":178388,"line_start":411,"line_end":411,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178393,"byte_end":178424,"line_start":412,"line_end":412,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178429,"byte_end":178464,"line_start":413,"line_end":413,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178469,"byte_end":178489,"line_start":414,"line_end":414,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178494,"byte_end":178497,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178502,"byte_end":178539,"line_start":416,"line_end":416,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178544,"byte_end":178547,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178552,"byte_end":178579,"line_start":418,"line_end":418,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178584,"byte_end":178608,"line_start":419,"line_end":419,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178613,"byte_end":178655,"line_start":420,"line_end":420,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178660,"byte_end":178669,"line_start":421,"line_end":421,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178674,"byte_end":178681,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178686,"byte_end":178689,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178694,"byte_end":178742,"line_start":424,"line_end":424,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178747,"byte_end":178791,"line_start":425,"line_end":425,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178796,"byte_end":178805,"line_start":426,"line_end":426,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178810,"byte_end":178817,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2668},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180002,"byte_end":180008,"line_start":467,"line_end":467,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"fn (self) -> Concat<Self>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":178967,"byte_end":179029,"line_start":435,"line_end":435,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179034,"byte_end":179098,"line_start":436,"line_end":436,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179103,"byte_end":179106,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179111,"byte_end":179175,"line_start":438,"line_end":438,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179180,"byte_end":179245,"line_start":439,"line_end":439,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179250,"byte_end":179296,"line_start":440,"line_end":440,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179301,"byte_end":179304,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179309,"byte_end":179358,"line_start":442,"line_end":442,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179363,"byte_end":179403,"line_start":443,"line_end":443,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179408,"byte_end":179411,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179416,"byte_end":179430,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179435,"byte_end":179438,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179443,"byte_end":179450,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179455,"byte_end":179496,"line_start":448,"line_end":448,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179501,"byte_end":179532,"line_start":449,"line_end":449,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179537,"byte_end":179572,"line_start":450,"line_end":450,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179577,"byte_end":179597,"line_start":451,"line_end":451,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179602,"byte_end":179605,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179610,"byte_end":179647,"line_start":453,"line_end":453,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179652,"byte_end":179655,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179660,"byte_end":179687,"line_start":455,"line_end":455,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179692,"byte_end":179723,"line_start":456,"line_end":456,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179728,"byte_end":179754,"line_start":457,"line_end":457,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179759,"byte_end":179825,"line_start":458,"line_end":458,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179830,"byte_end":179839,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179844,"byte_end":179851,"line_start":460,"line_end":460,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179856,"byte_end":179859,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179864,"byte_end":179899,"line_start":462,"line_end":462,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179904,"byte_end":179907,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179912,"byte_end":179968,"line_start":464,"line_end":464,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179973,"byte_end":179982,"line_start":465,"line_end":465,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":179987,"byte_end":179994,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2669},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181021,"byte_end":181025,"line_start":495,"line_end":495,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"fn <T, Fut, F> (self, init: T, f: F) -> Fold<Self, Fut, T, F>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180206,"byte_end":180273,"line_start":475,"line_end":475,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180278,"byte_end":180330,"line_start":476,"line_end":476,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180335,"byte_end":180338,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180343,"byte_end":180413,"line_start":478,"line_end":478,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180418,"byte_end":180494,"line_start":479,"line_end":479,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180499,"byte_end":180575,"line_start":480,"line_end":480,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180580,"byte_end":180650,"line_start":481,"line_end":481,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180655,"byte_end":180681,"line_start":482,"line_end":482,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180686,"byte_end":180689,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180694,"byte_end":180708,"line_start":484,"line_end":484,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180713,"byte_end":180716,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180721,"byte_end":180728,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180733,"byte_end":180774,"line_start":487,"line_end":487,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180779,"byte_end":180822,"line_start":488,"line_end":488,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180827,"byte_end":180830,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180835,"byte_end":180878,"line_start":490,"line_end":490,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180883,"byte_end":180952,"line_start":491,"line_end":491,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180957,"byte_end":180987,"line_start":492,"line_end":492,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":180992,"byte_end":181001,"line_start":493,"line_end":493,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181006,"byte_end":181013,"line_start":494,"line_end":494,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182196,"byte_end":182203,"line_start":535,"line_end":535,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181237,"byte_end":181302,"line_start":504,"line_end":504,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181307,"byte_end":181310,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181315,"byte_end":181329,"line_start":506,"line_end":506,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181334,"byte_end":181337,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181342,"byte_end":181349,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181354,"byte_end":181395,"line_start":509,"line_end":509,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181400,"byte_end":181431,"line_start":510,"line_end":510,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181436,"byte_end":181471,"line_start":511,"line_end":511,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181476,"byte_end":181496,"line_start":512,"line_end":512,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181501,"byte_end":181504,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181509,"byte_end":181548,"line_start":514,"line_end":514,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181553,"byte_end":181592,"line_start":515,"line_end":515,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181597,"byte_end":181636,"line_start":516,"line_end":516,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181641,"byte_end":181644,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181649,"byte_end":181676,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181681,"byte_end":181720,"line_start":519,"line_end":519,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181725,"byte_end":181764,"line_start":520,"line_end":520,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181769,"byte_end":181776,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181781,"byte_end":181808,"line_start":522,"line_end":522,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181813,"byte_end":181852,"line_start":523,"line_end":523,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181857,"byte_end":181896,"line_start":524,"line_end":524,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181901,"byte_end":181908,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181913,"byte_end":181940,"line_start":526,"line_end":526,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181945,"byte_end":181986,"line_start":527,"line_end":527,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":181991,"byte_end":182032,"line_start":528,"line_end":528,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182037,"byte_end":182044,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182049,"byte_end":182052,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182057,"byte_end":182116,"line_start":531,"line_end":531,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182121,"byte_end":182162,"line_start":532,"line_end":532,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182167,"byte_end":182176,"line_start":533,"line_end":533,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182181,"byte_end":182188,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2674},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183105,"byte_end":183115,"line_start":565,"line_end":565,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"fn <Fut, F> (self, f: F) -> SkipWhile<Self, Fut, F>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182330,"byte_end":182404,"line_start":543,"line_end":543,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182409,"byte_end":182432,"line_start":544,"line_end":544,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182437,"byte_end":182440,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182445,"byte_end":182518,"line_start":546,"line_end":546,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182523,"byte_end":182595,"line_start":547,"line_end":547,"column_start":5,"column_end":77}},{"value":"/ returns false all future elements will be returned from the underlying","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182600,"byte_end":182674,"line_start":548,"line_end":548,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182679,"byte_end":182690,"line_start":549,"line_end":549,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182695,"byte_end":182698,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182703,"byte_end":182717,"line_start":551,"line_end":551,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182722,"byte_end":182725,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182730,"byte_end":182737,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182742,"byte_end":182783,"line_start":554,"line_end":554,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182788,"byte_end":182812,"line_start":555,"line_end":555,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182817,"byte_end":182860,"line_start":556,"line_end":556,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182865,"byte_end":182868,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182873,"byte_end":182911,"line_start":558,"line_end":558,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182916,"byte_end":182919,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182924,"byte_end":182987,"line_start":560,"line_end":560,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":182992,"byte_end":182995,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183000,"byte_end":183071,"line_start":562,"line_end":562,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183076,"byte_end":183085,"line_start":563,"line_end":563,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183090,"byte_end":183097,"line_start":564,"line_end":564,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184069,"byte_end":184079,"line_start":595,"line_end":595,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"fn <Fut, F> (self, f: F) -> TakeWhile<Self, Fut, F>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183317,"byte_end":183393,"line_start":574,"line_end":574,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183398,"byte_end":183421,"line_start":575,"line_end":575,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183426,"byte_end":183429,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183434,"byte_end":183509,"line_start":577,"line_end":577,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183514,"byte_end":183586,"line_start":578,"line_end":578,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183591,"byte_end":183655,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183660,"byte_end":183663,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183668,"byte_end":183682,"line_start":581,"line_end":581,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183687,"byte_end":183690,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183695,"byte_end":183702,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183707,"byte_end":183748,"line_start":584,"line_end":584,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183753,"byte_end":183777,"line_start":585,"line_end":585,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183782,"byte_end":183825,"line_start":586,"line_end":586,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183830,"byte_end":183833,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183838,"byte_end":183876,"line_start":588,"line_end":588,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183881,"byte_end":183884,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183889,"byte_end":183952,"line_start":590,"line_end":590,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183957,"byte_end":183960,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":183965,"byte_end":184035,"line_start":592,"line_end":592,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184040,"byte_end":184049,"line_start":593,"line_end":593,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184054,"byte_end":184061,"line_start":594,"line_end":594,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185339,"byte_end":185347,"line_start":637,"line_end":637,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"fn <Fut, F> (self, f: F) -> ForEach<Self, Fut, F>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184281,"byte_end":184352,"line_start":604,"line_end":604,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184357,"byte_end":184400,"line_start":605,"line_end":605,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184405,"byte_end":184408,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184413,"byte_end":184488,"line_start":607,"line_end":607,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184493,"byte_end":184563,"line_start":608,"line_end":608,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184568,"byte_end":184606,"line_start":609,"line_end":609,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184611,"byte_end":184614,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184619,"byte_end":184694,"line_start":611,"line_end":611,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184699,"byte_end":184742,"line_start":612,"line_end":612,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184747,"byte_end":184750,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184755,"byte_end":184828,"line_start":614,"line_end":614,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184833,"byte_end":184876,"line_start":615,"line_end":615,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184881,"byte_end":184884,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184889,"byte_end":184903,"line_start":617,"line_end":617,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184908,"byte_end":184911,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184916,"byte_end":184923,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184928,"byte_end":184969,"line_start":620,"line_end":620,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":184974,"byte_end":184998,"line_start":621,"line_end":621,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185003,"byte_end":185046,"line_start":622,"line_end":622,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185051,"byte_end":185054,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185059,"byte_end":185077,"line_start":624,"line_end":624,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185082,"byte_end":185085,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185090,"byte_end":185095,"line_start":626,"line_end":626,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185100,"byte_end":185161,"line_start":627,"line_end":627,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185166,"byte_end":185188,"line_start":628,"line_end":628,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185193,"byte_end":185222,"line_start":629,"line_end":629,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185227,"byte_end":185238,"line_start":630,"line_end":630,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185243,"byte_end":185261,"line_start":631,"line_end":631,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185266,"byte_end":185271,"line_start":632,"line_end":632,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185276,"byte_end":185279,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185284,"byte_end":185305,"line_start":634,"line_end":634,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185310,"byte_end":185319,"line_start":635,"line_end":635,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185324,"byte_end":185331,"line_start":636,"line_end":636,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2683},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187529,"byte_end":187548,"line_start":693,"line_end":693,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"fn <Fut, F> (self, limit: impl Into<Option<usize>>, f: F) -> ForEachConcurrent<Self, Fut, F>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185542,"byte_end":185613,"line_start":646,"line_end":646,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185618,"byte_end":185692,"line_start":647,"line_end":647,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185697,"byte_end":185711,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185716,"byte_end":185719,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185724,"byte_end":185787,"line_start":650,"line_end":650,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185792,"byte_end":185863,"line_start":651,"line_end":651,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185868,"byte_end":185920,"line_start":652,"line_end":652,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185925,"byte_end":185928,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":185933,"byte_end":186008,"line_start":654,"line_end":654,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186013,"byte_end":186083,"line_start":655,"line_end":655,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186088,"byte_end":186152,"line_start":656,"line_end":656,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186157,"byte_end":186160,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186165,"byte_end":186236,"line_start":658,"line_end":658,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186241,"byte_end":186311,"line_start":659,"line_end":659,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186316,"byte_end":186377,"line_start":660,"line_end":660,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186382,"byte_end":186449,"line_start":661,"line_end":661,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186454,"byte_end":186523,"line_start":662,"line_end":662,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186528,"byte_end":186600,"line_start":663,"line_end":663,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186605,"byte_end":186608,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186613,"byte_end":186688,"line_start":665,"line_end":665,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186693,"byte_end":186750,"line_start":666,"line_end":666,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186755,"byte_end":186758,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186763,"byte_end":186777,"line_start":668,"line_end":668,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186782,"byte_end":186785,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186790,"byte_end":186797,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186802,"byte_end":186843,"line_start":671,"line_end":671,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186848,"byte_end":186882,"line_start":672,"line_end":672,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186887,"byte_end":186930,"line_start":673,"line_end":673,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186935,"byte_end":186938,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186943,"byte_end":186983,"line_start":675,"line_end":675,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":186988,"byte_end":187028,"line_start":676,"line_end":676,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187033,"byte_end":187073,"line_start":677,"line_end":677,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187078,"byte_end":187081,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187086,"byte_end":187154,"line_start":679,"line_end":679,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187159,"byte_end":187181,"line_start":680,"line_end":680,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187186,"byte_end":187211,"line_start":681,"line_end":681,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187216,"byte_end":187246,"line_start":682,"line_end":682,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187251,"byte_end":187260,"line_start":683,"line_end":683,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187265,"byte_end":187271,"line_start":684,"line_end":684,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187276,"byte_end":187302,"line_start":685,"line_end":685,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187307,"byte_end":187333,"line_start":686,"line_end":686,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187338,"byte_end":187364,"line_start":687,"line_end":687,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187369,"byte_end":187383,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187388,"byte_end":187396,"line_start":689,"line_end":689,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187401,"byte_end":187408,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187496,"byte_end":187521,"line_start":692,"line_end":692,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2687},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188349,"byte_end":188353,"line_start":722,"line_end":722,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187841,"byte_end":187912,"line_start":706,"line_end":706,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187917,"byte_end":187920,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":187925,"byte_end":187998,"line_start":708,"line_end":708,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188003,"byte_end":188038,"line_start":709,"line_end":709,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188043,"byte_end":188046,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188051,"byte_end":188065,"line_start":711,"line_end":711,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188070,"byte_end":188073,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188078,"byte_end":188085,"line_start":713,"line_end":713,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188090,"byte_end":188131,"line_start":714,"line_end":714,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188136,"byte_end":188179,"line_start":715,"line_end":715,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188184,"byte_end":188187,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188192,"byte_end":188238,"line_start":717,"line_end":717,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188243,"byte_end":188246,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188251,"byte_end":188315,"line_start":719,"line_end":719,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188320,"byte_end":188329,"line_start":720,"line_end":720,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188334,"byte_end":188341,"line_start":721,"line_end":721,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2688},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188986,"byte_end":188990,"line_start":745,"line_end":745,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188459,"byte_end":188531,"line_start":729,"line_end":729,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188536,"byte_end":188539,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188544,"byte_end":188617,"line_start":731,"line_end":731,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188622,"byte_end":188668,"line_start":732,"line_end":732,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188673,"byte_end":188676,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188681,"byte_end":188695,"line_start":734,"line_end":734,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188700,"byte_end":188703,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188708,"byte_end":188715,"line_start":736,"line_end":736,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188720,"byte_end":188761,"line_start":737,"line_end":737,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188766,"byte_end":188809,"line_start":738,"line_end":738,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188814,"byte_end":188817,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188822,"byte_end":188868,"line_start":740,"line_end":740,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188873,"byte_end":188876,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188881,"byte_end":188952,"line_start":742,"line_end":742,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188957,"byte_end":188966,"line_start":743,"line_end":743,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":188971,"byte_end":188978,"line_start":744,"line_end":744,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2689},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190579,"byte_end":190583,"line_start":791,"line_end":791,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189096,"byte_end":189167,"line_start":752,"line_end":752,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189172,"byte_end":189245,"line_start":753,"line_end":753,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189250,"byte_end":189288,"line_start":754,"line_end":754,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189293,"byte_end":189296,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189301,"byte_end":189355,"line_start":756,"line_end":756,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189360,"byte_end":189432,"line_start":757,"line_end":757,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189437,"byte_end":189513,"line_start":758,"line_end":758,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189518,"byte_end":189586,"line_start":759,"line_end":759,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189591,"byte_end":189667,"line_start":760,"line_end":760,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189672,"byte_end":189694,"line_start":761,"line_end":761,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189699,"byte_end":189702,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189707,"byte_end":189774,"line_start":763,"line_end":763,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189779,"byte_end":189847,"line_start":764,"line_end":764,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189852,"byte_end":189865,"line_start":765,"line_end":765,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189870,"byte_end":189873,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189878,"byte_end":189892,"line_start":767,"line_end":767,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189897,"byte_end":189900,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189905,"byte_end":189912,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189917,"byte_end":189960,"line_start":770,"line_end":770,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":189965,"byte_end":190008,"line_start":771,"line_end":771,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190013,"byte_end":190041,"line_start":772,"line_end":772,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190046,"byte_end":190049,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190054,"byte_end":190072,"line_start":774,"line_end":774,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190077,"byte_end":190115,"line_start":775,"line_end":775,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190120,"byte_end":190135,"line_start":776,"line_end":776,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190140,"byte_end":190157,"line_start":777,"line_end":777,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190162,"byte_end":190204,"line_start":778,"line_end":778,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190209,"byte_end":190244,"line_start":779,"line_end":779,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190249,"byte_end":190293,"line_start":780,"line_end":780,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190298,"byte_end":190307,"line_start":781,"line_end":781,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190312,"byte_end":190326,"line_start":782,"line_end":782,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190331,"byte_end":190334,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190339,"byte_end":190382,"line_start":784,"line_end":784,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190387,"byte_end":190424,"line_start":785,"line_end":785,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190429,"byte_end":190466,"line_start":786,"line_end":786,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190471,"byte_end":190505,"line_start":787,"line_end":787,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190510,"byte_end":190544,"line_start":788,"line_end":788,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190549,"byte_end":190559,"line_start":789,"line_end":789,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190564,"byte_end":190571,"line_start":790,"line_end":790,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2690},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191480,"byte_end":191486,"line_start":824,"line_end":824,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"fn (&mut self) -> &mut Self","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190676,"byte_end":190723,"line_start":798,"line_end":798,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190728,"byte_end":190731,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190736,"byte_end":190810,"line_start":800,"line_end":800,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190815,"byte_end":190852,"line_start":801,"line_end":801,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190857,"byte_end":190860,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190865,"byte_end":190879,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190884,"byte_end":190887,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190892,"byte_end":190899,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190904,"byte_end":190945,"line_start":806,"line_end":806,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190950,"byte_end":190993,"line_start":807,"line_end":807,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":190998,"byte_end":191001,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191006,"byte_end":191046,"line_start":809,"line_end":809,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191051,"byte_end":191054,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191059,"byte_end":191088,"line_start":811,"line_end":811,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191093,"byte_end":191121,"line_start":812,"line_end":812,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191126,"byte_end":191183,"line_start":813,"line_end":813,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191188,"byte_end":191215,"line_start":814,"line_end":814,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191220,"byte_end":191243,"line_start":815,"line_end":815,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191248,"byte_end":191251,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191256,"byte_end":191291,"line_start":817,"line_end":817,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191296,"byte_end":191324,"line_start":818,"line_end":818,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191329,"byte_end":191386,"line_start":819,"line_end":819,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191391,"byte_end":191418,"line_start":820,"line_end":820,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191423,"byte_end":191446,"line_start":821,"line_end":821,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191451,"byte_end":191460,"line_start":822,"line_end":822,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191465,"byte_end":191472,"line_start":823,"line_end":823,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2691},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193245,"byte_end":193257,"line_start":869,"line_end":869,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"fn (self) -> CatchUnwind<Self>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191537,"byte_end":191591,"line_start":828,"line_end":828,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191596,"byte_end":191599,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191604,"byte_end":191679,"line_start":830,"line_end":830,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191684,"byte_end":191687,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191692,"byte_end":191767,"line_start":832,"line_end":832,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191772,"byte_end":191846,"line_start":833,"line_end":833,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191851,"byte_end":191925,"line_start":834,"line_end":834,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191930,"byte_end":191979,"line_start":835,"line_end":835,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191984,"byte_end":191987,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":191992,"byte_end":192067,"line_start":837,"line_end":837,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192072,"byte_end":192142,"line_start":838,"line_end":838,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192147,"byte_end":192214,"line_start":839,"line_end":839,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192219,"byte_end":192291,"line_start":840,"line_end":840,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192296,"byte_end":192365,"line_start":841,"line_end":841,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192370,"byte_end":192385,"line_start":842,"line_end":842,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192390,"byte_end":192393,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192398,"byte_end":192462,"line_start":844,"line_end":844,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192467,"byte_end":192524,"line_start":845,"line_end":845,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192529,"byte_end":192532,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192537,"byte_end":192551,"line_start":847,"line_end":847,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192556,"byte_end":192559,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192564,"byte_end":192571,"line_start":849,"line_end":849,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192576,"byte_end":192617,"line_start":850,"line_end":850,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192622,"byte_end":192665,"line_start":851,"line_end":851,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192670,"byte_end":192673,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192678,"byte_end":192740,"line_start":853,"line_end":853,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192745,"byte_end":192775,"line_start":854,"line_end":854,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192780,"byte_end":192834,"line_start":855,"line_end":855,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192839,"byte_end":192869,"line_start":856,"line_end":856,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192874,"byte_end":192923,"line_start":857,"line_end":857,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192928,"byte_end":192931,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":192936,"byte_end":192998,"line_start":859,"line_end":859,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193003,"byte_end":193025,"line_start":860,"line_end":860,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193030,"byte_end":193050,"line_start":861,"line_end":861,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193055,"byte_end":193097,"line_start":862,"line_end":862,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193102,"byte_end":193107,"line_start":863,"line_end":863,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193112,"byte_end":193145,"line_start":864,"line_end":864,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193150,"byte_end":193183,"line_start":865,"line_end":865,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193188,"byte_end":193197,"line_start":866,"line_end":866,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193202,"byte_end":193209,"line_start":867,"line_end":867,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193214,"byte_end":193237,"line_start":868,"line_end":868,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2692},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193618,"byte_end":193623,"line_start":881,"line_end":881,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"fn <'a> (self) -> BoxStream<'a, Self::Item>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193389,"byte_end":193430,"line_start":876,"line_end":876,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193435,"byte_end":193438,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193443,"byte_end":193518,"line_start":878,"line_end":878,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193523,"byte_end":193580,"line_start":879,"line_end":879,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193585,"byte_end":193610,"line_start":880,"line_end":880,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2694},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":194047,"byte_end":194058,"line_start":895,"line_end":895,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"fn <'a> (self) -> LocalBoxStream<'a, Self::Item>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193746,"byte_end":193787,"line_start":888,"line_end":888,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193792,"byte_end":193795,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193800,"byte_end":193859,"line_start":890,"line_end":890,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193864,"byte_end":193867,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193872,"byte_end":193947,"line_start":892,"line_end":892,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":193952,"byte_end":194009,"line_start":893,"line_end":893,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":194014,"byte_end":194039,"line_start":894,"line_end":894,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":194963,"byte_end":194971,"line_start":916,"line_end":916,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"fn (self, n: usize) -> Buffered<Self>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":194179,"byte_end":194242,"line_start":902,"line_end":902,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":194247,"byte_end":194250,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":194255,"byte_end":194330,"line_start":904,"line_end":904,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":194335,"byte_end":194411,"line_start":905,"line_end":905,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":194416,"byte_end":194489,"line_start":906,"line_end":906,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":194494,"byte_end":194567,"line_start":907,"line_end":907,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":194572,"byte_end":194614,"line_start":908,"line_end":908,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":194619,"byte_end":194622,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":194627,"byte_end":194692,"line_start":910,"line_end":910,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":194697,"byte_end":194700,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":194705,"byte_end":194780,"line_start":912,"line_end":912,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":194785,"byte_end":194842,"line_start":913,"line_end":913,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":194930,"byte_end":194955,"line_start":915,"line_end":915,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2697},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196643,"byte_end":196659,"line_start":961,"line_end":961,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"fn (self, n: usize) -> BufferUnordered<Self>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195113,"byte_end":195188,"line_start":924,"line_end":924,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195193,"byte_end":195196,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195201,"byte_end":195276,"line_start":926,"line_end":926,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195281,"byte_end":195355,"line_start":927,"line_end":927,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195360,"byte_end":195432,"line_start":928,"line_end":928,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195437,"byte_end":195511,"line_start":929,"line_end":929,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195516,"byte_end":195545,"line_start":930,"line_end":930,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195550,"byte_end":195553,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195558,"byte_end":195623,"line_start":932,"line_end":932,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195628,"byte_end":195631,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195636,"byte_end":195711,"line_start":934,"line_end":934,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195716,"byte_end":195773,"line_start":935,"line_end":935,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195778,"byte_end":195781,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195786,"byte_end":195800,"line_start":937,"line_end":937,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195805,"byte_end":195808,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195813,"byte_end":195820,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195825,"byte_end":195866,"line_start":940,"line_end":940,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195871,"byte_end":195905,"line_start":941,"line_end":941,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195910,"byte_end":195953,"line_start":942,"line_end":942,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195958,"byte_end":195961,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":195966,"byte_end":196016,"line_start":944,"line_end":944,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196021,"byte_end":196071,"line_start":945,"line_end":945,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196076,"byte_end":196079,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196084,"byte_end":196151,"line_start":947,"line_end":947,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196156,"byte_end":196218,"line_start":948,"line_end":948,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196223,"byte_end":196226,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196231,"byte_end":196256,"line_start":950,"line_end":950,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196261,"byte_end":196315,"line_start":951,"line_end":951,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196320,"byte_end":196323,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196328,"byte_end":196353,"line_start":953,"line_end":953,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196358,"byte_end":196412,"line_start":954,"line_end":954,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196417,"byte_end":196420,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196425,"byte_end":196469,"line_start":956,"line_end":956,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196474,"byte_end":196510,"line_start":957,"line_end":957,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196515,"byte_end":196522,"line_start":958,"line_end":958,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196610,"byte_end":196635,"line_start":960,"line_end":960,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2698},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197503,"byte_end":197506,"line_start":991,"line_end":991,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"fn <St> (self, other: St) -> Zip<Self, St>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196815,"byte_end":196863,"line_start":969,"line_end":969,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196868,"byte_end":196871,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196876,"byte_end":196949,"line_start":971,"line_end":971,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":196954,"byte_end":197026,"line_start":972,"line_end":972,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197031,"byte_end":197044,"line_start":973,"line_end":973,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197049,"byte_end":197052,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197057,"byte_end":197071,"line_start":975,"line_end":975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197076,"byte_end":197079,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197084,"byte_end":197091,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197096,"byte_end":197137,"line_start":978,"line_end":978,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197142,"byte_end":197185,"line_start":979,"line_end":979,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197190,"byte_end":197193,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197198,"byte_end":197236,"line_start":981,"line_end":981,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197241,"byte_end":197280,"line_start":982,"line_end":982,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197285,"byte_end":197288,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197293,"byte_end":197327,"line_start":984,"line_end":984,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197332,"byte_end":197373,"line_start":985,"line_end":985,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197378,"byte_end":197406,"line_start":986,"line_end":986,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197411,"byte_end":197461,"line_start":987,"line_end":987,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197466,"byte_end":197475,"line_start":988,"line_end":988,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197480,"byte_end":197487,"line_start":989,"line_end":989,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197492,"byte_end":197495,"line_start":990,"line_end":990,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2700},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198370,"byte_end":198375,"line_start":1022,"line_end":1022,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"fn <St> (self, other: St) -> Chain<Self, St>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197643,"byte_end":197680,"line_start":999,"line_end":999,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197685,"byte_end":197688,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197693,"byte_end":197764,"line_start":1001,"line_end":1001,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197769,"byte_end":197845,"line_start":1002,"line_end":1002,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197850,"byte_end":197853,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197858,"byte_end":197865,"line_start":1004,"line_end":1004,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197870,"byte_end":197911,"line_start":1005,"line_end":1005,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197916,"byte_end":197959,"line_start":1006,"line_end":1006,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197964,"byte_end":197967,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":197972,"byte_end":198029,"line_start":1008,"line_end":1008,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198034,"byte_end":198090,"line_start":1009,"line_end":1009,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198095,"byte_end":198098,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198103,"byte_end":198143,"line_start":1011,"line_end":1011,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198148,"byte_end":198151,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198156,"byte_end":198204,"line_start":1013,"line_end":1013,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198209,"byte_end":198237,"line_start":1014,"line_end":1014,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198242,"byte_end":198257,"line_start":1015,"line_end":1015,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198262,"byte_end":198281,"line_start":1016,"line_end":1016,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198286,"byte_end":198304,"line_start":1017,"line_end":1017,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198309,"byte_end":198324,"line_start":1018,"line_end":1018,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198329,"byte_end":198336,"line_start":1019,"line_end":1019,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198341,"byte_end":198350,"line_start":1020,"line_end":1020,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198355,"byte_end":198362,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198681,"byte_end":198689,"line_start":1033,"line_end":1033,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"fn (self) -> Peekable<Self>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198535,"byte_end":198590,"line_start":1030,"line_end":1030,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198595,"byte_end":198598,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198603,"byte_end":198673,"line_start":1032,"line_end":1032,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2703},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199692,"byte_end":199698,"line_start":1059,"line_end":1059,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"fn (self, capacity: usize) -> Chunks<Self>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198790,"byte_end":198857,"line_start":1040,"line_end":1040,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198862,"byte_end":198865,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198870,"byte_end":198944,"line_start":1042,"line_end":1042,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":198949,"byte_end":199021,"line_start":1043,"line_end":1043,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199026,"byte_end":199078,"line_start":1044,"line_end":1044,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199083,"byte_end":199086,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199091,"byte_end":199164,"line_start":1046,"line_end":1046,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199169,"byte_end":199243,"line_start":1047,"line_end":1047,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199248,"byte_end":199323,"line_start":1048,"line_end":1048,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199328,"byte_end":199400,"line_start":1049,"line_end":1049,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199405,"byte_end":199417,"line_start":1050,"line_end":1050,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199422,"byte_end":199425,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199430,"byte_end":199505,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199510,"byte_end":199567,"line_start":1053,"line_end":1053,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199572,"byte_end":199575,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199580,"byte_end":199592,"line_start":1055,"line_end":1055,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199597,"byte_end":199600,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199605,"byte_end":199654,"line_start":1057,"line_end":1057,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199659,"byte_end":199684,"line_start":1058,"line_end":1058,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":200518,"byte_end":200525,"line_start":1077,"line_end":1077,"column_start":8,"column_end":15},"name":"forward","qualname":"::stream::stream::StreamExt::forward","value":"fn <S> (self, sink: S) -> Forward<Self, S>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink and the sink has been flushed and closed.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199822,"byte_end":199897,"line_start":1066,"line_end":1066,"column_start":5,"column_end":80}},{"value":"/ into the sink and the sink has been flushed and closed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199902,"byte_end":199961,"line_start":1067,"line_end":1067,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199966,"byte_end":199969,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":199974,"byte_end":200047,"line_start":1069,"line_end":1069,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":200052,"byte_end":200123,"line_start":1070,"line_end":1070,"column_start":5,"column_end":76}},{"value":"/ stream is exhausted, the sink has received and flushed all items, and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":200128,"byte_end":200201,"line_start":1071,"line_end":1071,"column_start":5,"column_end":78}},{"value":"/ the sink is closed. Note that neither the original stream nor provided","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":200206,"byte_end":200280,"line_start":1072,"line_end":1072,"column_start":5,"column_end":79}},{"value":"/ sink will be output by this future. Pass the sink by `Pin<&mut S>`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":200285,"byte_end":200355,"line_start":1073,"line_end":1073,"column_start":5,"column_end":75}},{"value":"/ (for example, via `forward(&mut sink)` inside an `async` fn/block) in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":200360,"byte_end":200433,"line_start":1074,"line_end":1074,"column_start":5,"column_end":78}},{"value":"/ order to preserve access to the `Sink`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":200438,"byte_end":200481,"line_start":1075,"line_end":1075,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":200486,"byte_end":200510,"line_start":1076,"line_end":1076,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":201286,"byte_end":201291,"line_start":1097,"line_end":1097,"column_start":8,"column_end":13},"name":"split","qualname":"::stream::stream::StreamExt::split","value":"fn <Item> (self) -> (SplitSink<Self, Item>, SplitStream<Self>)","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Splits this `Stream + Sink` object into separate `Stream` and `Sink`\n objects.","sig":null,"attributes":[{"value":"/ Splits this `Stream + Sink` object into separate `Stream` and `Sink`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":200717,"byte_end":200789,"line_start":1085,"line_end":1085,"column_start":5,"column_end":77}},{"value":"/ objects.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":200794,"byte_end":200806,"line_start":1086,"line_end":1086,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":200811,"byte_end":200814,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ This can be useful when you want to split ownership between tasks, or","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":200819,"byte_end":200892,"line_start":1088,"line_end":1088,"column_start":5,"column_end":78}},{"value":"/ allow direct interaction between the two objects (e.g. via","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":200897,"byte_end":200959,"line_start":1089,"line_end":1089,"column_start":5,"column_end":67}},{"value":"/ `Sink::send_all`).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":200964,"byte_end":200986,"line_start":1090,"line_end":1090,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":200991,"byte_end":200994,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":200999,"byte_end":201074,"line_start":1092,"line_end":1092,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":201079,"byte_end":201136,"line_start":1093,"line_end":1093,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":201141,"byte_end":201165,"line_start":1094,"line_end":1094,"column_start":5,"column_end":29}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":201253,"byte_end":201278,"line_start":1096,"line_end":1096,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2708},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":201741,"byte_end":201748,"line_start":1109,"line_end":1109,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":201438,"byte_end":201511,"line_start":1104,"line_end":1104,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":201516,"byte_end":201519,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":201524,"byte_end":201593,"line_start":1106,"line_end":1106,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":201598,"byte_end":201667,"line_start":1107,"line_end":1107,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":201672,"byte_end":201733,"line_start":1108,"line_end":1108,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2710},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":202172,"byte_end":202183,"line_start":1122,"line_end":1122,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"fn <B> (self) -> Either<Self, B>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":201893,"byte_end":201968,"line_start":1117,"line_end":1117,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":201973,"byte_end":201994,"line_start":1118,"line_end":1118,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":201999,"byte_end":202002,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":202007,"byte_end":202087,"line_start":1120,"line_end":1120,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":202092,"byte_end":202164,"line_start":1121,"line_end":1121,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":202604,"byte_end":202616,"line_start":1135,"line_end":1135,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"fn <B> (self) -> Either<B, Self>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":202325,"byte_end":202401,"line_start":1130,"line_end":1130,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":202406,"byte_end":202427,"line_start":1131,"line_end":1131,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":202432,"byte_end":202435,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":202440,"byte_end":202519,"line_start":1133,"line_end":1133,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":202524,"byte_end":202596,"line_start":1134,"line_end":1134,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":202860,"byte_end":202875,"line_start":1145,"line_end":1145,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":202759,"byte_end":202830,"line_start":1143,"line_end":1143,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":202835,"byte_end":202852,"line_start":1144,"line_end":1144,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204976,"byte_end":204992,"line_start":1200,"line_end":1200,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"fn (&mut self) -> SelectNextSome<'_, Self>","parent":{"krate":0,"index":2649},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203022,"byte_end":203097,"line_start":1152,"line_end":1152,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203102,"byte_end":203112,"line_start":1153,"line_end":1153,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203117,"byte_end":203120,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203125,"byte_end":203198,"line_start":1155,"line_end":1155,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203203,"byte_end":203271,"line_start":1156,"line_end":1156,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203276,"byte_end":203324,"line_start":1157,"line_end":1157,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203329,"byte_end":203404,"line_start":1158,"line_end":1158,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203409,"byte_end":203485,"line_start":1159,"line_end":1159,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203490,"byte_end":203516,"line_start":1160,"line_end":1160,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203521,"byte_end":203524,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203529,"byte_end":203602,"line_start":1162,"line_end":1162,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203607,"byte_end":203677,"line_start":1163,"line_end":1163,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203682,"byte_end":203722,"line_start":1164,"line_end":1164,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203727,"byte_end":203730,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203735,"byte_end":203789,"line_start":1166,"line_end":1166,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203794,"byte_end":203878,"line_start":1167,"line_end":1167,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203883,"byte_end":203886,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203891,"byte_end":203905,"line_start":1169,"line_end":1169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203910,"byte_end":203913,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203918,"byte_end":203925,"line_start":1171,"line_end":1171,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203930,"byte_end":203971,"line_start":1172,"line_end":1172,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":203976,"byte_end":204010,"line_start":1173,"line_end":1173,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204015,"byte_end":204070,"line_start":1174,"line_end":1174,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204075,"byte_end":204078,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204083,"byte_end":204118,"line_start":1176,"line_end":1176,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204123,"byte_end":204173,"line_start":1177,"line_end":1177,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204178,"byte_end":204200,"line_start":1178,"line_end":1178,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204205,"byte_end":204215,"line_start":1179,"line_end":1179,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204220,"byte_end":204237,"line_start":1180,"line_end":1180,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204242,"byte_end":204268,"line_start":1181,"line_end":1181,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204273,"byte_end":204328,"line_start":1182,"line_end":1182,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204333,"byte_end":204362,"line_start":1183,"line_end":1183,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204367,"byte_end":204430,"line_start":1184,"line_end":1184,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204435,"byte_end":204481,"line_start":1185,"line_end":1185,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204486,"byte_end":204500,"line_start":1186,"line_end":1186,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204505,"byte_end":204574,"line_start":1187,"line_end":1187,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204579,"byte_end":204604,"line_start":1188,"line_end":1188,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204609,"byte_end":204662,"line_start":1189,"line_end":1189,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204667,"byte_end":204696,"line_start":1190,"line_end":1190,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204701,"byte_end":204714,"line_start":1191,"line_end":1191,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204719,"byte_end":204789,"line_start":1192,"line_end":1192,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204794,"byte_end":204853,"line_start":1193,"line_end":1193,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204858,"byte_end":204888,"line_start":1194,"line_end":1194,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204893,"byte_end":204902,"line_start":1195,"line_end":1195,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204907,"byte_end":204912,"line_start":1196,"line_end":1196,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204917,"byte_end":204942,"line_start":1197,"line_end":1197,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204947,"byte_end":204956,"line_start":1198,"line_end":1198,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":204961,"byte_end":204968,"line_start":1199,"line_end":1199,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2776},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":313145,"byte_end":313152,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":2780},{"krate":0,"index":2781},{"krate":0,"index":2782}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`and_then`](super::TryStreamExt::and_then) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":313014,"byte_end":313084,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":313085,"byte_end":313133,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2801},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":314097,"byte_end":314104,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AndThen<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":313990,"byte_end":314063,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":314068,"byte_end":314085,"line_start":49,"line_end":49,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2802},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":314414,"byte_end":314421,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AndThen<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":314153,"byte_end":314220,"line_start":54,"line_end":54,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":314225,"byte_end":314256,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":314261,"byte_end":314264,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":314269,"byte_end":314342,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":314347,"byte_end":314402,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2803},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":314750,"byte_end":314761,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<AndThen<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":314482,"byte_end":314556,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":314561,"byte_end":314592,"line_start":64,"line_end":64,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":314597,"byte_end":314600,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":314605,"byte_end":314678,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":314683,"byte_end":314738,"line_start":67,"line_end":67,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":315070,"byte_end":315080,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AndThen<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":314835,"byte_end":314897,"line_start":72,"line_end":72,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":314902,"byte_end":314905,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":314910,"byte_end":314982,"line_start":74,"line_end":74,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":314987,"byte_end":315058,"line_start":75,"line_end":75,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6745},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":317195,"byte_end":317202,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"ErrInto","qualname":"::stream::try_stream::err_into::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":6748},{"krate":0,"index":6749}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`err_into`](super::TryStreamExt::err_into) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":317047,"byte_end":317117,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":317135,"byte_end":317183,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":317581,"byte_end":317588,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ErrInto<St, E>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":317474,"byte_end":317547,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":317552,"byte_end":317569,"line_start":27,"line_end":27,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2844},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":317898,"byte_end":317905,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ErrInto<St, E>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":317637,"byte_end":317704,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":317709,"byte_end":317740,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":317745,"byte_end":317748,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":317753,"byte_end":317826,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":317831,"byte_end":317886,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":318234,"byte_end":318245,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<ErrInto<St, E>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":317966,"byte_end":318040,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":318045,"byte_end":318076,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":318081,"byte_end":318084,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":318089,"byte_end":318162,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":318167,"byte_end":318222,"line_start":45,"line_end":45,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2846},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":318554,"byte_end":318564,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ErrInto<St, E>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":318319,"byte_end":318381,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":318386,"byte_end":318389,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":318394,"byte_end":318466,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":318471,"byte_end":318542,"line_start":53,"line_end":53,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2880},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":319866,"byte_end":319875,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"InspectOk","qualname":"::stream::try_stream::inspect_ok::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":2883},{"krate":0,"index":2884}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":319731,"byte_end":319805,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":319806,"byte_end":319854,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2899},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":320577,"byte_end":320584,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<InspectOk<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":320470,"byte_end":320543,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":320548,"byte_end":320565,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2900},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":320894,"byte_end":320901,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<InspectOk<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":320633,"byte_end":320700,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":320705,"byte_end":320736,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":320741,"byte_end":320744,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":320749,"byte_end":320822,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":320827,"byte_end":320882,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2901},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":321230,"byte_end":321241,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<InspectOk<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":320962,"byte_end":321036,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":321041,"byte_end":321072,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":321077,"byte_end":321080,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":321085,"byte_end":321158,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":321163,"byte_end":321218,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2902},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":321550,"byte_end":321560,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<InspectOk<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":321315,"byte_end":321377,"line_start":68,"line_end":68,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":321382,"byte_end":321385,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":321390,"byte_end":321462,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":321467,"byte_end":321538,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2937},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":322932,"byte_end":322942,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"InspectErr","qualname":"::stream::try_stream::inspect_err::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":2940},{"krate":0,"index":2941}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":322795,"byte_end":322871,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":322872,"byte_end":322920,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2956},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":323652,"byte_end":323659,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<InspectErr<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":323545,"byte_end":323618,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":323623,"byte_end":323640,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":323969,"byte_end":323976,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<InspectErr<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":323708,"byte_end":323775,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":323780,"byte_end":323811,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":323816,"byte_end":323819,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":323824,"byte_end":323897,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":323902,"byte_end":323957,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2958},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":324305,"byte_end":324316,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<InspectErr<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":324037,"byte_end":324111,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":324116,"byte_end":324147,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":324152,"byte_end":324155,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":324160,"byte_end":324233,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":324238,"byte_end":324293,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2959},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":324625,"byte_end":324635,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<InspectErr<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":324390,"byte_end":324452,"line_start":68,"line_end":68,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":324457,"byte_end":324460,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":324465,"byte_end":324537,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":324542,"byte_end":324613,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6779},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":325967,"byte_end":325977,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":6781}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":325813,"byte_end":325889,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":325907,"byte_end":325955,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":326268,"byte_end":326275,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<IntoStream<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":326161,"byte_end":326234,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":326239,"byte_end":326256,"line_start":24,"line_end":24,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2994},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":326585,"byte_end":326592,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IntoStream<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":326324,"byte_end":326391,"line_start":29,"line_end":29,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":326396,"byte_end":326427,"line_start":30,"line_end":30,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":326432,"byte_end":326435,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":326440,"byte_end":326513,"line_start":32,"line_end":32,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":326518,"byte_end":326573,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2995},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":326921,"byte_end":326932,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<IntoStream<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":326653,"byte_end":326727,"line_start":38,"line_end":38,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":326732,"byte_end":326763,"line_start":39,"line_end":39,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":326768,"byte_end":326771,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":326776,"byte_end":326849,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":326854,"byte_end":326909,"line_start":42,"line_end":42,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2996},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":327241,"byte_end":327251,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoStream<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":327006,"byte_end":327068,"line_start":47,"line_end":47,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":327073,"byte_end":327076,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":327081,"byte_end":327153,"line_start":49,"line_end":49,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":327158,"byte_end":327229,"line_start":50,"line_end":50,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3024},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":328368,"byte_end":328373,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"MapOk","qualname":"::stream::try_stream::map_ok::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":3027},{"krate":0,"index":3028}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":328241,"byte_end":328307,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":328308,"byte_end":328356,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3040},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":329008,"byte_end":329015,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MapOk<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":328901,"byte_end":328974,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":328979,"byte_end":328996,"line_start":39,"line_end":39,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3041},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":329325,"byte_end":329332,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MapOk<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":329064,"byte_end":329131,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":329136,"byte_end":329167,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":329172,"byte_end":329175,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":329180,"byte_end":329253,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":329258,"byte_end":329313,"line_start":48,"line_end":48,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3042},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":329661,"byte_end":329672,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<MapOk<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":329393,"byte_end":329467,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":329472,"byte_end":329503,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":329508,"byte_end":329511,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":329516,"byte_end":329589,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":329594,"byte_end":329649,"line_start":57,"line_end":57,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3043},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":329981,"byte_end":329991,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MapOk<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":329746,"byte_end":329808,"line_start":62,"line_end":62,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":329813,"byte_end":329816,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":329821,"byte_end":329893,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":329898,"byte_end":329969,"line_start":65,"line_end":65,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3079},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":331307,"byte_end":331313,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::stream::try_stream::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":3082},{"krate":0,"index":3083}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`map_err`](super::TryStreamExt::map_err) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":331178,"byte_end":331246,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":331247,"byte_end":331295,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3095},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":331954,"byte_end":331961,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MapErr<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":331847,"byte_end":331920,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":331925,"byte_end":331942,"line_start":39,"line_end":39,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3096},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":332271,"byte_end":332278,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MapErr<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":332010,"byte_end":332077,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":332082,"byte_end":332113,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":332118,"byte_end":332121,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":332126,"byte_end":332199,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":332204,"byte_end":332259,"line_start":48,"line_end":48,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3097},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":332607,"byte_end":332618,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<MapErr<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":332339,"byte_end":332413,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":332418,"byte_end":332449,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":332454,"byte_end":332457,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":332462,"byte_end":332535,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":332540,"byte_end":332595,"line_start":57,"line_end":57,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3098},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":332927,"byte_end":332937,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MapErr<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":332692,"byte_end":332754,"line_start":62,"line_end":62,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":332759,"byte_end":332762,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":332767,"byte_end":332839,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":332844,"byte_end":332915,"line_start":65,"line_end":65,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3135},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":334300,"byte_end":334306,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3141}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`or_else`](super::TryStreamExt::or_else) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":334171,"byte_end":334239,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":334240,"byte_end":334288,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3160},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":335243,"byte_end":335250,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<OrElse<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":335136,"byte_end":335209,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":335214,"byte_end":335231,"line_start":49,"line_end":49,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":335560,"byte_end":335567,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OrElse<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":335299,"byte_end":335366,"line_start":54,"line_end":54,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":335371,"byte_end":335402,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":335407,"byte_end":335410,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":335415,"byte_end":335488,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":335493,"byte_end":335548,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3162},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":335896,"byte_end":335907,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<OrElse<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":335628,"byte_end":335702,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":335707,"byte_end":335738,"line_start":64,"line_end":64,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":335743,"byte_end":335746,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":335751,"byte_end":335824,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":335829,"byte_end":335884,"line_start":67,"line_end":67,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":336216,"byte_end":336226,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<OrElse<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":335981,"byte_end":336043,"line_start":72,"line_end":72,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":336048,"byte_end":336051,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":336056,"byte_end":336128,"line_start":74,"line_end":74,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":336133,"byte_end":336204,"line_start":75,"line_end":75,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6822},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_next.rs","byte_start":338383,"byte_end":338390,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":6825}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_next.rs","byte_start":338216,"byte_end":338286,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_next.rs","byte_start":338304,"byte_end":338371,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3222},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each.rs","byte_start":339463,"byte_end":339473,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":3228}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each.rs","byte_start":339305,"byte_end":339383,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each.rs","byte_start":339384,"byte_end":339451,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3265},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":341562,"byte_end":341571,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3272}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_filter`](super::TryStreamExt::try_filter)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":341423,"byte_end":341489,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"/ method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":341490,"byte_end":341501,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":341502,"byte_end":341550,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3287},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":342741,"byte_end":342748,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TryFilter<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":342634,"byte_end":342707,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":342712,"byte_end":342729,"line_start":59,"line_end":59,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3288},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":343058,"byte_end":343065,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TryFilter<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":342797,"byte_end":342864,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":342869,"byte_end":342900,"line_start":65,"line_end":65,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":342905,"byte_end":342908,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":342913,"byte_end":342986,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":342991,"byte_end":343046,"line_start":68,"line_end":68,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3289},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":343394,"byte_end":343405,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TryFilter<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":343126,"byte_end":343200,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":343205,"byte_end":343236,"line_start":74,"line_end":74,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":343241,"byte_end":343244,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":343249,"byte_end":343322,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":343327,"byte_end":343382,"line_start":77,"line_end":77,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3290},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":343714,"byte_end":343724,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TryFilter<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":343479,"byte_end":343541,"line_start":82,"line_end":82,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":343546,"byte_end":343549,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":343554,"byte_end":343626,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":343631,"byte_end":343702,"line_start":85,"line_end":85,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3327},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":346193,"byte_end":346205,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3333}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":346046,"byte_end":346120,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":346121,"byte_end":346132,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":346133,"byte_end":346181,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":347056,"byte_end":347063,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TryFilterMap<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":346949,"byte_end":347022,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":347027,"byte_end":347044,"line_start":46,"line_end":46,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":347373,"byte_end":347380,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TryFilterMap<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":347112,"byte_end":347179,"line_start":51,"line_end":51,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":347184,"byte_end":347215,"line_start":52,"line_end":52,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":347220,"byte_end":347223,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":347228,"byte_end":347301,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":347306,"byte_end":347361,"line_start":55,"line_end":55,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3350},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":347709,"byte_end":347720,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TryFilterMap<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":347441,"byte_end":347515,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":347520,"byte_end":347551,"line_start":61,"line_end":61,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":347556,"byte_end":347559,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":347564,"byte_end":347637,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":347642,"byte_end":347697,"line_start":64,"line_end":64,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":348029,"byte_end":348039,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TryFilterMap<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":347794,"byte_end":347856,"line_start":69,"line_end":69,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":347861,"byte_end":347864,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":347869,"byte_end":347941,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":347946,"byte_end":348017,"line_start":72,"line_end":72,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6864},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":350325,"byte_end":350335,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":6866},{"krate":0,"index":6867}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":350171,"byte_end":350247,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":350265,"byte_end":350313,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3391},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":350954,"byte_end":350961,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TryFlatten<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":350847,"byte_end":350920,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":350925,"byte_end":350942,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3392},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":351271,"byte_end":351278,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TryFlatten<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":351010,"byte_end":351077,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":351082,"byte_end":351113,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":351118,"byte_end":351121,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":351126,"byte_end":351199,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":351204,"byte_end":351259,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":351607,"byte_end":351618,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TryFlatten<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":351339,"byte_end":351413,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":351418,"byte_end":351449,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":351454,"byte_end":351457,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":351462,"byte_end":351535,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":351540,"byte_end":351595,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3394},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":351927,"byte_end":351937,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TryFlatten<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":351692,"byte_end":351754,"line_start":68,"line_end":68,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":351759,"byte_end":351762,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":351767,"byte_end":351839,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":351844,"byte_end":351915,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6881},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_collect.rs","byte_start":353831,"byte_end":353841,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":6884},{"krate":0,"index":6885}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_collect`](super::TryStreamExt::try_collect) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_collect.rs","byte_start":353658,"byte_end":353734,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_collect.rs","byte_start":353752,"byte_end":353819,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6895},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_concat.rs","byte_start":355384,"byte_end":355393,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":6897},{"krate":0,"index":6898}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_concat`](super::TryStreamExt::try_concat) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_concat.rs","byte_start":355213,"byte_end":355287,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_concat.rs","byte_start":355305,"byte_end":355372,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3474},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_fold.rs","byte_start":357027,"byte_end":357034,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3481},{"krate":0,"index":3482}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_fold`](super::TryStreamExt::try_fold) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_fold.rs","byte_start":356877,"byte_end":356947,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_fold.rs","byte_start":356948,"byte_end":357015,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3529},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":360551,"byte_end":360563,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":3533},{"krate":0,"index":3534},{"krate":0,"index":3535},{"krate":0,"index":3536},{"krate":0,"index":3537}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":360404,"byte_end":360478,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":360479,"byte_end":360490,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":360491,"byte_end":360539,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3556},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":362069,"byte_end":362076,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TrySkipWhile<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":361962,"byte_end":362035,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":362040,"byte_end":362057,"line_start":66,"line_end":66,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3557},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":362386,"byte_end":362393,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TrySkipWhile<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":362125,"byte_end":362192,"line_start":71,"line_end":71,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":362197,"byte_end":362228,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":362233,"byte_end":362236,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":362241,"byte_end":362314,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":362319,"byte_end":362374,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3558},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":362722,"byte_end":362733,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TrySkipWhile<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":362454,"byte_end":362528,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":362533,"byte_end":362564,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":362569,"byte_end":362572,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":362577,"byte_end":362650,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":362655,"byte_end":362710,"line_start":84,"line_end":84,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3559},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":363042,"byte_end":363052,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySkipWhile<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":362807,"byte_end":362869,"line_start":89,"line_end":89,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":362874,"byte_end":362877,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":362882,"byte_end":362954,"line_start":91,"line_end":91,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":362959,"byte_end":363030,"line_start":92,"line_end":92,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":7026},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8478668,"byte_end":8478686,"line_start":15,"line_end":15,"column_start":12,"column_end":30},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":7028},{"krate":0,"index":7029},{"krate":0,"index":7030}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"/ Stream for the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8478492,"byte_end":8478510,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"/ [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8478511,"byte_end":8478590,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8478608,"byte_end":8478656,"line_start":14,"line_end":14,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6959},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8479466,"byte_end":8479473,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TryBufferUnordered<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8479359,"byte_end":8479432,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8479437,"byte_end":8479454,"line_start":43,"line_end":43,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6960},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8479802,"byte_end":8479809,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TryBufferUnordered<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8479541,"byte_end":8479608,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8479613,"byte_end":8479644,"line_start":49,"line_end":49,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8479649,"byte_end":8479652,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8479657,"byte_end":8479730,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8479735,"byte_end":8479790,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6961},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8480153,"byte_end":8480164,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TryBufferUnordered<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8479885,"byte_end":8479959,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8479964,"byte_end":8479995,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8480000,"byte_end":8480003,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8480008,"byte_end":8480081,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8480086,"byte_end":8480141,"line_start":61,"line_end":61,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6962},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8480501,"byte_end":8480511,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TryBufferUnordered<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8480266,"byte_end":8480328,"line_start":66,"line_end":66,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8480333,"byte_end":8480336,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8480341,"byte_end":8480413,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8480418,"byte_end":8480489,"line_start":69,"line_end":69,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6991},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8482575,"byte_end":8482595,"line_start":15,"line_end":15,"column_start":12,"column_end":32},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":6995},{"krate":0,"index":6996},{"krate":0,"index":6997},{"krate":0,"index":6998}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8482387,"byte_end":8482405,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"/ [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8482406,"byte_end":8482483,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8482484,"byte_end":8482495,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8482496,"byte_end":8482563,"line_start":14,"line_end":14,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7038},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_async_read.rs","byte_start":365684,"byte_end":365697,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":7040},{"krate":0,"index":7041}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_async_read.rs","byte_start":365522,"byte_end":365606,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_async_read.rs","byte_start":365624,"byte_end":365672,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":3615},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":286717,"byte_end":286729,"line_start":108,"line_end":108,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":3616},{"krate":0,"index":3618},{"krate":0,"index":3621},{"krate":0,"index":3624},{"krate":0,"index":3627},{"krate":0,"index":3630},{"krate":0,"index":3632},{"krate":0,"index":3634},{"krate":0,"index":3635},{"krate":0,"index":3636},{"krate":0,"index":3639},{"krate":0,"index":3642},{"krate":0,"index":3646},{"krate":0,"index":3648},{"krate":0,"index":3651},{"krate":0,"index":3655},{"krate":0,"index":3656},{"krate":0,"index":3660},{"krate":0,"index":3661},{"krate":0,"index":3662},{"krate":0,"index":3663}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":286655,"byte_end":286706,"line_start":107,"line_end":107,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287271,"byte_end":287279,"line_start":126,"line_end":126,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"fn <E> (self) -> ErrInto<Self, E>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":286747,"byte_end":286821,"line_start":109,"line_end":109,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":286826,"byte_end":286852,"line_start":110,"line_end":110,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":286857,"byte_end":286860,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":286865,"byte_end":286879,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":286884,"byte_end":286887,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":286892,"byte_end":286899,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":286904,"byte_end":286945,"line_start":115,"line_end":115,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":286950,"byte_end":286996,"line_start":116,"line_end":116,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287001,"byte_end":287004,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287009,"byte_end":287029,"line_start":118,"line_end":118,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287034,"byte_end":287079,"line_start":119,"line_end":119,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287084,"byte_end":287115,"line_start":120,"line_end":120,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287120,"byte_end":287123,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287128,"byte_end":287182,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287187,"byte_end":287238,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287243,"byte_end":287251,"line_start":124,"line_end":124,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287256,"byte_end":287263,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287934,"byte_end":287940,"line_start":151,"line_end":151,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"fn <T, F> (self, f: F) -> MapOk<Self, F>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287414,"byte_end":287487,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287492,"byte_end":287523,"line_start":135,"line_end":135,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287528,"byte_end":287531,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287536,"byte_end":287550,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287555,"byte_end":287558,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287563,"byte_end":287570,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287575,"byte_end":287616,"line_start":140,"line_end":140,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287621,"byte_end":287667,"line_start":141,"line_end":141,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287672,"byte_end":287675,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287680,"byte_end":287700,"line_start":143,"line_end":143,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287705,"byte_end":287746,"line_start":144,"line_end":144,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287751,"byte_end":287782,"line_start":145,"line_end":145,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287787,"byte_end":287790,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287795,"byte_end":287848,"line_start":147,"line_end":147,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287853,"byte_end":287901,"line_start":148,"line_end":148,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287906,"byte_end":287914,"line_start":149,"line_end":149,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":287919,"byte_end":287926,"line_start":150,"line_end":150,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3621},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288605,"byte_end":288612,"line_start":176,"line_end":176,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"fn <E, F> (self, f: F) -> MapErr<Self, F>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288086,"byte_end":288157,"line_start":159,"line_end":159,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288162,"byte_end":288193,"line_start":160,"line_end":160,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288198,"byte_end":288201,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288206,"byte_end":288220,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288225,"byte_end":288228,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288233,"byte_end":288240,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288245,"byte_end":288286,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288291,"byte_end":288337,"line_start":166,"line_end":166,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288342,"byte_end":288345,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288350,"byte_end":288370,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288375,"byte_end":288416,"line_start":169,"line_end":169,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288421,"byte_end":288453,"line_start":170,"line_end":170,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288458,"byte_end":288461,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288466,"byte_end":288519,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288524,"byte_end":288572,"line_start":173,"line_end":173,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288577,"byte_end":288585,"line_start":174,"line_end":174,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288590,"byte_end":288597,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3624},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290176,"byte_end":290184,"line_start":222,"line_end":222,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"fn <Fut, F> (self, f: F) -> AndThen<Self, Fut, F>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288763,"byte_end":288839,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288844,"byte_end":288884,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288889,"byte_end":288892,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288897,"byte_end":288973,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":288978,"byte_end":289054,"line_start":188,"line_end":188,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289059,"byte_end":289132,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289137,"byte_end":289179,"line_start":190,"line_end":190,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289184,"byte_end":289187,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289192,"byte_end":289265,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289270,"byte_end":289301,"line_start":193,"line_end":193,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289306,"byte_end":289309,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289314,"byte_end":289388,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289393,"byte_end":289467,"line_start":196,"line_end":196,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289472,"byte_end":289488,"line_start":197,"line_end":197,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289493,"byte_end":289496,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289501,"byte_end":289572,"line_start":199,"line_end":199,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289577,"byte_end":289603,"line_start":200,"line_end":200,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289608,"byte_end":289611,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289616,"byte_end":289688,"line_start":202,"line_end":202,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289693,"byte_end":289742,"line_start":203,"line_end":203,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289747,"byte_end":289750,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289755,"byte_end":289769,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289774,"byte_end":289777,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289782,"byte_end":289789,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289794,"byte_end":289825,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289830,"byte_end":289854,"line_start":209,"line_end":209,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289859,"byte_end":289897,"line_start":210,"line_end":210,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289902,"byte_end":289905,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289910,"byte_end":289966,"line_start":212,"line_end":212,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289971,"byte_end":289974,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":289979,"byte_end":290014,"line_start":214,"line_end":214,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290019,"byte_end":290058,"line_start":215,"line_end":215,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290063,"byte_end":290087,"line_start":216,"line_end":216,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290092,"byte_end":290108,"line_start":217,"line_end":217,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290113,"byte_end":290129,"line_start":218,"line_end":218,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290134,"byte_end":290144,"line_start":219,"line_end":219,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290149,"byte_end":290156,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290161,"byte_end":290168,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3627},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":291287,"byte_end":291294,"line_start":248,"line_end":248,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"fn <Fut, F> (self, f: F) -> OrElse<Self, Fut, F>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290388,"byte_end":290453,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290458,"byte_end":290507,"line_start":232,"line_end":232,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290512,"byte_end":290515,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290520,"byte_end":290599,"line_start":234,"line_end":234,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290604,"byte_end":290678,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290683,"byte_end":290759,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290764,"byte_end":290809,"line_start":237,"line_end":237,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290814,"byte_end":290817,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290822,"byte_end":290897,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290902,"byte_end":290942,"line_start":240,"line_end":240,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290947,"byte_end":290950,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":290955,"byte_end":291064,"line_start":242,"line_end":242,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":291069,"byte_end":291143,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":291148,"byte_end":291164,"line_start":244,"line_end":244,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":291169,"byte_end":291172,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":291177,"byte_end":291248,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":291253,"byte_end":291279,"line_start":247,"line_end":247,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":291796,"byte_end":291806,"line_start":263,"line_end":263,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"fn <F> (self, f: F) -> InspectOk<Self, F>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":291493,"byte_end":291567,"line_start":257,"line_end":257,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":291572,"byte_end":291582,"line_start":258,"line_end":258,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":291587,"byte_end":291590,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":291595,"byte_end":291665,"line_start":260,"line_end":260,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":291670,"byte_end":291746,"line_start":261,"line_end":261,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":291751,"byte_end":291788,"line_start":262,"line_end":262,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292244,"byte_end":292255,"line_start":276,"line_end":276,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"fn <F> (self, f: F) -> InspectErr<Self, F>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":291953,"byte_end":292032,"line_start":271,"line_end":271,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292037,"byte_end":292040,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292045,"byte_end":292115,"line_start":273,"line_end":273,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292120,"byte_end":292194,"line_start":274,"line_end":274,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292199,"byte_end":292236,"line_start":275,"line_end":275,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293125,"byte_end":293136,"line_start":305,"line_end":305,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"fn (self) -> IntoStream<Self>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292407,"byte_end":292460,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292465,"byte_end":292509,"line_start":285,"line_end":285,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292514,"byte_end":292517,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292522,"byte_end":292571,"line_start":287,"line_end":287,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292576,"byte_end":292649,"line_start":288,"line_end":288,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292654,"byte_end":292674,"line_start":289,"line_end":289,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292679,"byte_end":292682,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292687,"byte_end":292701,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292706,"byte_end":292709,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292714,"byte_end":292721,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292726,"byte_end":292785,"line_start":294,"line_end":294,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292790,"byte_end":292793,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292798,"byte_end":292817,"line_start":296,"line_end":296,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292822,"byte_end":292840,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292845,"byte_end":292917,"line_start":298,"line_end":298,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292922,"byte_end":292952,"line_start":299,"line_end":299,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292957,"byte_end":292964,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":292969,"byte_end":293043,"line_start":301,"line_end":301,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293048,"byte_end":293051,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293056,"byte_end":293105,"line_start":303,"line_end":303,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293110,"byte_end":293117,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3635},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293980,"byte_end":293988,"line_start":332,"line_end":332,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"fn (&mut self) -> TryNext<'_, Self>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293241,"byte_end":293315,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293320,"byte_end":293394,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293399,"byte_end":293411,"line_start":314,"line_end":314,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293416,"byte_end":293419,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293424,"byte_end":293491,"line_start":316,"line_end":316,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293496,"byte_end":293568,"line_start":317,"line_end":317,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293573,"byte_end":293612,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293617,"byte_end":293620,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293625,"byte_end":293639,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293644,"byte_end":293647,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293652,"byte_end":293659,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293664,"byte_end":293705,"line_start":323,"line_end":323,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293710,"byte_end":293756,"line_start":324,"line_end":324,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293761,"byte_end":293764,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293769,"byte_end":293826,"line_start":326,"line_end":326,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293831,"byte_end":293834,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293839,"byte_end":293893,"line_start":328,"line_end":328,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293898,"byte_end":293947,"line_start":329,"line_end":329,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293952,"byte_end":293960,"line_start":330,"line_end":330,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":293965,"byte_end":293972,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295281,"byte_end":295293,"line_start":372,"line_end":372,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"fn <Fut, F> (self, f: F) -> TryForEach<Self, Fut, F>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294096,"byte_end":294165,"line_start":339,"line_end":339,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294170,"byte_end":294226,"line_start":340,"line_end":340,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294231,"byte_end":294234,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294239,"byte_end":294314,"line_start":342,"line_end":342,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294319,"byte_end":294389,"line_start":343,"line_end":343,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294394,"byte_end":294432,"line_start":344,"line_end":344,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294437,"byte_end":294440,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294445,"byte_end":294523,"line_start":346,"line_end":346,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294528,"byte_end":294588,"line_start":347,"line_end":347,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294593,"byte_end":294650,"line_start":348,"line_end":348,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294655,"byte_end":294722,"line_start":349,"line_end":349,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294727,"byte_end":294757,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294762,"byte_end":294765,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294770,"byte_end":294784,"line_start":352,"line_end":352,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294789,"byte_end":294792,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294797,"byte_end":294804,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294809,"byte_end":294850,"line_start":355,"line_end":355,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294855,"byte_end":294879,"line_start":356,"line_end":356,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294884,"byte_end":294930,"line_start":357,"line_end":357,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294935,"byte_end":294938,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294943,"byte_end":294964,"line_start":359,"line_end":359,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294969,"byte_end":294972,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294977,"byte_end":294982,"line_start":361,"line_end":361,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":294987,"byte_end":295048,"line_start":362,"line_end":362,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295053,"byte_end":295075,"line_start":363,"line_end":363,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295080,"byte_end":295144,"line_start":364,"line_end":364,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295149,"byte_end":295160,"line_start":365,"line_end":365,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295165,"byte_end":295204,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295209,"byte_end":295214,"line_start":367,"line_end":367,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295219,"byte_end":295222,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295227,"byte_end":295248,"line_start":369,"line_end":369,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295253,"byte_end":295261,"line_start":370,"line_end":370,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295266,"byte_end":295273,"line_start":371,"line_end":371,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3639},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":296253,"byte_end":296267,"line_start":401,"line_end":401,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"fn <Fut, F> (self, f: F) -> TrySkipWhile<Self, Fut, F>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295512,"byte_end":295586,"line_start":381,"line_end":381,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295591,"byte_end":295614,"line_start":382,"line_end":382,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295619,"byte_end":295622,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function is similar to [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295627,"byte_end":295722,"line_start":384,"line_end":384,"column_start":5,"column_end":100}},{"value":"/ but exits early if an error occurs.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295727,"byte_end":295766,"line_start":385,"line_end":385,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295771,"byte_end":295774,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295779,"byte_end":295793,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295798,"byte_end":295801,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295806,"byte_end":295813,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295818,"byte_end":295859,"line_start":390,"line_end":390,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295864,"byte_end":295888,"line_start":391,"line_end":391,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295893,"byte_end":295939,"line_start":392,"line_end":392,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295944,"byte_end":295947,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":295952,"byte_end":296021,"line_start":394,"line_end":394,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":296026,"byte_end":296096,"line_start":395,"line_end":395,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":296101,"byte_end":296104,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":296109,"byte_end":296176,"line_start":397,"line_end":397,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":296181,"byte_end":296220,"line_start":398,"line_end":398,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":296225,"byte_end":296233,"line_start":399,"line_end":399,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":296238,"byte_end":296245,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3642},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":298175,"byte_end":298198,"line_start":453,"line_end":453,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"fn <Fut, F> (self, limit: impl Into<Option<usize>>, f: F) -> TryForEachConcurrent<Self, Fut, F>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":296493,"byte_end":296575,"line_start":410,"line_end":410,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":296580,"byte_end":296654,"line_start":411,"line_end":411,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":296659,"byte_end":296709,"line_start":412,"line_end":412,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":296714,"byte_end":296717,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":296722,"byte_end":296744,"line_start":414,"line_end":414,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":296749,"byte_end":296835,"line_start":415,"line_end":415,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":296840,"byte_end":296925,"line_start":416,"line_end":416,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":296930,"byte_end":296958,"line_start":417,"line_end":417,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":296963,"byte_end":296966,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":296971,"byte_end":297046,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297051,"byte_end":297108,"line_start":420,"line_end":420,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297113,"byte_end":297116,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297121,"byte_end":297135,"line_start":422,"line_end":422,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297140,"byte_end":297143,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297148,"byte_end":297155,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297160,"byte_end":297201,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297206,"byte_end":297240,"line_start":426,"line_end":426,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297245,"byte_end":297302,"line_start":427,"line_end":427,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297307,"byte_end":297310,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297315,"byte_end":297355,"line_start":429,"line_end":429,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297360,"byte_end":297400,"line_start":430,"line_end":430,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297405,"byte_end":297446,"line_start":431,"line_end":431,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297451,"byte_end":297454,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297459,"byte_end":297510,"line_start":433,"line_end":433,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297515,"byte_end":297568,"line_start":434,"line_end":434,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297573,"byte_end":297595,"line_start":435,"line_end":435,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297600,"byte_end":297625,"line_start":436,"line_end":436,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297630,"byte_end":297692,"line_start":437,"line_end":437,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297697,"byte_end":297712,"line_start":438,"line_end":438,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297717,"byte_end":297726,"line_start":439,"line_end":439,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297731,"byte_end":297737,"line_start":440,"line_end":440,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297742,"byte_end":297745,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297750,"byte_end":297776,"line_start":442,"line_end":442,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297781,"byte_end":297848,"line_start":443,"line_end":443,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297853,"byte_end":297867,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297872,"byte_end":297875,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297880,"byte_end":297941,"line_start":446,"line_end":446,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297946,"byte_end":297974,"line_start":447,"line_end":447,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":297979,"byte_end":298029,"line_start":448,"line_end":448,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":298034,"byte_end":298042,"line_start":449,"line_end":449,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":298047,"byte_end":298054,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":298142,"byte_end":298167,"line_start":452,"line_end":452,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3646},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299555,"byte_end":299566,"line_start":496,"line_end":496,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"fn <C> (self) -> TryCollect<Self, C>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":298516,"byte_end":298568,"line_start":466,"line_end":466,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":298573,"byte_end":298640,"line_start":467,"line_end":467,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":298645,"byte_end":298648,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":298653,"byte_end":298727,"line_start":469,"line_end":469,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":298732,"byte_end":298813,"line_start":470,"line_end":470,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":298818,"byte_end":298888,"line_start":471,"line_end":471,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":298893,"byte_end":298896,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":298901,"byte_end":298969,"line_start":473,"line_end":473,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":298974,"byte_end":298977,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":298982,"byte_end":298996,"line_start":475,"line_end":475,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299001,"byte_end":299004,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299009,"byte_end":299016,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299021,"byte_end":299062,"line_start":478,"line_end":478,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299067,"byte_end":299098,"line_start":479,"line_end":479,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299103,"byte_end":299141,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299146,"byte_end":299166,"line_start":481,"line_end":481,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299171,"byte_end":299174,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299179,"byte_end":299216,"line_start":483,"line_end":483,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299221,"byte_end":299224,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299229,"byte_end":299256,"line_start":485,"line_end":485,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299261,"byte_end":299285,"line_start":486,"line_end":486,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299290,"byte_end":299336,"line_start":487,"line_end":487,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299341,"byte_end":299350,"line_start":488,"line_end":488,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299355,"byte_end":299398,"line_start":489,"line_end":489,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299403,"byte_end":299410,"line_start":490,"line_end":490,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299415,"byte_end":299418,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299423,"byte_end":299486,"line_start":492,"line_end":492,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299491,"byte_end":299522,"line_start":493,"line_end":493,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299527,"byte_end":299535,"line_start":494,"line_end":494,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299540,"byte_end":299547,"line_start":495,"line_end":495,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300993,"byte_end":301003,"line_start":533,"line_end":533,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"fn <Fut, F> (self, f: F) -> TryFilter<Self, Fut, F>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299705,"byte_end":299778,"line_start":503,"line_end":503,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299783,"byte_end":299817,"line_start":504,"line_end":504,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299822,"byte_end":299825,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299830,"byte_end":299905,"line_start":506,"line_end":506,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299910,"byte_end":299985,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":299990,"byte_end":300063,"line_start":508,"line_end":508,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300068,"byte_end":300139,"line_start":509,"line_end":509,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300144,"byte_end":300194,"line_start":510,"line_end":510,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300199,"byte_end":300202,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300207,"byte_end":300278,"line_start":512,"line_end":512,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300283,"byte_end":300286,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300291,"byte_end":300367,"line_start":514,"line_end":514,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300372,"byte_end":300442,"line_start":515,"line_end":515,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300447,"byte_end":300472,"line_start":516,"line_end":516,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300477,"byte_end":300480,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300485,"byte_end":300499,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300504,"byte_end":300511,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300516,"byte_end":300557,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300562,"byte_end":300586,"line_start":521,"line_end":521,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300591,"byte_end":300648,"line_start":522,"line_end":522,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300653,"byte_end":300656,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300661,"byte_end":300741,"line_start":524,"line_end":524,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300746,"byte_end":300789,"line_start":525,"line_end":525,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300794,"byte_end":300827,"line_start":526,"line_end":526,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300832,"byte_end":300839,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300844,"byte_end":300847,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300852,"byte_end":300900,"line_start":529,"line_end":529,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300905,"byte_end":300960,"line_start":530,"line_end":530,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300965,"byte_end":300973,"line_start":531,"line_end":531,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":300978,"byte_end":300985,"line_start":532,"line_end":532,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302579,"byte_end":302593,"line_start":574,"line_end":574,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"fn <Fut, F, T> (self, f: F) -> TryFilterMap<Self, Fut, F>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":301203,"byte_end":301265,"line_start":542,"line_end":542,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":301270,"byte_end":301338,"line_start":543,"line_end":543,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":301343,"byte_end":301377,"line_start":544,"line_end":544,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":301382,"byte_end":301385,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":301390,"byte_end":301465,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":301470,"byte_end":301545,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":301550,"byte_end":301626,"line_start":548,"line_end":548,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":301631,"byte_end":301696,"line_start":549,"line_end":549,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":301701,"byte_end":301704,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":301709,"byte_end":301780,"line_start":551,"line_end":551,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":301785,"byte_end":301788,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":301793,"byte_end":301869,"line_start":553,"line_end":553,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":301874,"byte_end":301948,"line_start":554,"line_end":554,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":301953,"byte_end":301978,"line_start":555,"line_end":555,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":301983,"byte_end":301986,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":301991,"byte_end":302005,"line_start":557,"line_end":557,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302010,"byte_end":302017,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302022,"byte_end":302063,"line_start":559,"line_end":559,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302068,"byte_end":302125,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302130,"byte_end":302155,"line_start":561,"line_end":561,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302160,"byte_end":302163,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302168,"byte_end":302238,"line_start":563,"line_end":563,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302243,"byte_end":302298,"line_start":564,"line_end":564,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302303,"byte_end":302365,"line_start":565,"line_end":565,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302370,"byte_end":302385,"line_start":566,"line_end":566,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302390,"byte_end":302397,"line_start":567,"line_end":567,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302402,"byte_end":302405,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302410,"byte_end":302431,"line_start":569,"line_end":569,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302436,"byte_end":302485,"line_start":570,"line_end":570,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302490,"byte_end":302546,"line_start":571,"line_end":571,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302551,"byte_end":302559,"line_start":572,"line_end":572,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302564,"byte_end":302571,"line_start":573,"line_end":573,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3655},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":304241,"byte_end":304252,"line_start":621,"line_end":621,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"fn (self) -> TryFlatten<Self>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302826,"byte_end":302891,"line_start":583,"line_end":583,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302896,"byte_end":302899,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302904,"byte_end":302977,"line_start":585,"line_end":585,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":302982,"byte_end":303055,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303060,"byte_end":303133,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303138,"byte_end":303208,"line_start":588,"line_end":588,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303213,"byte_end":303216,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303221,"byte_end":303235,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303240,"byte_end":303243,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303248,"byte_end":303255,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303260,"byte_end":303301,"line_start":593,"line_end":593,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303306,"byte_end":303337,"line_start":594,"line_end":594,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303342,"byte_end":303393,"line_start":595,"line_end":595,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303398,"byte_end":303418,"line_start":596,"line_end":596,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303423,"byte_end":303426,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303431,"byte_end":303470,"line_start":598,"line_end":598,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303475,"byte_end":303514,"line_start":599,"line_end":599,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303519,"byte_end":303558,"line_start":600,"line_end":600,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303563,"byte_end":303566,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303571,"byte_end":303598,"line_start":602,"line_end":602,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303603,"byte_end":303646,"line_start":603,"line_end":603,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303651,"byte_end":303658,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303663,"byte_end":303690,"line_start":605,"line_end":605,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303695,"byte_end":303738,"line_start":606,"line_end":606,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303743,"byte_end":303787,"line_start":607,"line_end":607,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303792,"byte_end":303799,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303804,"byte_end":303831,"line_start":609,"line_end":609,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303836,"byte_end":303881,"line_start":610,"line_end":610,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303886,"byte_end":303931,"line_start":611,"line_end":611,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303936,"byte_end":303980,"line_start":612,"line_end":612,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303985,"byte_end":303992,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":303997,"byte_end":304000,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":304005,"byte_end":304044,"line_start":615,"line_end":615,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":304049,"byte_end":304098,"line_start":616,"line_end":616,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":304103,"byte_end":304152,"line_start":617,"line_end":617,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":304157,"byte_end":304207,"line_start":618,"line_end":618,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":304212,"byte_end":304221,"line_start":619,"line_end":619,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":304226,"byte_end":304233,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305732,"byte_end":305740,"line_start":658,"line_end":658,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"fn <T, Fut, F> (self, init: T, f: F) -> TryFold<Self, Fut, T, F>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":304445,"byte_end":304515,"line_start":630,"line_end":630,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":304520,"byte_end":304580,"line_start":631,"line_end":631,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":304585,"byte_end":304588,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":304593,"byte_end":304663,"line_start":633,"line_end":633,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":304668,"byte_end":304744,"line_start":634,"line_end":634,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":304749,"byte_end":304825,"line_start":635,"line_end":635,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":304830,"byte_end":304900,"line_start":636,"line_end":636,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":304905,"byte_end":304931,"line_start":637,"line_end":637,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":304936,"byte_end":304939,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":304944,"byte_end":305024,"line_start":639,"line_end":639,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305029,"byte_end":305098,"line_start":640,"line_end":640,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305103,"byte_end":305124,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305129,"byte_end":305132,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305137,"byte_end":305151,"line_start":643,"line_end":643,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305156,"byte_end":305159,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305164,"byte_end":305171,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305176,"byte_end":305217,"line_start":646,"line_end":646,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305222,"byte_end":305268,"line_start":647,"line_end":647,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305273,"byte_end":305276,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305281,"byte_end":305350,"line_start":649,"line_end":649,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305355,"byte_end":305432,"line_start":650,"line_end":650,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305437,"byte_end":305470,"line_start":651,"line_end":651,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305475,"byte_end":305478,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305483,"byte_end":305569,"line_start":653,"line_end":653,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305574,"byte_end":305660,"line_start":654,"line_end":654,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305665,"byte_end":305699,"line_start":655,"line_end":655,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305704,"byte_end":305712,"line_start":656,"line_end":656,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305717,"byte_end":305724,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3660},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307222,"byte_end":307232,"line_start":701,"line_end":701,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"fn (self) -> TryConcat<Self>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":305976,"byte_end":306038,"line_start":667,"line_end":667,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306043,"byte_end":306118,"line_start":668,"line_end":668,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306123,"byte_end":306126,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306131,"byte_end":306202,"line_start":670,"line_end":670,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306207,"byte_end":306283,"line_start":671,"line_end":671,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306288,"byte_end":306327,"line_start":672,"line_end":672,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306332,"byte_end":306335,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306340,"byte_end":306426,"line_start":674,"line_end":674,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306431,"byte_end":306434,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306439,"byte_end":306523,"line_start":676,"line_end":676,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306528,"byte_end":306584,"line_start":677,"line_end":677,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306589,"byte_end":306592,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306597,"byte_end":306611,"line_start":679,"line_end":679,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306616,"byte_end":306619,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306624,"byte_end":306631,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306636,"byte_end":306677,"line_start":682,"line_end":682,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306682,"byte_end":306713,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306718,"byte_end":306756,"line_start":684,"line_end":684,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306761,"byte_end":306781,"line_start":685,"line_end":685,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306786,"byte_end":306789,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306794,"byte_end":306855,"line_start":687,"line_end":687,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306860,"byte_end":306863,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306868,"byte_end":306895,"line_start":689,"line_end":689,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306900,"byte_end":306931,"line_start":690,"line_end":690,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306936,"byte_end":306962,"line_start":691,"line_end":691,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":306967,"byte_end":307037,"line_start":692,"line_end":692,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307042,"byte_end":307051,"line_start":693,"line_end":693,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307056,"byte_end":307063,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307068,"byte_end":307071,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307076,"byte_end":307115,"line_start":696,"line_end":696,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307120,"byte_end":307123,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307128,"byte_end":307188,"line_start":698,"line_end":698,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307193,"byte_end":307202,"line_start":699,"line_end":699,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307207,"byte_end":307214,"line_start":700,"line_end":700,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3661},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309935,"byte_end":309955,"line_start":768,"line_end":768,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"fn (self, n: usize) -> TryBufferUnordered<Self>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307435,"byte_end":307501,"line_start":709,"line_end":709,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307506,"byte_end":307509,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307514,"byte_end":307619,"line_start":711,"line_end":711,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307624,"byte_end":307667,"line_start":712,"line_end":712,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307672,"byte_end":307675,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307680,"byte_end":307748,"line_start":714,"line_end":714,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307753,"byte_end":307826,"line_start":715,"line_end":715,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307831,"byte_end":307887,"line_start":716,"line_end":716,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307892,"byte_end":307895,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307900,"byte_end":307975,"line_start":718,"line_end":718,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":307980,"byte_end":308053,"line_start":719,"line_end":719,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308058,"byte_end":308123,"line_start":720,"line_end":720,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308128,"byte_end":308131,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308136,"byte_end":308211,"line_start":722,"line_end":722,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308216,"byte_end":308273,"line_start":723,"line_end":723,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308278,"byte_end":308281,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308286,"byte_end":308300,"line_start":725,"line_end":725,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308305,"byte_end":308308,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308313,"byte_end":308365,"line_start":727,"line_end":727,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308370,"byte_end":308377,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308382,"byte_end":308423,"line_start":729,"line_end":729,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308428,"byte_end":308462,"line_start":730,"line_end":730,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308467,"byte_end":308524,"line_start":731,"line_end":731,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308529,"byte_end":308532,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308537,"byte_end":308587,"line_start":733,"line_end":733,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308592,"byte_end":308642,"line_start":734,"line_end":734,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308647,"byte_end":308650,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308655,"byte_end":308730,"line_start":736,"line_end":736,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308735,"byte_end":308738,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308743,"byte_end":308809,"line_start":738,"line_end":738,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308814,"byte_end":308817,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308822,"byte_end":308847,"line_start":740,"line_end":740,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308852,"byte_end":308906,"line_start":741,"line_end":741,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308911,"byte_end":308914,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308919,"byte_end":308944,"line_start":743,"line_end":743,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":308949,"byte_end":309003,"line_start":744,"line_end":744,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309008,"byte_end":309011,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309016,"byte_end":309060,"line_start":746,"line_end":746,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309065,"byte_end":309101,"line_start":747,"line_end":747,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309106,"byte_end":309113,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309118,"byte_end":309121,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309126,"byte_end":309186,"line_start":750,"line_end":750,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309191,"byte_end":309198,"line_start":751,"line_end":751,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309203,"byte_end":309244,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309249,"byte_end":309280,"line_start":753,"line_end":753,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309285,"byte_end":309336,"line_start":754,"line_end":754,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309341,"byte_end":309344,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309349,"byte_end":309403,"line_start":756,"line_end":756,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309408,"byte_end":309474,"line_start":757,"line_end":757,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309479,"byte_end":309482,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309487,"byte_end":309536,"line_start":759,"line_end":759,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309541,"byte_end":309595,"line_start":760,"line_end":760,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309600,"byte_end":309603,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309608,"byte_end":309661,"line_start":762,"line_end":762,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309666,"byte_end":309738,"line_start":763,"line_end":763,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309743,"byte_end":309802,"line_start":764,"line_end":764,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309807,"byte_end":309814,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":309902,"byte_end":309927,"line_start":767,"line_end":767,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3662},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":310331,"byte_end":310350,"line_start":780,"line_end":780,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<Result<Self::Ok, Self::Error>>>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":310223,"byte_end":310301,"line_start":778,"line_end":778,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":310306,"byte_end":310323,"line_start":779,"line_end":779,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3663},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312540,"byte_end":312555,"line_start":844,"line_end":844,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"fn (self) -> IntoAsyncRead<Self>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":311368,"byte_end":311450,"line_start":817,"line_end":817,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":311455,"byte_end":311458,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_async_read` moves the stream, the [`Stream`](futures_core::stream::Stream) type must be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":311463,"byte_end":311578,"line_start":819,"line_end":819,"column_start":5,"column_end":120}},{"value":"/ [`Unpin`]. If you want to use `into_async_read` with a [`!Unpin`](Unpin) stream, you'll","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":311583,"byte_end":311674,"line_start":820,"line_end":820,"column_start":5,"column_end":96}},{"value":"/ first have to pin the stream. This can be done by boxing the stream using [`Box::pin`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":311679,"byte_end":311769,"line_start":821,"line_end":821,"column_start":5,"column_end":95}},{"value":"/ or pinning it to the stack using the `pin_mut!` macro from the `pin_utils` crate.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":311774,"byte_end":311859,"line_start":822,"line_end":822,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":311864,"byte_end":311867,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":311872,"byte_end":311936,"line_start":824,"line_end":824,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":311941,"byte_end":311998,"line_start":825,"line_end":825,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312003,"byte_end":312006,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312011,"byte_end":312025,"line_start":827,"line_end":827,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312030,"byte_end":312033,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312038,"byte_end":312045,"line_start":829,"line_end":829,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312050,"byte_end":312091,"line_start":830,"line_end":830,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312096,"byte_end":312142,"line_start":831,"line_end":831,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312147,"byte_end":312181,"line_start":832,"line_end":832,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312186,"byte_end":312189,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(vec![1, 2, 3, 4, 5])]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312194,"byte_end":312255,"line_start":834,"line_end":834,"column_start":5,"column_end":66}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312260,"byte_end":312306,"line_start":835,"line_end":835,"column_start":5,"column_end":51}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312311,"byte_end":312340,"line_start":836,"line_end":836,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312345,"byte_end":312348,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ assert!(reader.read_to_end(&mut buf).await.is_ok());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312353,"byte_end":312409,"line_start":838,"line_end":838,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312414,"byte_end":312452,"line_start":839,"line_end":839,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312457,"byte_end":312465,"line_start":840,"line_end":840,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312470,"byte_end":312477,"line_start":841,"line_end":841,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312482,"byte_end":312504,"line_start":842,"line_end":842,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":312509,"byte_end":312532,"line_start":843,"line_end":843,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7057},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":370984,"byte_end":370988,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":7059}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":370869,"byte_end":370906,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":370924,"byte_end":370972,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3695},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371506,"byte_end":371510,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn <I> (i: I) -> Iter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371040,"byte_end":371104,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371105,"byte_end":371133,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371134,"byte_end":371137,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371138,"byte_end":371211,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371212,"byte_end":371267,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371268,"byte_end":371271,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371272,"byte_end":371279,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371280,"byte_end":371321,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371322,"byte_end":371365,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371366,"byte_end":371369,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371370,"byte_end":371414,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371415,"byte_end":371480,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371481,"byte_end":371490,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371491,"byte_end":371498,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7063},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372152,"byte_end":372158,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":7065}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372035,"byte_end":372074,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372092,"byte_end":372140,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3713},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372682,"byte_end":372688,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn <T> (item: T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372180,"byte_end":372240,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372241,"byte_end":372244,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372245,"byte_end":372312,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372313,"byte_end":372385,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372386,"byte_end":372443,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372444,"byte_end":372447,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372448,"byte_end":372455,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372456,"byte_end":372497,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372498,"byte_end":372541,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372542,"byte_end":372545,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372546,"byte_end":372581,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372582,"byte_end":372656,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372657,"byte_end":372666,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372667,"byte_end":372674,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7069},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/empty.rs","byte_start":373473,"byte_end":373478,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":7071}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/empty.rs","byte_start":373357,"byte_end":373395,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/empty.rs","byte_start":373413,"byte_end":373461,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3737},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/empty.rs","byte_start":373646,"byte_end":373651,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn <T> () -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/empty.rs","byte_start":373516,"byte_end":373564,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/empty.rs","byte_start":373565,"byte_end":373568,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/empty.rs","byte_start":373569,"byte_end":373638,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":3762},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374585,"byte_end":374589,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn <Fut> (future: Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374278,"byte_end":374319,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374320,"byte_end":374323,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374324,"byte_end":374331,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374332,"byte_end":374373,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374374,"byte_end":374417,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374418,"byte_end":374421,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374422,"byte_end":374466,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374467,"byte_end":374522,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374523,"byte_end":374559,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374560,"byte_end":374569,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374570,"byte_end":374577,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7075},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374857,"byte_end":374861,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":7077}],"decl_id":null,"docs":" A stream which emits single element and then EOF.","sig":null,"attributes":[{"value":"/ A stream which emits single element and then EOF.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374668,"byte_end":374721,"line_start":22,"line_end":22,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374722,"byte_end":374725,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This stream will never block and is always ready.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374726,"byte_end":374779,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374797,"byte_end":374845,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":7084},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/pending.rs","byte_start":375957,"byte_end":375964,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":7086}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/pending.rs","byte_start":375837,"byte_end":375879,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/pending.rs","byte_start":375897,"byte_end":375945,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3788},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/pending.rs","byte_start":376140,"byte_end":376147,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/pending.rs","byte_start":376008,"byte_end":376062,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/pending.rs","byte_start":376063,"byte_end":376066,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/pending.rs","byte_start":376067,"byte_end":376132,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3810},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":376853,"byte_end":376859,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":3812}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":376752,"byte_end":376792,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":376793,"byte_end":376841,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3818},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377547,"byte_end":377554,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"fn <T, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377059,"byte_end":377132,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377133,"byte_end":377136,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377137,"byte_end":377196,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377197,"byte_end":377200,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377201,"byte_end":377215,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377216,"byte_end":377219,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377220,"byte_end":377227,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377228,"byte_end":377261,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377262,"byte_end":377290,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377291,"byte_end":377294,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377295,"byte_end":377324,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377325,"byte_end":377328,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377329,"byte_end":377393,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377394,"byte_end":377447,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377448,"byte_end":377469,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377470,"byte_end":377523,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377524,"byte_end":377531,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377532,"byte_end":377539,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7090},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":378159,"byte_end":378165,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":7093},{"krate":0,"index":7094},{"krate":0,"index":7095}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`select()`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":378040,"byte_end":378081,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":378099,"byte_end":378147,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3843},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":378781,"byte_end":378787,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"fn <St1, St2> (stream1: St1, stream2: St2) -> Select<St1, St2>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":378305,"byte_end":378373,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":378374,"byte_end":378450,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":378451,"byte_end":378499,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":378500,"byte_end":378503,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":378504,"byte_end":378578,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":378579,"byte_end":378648,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":378649,"byte_end":378676,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":378677,"byte_end":378680,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":378681,"byte_end":378752,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":378753,"byte_end":378773,"line_start":26,"line_end":26,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3849},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":379166,"byte_end":379173,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"fn (&self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":379058,"byte_end":379132,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":379137,"byte_end":379154,"line_start":40,"line_end":40,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3850},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":379529,"byte_end":379536,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"fn (&mut self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":379267,"byte_end":379335,"line_start":45,"line_end":45,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":379340,"byte_end":379371,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":379376,"byte_end":379379,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":379384,"byte_end":379457,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":379462,"byte_end":379517,"line_start":49,"line_end":49,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3851},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":379911,"byte_end":379922,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":379642,"byte_end":379717,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":379722,"byte_end":379753,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":379758,"byte_end":379761,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":379766,"byte_end":379839,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":379844,"byte_end":379899,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3852},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":380428,"byte_end":380438,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"fn (self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":380192,"byte_end":380255,"line_start":66,"line_end":66,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":380260,"byte_end":380263,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":380268,"byte_end":380340,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":380345,"byte_end":380416,"line_start":69,"line_end":69,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":3881},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383782,"byte_end":383788,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"fn <T, F, Fut, Item> (init: T, f: F) -> Unfold<T, F, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":382340,"byte_end":382410,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":382411,"byte_end":382414,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":382415,"byte_end":382484,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":382485,"byte_end":382566,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":382567,"byte_end":382598,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":382599,"byte_end":382602,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":382603,"byte_end":382682,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":382683,"byte_end":382762,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":382763,"byte_end":382817,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":382818,"byte_end":382821,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":382822,"byte_end":382902,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":382903,"byte_end":382973,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":382974,"byte_end":382996,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":382997,"byte_end":383000,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383001,"byte_end":383078,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383079,"byte_end":383151,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383152,"byte_end":383229,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383230,"byte_end":383290,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383291,"byte_end":383294,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383295,"byte_end":383308,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383309,"byte_end":383312,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383313,"byte_end":383320,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383321,"byte_end":383362,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383363,"byte_end":383406,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383407,"byte_end":383410,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383411,"byte_end":383466,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383467,"byte_end":383490,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383491,"byte_end":383530,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383531,"byte_end":383568,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383569,"byte_end":383608,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383609,"byte_end":383625,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383626,"byte_end":383642,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383643,"byte_end":383652,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383653,"byte_end":383660,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383661,"byte_end":383664,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383665,"byte_end":383717,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383718,"byte_end":383756,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383757,"byte_end":383766,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":383767,"byte_end":383774,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3886},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":384104,"byte_end":384110,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":3890},{"krate":0,"index":3891},{"krate":0,"index":3892}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`unfold`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":384004,"byte_end":384043,"line_start":58,"line_end":58,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":384044,"byte_end":384092,"line_start":59,"line_end":59,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":7144},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8490386,"byte_end":8490400,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":7146},{"krate":0,"index":7147},{"krate":0,"index":7148},{"krate":0,"index":7149}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8488320,"byte_end":8488354,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8488355,"byte_end":8488358,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8488359,"byte_end":8488438,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8488439,"byte_end":8488510,"line_start":61,"line_end":61,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8488511,"byte_end":8488587,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8488588,"byte_end":8488636,"line_start":63,"line_end":63,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8488637,"byte_end":8488640,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8488641,"byte_end":8488720,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8488721,"byte_end":8488796,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8488797,"byte_end":8488875,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8488876,"byte_end":8488956,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8488957,"byte_end":8488986,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8488987,"byte_end":8488990,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8488991,"byte_end":8489069,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8489070,"byte_end":8489144,"line_start":72,"line_end":72,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8489145,"byte_end":8489220,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8489221,"byte_end":8489296,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8489297,"byte_end":8489372,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8489373,"byte_end":8489431,"line_start":76,"line_end":76,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8489432,"byte_end":8489435,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8489436,"byte_end":8489509,"line_start":78,"line_end":78,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8489510,"byte_end":8489588,"line_start":79,"line_end":79,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8489589,"byte_end":8489647,"line_start":80,"line_end":80,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8489648,"byte_end":8489721,"line_start":81,"line_end":81,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8489722,"byte_end":8489790,"line_start":82,"line_end":82,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8489791,"byte_end":8489867,"line_start":83,"line_end":83,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8489868,"byte_end":8489936,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8489937,"byte_end":8489990,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8489991,"byte_end":8489994,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8489995,"byte_end":8490061,"line_start":87,"line_end":87,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8490062,"byte_end":8490141,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8490142,"byte_end":8490189,"line_start":89,"line_end":89,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8490190,"byte_end":8490193,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8490194,"byte_end":8490267,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8490268,"byte_end":8490325,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8490326,"byte_end":8490374,"line_start":93,"line_end":93,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7154},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8490908,"byte_end":8490911,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"fn () -> FuturesOrdered<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8490688,"byte_end":8490732,"line_start":104,"line_end":104,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8490737,"byte_end":8490740,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8490745,"byte_end":8490820,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8490825,"byte_end":8490896,"line_start":107,"line_end":107,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":7155},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8491433,"byte_end":8491436,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8491160,"byte_end":8491217,"line_start":117,"line_end":117,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8491222,"byte_end":8491225,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8491230,"byte_end":8491293,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8491298,"byte_end":8491362,"line_start":120,"line_end":120,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8491367,"byte_end":8491421,"line_start":121,"line_end":121,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7156},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8491594,"byte_end":8491602,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8491531,"byte_end":8491582,"line_start":126,"line_end":126,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7157},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8492026,"byte_end":8492030,"line_start":137,"line_end":137,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"fn (&mut self, future: Fut) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8491707,"byte_end":8491740,"line_start":131,"line_end":131,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8491745,"byte_end":8491748,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8491753,"byte_end":8491829,"line_start":133,"line_end":133,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8491834,"byte_end":8491908,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8491913,"byte_end":8491986,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8491991,"byte_end":8492014,"line_start":136,"line_end":136,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":7175},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":7176},{"krate":0,"index":7177},{"krate":0,"index":7180},{"krate":0,"index":7183},{"krate":0,"index":7189},{"krate":0,"index":7190},{"krate":0,"index":7193},{"krate":0,"index":7196},{"krate":0,"index":7197},{"krate":0,"index":7198},{"krate":0,"index":7199},{"krate":0,"index":7200},{"krate":0,"index":7201},{"krate":0,"index":7202},{"krate":0,"index":7205},{"krate":0,"index":7208},{"krate":0,"index":7214},{"krate":0,"index":7251},{"krate":0,"index":7256},{"krate":0,"index":7293},{"krate":0,"index":7294},{"krate":0,"index":7330},{"krate":0,"index":7333},{"krate":0,"index":7334},{"krate":0,"index":7339},{"krate":0,"index":7341},{"krate":0,"index":7343},{"krate":0,"index":7345},{"krate":0,"index":7347},{"krate":0,"index":7349},{"krate":0,"index":7352},{"krate":0,"index":7355},{"krate":0,"index":7367},{"krate":0,"index":7380},{"krate":0,"index":7383},{"krate":0,"index":7386},{"krate":0,"index":7391}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164535,"byte_end":164560,"line_start":86,"line_end":86,"column_start":5,"column_end":30}},{"value":"! An unbounded set of futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8494048,"byte_end":8494080,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8494081,"byte_end":8494084,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8494085,"byte_end":8494160,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8494161,"byte_end":8494218,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7442},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8514649,"byte_end":8514659,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":7445},{"krate":0,"index":7446},{"krate":0,"index":7447}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8514578,"byte_end":8514637,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":7452},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8514895,"byte_end":8514902,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8514824,"byte_end":8514883,"line_start":15,"line_end":15,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":7461},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8515044,"byte_end":8515054,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":7464},{"krate":0,"index":7465},{"krate":0,"index":7466}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8514971,"byte_end":8515032,"line_start":19,"line_end":19,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":7471},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8515292,"byte_end":8515296,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8515215,"byte_end":8515280,"line_start":27,"line_end":27,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":7334},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496470,"byte_end":8496486,"line_start":63,"line_end":63,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":7336},{"krate":0,"index":7337},{"krate":0,"index":7338}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8495375,"byte_end":8495428,"line_start":42,"line_end":42,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8495429,"byte_end":8495432,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8495433,"byte_end":8495501,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8495502,"byte_end":8495575,"line_start":45,"line_end":45,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8495576,"byte_end":8495652,"line_start":46,"line_end":46,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8495653,"byte_end":8495697,"line_start":47,"line_end":47,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8495698,"byte_end":8495701,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8495702,"byte_end":8495780,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8495781,"byte_end":8495839,"line_start":50,"line_end":50,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8495840,"byte_end":8495904,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8495905,"byte_end":8495958,"line_start":52,"line_end":52,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8495959,"byte_end":8496038,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496039,"byte_end":8496068,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496069,"byte_end":8496072,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496073,"byte_end":8496143,"line_start":56,"line_end":56,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496144,"byte_end":8496221,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496222,"byte_end":8496273,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496274,"byte_end":8496277,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496278,"byte_end":8496351,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496352,"byte_end":8496409,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496410,"byte_end":8496458,"line_start":62,"line_end":62,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7351},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8498897,"byte_end":8498900,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"fn () -> FuturesUnordered<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8498626,"byte_end":8498675,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8498680,"byte_end":8498683,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8498688,"byte_end":8498755,"line_start":117,"line_end":117,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8498760,"byte_end":8498834,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8498839,"byte_end":8498885,"line_start":119,"line_end":119,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":7357},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8500023,"byte_end":8500026,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8499885,"byte_end":8499940,"line_start":152,"line_end":152,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8499945,"byte_end":8499948,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8499953,"byte_end":8500011,"line_start":154,"line_end":154,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7358},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8500216,"byte_end":8500224,"line_start":161,"line_end":161,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8500154,"byte_end":8500204,"line_start":160,"line_end":160,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7359},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8500711,"byte_end":8500715,"line_start":172,"line_end":172,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"fn (&self, future: Fut) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8500341,"byte_end":8500372,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8500377,"byte_end":8500380,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8500385,"byte_end":8500455,"line_start":168,"line_end":168,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8500460,"byte_end":8500546,"line_start":169,"line_end":169,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8500551,"byte_end":8500627,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8500632,"byte_end":8500699,"line_start":171,"line_end":171,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7360},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8502005,"byte_end":8502009,"line_start":201,"line_end":201,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"fn (&self) -> Iter<'_, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8501923,"byte_end":8501993,"line_start":200,"line_end":200,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":7362},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8502467,"byte_end":8502475,"line_start":215,"line_end":215,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"fn (&mut self) -> IterMut<'_, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8502386,"byte_end":8502455,"line_start":214,"line_end":214,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":7363},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8502665,"byte_end":8502677,"line_start":220,"line_end":220,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"fn (self: Pin<&mut Self>) -> IterPinMut<'_, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8502584,"byte_end":8502653,"line_start":219,"line_end":219,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7411},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8524811,"byte_end":8524820,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":7413}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"/ An unbounded set of streams","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8524187,"byte_end":8524218,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8524219,"byte_end":8524222,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" provides the ability to maintain a set of streams","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8524223,"byte_end":8524294,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and drive them all to completion.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8524295,"byte_end":8524332,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8524333,"byte_end":8524336,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Streams are pushed into this set and their realized values are","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8524337,"byte_end":8524403,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ yielded as they become ready. Streams will only be polled when they","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8524404,"byte_end":8524475,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ generate notifications. This allows to coordinate a large number of streams.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8524476,"byte_end":8524556,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8524557,"byte_end":8524560,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `SelectAll` via the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8524561,"byte_end":8524622,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/ `select_all` function in the `stream` module, or you can start with an","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8524623,"byte_end":8524697,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ empty set with the `SelectAll::new` constructor.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8524698,"byte_end":8524750,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8524751,"byte_end":8524799,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7419},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525277,"byte_end":8525280,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"fn () -> SelectAll<St>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525077,"byte_end":8525116,"line_start":36,"line_end":36,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525121,"byte_end":8525124,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525129,"byte_end":8525199,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525204,"byte_end":8525265,"line_start":39,"line_end":39,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7420},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525504,"byte_end":8525507,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525366,"byte_end":8525421,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525426,"byte_end":8525429,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525434,"byte_end":8525492,"line_start":46,"line_end":46,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7421},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525623,"byte_end":8525631,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525562,"byte_end":8525611,"line_start":51,"line_end":51,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7422},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525993,"byte_end":8525997,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"fn (&mut self, stream: St) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525690,"byte_end":8525721,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525726,"byte_end":8525729,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525734,"byte_end":8525806,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525811,"byte_end":8525885,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525890,"byte_end":8525958,"line_start":60,"line_end":60,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525963,"byte_end":8525981,"line_start":61,"line_end":61,"column_start":5,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":7433},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8527773,"byte_end":8527783,"line_start":116,"line_end":116,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"fn <I> (streams: I) -> SelectAll<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8527152,"byte_end":8527226,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8527227,"byte_end":8527230,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8527231,"byte_end":8527310,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8527311,"byte_end":8527362,"line_start":107,"line_end":107,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8527363,"byte_end":8527437,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8527438,"byte_end":8527497,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8527498,"byte_end":8527501,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8527502,"byte_end":8527574,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ futures into the set as they become available.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8527575,"byte_end":8527625,"line_start":112,"line_end":112,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8527626,"byte_end":8527629,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8527630,"byte_end":8527707,"line_start":114,"line_end":114,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8527708,"byte_end":8527765,"line_start":115,"line_end":115,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":3925},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sink","qualname":"::sink","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","parent":null,"children":[{"krate":0,"index":3926},{"krate":0,"index":3927},{"krate":0,"index":3930},{"krate":0,"index":3931},{"krate":0,"index":3932},{"krate":0,"index":3953},{"krate":0,"index":3954},{"krate":0,"index":3973},{"krate":0,"index":3976},{"krate":0,"index":4013},{"krate":0,"index":4014},{"krate":0,"index":4035},{"krate":0,"index":4036},{"krate":0,"index":4076},{"krate":0,"index":4077},{"krate":0,"index":4126},{"krate":0,"index":4127},{"krate":0,"index":4147},{"krate":0,"index":4148},{"krate":0,"index":4192},{"krate":0,"index":4193},{"krate":0,"index":4270},{"krate":0,"index":4271},{"krate":0,"index":4348},{"krate":0,"index":4349},{"krate":0,"index":4392},{"krate":0,"index":4393},{"krate":0,"index":4396}],"decl_id":null,"docs":" Sinks","sig":null,"attributes":[{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3154,"byte_end":3178,"line_start":97,"line_end":97,"column_start":1,"column_end":25}},{"value":"! Sinks","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":385689,"byte_end":385698,"line_start":1,"line_end":1,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":385699,"byte_end":385702,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Sink`s,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":385703,"byte_end":385775,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"! including the `SinkExt` trait which adds methods to `Sink` types.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":385776,"byte_end":385845,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":385846,"byte_end":385849,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `sink` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":385850,"byte_end":385915,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":385916,"byte_end":385973,"line_start":7,"line_end":7,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7480},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/close.rs","byte_start":394527,"byte_end":394532,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::sink::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":7484},{"krate":0,"index":7485}],"decl_id":null,"docs":" Future for the [`close`](super::SinkExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::SinkExt::close) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/close.rs","byte_start":394371,"byte_end":394430,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/close.rs","byte_start":394448,"byte_end":394515,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7491},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":395557,"byte_end":395562,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Drain","qualname":"::sink::drain::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":7493}],"decl_id":null,"docs":" Sink for the [`drain`] function.\n","sig":null,"attributes":[{"value":"/ Sink for the [`drain`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":395445,"byte_end":395481,"line_start":7,"line_end":7,"column_start":1,"column_end":37}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":395499,"byte_end":395545,"line_start":9,"line_end":9,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":3962},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":395961,"byte_end":395966,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"drain","qualname":"::sink::drain::drain","value":"fn <T> () -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink that will just discard all items given to it.","sig":null,"attributes":[{"value":"/ Create a sink that will just discard all items given to it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":395599,"byte_end":395662,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":395663,"byte_end":395666,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Similar to [`io::Sink`](::std::io::Sink).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":395667,"byte_end":395712,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":395713,"byte_end":395716,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":395717,"byte_end":395731,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":395732,"byte_end":395735,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":395736,"byte_end":395743,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":395744,"byte_end":395785,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":395786,"byte_end":395825,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":395826,"byte_end":395829,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut drain = sink::drain();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":395830,"byte_end":395864,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ drain.send(5).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":395865,"byte_end":395890,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":395891,"byte_end":395945,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":395946,"byte_end":395953,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3987},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":397176,"byte_end":397182,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Fanout","qualname":"::sink::fanout::Fanout","value":"Fanout {  }","parent":null,"children":[{"krate":0,"index":3990},{"krate":0,"index":3991}],"decl_id":null,"docs":" Sink that clones incoming items and forwards them to two sinks at the same time.","sig":null,"attributes":[{"value":"/ Sink that clones incoming items and forwards them to two sinks at the same time.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":396876,"byte_end":396960,"line_start":7,"line_end":7,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":396961,"byte_end":396964,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Backpressure from any downstream sink propagates up, which means that this sink","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":396965,"byte_end":397048,"line_start":9,"line_end":9,"column_start":1,"column_end":84}},{"value":"/ can only process items as fast as its _slowest_ downstream sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":397049,"byte_end":397117,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":397118,"byte_end":397164,"line_start":11,"line_end":11,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3996},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":397497,"byte_end":397504,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Fanout<Si1, Si2>>::get_ref","value":"fn (&self) -> (&Si1, &Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sinks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":397439,"byte_end":397485,"line_start":25,"line_end":25,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3997},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":397635,"byte_end":397642,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fanout<Si1, Si2>>::get_mut","value":"fn (&mut self) -> (&mut Si1, &mut Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sinks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":397576,"byte_end":397623,"line_start":30,"line_end":30,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3998},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":397800,"byte_end":397811,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Fanout<Si1, Si2>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut Si1>, Pin<&mut Si2>)","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the inner sinks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":397734,"byte_end":397788,"line_start":35,"line_end":35,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3999},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":398275,"byte_end":398285,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fanout<Si1, Si2>>::into_inner","value":"fn (self) -> (Si1, Si2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sinks.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sinks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":398041,"byte_end":398102,"line_start":43,"line_end":43,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":398107,"byte_end":398110,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":398115,"byte_end":398184,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/ so care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":398189,"byte_end":398263,"line_start":46,"line_end":46,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":7503},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/flush.rs","byte_start":400519,"byte_end":400524,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::sink::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":7507},{"krate":0,"index":7508}],"decl_id":null,"docs":" Future for the [`flush`](super::SinkExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::SinkExt::flush) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/flush.rs","byte_start":400363,"byte_end":400422,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/flush.rs","byte_start":400440,"byte_end":400507,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7514},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":401845,"byte_end":401856,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"SinkErrInto","qualname":"::sink::err_into::SinkErrInto","value":"SinkErrInto {  }","parent":null,"children":[{"krate":0,"index":7518}],"decl_id":null,"docs":" Sink for the [`sink_err_into`](super::SinkExt::sink_err_into) method.\n","sig":null,"attributes":[{"value":"/ Sink for the [`sink_err_into`](super::SinkExt::sink_err_into) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":401696,"byte_end":401769,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":401787,"byte_end":401833,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4055},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":402298,"byte_end":402305,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SinkErrInto<Si, Item, E>>::get_ref","value":"fn (&self) -> &Si","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":402241,"byte_end":402286,"line_start":27,"line_end":27,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4056},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":402419,"byte_end":402426,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SinkErrInto<Si, Item, E>>::get_mut","value":"fn (&mut self) -> &mut Si","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":402361,"byte_end":402407,"line_start":32,"line_end":32,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4057},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":402555,"byte_end":402566,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SinkErrInto<Si, Item, E>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut Si>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the inner sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":402490,"byte_end":402543,"line_start":37,"line_end":37,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4058},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":402885,"byte_end":402895,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SinkErrInto<Si, Item, E>>::into_inner","value":"fn (self) -> Si","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sink.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":402652,"byte_end":402712,"line_start":42,"line_end":42,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":402717,"byte_end":402720,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":402725,"byte_end":402797,"line_start":44,"line_end":44,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":402802,"byte_end":402873,"line_start":45,"line_end":45,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":7531},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":404108,"byte_end":404118,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"SinkMapErr","qualname":"::sink::map_err::SinkMapErr","value":"SinkMapErr {  }","parent":null,"children":[{"krate":0,"index":7534},{"krate":0,"index":7535}],"decl_id":null,"docs":" Sink for the [`sink_map_err`](super::SinkExt::sink_map_err) method.\n","sig":null,"attributes":[{"value":"/ Sink for the [`sink_map_err`](super::SinkExt::sink_map_err) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":403954,"byte_end":404025,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":404050,"byte_end":404096,"line_start":9,"line_end":9,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4097},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":404482,"byte_end":404489,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SinkMapErr<Si, F>>::get_ref","value":"fn (&self) -> &Si","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":404425,"byte_end":404470,"line_start":25,"line_end":25,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4098},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":404594,"byte_end":404601,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SinkMapErr<Si, F>>::get_mut","value":"fn (&mut self) -> &mut Si","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":404536,"byte_end":404582,"line_start":30,"line_end":30,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4099},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":404725,"byte_end":404736,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SinkMapErr<Si, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut Si>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the inner sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":404660,"byte_end":404713,"line_start":35,"line_end":35,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4100},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":405041,"byte_end":405051,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SinkMapErr<Si, F>>::into_inner","value":"fn (self) -> Si","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sink.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":404808,"byte_end":404868,"line_start":40,"line_end":40,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":404873,"byte_end":404876,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":404881,"byte_end":404953,"line_start":42,"line_end":42,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":404958,"byte_end":405029,"line_start":43,"line_end":43,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":7549},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send.rs","byte_start":406978,"byte_end":406982,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Send","qualname":"::sink::send::Send","value":"Send {  }","parent":null,"children":[{"krate":0,"index":7553},{"krate":0,"index":7554}],"decl_id":null,"docs":" Future for the [`send`](super::SinkExt::send) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send`](super::SinkExt::send) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send.rs","byte_start":406824,"byte_end":406881,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send.rs","byte_start":406899,"byte_end":406966,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4163},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send_all.rs","byte_start":408669,"byte_end":408676,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"SendAll","qualname":"::sink::send_all::SendAll","value":"SendAll {  }","parent":null,"children":[{"krate":0,"index":4167},{"krate":0,"index":4168},{"krate":0,"index":4169}],"decl_id":null,"docs":" Future for the [`send_all`](super::SinkExt::send_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send_all`](super::SinkExt::send_all) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send_all.rs","byte_start":408433,"byte_end":408498,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"allow(explicit_outlives_requirements)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send_all.rs","byte_start":408499,"byte_end":408539,"line_start":10,"line_end":10,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send_all.rs","byte_start":408590,"byte_end":408657,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4206},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":411796,"byte_end":411800,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"With","qualname":"::sink::with::With","value":"With {  }","parent":null,"children":[{"krate":0,"index":4212},{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4215}],"decl_id":null,"docs":" Sink for the [`with`](super::SinkExt::with) method.\n","sig":null,"attributes":[{"value":"/ Sink for the [`with`](super::SinkExt::with) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":411682,"byte_end":411737,"line_start":10,"line_end":10,"column_start":1,"column_end":56}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":411738,"byte_end":411784,"line_start":11,"line_end":11,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4253},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":413565,"byte_end":413572,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<With<Si, Item, U, Fut, F>>::get_ref","value":"fn (&self) -> &Si","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":413508,"byte_end":413553,"line_start":87,"line_end":87,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4254},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":413677,"byte_end":413684,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<With<Si, Item, U, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut Si","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":413619,"byte_end":413665,"line_start":92,"line_end":92,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4255},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":413808,"byte_end":413819,"line_start":98,"line_end":98,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<With<Si, Item, U, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut Si>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the inner sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":413743,"byte_end":413796,"line_start":97,"line_end":97,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4256},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":414124,"byte_end":414134,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<With<Si, Item, U, Fut, F>>::into_inner","value":"fn (self) -> Si","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sink.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":413891,"byte_end":413951,"line_start":102,"line_end":102,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":413956,"byte_end":413959,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":413964,"byte_end":414036,"line_start":104,"line_end":104,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":414041,"byte_end":414112,"line_start":105,"line_end":105,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4285},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":416210,"byte_end":416221,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"WithFlatMap","qualname":"::sink::with_flat_map::WithFlatMap","value":"WithFlatMap {  }","parent":null,"children":[{"krate":0,"index":4291},{"krate":0,"index":4292},{"krate":0,"index":4293},{"krate":0,"index":4294},{"krate":0,"index":4295}],"decl_id":null,"docs":" Sink for the [`with_flat_map`](super::SinkExt::with_flat_map) method.\n","sig":null,"attributes":[{"value":"/ Sink for the [`with_flat_map`](super::SinkExt::with_flat_map) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":416078,"byte_end":416151,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":416152,"byte_end":416198,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4316},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":417382,"byte_end":417389,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<WithFlatMap<Si, Item, U, St, F>>::get_ref","value":"fn (&self) -> &Si","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":417325,"byte_end":417370,"line_start":60,"line_end":60,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4317},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":417494,"byte_end":417501,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<WithFlatMap<Si, Item, U, St, F>>::get_mut","value":"fn (&mut self) -> &mut Si","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":417436,"byte_end":417482,"line_start":65,"line_end":65,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4318},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":417625,"byte_end":417636,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<WithFlatMap<Si, Item, U, St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut Si>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the inner sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":417560,"byte_end":417613,"line_start":70,"line_end":70,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4319},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":417941,"byte_end":417951,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<WithFlatMap<Si, Item, U, St, F>>::into_inner","value":"fn (self) -> Si","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sink.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":417708,"byte_end":417768,"line_start":75,"line_end":75,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":417773,"byte_end":417776,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":417781,"byte_end":417853,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":417858,"byte_end":417929,"line_start":78,"line_end":78,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":7576},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":421246,"byte_end":421252,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::sink::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":7579},{"krate":0,"index":7580},{"krate":0,"index":7581}],"decl_id":null,"docs":" Sink for the [`buffer`](super::SinkExt::buffer) method.\n","sig":null,"attributes":[{"value":"/ Sink for the [`buffer`](super::SinkExt::buffer) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":421111,"byte_end":421170,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":421188,"byte_end":421234,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4369},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":421865,"byte_end":421872,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Buffer<Si, Item>>::get_ref","value":"fn (&self) -> &Si","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":421808,"byte_end":421853,"line_start":34,"line_end":34,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4370},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":421977,"byte_end":421984,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Buffer<Si, Item>>::get_mut","value":"fn (&mut self) -> &mut Si","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":421919,"byte_end":421965,"line_start":39,"line_end":39,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4371},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":422108,"byte_end":422119,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Buffer<Si, Item>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut Si>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the inner sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":422043,"byte_end":422096,"line_start":44,"line_end":44,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4372},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":422424,"byte_end":422434,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Buffer<Si, Item>>::into_inner","value":"fn (self) -> Si","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sink.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":422191,"byte_end":422251,"line_start":49,"line_end":49,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":422256,"byte_end":422259,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":422264,"byte_end":422336,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":422341,"byte_end":422412,"line_start":52,"line_end":52,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":4396},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386899,"byte_end":386906,"line_start":57,"line_end":57,"column_start":11,"column_end":18},"name":"SinkExt","qualname":"::sink::SinkExt","value":"SinkExt<Item>: Sink<Item>","parent":null,"children":[{"krate":0,"index":4398},{"krate":0,"index":4403},{"krate":0,"index":4407},{"krate":0,"index":4410},{"krate":0,"index":4412},{"krate":0,"index":4413},{"krate":0,"index":4414},{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4418},{"krate":0,"index":4421},{"krate":0,"index":4423}],"decl_id":null,"docs":" An extension trait for `Sink`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Sink`s that provides a variety of convenient","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386790,"byte_end":386862,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ combinator functions.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386863,"byte_end":386888,"line_start":56,"line_end":56,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4398},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":387498,"byte_end":387502,"line_start":69,"line_end":69,"column_start":8,"column_end":12},"name":"with","qualname":"::sink::SinkExt::with","value":"fn <U, Fut, F, E> (self, f: F) -> With<Self, Item, U, Fut, F>","parent":{"krate":0,"index":4396},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386931,"byte_end":386978,"line_start":58,"line_end":58,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386983,"byte_end":386986,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386991,"byte_end":387062,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":387067,"byte_end":387118,"line_start":61,"line_end":61,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":387123,"byte_end":387126,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *future*, which is then polled to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":387131,"byte_end":387206,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ completion before passing its result down to the underlying sink. If the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":387211,"byte_end":387287,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"/ future produces an error, that error is returned by the new sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":387292,"byte_end":387361,"line_start":65,"line_end":65,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":387366,"byte_end":387369,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":387374,"byte_end":387446,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":387451,"byte_end":387490,"line_start":68,"line_end":68,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4403},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388847,"byte_end":388860,"line_start":110,"line_end":110,"column_start":8,"column_end":21},"name":"with_flat_map","qualname":"::sink::SinkExt::with_flat_map","value":"fn <U, St, F> (self, f: F) -> WithFlatMap<Self, Item, U, St, F>","parent":{"krate":0,"index":4396},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":387753,"byte_end":387800,"line_start":78,"line_end":78,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":387805,"byte_end":387808,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":387813,"byte_end":387884,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":387889,"byte_end":387940,"line_start":81,"line_end":81,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":387945,"byte_end":387948,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *stream*, of which each value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":387953,"byte_end":388024,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/ is passed to the underlying sink. A new value will not be accepted until","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388029,"byte_end":388105,"line_start":84,"line_end":84,"column_start":5,"column_end":81}},{"value":"/ the stream has been drained","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388110,"byte_end":388141,"line_start":85,"line_end":85,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388146,"byte_end":388149,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388154,"byte_end":388226,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::flat_map`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388231,"byte_end":388275,"line_start":88,"line_end":88,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388280,"byte_end":388283,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388288,"byte_end":388302,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388307,"byte_end":388310,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388315,"byte_end":388322,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388327,"byte_end":388368,"line_start":93,"line_end":93,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388373,"byte_end":388404,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/ use futures::sink::SinkExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388409,"byte_end":388440,"line_start":95,"line_end":95,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388445,"byte_end":388488,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388493,"byte_end":388496,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::channel(5);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388501,"byte_end":388537,"line_start":98,"line_end":98,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388542,"byte_end":388545,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ let mut tx = tx.with_flat_map(|x| {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388550,"byte_end":388589,"line_start":100,"line_end":100,"column_start":5,"column_end":44}},{"value":"/     stream::iter(vec![Ok(42); x])","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388594,"byte_end":388631,"line_start":101,"line_end":101,"column_start":5,"column_end":42}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388636,"byte_end":388643,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388648,"byte_end":388651,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ tx.send(5).await.unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388656,"byte_end":388686,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/ drop(tx);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388691,"byte_end":388704,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ let received: Vec<i32> = rx.collect().await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388709,"byte_end":388757,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(received, vec![42, 42, 42, 42, 42]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388762,"byte_end":388813,"line_start":107,"line_end":107,"column_start":5,"column_end":56}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388818,"byte_end":388827,"line_start":108,"line_end":108,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":388832,"byte_end":388839,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4407},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":389573,"byte_end":389585,"line_start":133,"line_end":133,"column_start":8,"column_end":20},"name":"sink_map_err","qualname":"::sink::SinkExt::sink_map_err","value":"fn <E, F> (self, f: F) -> SinkMapErr<Self, F>","parent":{"krate":0,"index":4396},"children":[],"decl_id":null,"docs":" Transforms the error returned by the sink.\n","sig":null,"attributes":[{"value":"/ Transforms the error returned by the sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":389519,"byte_end":389565,"line_start":132,"line_end":132,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4410},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":389928,"byte_end":389941,"line_start":143,"line_end":143,"column_start":8,"column_end":21},"name":"sink_err_into","qualname":"::sink::SinkExt::sink_err_into","value":"fn <E> (self) -> err_into::SinkErrInto<Self, Item, E>","parent":{"krate":0,"index":4396},"children":[],"decl_id":null,"docs":" Map this sink's error to a different error type using the `Into` trait.","sig":null,"attributes":[{"value":"/ Map this sink's error to a different error type using the `Into` trait.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":389747,"byte_end":389822,"line_start":140,"line_end":140,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":389827,"byte_end":389830,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ If wanting to map errors of a `Sink + Stream`, use `.sink_err_into().err_into()`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":389835,"byte_end":389920,"line_start":142,"line_end":142,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":4412},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":390752,"byte_end":390758,"line_start":164,"line_end":164,"column_start":8,"column_end":14},"name":"buffer","qualname":"::sink::SinkExt::buffer","value":"fn (self, capacity: usize) -> Buffer<Self, Item>","parent":{"krate":0,"index":4396},"children":[],"decl_id":null,"docs":" Adds a fixed-size buffer to the current sink.","sig":null,"attributes":[{"value":"/ Adds a fixed-size buffer to the current sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":390103,"byte_end":390152,"line_start":151,"line_end":151,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":390157,"byte_end":390160,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ The resulting sink will buffer up to `capacity` items when the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":390165,"byte_end":390231,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ underlying sink is unwilling to accept additional items. Calling `flush`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":390236,"byte_end":390312,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/ on the buffered sink will attempt to both empty the buffer and complete","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":390317,"byte_end":390392,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ processing on the underlying sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":390397,"byte_end":390435,"line_start":156,"line_end":156,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":390440,"byte_end":390443,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":390448,"byte_end":390520,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":390525,"byte_end":390564,"line_start":159,"line_end":159,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":390569,"byte_end":390572,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":390577,"byte_end":390652,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":390657,"byte_end":390714,"line_start":162,"line_end":162,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":390719,"byte_end":390744,"line_start":163,"line_end":163,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4413},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":390911,"byte_end":390916,"line_start":171,"line_end":171,"column_start":8,"column_end":13},"name":"close","qualname":"::sink::SinkExt::close","value":"fn (&mut self) -> Close<'_, Self, Item>","parent":{"krate":0,"index":4396},"children":[],"decl_id":null,"docs":" Close the sink.\n","sig":null,"attributes":[{"value":"/ Close the sink.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":390884,"byte_end":390903,"line_start":170,"line_end":170,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4414},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":391201,"byte_end":391207,"line_start":181,"line_end":181,"column_start":8,"column_end":14},"name":"fanout","qualname":"::sink::SinkExt::fanout","value":"fn <Si> (self, other: Si) -> Fanout<Self, Si>","parent":{"krate":0,"index":4396},"children":[],"decl_id":null,"docs":" Fanout items to multiple sinks.","sig":null,"attributes":[{"value":"/ Fanout items to multiple sinks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":391022,"byte_end":391057,"line_start":177,"line_end":177,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":391062,"byte_end":391065,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This adapter clones each incoming item and forwards it to both this as well as","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":391070,"byte_end":391152,"line_start":179,"line_end":179,"column_start":5,"column_end":87}},{"value":"/ the other sink at the same time.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":391157,"byte_end":391193,"line_start":180,"line_end":180,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4416},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":391602,"byte_end":391607,"line_start":193,"line_end":193,"column_start":8,"column_end":13},"name":"flush","qualname":"::sink::SinkExt::flush","value":"fn (&mut self) -> Flush<'_, Self, Item>","parent":{"krate":0,"index":4396},"children":[],"decl_id":null,"docs":" Flush the sync, processing all pending items.","sig":null,"attributes":[{"value":"/ Flush the sync, processing all pending items.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":391401,"byte_end":391450,"line_start":189,"line_end":189,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":391455,"byte_end":391458,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This adapter is intended to be used when you want to stop sending to the sink","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":391463,"byte_end":391544,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/ until all current requests are processed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":391549,"byte_end":391594,"line_start":192,"line_end":192,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4417},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":392030,"byte_end":392034,"line_start":205,"line_end":205,"column_start":8,"column_end":12},"name":"send","qualname":"::sink::SinkExt::send","value":"fn (&mut self, item: Item) -> Send<'_, Self, Item>","parent":{"krate":0,"index":4396},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been fully processed","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":391713,"byte_end":391786,"line_start":199,"line_end":199,"column_start":5,"column_end":78}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":391791,"byte_end":391829,"line_start":200,"line_end":200,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":391834,"byte_end":391837,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ Note that, **because of the flushing requirement, it is usually better","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":391842,"byte_end":391916,"line_start":202,"line_end":202,"column_start":5,"column_end":79}},{"value":"/ to batch together items to send via `send_all`, rather than flushing","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":391921,"byte_end":391993,"line_start":203,"line_end":203,"column_start":5,"column_end":77}},{"value":"/ between each item.**","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":391998,"byte_end":392022,"line_start":204,"line_end":204,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4418},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":392781,"byte_end":392789,"line_start":222,"line_end":222,"column_start":8,"column_end":16},"name":"send_all","qualname":"::sink::SinkExt::send_all","value":"fn <'a, St> (&'a mut self, stream: &'a mut St) -> SendAll<'a, Self, St>","parent":{"krate":0,"index":4396},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":392156,"byte_end":392231,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":392236,"byte_end":392274,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":392279,"byte_end":392282,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":392287,"byte_end":392360,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once both the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":392365,"byte_end":392441,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ stream is exhausted, the sink has received all items, and the sink has","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":392446,"byte_end":392520,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ been flushed. Note that the sink is **not** closed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":392525,"byte_end":392580,"line_start":217,"line_end":217,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":392585,"byte_end":392588,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Doing `sink.send_all(stream)` is roughly equivalent to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":392593,"byte_end":392651,"line_start":219,"line_end":219,"column_start":5,"column_end":63}},{"value":"/ `stream.forward(sink)`. The returned future will exhaust all items from","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":392656,"byte_end":392731,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ `stream` and send them to `self`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":392736,"byte_end":392773,"line_start":221,"line_end":221,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4421},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":393318,"byte_end":393327,"line_start":237,"line_end":237,"column_start":8,"column_end":17},"name":"left_sink","qualname":"::sink::SinkExt::left_sink","value":"fn <Si2> (self) -> Either<Self, Si2>","parent":{"krate":0,"index":4396},"children":[],"decl_id":null,"docs":" Wrap this sink in an `Either` sink, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this sink in an `Either` sink, making it the left-hand variant","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":393045,"byte_end":393116,"line_start":232,"line_end":232,"column_start":5,"column_end":76}},{"value":"/ of that `Either`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":393121,"byte_end":393142,"line_start":233,"line_end":233,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":393147,"byte_end":393150,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_sink` method to write `if`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":393155,"byte_end":393233,"line_start":235,"line_end":235,"column_start":5,"column_end":83}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":393238,"byte_end":393310,"line_start":236,"line_end":236,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4423},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":393759,"byte_end":393769,"line_start":249,"line_end":249,"column_start":8,"column_end":18},"name":"right_sink","qualname":"::sink::SinkExt::right_sink","value":"fn <Si1> (self) -> Either<Si1, Self>","parent":{"krate":0,"index":4396},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":393482,"byte_end":393558,"line_start":244,"line_end":244,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":393563,"byte_end":393584,"line_start":245,"line_end":245,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":393589,"byte_end":393592,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_sink` method to write `if`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":393597,"byte_end":393674,"line_start":247,"line_end":247,"column_start":5,"column_end":82}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":393679,"byte_end":393751,"line_start":248,"line_end":248,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":4426},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":7593},{"krate":0,"index":7594},{"krate":0,"index":7595},{"krate":0,"index":7598},{"krate":0,"index":4427},{"krate":0,"index":4454},{"krate":0,"index":4457},{"krate":0,"index":4463},{"krate":0,"index":4470},{"krate":0,"index":4471}],"decl_id":null,"docs":" Task notification\n","sig":null,"attributes":[{"value":"! Task notification","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/mod.rs","byte_start":424931,"byte_end":424952,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":4444},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426142,"byte_end":426150,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":4445},{"krate":0,"index":4447}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426099,"byte_end":426131,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4445},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427147,"byte_end":427152,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"fn <Fut> (&self, future: Fut) -> Result<(), SpawnError>","parent":{"krate":0,"index":4444},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426164,"byte_end":426229,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426234,"byte_end":426249,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426254,"byte_end":426257,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426262,"byte_end":426332,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426337,"byte_end":426356,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426361,"byte_end":426364,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426369,"byte_end":426438,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426443,"byte_end":426516,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426521,"byte_end":426560,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426565,"byte_end":426568,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426573,"byte_end":426639,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426644,"byte_end":426710,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426715,"byte_end":426786,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426791,"byte_end":426847,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426852,"byte_end":426855,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426860,"byte_end":426867,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426872,"byte_end":426910,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426915,"byte_end":426947,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426952,"byte_end":426955,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426960,"byte_end":427006,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427011,"byte_end":427014,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427019,"byte_end":427056,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427061,"byte_end":427097,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427102,"byte_end":427109,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427114,"byte_end":427139,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4447},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":428203,"byte_end":428220,"line_start":73,"line_end":73,"column_start":8,"column_end":25},"name":"spawn_with_handle","qualname":"::task::spawn::SpawnExt::spawn_with_handle","value":"fn <Fut> (&self, future: Fut) -> Result<RemoteHandle<Fut::Output>, SpawnError>","parent":{"krate":0,"index":4444},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future to completion and returns a\n future that resolves to the spawned future's output.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future to completion and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427339,"byte_end":427412,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ future that resolves to the spawned future's output.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427417,"byte_end":427473,"line_start":54,"line_end":54,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427478,"byte_end":427481,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`RemoteHandle`](crate::future::RemoteHandle), or, if","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427486,"byte_end":427592,"line_start":56,"line_end":56,"column_start":5,"column_end":111}},{"value":"/ spawning fails, a [`SpawnError`]. [`RemoteHandle`](crate::future::RemoteHandle) is a future that","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427597,"byte_end":427697,"line_start":57,"line_end":57,"column_start":5,"column_end":105}},{"value":"/ resolves to the output of the spawned future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427702,"byte_end":427751,"line_start":58,"line_end":58,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427756,"byte_end":427759,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427764,"byte_end":427771,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::{block_on, ThreadPool};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427776,"byte_end":427826,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/ use futures::future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427831,"byte_end":427855,"line_start":62,"line_end":62,"column_start":5,"column_end":29}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427860,"byte_end":427892,"line_start":63,"line_end":63,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427897,"byte_end":427900,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427905,"byte_end":427951,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427956,"byte_end":427959,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":427964,"byte_end":427998,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/ let join_handle_fut = executor.spawn_with_handle(future).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":428003,"byte_end":428073,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(block_on(join_handle_fut), 1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":428078,"byte_end":428123,"line_start":69,"line_end":69,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":428128,"byte_end":428135,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"channel\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":428140,"byte_end":428167,"line_start":71,"line_end":71,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":428172,"byte_end":428195,"line_start":72,"line_end":72,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":4449},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":428797,"byte_end":428810,"line_start":95,"line_end":95,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":4450},{"krate":0,"index":4452}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":428749,"byte_end":428786,"line_start":94,"line_end":94,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4450},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429853,"byte_end":429864,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"fn <Fut> (&self, future: Fut) -> Result<(), SpawnError>","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":428829,"byte_end":428894,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":428899,"byte_end":428914,"line_start":97,"line_end":97,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":428919,"byte_end":428922,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":428927,"byte_end":428997,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429002,"byte_end":429021,"line_start":100,"line_end":100,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429026,"byte_end":429029,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429034,"byte_end":429103,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429108,"byte_end":429181,"line_start":103,"line_end":103,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429186,"byte_end":429225,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429230,"byte_end":429233,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429238,"byte_end":429304,"line_start":106,"line_end":106,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429309,"byte_end":429375,"line_start":107,"line_end":107,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429380,"byte_end":429451,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429456,"byte_end":429512,"line_start":109,"line_end":109,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429517,"byte_end":429520,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429525,"byte_end":429532,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429537,"byte_end":429574,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429579,"byte_end":429616,"line_start":113,"line_end":113,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429621,"byte_end":429624,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429629,"byte_end":429665,"line_start":115,"line_end":115,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429670,"byte_end":429707,"line_start":116,"line_end":116,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429712,"byte_end":429715,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429720,"byte_end":429757,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429762,"byte_end":429803,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429808,"byte_end":429815,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":429820,"byte_end":429845,"line_start":121,"line_end":121,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4452},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430928,"byte_end":430951,"line_start":149,"line_end":149,"column_start":8,"column_end":31},"name":"spawn_local_with_handle","qualname":"::task::spawn::LocalSpawnExt::spawn_local_with_handle","value":"fn <Fut> (&self, future: Fut) -> Result<RemoteHandle<Fut::Output>, SpawnError>","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future to completion and returns a\n future that resolves to the spawned future's output.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future to completion and returns a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430055,"byte_end":430128,"line_start":129,"line_end":129,"column_start":5,"column_end":78}},{"value":"/ future that resolves to the spawned future's output.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430133,"byte_end":430189,"line_start":130,"line_end":130,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430194,"byte_end":430197,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`RemoteHandle`](crate::future::RemoteHandle), or, if","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430202,"byte_end":430308,"line_start":132,"line_end":132,"column_start":5,"column_end":111}},{"value":"/ spawning fails, a [`SpawnError`]. [`RemoteHandle`](crate::future::RemoteHandle) is a future that","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430313,"byte_end":430413,"line_start":133,"line_end":133,"column_start":5,"column_end":105}},{"value":"/ resolves to the output of the spawned future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430418,"byte_end":430467,"line_start":134,"line_end":134,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430472,"byte_end":430475,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430480,"byte_end":430487,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430492,"byte_end":430529,"line_start":137,"line_end":137,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430534,"byte_end":430571,"line_start":138,"line_end":138,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430576,"byte_end":430579,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ let mut executor = LocalPool::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430584,"byte_end":430624,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430629,"byte_end":430666,"line_start":141,"line_end":141,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430671,"byte_end":430674,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430679,"byte_end":430708,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/ let join_handle_fut = spawner.spawn_local_with_handle(future).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430713,"byte_end":430788,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(executor.run_until(join_handle_fut), 1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430793,"byte_end":430848,"line_start":145,"line_end":145,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430853,"byte_end":430860,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"channel\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430865,"byte_end":430892,"line_start":147,"line_end":147,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":430897,"byte_end":430920,"line_start":148,"line_end":148,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":4472},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/never.rs","parent":null,"children":[{"krate":0,"index":4473}],"decl_id":null,"docs":" Definition of the `Never` type,\n a stand-in for the `!` type until it becomes stable.\n","sig":null,"attributes":[{"value":"! Definition of the `Never` type,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/never.rs","byte_start":431214,"byte_end":431249,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"! a stand-in for the `!` type until it becomes stable.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/never.rs","byte_start":431250,"byte_end":431306,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":4473},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/never.rs","byte_start":431943,"byte_end":431948,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/never.rs","byte_start":431308,"byte_end":431343,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/never.rs","byte_start":431344,"byte_end":431347,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/never.rs","byte_start":431348,"byte_end":431423,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/never.rs","byte_start":431424,"byte_end":431461,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/never.rs","byte_start":431462,"byte_end":431465,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/never.rs","byte_start":431466,"byte_end":431530,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/never.rs","byte_start":431531,"byte_end":431534,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/never.rs","byte_start":431535,"byte_end":431606,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/never.rs","byte_start":431607,"byte_end":431658,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/never.rs","byte_start":431659,"byte_end":431751,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/never.rs","byte_start":431752,"byte_end":431755,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/never.rs","byte_start":431756,"byte_end":431827,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/never.rs","byte_start":431828,"byte_end":431933,"line_start":16,"line_end":16,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":4474},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":4475},{"krate":0,"index":4476},{"krate":0,"index":4487},{"krate":0,"index":4488},{"krate":0,"index":4490},{"krate":0,"index":4553},{"krate":0,"index":4554},{"krate":0,"index":4606},{"krate":0,"index":4607},{"krate":0,"index":4653},{"krate":0,"index":4654},{"krate":0,"index":4700},{"krate":0,"index":4701},{"krate":0,"index":4719},{"krate":0,"index":4720},{"krate":0,"index":4751},{"krate":0,"index":4754},{"krate":0,"index":4779},{"krate":0,"index":4782},{"krate":0,"index":4820},{"krate":0,"index":4821},{"krate":0,"index":4841},{"krate":0,"index":4844},{"krate":0,"index":4862},{"krate":0,"index":4863},{"krate":0,"index":4892},{"krate":0,"index":4893},{"krate":0,"index":4912},{"krate":0,"index":4913},{"krate":0,"index":4931},{"krate":0,"index":4932},{"krate":0,"index":4952},{"krate":0,"index":4953},{"krate":0,"index":4972},{"krate":0,"index":4973},{"krate":0,"index":4997},{"krate":0,"index":4998},{"krate":0,"index":5025},{"krate":0,"index":5026},{"krate":0,"index":5052},{"krate":0,"index":5053},{"krate":0,"index":5074},{"krate":0,"index":5075},{"krate":0,"index":5093},{"krate":0,"index":5096},{"krate":0,"index":5116},{"krate":0,"index":5117},{"krate":0,"index":5138},{"krate":0,"index":5141},{"krate":0,"index":5176},{"krate":0,"index":5179},{"krate":0,"index":5211},{"krate":0,"index":5212},{"krate":0,"index":5233},{"krate":0,"index":5234},{"krate":0,"index":5252},{"krate":0,"index":5253},{"krate":0,"index":5273},{"krate":0,"index":5274},{"krate":0,"index":5293},{"krate":0,"index":5294},{"krate":0,"index":5309},{"krate":0,"index":5311},{"krate":0,"index":5322},{"krate":0,"index":5324},{"krate":0,"index":5326},{"krate":0,"index":5328},{"krate":0,"index":5334}],"decl_id":null,"docs":" IO","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3339,"byte_end":3361,"line_start":109,"line_end":109,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3362,"byte_end":3385,"line_start":110,"line_end":110,"column_start":1,"column_end":24}},{"value":"! IO","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":431979,"byte_end":431985,"line_start":1,"line_end":1,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":431986,"byte_end":431989,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":431990,"byte_end":432053,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"! `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and `AsyncBufRead` types, including","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":432054,"byte_end":432133,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"! the `AsyncReadExt`, `AsyncWriteExt`, `AsyncSeekExt`, and `AsyncBufReadExt`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":432134,"byte_end":432212,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"! traits which add methods to the `AsyncRead`, `AsyncWrite`, `AsyncSeek`,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":432213,"byte_end":432288,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"! and `AsyncBufRead` types.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":432289,"byte_end":432318,"line_start":7,"line_end":7,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":432319,"byte_end":432322,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `io` and `std` features of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":432323,"byte_end":432397,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":432398,"byte_end":432455,"line_start":10,"line_end":10,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7599},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":453857,"byte_end":453867,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":453208,"byte_end":453273,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":453274,"byte_end":453323,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":453324,"byte_end":453395,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":453396,"byte_end":453399,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":453400,"byte_end":453476,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":453477,"byte_end":453548,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":453549,"byte_end":453617,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":453618,"byte_end":453686,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":453687,"byte_end":453762,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":453763,"byte_end":453777,"line_start":17,"line_end":17,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":4511},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":454431,"byte_end":454434,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"fn (io: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":454361,"byte_end":454419,"line_start":42,"line_end":42,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4512},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":454549,"byte_end":454556,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":454486,"byte_end":454537,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4513},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":454670,"byte_end":454677,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":454599,"byte_end":454658,"line_start":52,"line_end":52,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4514},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":454798,"byte_end":454808,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":454732,"byte_end":454786,"line_start":57,"line_end":57,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4575},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":459718,"byte_end":459727,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":4577},{"krate":0,"index":4578},{"krate":0,"index":4579},{"krate":0,"index":4580}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[{"value":"/ The `BufReader` struct adds buffering to any reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":458830,"byte_end":458886,"line_start":11,"line_end":11,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":458887,"byte_end":458890,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ It can be excessively inefficient to work directly with a [`AsyncRead`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":458891,"byte_end":458966,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ instance. A `BufReader` performs large, infrequent reads on the underlying","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":458967,"byte_end":459045,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ [`AsyncRead`] and maintains an in-memory buffer of the results.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":459046,"byte_end":459113,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":459114,"byte_end":459117,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `BufReader` can improve the speed of programs that make *small* and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":459118,"byte_end":459189,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ *repeated* read calls to the same file or network socket. It does not","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":459190,"byte_end":459263,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ help when reading very large amounts at once, or reading just one or a few","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":459264,"byte_end":459342,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ times. It also provides no advantage when reading from a source that is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":459343,"byte_end":459418,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ already in memory, like a `Vec<u8>`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":459419,"byte_end":459459,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":459460,"byte_end":459463,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When the `BufReader` is dropped, the contents of its buffer will be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":459464,"byte_end":459535,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/ discarded. Creating multiple instances of a `BufReader` on the same","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":459536,"byte_end":459607,"line_start":24,"line_end":24,"column_start":1,"column_end":72}},{"value":"/ stream can cause data loss.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":459608,"byte_end":459639,"line_start":25,"line_end":25,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":459640,"byte_end":459643,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: futures_io::AsyncRead","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":459644,"byte_end":459684,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":459685,"byte_end":459688,"line_start":28,"line_end":28,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":4583},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":460081,"byte_end":460084,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"fn (inner: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":459939,"byte_end":460031,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":460036,"byte_end":460069,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4584},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":460246,"byte_end":460259,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"fn (capacity: usize, inner: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":460169,"byte_end":460234,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4585},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":460773,"byte_end":460780,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":460636,"byte_end":460682,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":460687,"byte_end":460690,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":460695,"byte_end":460761,"line_start":65,"line_end":65,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4586},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":460972,"byte_end":460979,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":460827,"byte_end":460881,"line_start":70,"line_end":70,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":460886,"byte_end":460889,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":460894,"byte_end":460960,"line_start":72,"line_end":72,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4587},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":461190,"byte_end":461201,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":461038,"byte_end":461099,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":461104,"byte_end":461107,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":461112,"byte_end":461178,"line_start":79,"line_end":79,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4588},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":461424,"byte_end":461434,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":461273,"byte_end":461336,"line_start":84,"line_end":84,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":461341,"byte_end":461344,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":461349,"byte_end":461412,"line_start":86,"line_end":86,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4589},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":461638,"byte_end":461644,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":461478,"byte_end":461534,"line_start":91,"line_end":91,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":461539,"byte_end":461542,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":461547,"byte_end":461626,"line_start":93,"line_end":93,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":4625},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":468433,"byte_end":468442,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":4627},{"krate":0,"index":4628},{"krate":0,"index":4629}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[{"value":"/ Wraps a writer and buffers its output.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":467399,"byte_end":467441,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":467442,"byte_end":467445,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ It can be excessively inefficient to work directly with something that","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":467446,"byte_end":467520,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ implements [`AsyncWrite`]. A `BufWriter` keeps an in-memory buffer of data and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":467521,"byte_end":467603,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ writes it to an underlying writer in large, infrequent batches.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":467604,"byte_end":467671,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":467672,"byte_end":467675,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `BufWriter` can improve the speed of programs that make *small* and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":467676,"byte_end":467747,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ *repeated* write calls to the same file or network socket. It does not","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":467748,"byte_end":467822,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ help when writing very large amounts at once, or writing just one or a few","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":467823,"byte_end":467901,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ times. It also provides no advantage when writing to a destination that is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":467902,"byte_end":467980,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ in memory, like a `Vec<u8>`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":467981,"byte_end":468013,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":468014,"byte_end":468017,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ When the `BufWriter` is dropped, the contents of its buffer will be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":468018,"byte_end":468089,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ discarded. Creating multiple instances of a `BufWriter` on the same","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":468090,"byte_end":468161,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/ stream can cause data loss. If you need to write out the contents of its","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":468162,"byte_end":468238,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ buffer, you must manually call flush before the writer is dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":468239,"byte_end":468309,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":468310,"byte_end":468313,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`AsyncWrite`]: futures_io::AsyncWrite","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":468314,"byte_end":468356,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/ [`flush`]: super::AsyncWriteExt::flush","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":468357,"byte_end":468399,"line_start":27,"line_end":27,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":468400,"byte_end":468403,"line_start":28,"line_end":28,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":4632},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":468751,"byte_end":468754,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"fn (inner: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":468609,"byte_end":468701,"line_start":40,"line_end":40,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":468706,"byte_end":468739,"line_start":41,"line_end":41,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4633},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":468916,"byte_end":468929,"line_start":47,"line_end":47,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"fn (cap: usize, inner: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":468839,"byte_end":468904,"line_start":46,"line_end":46,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4635},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":470086,"byte_end":470093,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":470028,"byte_end":470074,"line_start":84,"line_end":84,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4636},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":470284,"byte_end":470291,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":470140,"byte_end":470194,"line_start":89,"line_end":89,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":470199,"byte_end":470202,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":470207,"byte_end":470272,"line_start":91,"line_end":91,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4637},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":470501,"byte_end":470512,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":470350,"byte_end":470411,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":470416,"byte_end":470419,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":470424,"byte_end":470489,"line_start":98,"line_end":98,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4638},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":470735,"byte_end":470745,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":470584,"byte_end":470647,"line_start":103,"line_end":103,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":470652,"byte_end":470655,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":470660,"byte_end":470723,"line_start":105,"line_end":105,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4639},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":470857,"byte_end":470863,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":470789,"byte_end":470845,"line_start":110,"line_end":110,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":4668},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":473471,"byte_end":473476,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":4671},{"krate":0,"index":4672},{"krate":0,"index":4673}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`chain`](super::AsyncReadExt::chain) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":473346,"byte_end":473410,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":473411,"byte_end":473459,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4681},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":474013,"byte_end":474020,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"fn (&self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":473939,"byte_end":474001,"line_start":42,"line_end":42,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4682},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":474352,"byte_end":474359,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"fn (&mut self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":474089,"byte_end":474159,"line_start":47,"line_end":47,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":474164,"byte_end":474167,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":474172,"byte_end":474245,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":474250,"byte_end":474323,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":474328,"byte_end":474340,"line_start":51,"line_end":51,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4683},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":474718,"byte_end":474729,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":474448,"byte_end":474525,"line_start":56,"line_end":56,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":474530,"byte_end":474533,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":474538,"byte_end":474611,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":474616,"byte_end":474689,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":474694,"byte_end":474706,"line_start":60,"line_end":60,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4684},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":475029,"byte_end":475039,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn (self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":474961,"byte_end":475017,"line_start":68,"line_end":68,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":7656},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/close.rs","byte_start":477945,"byte_end":477950,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":7659}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/close.rs","byte_start":477783,"byte_end":477848,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/close.rs","byte_start":477866,"byte_end":477933,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":4735},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479499,"byte_end":479503,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"fn <R, W> (reader: R, writer: &mut W) -> Copy<'_, R, W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":478650,"byte_end":478725,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":478726,"byte_end":478729,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":478730,"byte_end":478813,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":478814,"byte_end":478894,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":478895,"byte_end":478967,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":478968,"byte_end":478981,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":478982,"byte_end":478985,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":478986,"byte_end":479033,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479034,"byte_end":479037,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479038,"byte_end":479052,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479053,"byte_end":479056,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479057,"byte_end":479064,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479065,"byte_end":479106,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479107,"byte_end":479158,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479159,"byte_end":479162,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479163,"byte_end":479206,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479207,"byte_end":479254,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479255,"byte_end":479258,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479259,"byte_end":479312,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479313,"byte_end":479339,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479340,"byte_end":479343,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479344,"byte_end":479369,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479370,"byte_end":479423,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479424,"byte_end":479483,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479484,"byte_end":479491,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7664},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479830,"byte_end":479834,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":7668}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`copy()`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479694,"byte_end":479733,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479751,"byte_end":479818,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":4764},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481357,"byte_end":481365,"line_start":32,"line_end":32,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"fn <R, W> (reader: R, writer: &mut W) -> CopyBuf<'_, R, W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":480501,"byte_end":480576,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":480577,"byte_end":480580,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":480581,"byte_end":480667,"line_start":9,"line_end":9,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":480668,"byte_end":480748,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":480749,"byte_end":480821,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":480822,"byte_end":480835,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":480836,"byte_end":480839,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":480840,"byte_end":480887,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":480888,"byte_end":480891,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":480892,"byte_end":480906,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":480907,"byte_end":480910,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":480911,"byte_end":480918,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":480919,"byte_end":480960,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":480961,"byte_end":481012,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481013,"byte_end":481016,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481017,"byte_end":481060,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481061,"byte_end":481108,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481109,"byte_end":481112,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481113,"byte_end":481170,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481171,"byte_end":481197,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481198,"byte_end":481201,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481202,"byte_end":481227,"line_start":28,"line_end":28,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481228,"byte_end":481281,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481282,"byte_end":481341,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481342,"byte_end":481349,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7677},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481696,"byte_end":481703,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":7681},{"krate":0,"index":7682},{"krate":0,"index":7683}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`copy_buf()`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481556,"byte_end":481599,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481617,"byte_end":481684,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7689},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483948,"byte_end":483954,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":7691}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483173,"byte_end":483236,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483237,"byte_end":483270,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483271,"byte_end":483274,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483275,"byte_end":483343,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483344,"byte_end":483426,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483427,"byte_end":483506,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483507,"byte_end":483532,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483533,"byte_end":483536,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483537,"byte_end":483611,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483612,"byte_end":483679,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483680,"byte_end":483713,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483714,"byte_end":483717,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483718,"byte_end":483757,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483758,"byte_end":483797,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483798,"byte_end":483839,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483840,"byte_end":483903,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4798},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484534,"byte_end":484537,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"fn (inner: T) -> Cursor<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484013,"byte_end":484088,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484093,"byte_end":484096,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484101,"byte_end":484175,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484180,"byte_end":484248,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484253,"byte_end":484291,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484296,"byte_end":484299,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484304,"byte_end":484318,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484323,"byte_end":484326,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484331,"byte_end":484338,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484343,"byte_end":484371,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484376,"byte_end":484379,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484384,"byte_end":484423,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484428,"byte_end":484476,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484481,"byte_end":484510,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484515,"byte_end":484522,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4799},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484989,"byte_end":484999,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484644,"byte_end":484701,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484706,"byte_end":484709,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484714,"byte_end":484728,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484733,"byte_end":484736,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484741,"byte_end":484748,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484753,"byte_end":484781,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484786,"byte_end":484789,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484794,"byte_end":484833,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484838,"byte_end":484886,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484891,"byte_end":484920,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484925,"byte_end":484928,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484933,"byte_end":484965,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":484970,"byte_end":484977,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4800},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485407,"byte_end":485414,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485056,"byte_end":485116,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485121,"byte_end":485124,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485129,"byte_end":485143,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485148,"byte_end":485151,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485156,"byte_end":485163,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485168,"byte_end":485196,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485201,"byte_end":485204,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485209,"byte_end":485248,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485253,"byte_end":485301,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485306,"byte_end":485335,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485340,"byte_end":485343,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485348,"byte_end":485383,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485388,"byte_end":485395,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4801},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485986,"byte_end":485993,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485470,"byte_end":485538,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485543,"byte_end":485546,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485551,"byte_end":485624,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485629,"byte_end":485691,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485696,"byte_end":485699,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485704,"byte_end":485718,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485723,"byte_end":485726,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485731,"byte_end":485738,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485743,"byte_end":485771,"line_start":93,"line_end":93,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485776,"byte_end":485779,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485784,"byte_end":485827,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485832,"byte_end":485880,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485885,"byte_end":485914,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485919,"byte_end":485922,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485927,"byte_end":485962,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":485967,"byte_end":485974,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4802},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486651,"byte_end":486659,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486057,"byte_end":486105,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486110,"byte_end":486113,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486118,"byte_end":486132,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486137,"byte_end":486140,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486145,"byte_end":486152,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486157,"byte_end":486198,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486203,"byte_end":486257,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486262,"byte_end":486265,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486270,"byte_end":486322,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486327,"byte_end":486330,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486335,"byte_end":486370,"line_start":115,"line_end":115,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486375,"byte_end":486378,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486383,"byte_end":486426,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486431,"byte_end":486466,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486471,"byte_end":486474,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486479,"byte_end":486523,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486528,"byte_end":486563,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486568,"byte_end":486627,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486632,"byte_end":486639,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4803},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":487127,"byte_end":487139,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"fn (&mut self, pos: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486717,"byte_end":486754,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486759,"byte_end":486762,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486767,"byte_end":486781,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486786,"byte_end":486789,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486794,"byte_end":486801,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486806,"byte_end":486834,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486839,"byte_end":486842,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486847,"byte_end":486899,"line_start":135,"line_end":135,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486904,"byte_end":486907,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486912,"byte_end":486947,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486952,"byte_end":486955,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486960,"byte_end":486985,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":486990,"byte_end":487025,"line_start":140,"line_end":140,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":487030,"byte_end":487033,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":487038,"byte_end":487063,"line_start":142,"line_end":142,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":487068,"byte_end":487103,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":487108,"byte_end":487115,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4831},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":489920,"byte_end":489925,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":4832}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":489819,"byte_end":489859,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":489860,"byte_end":489908,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4833},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490485,"byte_end":490490,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"fn () -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":489946,"byte_end":489993,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":489994,"byte_end":489997,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":489998,"byte_end":490070,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490071,"byte_end":490074,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490075,"byte_end":490089,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490090,"byte_end":490093,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490094,"byte_end":490159,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490160,"byte_end":490163,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490164,"byte_end":490171,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490172,"byte_end":490213,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490214,"byte_end":490256,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490257,"byte_end":490260,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490261,"byte_end":490296,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490297,"byte_end":490330,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490331,"byte_end":490377,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490378,"byte_end":490409,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490410,"byte_end":490469,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490470,"byte_end":490477,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7717},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/flush.rs","byte_start":491548,"byte_end":491553,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":7720}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/flush.rs","byte_start":491386,"byte_end":491451,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/flush.rs","byte_start":491469,"byte_end":491536,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7732},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/into_sink.rs","byte_start":492467,"byte_end":492475,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"IntoSink","qualname":"::io::into_sink::IntoSink","value":"IntoSink {  }","parent":null,"children":[{"krate":0,"index":7735},{"krate":0,"index":7736}],"decl_id":null,"docs":" Sink for the [`into_sink`](super::AsyncWriteExt::into_sink) method.\n","sig":null,"attributes":[{"value":"/ Sink for the [`into_sink`](super::AsyncWriteExt::into_sink) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/into_sink.rs","byte_start":492320,"byte_end":492391,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/into_sink.rs","byte_start":492392,"byte_end":492438,"line_start":16,"line_end":16,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":7746},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/lines.rs","byte_start":495513,"byte_end":495518,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":7748},{"krate":0,"index":7749},{"krate":0,"index":7750},{"krate":0,"index":7751}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`lines`](super::AsyncBufReadExt::lines) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/lines.rs","byte_start":495368,"byte_end":495435,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/lines.rs","byte_start":495453,"byte_end":495501,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":7755},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read.rs","byte_start":496835,"byte_end":496839,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":7758},{"krate":0,"index":7759}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read.rs","byte_start":496676,"byte_end":496738,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read.rs","byte_start":496756,"byte_end":496823,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7764},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_vectored.rs","byte_start":497731,"byte_end":497743,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":7767},{"krate":0,"index":7768}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_vectored.rs","byte_start":497554,"byte_end":497634,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_vectored.rs","byte_start":497652,"byte_end":497719,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7773},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_exact.rs","byte_start":498684,"byte_end":498693,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":7776},{"krate":0,"index":7777}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_exact.rs","byte_start":498513,"byte_end":498587,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_exact.rs","byte_start":498605,"byte_end":498672,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7782},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_line.rs","byte_start":500012,"byte_end":500020,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":7785},{"krate":0,"index":7786},{"krate":0,"index":7787},{"krate":0,"index":7788}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_line.rs","byte_start":499840,"byte_end":499915,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_line.rs","byte_start":499933,"byte_end":500000,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7793},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_end.rs","byte_start":501869,"byte_end":501878,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":7796},{"krate":0,"index":7797},{"krate":0,"index":7798}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_end.rs","byte_start":501696,"byte_end":501772,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_end.rs","byte_start":501790,"byte_end":501857,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7803},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_string.rs","byte_start":504610,"byte_end":504622,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":7806},{"krate":0,"index":7807},{"krate":0,"index":7808},{"krate":0,"index":7809}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_string.rs","byte_start":504431,"byte_end":504513,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_string.rs","byte_start":504531,"byte_end":504598,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7814},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_until.rs","byte_start":506548,"byte_end":506557,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":7817},{"krate":0,"index":7818},{"krate":0,"index":7819},{"krate":0,"index":7820}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_until.rs","byte_start":506374,"byte_end":506451,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_until.rs","byte_start":506469,"byte_end":506536,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5085},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508311,"byte_end":508317,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":5086}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508209,"byte_end":508250,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508251,"byte_end":508299,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5087},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508874,"byte_end":508880,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"fn (byte: u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508337,"byte_end":508406,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508407,"byte_end":508410,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508411,"byte_end":508491,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508492,"byte_end":508511,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508512,"byte_end":508515,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508516,"byte_end":508530,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508531,"byte_end":508534,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508535,"byte_end":508542,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508543,"byte_end":508584,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508585,"byte_end":508627,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508628,"byte_end":508631,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508632,"byte_end":508660,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508661,"byte_end":508700,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508701,"byte_end":508751,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508752,"byte_end":508798,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508799,"byte_end":508858,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508859,"byte_end":508866,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7825},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/seek.rs","byte_start":510152,"byte_end":510156,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":7828},{"krate":0,"index":7829}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/seek.rs","byte_start":509989,"byte_end":510055,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/seek.rs","byte_start":510073,"byte_end":510140,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5127},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":510926,"byte_end":510930,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":5128}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":510826,"byte_end":510865,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":510866,"byte_end":510914,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5129},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511538,"byte_end":511542,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"fn () -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":510951,"byte_end":511028,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511029,"byte_end":511032,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511033,"byte_end":511128,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511129,"byte_end":511186,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511187,"byte_end":511190,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511191,"byte_end":511205,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511206,"byte_end":511209,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511210,"byte_end":511221,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511222,"byte_end":511263,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511264,"byte_end":511307,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511308,"byte_end":511311,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511312,"byte_end":511349,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511350,"byte_end":511382,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511383,"byte_end":511432,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511433,"byte_end":511462,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511463,"byte_end":511522,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511523,"byte_end":511530,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7834},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/split.rs","byte_start":512689,"byte_end":512697,"line_start":9,"line_end":9,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":7836}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/split.rs","byte_start":512592,"byte_end":512660,"line_start":7,"line_end":7,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":7840},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/split.rs","byte_start":512826,"byte_end":512835,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":7842}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/split.rs","byte_start":512729,"byte_end":512797,"line_start":13,"line_end":13,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":7846},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":514960,"byte_end":514964,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7848},{"krate":0,"index":7849}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`take`](super::AsyncReadExt::take) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":514801,"byte_end":514863,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":514881,"byte_end":514948,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5198},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516048,"byte_end":516053,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515295,"byte_end":515348,"line_start":28,"line_end":28,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515353,"byte_end":515399,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515404,"byte_end":515407,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515412,"byte_end":515422,"line_start":31,"line_end":31,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515427,"byte_end":515430,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515435,"byte_end":515512,"line_start":33,"line_end":33,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515517,"byte_end":515586,"line_start":34,"line_end":34,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515591,"byte_end":515594,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515599,"byte_end":515613,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515618,"byte_end":515621,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515626,"byte_end":515633,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515638,"byte_end":515679,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515684,"byte_end":515728,"line_start":40,"line_end":40,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515733,"byte_end":515736,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515741,"byte_end":515788,"line_start":42,"line_end":42,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515793,"byte_end":515821,"line_start":43,"line_end":43,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515826,"byte_end":515829,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515834,"byte_end":515868,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515873,"byte_end":515915,"line_start":46,"line_end":46,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515920,"byte_end":515923,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515928,"byte_end":515960,"line_start":48,"line_end":48,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515965,"byte_end":516024,"line_start":49,"line_end":49,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516029,"byte_end":516036,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5199},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516965,"byte_end":516974,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"fn (&mut self, limit: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516101,"byte_end":516172,"line_start":55,"line_end":55,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516177,"byte_end":516251,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516256,"byte_end":516331,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516336,"byte_end":516360,"line_start":58,"line_end":58,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516365,"byte_end":516368,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516373,"byte_end":516387,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516392,"byte_end":516395,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516400,"byte_end":516407,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516412,"byte_end":516453,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516458,"byte_end":516502,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516507,"byte_end":516510,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516515,"byte_end":516562,"line_start":66,"line_end":66,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516567,"byte_end":516595,"line_start":67,"line_end":67,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516600,"byte_end":516603,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516608,"byte_end":516642,"line_start":69,"line_end":69,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516647,"byte_end":516689,"line_start":70,"line_end":70,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516694,"byte_end":516697,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516702,"byte_end":516723,"line_start":72,"line_end":72,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516728,"byte_end":516760,"line_start":73,"line_end":73,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516765,"byte_end":516768,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516773,"byte_end":516796,"line_start":75,"line_end":75,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516801,"byte_end":516843,"line_start":76,"line_end":76,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516848,"byte_end":516869,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516874,"byte_end":516877,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516882,"byte_end":516941,"line_start":79,"line_end":79,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":516946,"byte_end":516953,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5200},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517605,"byte_end":517612,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517039,"byte_end":517085,"line_start":85,"line_end":85,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517090,"byte_end":517093,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517098,"byte_end":517112,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517117,"byte_end":517120,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517125,"byte_end":517132,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517137,"byte_end":517178,"line_start":90,"line_end":90,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517183,"byte_end":517227,"line_start":91,"line_end":91,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517232,"byte_end":517235,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517240,"byte_end":517287,"line_start":93,"line_end":93,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517292,"byte_end":517320,"line_start":94,"line_end":94,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517325,"byte_end":517328,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517333,"byte_end":517367,"line_start":96,"line_end":96,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517372,"byte_end":517414,"line_start":97,"line_end":97,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517419,"byte_end":517422,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let cursor_ref = take.get_ref();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517427,"byte_end":517463,"line_start":99,"line_end":99,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(cursor_ref.position(), 4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517468,"byte_end":517509,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517514,"byte_end":517517,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517522,"byte_end":517581,"line_start":102,"line_end":102,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517586,"byte_end":517593,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5201},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518366,"byte_end":518373,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517659,"byte_end":517713,"line_start":108,"line_end":108,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517718,"byte_end":517721,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517726,"byte_end":517799,"line_start":110,"line_end":110,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517804,"byte_end":517876,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517881,"byte_end":517892,"line_start":112,"line_end":112,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517897,"byte_end":517900,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517905,"byte_end":517919,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517924,"byte_end":517927,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517932,"byte_end":517939,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517944,"byte_end":517985,"line_start":117,"line_end":117,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":517990,"byte_end":518034,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518039,"byte_end":518042,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518047,"byte_end":518094,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518099,"byte_end":518127,"line_start":121,"line_end":121,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518132,"byte_end":518135,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518140,"byte_end":518174,"line_start":123,"line_end":123,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518179,"byte_end":518221,"line_start":124,"line_end":124,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518226,"byte_end":518229,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let cursor_mut = take.get_mut();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518234,"byte_end":518270,"line_start":126,"line_end":126,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518275,"byte_end":518278,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518283,"byte_end":518342,"line_start":128,"line_end":128,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518347,"byte_end":518354,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5202},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518684,"byte_end":518695,"line_start":139,"line_end":139,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518432,"byte_end":518493,"line_start":134,"line_end":134,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518498,"byte_end":518501,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518506,"byte_end":518579,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518584,"byte_end":518656,"line_start":137,"line_end":137,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518661,"byte_end":518672,"line_start":138,"line_end":138,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5203},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":519336,"byte_end":519346,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518767,"byte_end":518821,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518826,"byte_end":518829,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518834,"byte_end":518848,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518853,"byte_end":518856,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518861,"byte_end":518868,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518873,"byte_end":518914,"line_start":148,"line_end":148,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518919,"byte_end":518963,"line_start":149,"line_end":149,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518968,"byte_end":518971,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":518976,"byte_end":519023,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":519028,"byte_end":519056,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":519061,"byte_end":519064,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":519069,"byte_end":519103,"line_start":154,"line_end":154,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":519108,"byte_end":519150,"line_start":155,"line_end":155,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":519155,"byte_end":519158,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ let cursor = take.into_inner();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":519163,"byte_end":519198,"line_start":157,"line_end":157,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(cursor.position(), 4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":519203,"byte_end":519240,"line_start":158,"line_end":158,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":519245,"byte_end":519248,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":519253,"byte_end":519312,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":519317,"byte_end":519324,"line_start":161,"line_end":161,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7858},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":521900,"byte_end":521906,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":7860},{"krate":0,"index":7861}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":520945,"byte_end":520992,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":520993,"byte_end":520996,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":520997,"byte_end":521073,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":521074,"byte_end":521152,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":521153,"byte_end":521229,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":521230,"byte_end":521305,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":521306,"byte_end":521379,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":521380,"byte_end":521411,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":521412,"byte_end":521415,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":521416,"byte_end":521487,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":521488,"byte_end":521567,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":521568,"byte_end":521595,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":521596,"byte_end":521599,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":521600,"byte_end":521674,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":521675,"byte_end":521749,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":521750,"byte_end":521829,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":521830,"byte_end":521871,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5219},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":522215,"byte_end":522218,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"fn (t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":521991,"byte_end":522062,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":522067,"byte_end":522077,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":522082,"byte_end":522085,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":522090,"byte_end":522164,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":522169,"byte_end":522203,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5220},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":522430,"byte_end":522437,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":522333,"byte_end":522400,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":522405,"byte_end":522418,"line_start":40,"line_end":40,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5221},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":522582,"byte_end":522589,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":522484,"byte_end":522552,"line_start":45,"line_end":45,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":522557,"byte_end":522570,"line_start":46,"line_end":46,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5222},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":522720,"byte_end":522730,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":522648,"byte_end":522708,"line_start":51,"line_end":51,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":5223},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":522871,"byte_end":522876,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":522774,"byte_end":522846,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":522851,"byte_end":522859,"line_start":57,"line_end":57,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":5224},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":523023,"byte_end":523026,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":522931,"byte_end":522998,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":523003,"byte_end":523011,"line_start":63,"line_end":63,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":5225},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":523472,"byte_end":523475,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"fn <R> (&mut self, range: R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":523079,"byte_end":523139,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":523144,"byte_end":523147,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":523152,"byte_end":523164,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":523169,"byte_end":523172,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":523177,"byte_end":523250,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":523255,"byte_end":523332,"line_start":73,"line_end":73,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":523337,"byte_end":523340,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":523345,"byte_end":523402,"line_start":75,"line_end":75,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":523407,"byte_end":523460,"line_start":76,"line_end":76,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7865},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write.rs","byte_start":524662,"byte_end":524667,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":7868},{"krate":0,"index":7869}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write.rs","byte_start":524500,"byte_end":524565,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write.rs","byte_start":524583,"byte_end":524650,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7874},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write_vectored.rs","byte_start":525558,"byte_end":525571,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":7877},{"krate":0,"index":7878}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write_vectored.rs","byte_start":525378,"byte_end":525461,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write_vectored.rs","byte_start":525479,"byte_end":525546,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7883},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write_all.rs","byte_start":526505,"byte_end":526513,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":7886},{"krate":0,"index":7887}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write_all.rs","byte_start":526335,"byte_end":526408,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write_all.rs","byte_start":526426,"byte_end":526493,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":5294},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434801,"byte_end":434813,"line_start":128,"line_end":128,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":5295},{"krate":0,"index":5297},{"krate":0,"index":5299},{"krate":0,"index":5301},{"krate":0,"index":5303},{"krate":0,"index":5305},{"krate":0,"index":5307},{"krate":0,"index":5308}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434719,"byte_end":434790,"line_start":127,"line_end":127,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5295},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435666,"byte_end":435671,"line_start":152,"line_end":152,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"fn <R> (self, next: R) -> Chain<Self, R>","parent":{"krate":0,"index":5294},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434831,"byte_end":434896,"line_start":129,"line_end":129,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434901,"byte_end":434904,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434909,"byte_end":434989,"line_start":131,"line_end":131,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434994,"byte_end":435066,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435071,"byte_end":435092,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435097,"byte_end":435100,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435105,"byte_end":435119,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435124,"byte_end":435127,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435132,"byte_end":435139,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435144,"byte_end":435185,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435190,"byte_end":435234,"line_start":139,"line_end":139,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435239,"byte_end":435242,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435247,"byte_end":435291,"line_start":141,"line_end":141,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435296,"byte_end":435340,"line_start":142,"line_end":142,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435345,"byte_end":435348,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435353,"byte_end":435397,"line_start":144,"line_end":144,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435402,"byte_end":435434,"line_start":145,"line_end":145,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435439,"byte_end":435442,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435447,"byte_end":435480,"line_start":147,"line_end":147,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435485,"byte_end":435528,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435533,"byte_end":435582,"line_start":149,"line_end":149,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435587,"byte_end":435646,"line_start":150,"line_end":150,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435651,"byte_end":435658,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5297},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436711,"byte_end":436715,"line_start":184,"line_end":184,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> Read<'a, Self>","parent":{"krate":0,"index":5294},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435809,"byte_end":435883,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435888,"byte_end":435924,"line_start":161,"line_end":161,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435929,"byte_end":435932,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":435937,"byte_end":436015,"line_start":163,"line_end":163,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436020,"byte_end":436047,"line_start":164,"line_end":164,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436052,"byte_end":436055,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436060,"byte_end":436074,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436079,"byte_end":436082,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436087,"byte_end":436094,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436099,"byte_end":436140,"line_start":169,"line_end":169,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436145,"byte_end":436189,"line_start":170,"line_end":170,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436194,"byte_end":436197,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436202,"byte_end":436249,"line_start":172,"line_end":172,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436254,"byte_end":436284,"line_start":173,"line_end":173,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436289,"byte_end":436292,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436297,"byte_end":436349,"line_start":175,"line_end":175,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436354,"byte_end":436357,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436362,"byte_end":436433,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436438,"byte_end":436502,"line_start":178,"line_end":178,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436507,"byte_end":436552,"line_start":179,"line_end":179,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436557,"byte_end":436582,"line_start":180,"line_end":180,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436587,"byte_end":436627,"line_start":181,"line_end":181,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436632,"byte_end":436691,"line_start":182,"line_end":182,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436696,"byte_end":436703,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5299},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437082,"byte_end":437095,"line_start":195,"line_end":195,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"fn <'a> (&'a mut self, bufs: &'a mut [IoSliceMut<'a>]) -> ReadVectored<'a, Self>","parent":{"krate":0,"index":5294},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436844,"byte_end":436928,"line_start":190,"line_end":190,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436933,"byte_end":436951,"line_start":191,"line_end":191,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436956,"byte_end":436959,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":436964,"byte_end":437042,"line_start":193,"line_end":193,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437047,"byte_end":437074,"line_start":194,"line_end":194,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5301},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438467,"byte_end":438477,"line_start":238,"line_end":238,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> ReadExact<'a, Self>","parent":{"krate":0,"index":5294},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437254,"byte_end":437326,"line_start":201,"line_end":201,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437331,"byte_end":437389,"line_start":202,"line_end":202,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437394,"byte_end":437397,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437402,"byte_end":437476,"line_start":204,"line_end":204,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437481,"byte_end":437484,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437489,"byte_end":437566,"line_start":206,"line_end":206,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437571,"byte_end":437593,"line_start":207,"line_end":207,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437598,"byte_end":437601,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437606,"byte_end":437620,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437625,"byte_end":437628,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437633,"byte_end":437640,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437645,"byte_end":437686,"line_start":212,"line_end":212,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437691,"byte_end":437735,"line_start":213,"line_end":213,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437740,"byte_end":437743,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437748,"byte_end":437795,"line_start":215,"line_end":215,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437800,"byte_end":437830,"line_start":216,"line_end":216,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437835,"byte_end":437838,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437843,"byte_end":437885,"line_start":218,"line_end":218,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437890,"byte_end":437893,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437898,"byte_end":437935,"line_start":220,"line_end":220,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":437940,"byte_end":437999,"line_start":221,"line_end":221,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438004,"byte_end":438011,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438016,"byte_end":438019,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438024,"byte_end":438064,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438069,"byte_end":438072,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438077,"byte_end":438084,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438089,"byte_end":438130,"line_start":227,"line_end":227,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438135,"byte_end":438185,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438190,"byte_end":438193,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438198,"byte_end":438245,"line_start":230,"line_end":230,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438250,"byte_end":438280,"line_start":231,"line_end":231,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438285,"byte_end":438288,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438293,"byte_end":438347,"line_start":233,"line_end":233,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438352,"byte_end":438355,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438360,"byte_end":438433,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438438,"byte_end":438447,"line_start":236,"line_end":236,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438452,"byte_end":438459,"line_start":237,"line_end":237,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5303},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439269,"byte_end":439280,"line_start":266,"line_end":266,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"fn <'a> (&'a mut self, buf: &'a mut Vec<u8>) -> ReadToEnd<'a, Self>","parent":{"krate":0,"index":5294},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438639,"byte_end":438712,"line_start":247,"line_end":247,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438717,"byte_end":438720,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438725,"byte_end":438783,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438788,"byte_end":438791,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438796,"byte_end":438810,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438815,"byte_end":438818,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438823,"byte_end":438830,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438835,"byte_end":438876,"line_start":254,"line_end":254,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438881,"byte_end":438925,"line_start":255,"line_end":255,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438930,"byte_end":438933,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438938,"byte_end":438985,"line_start":257,"line_end":257,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":438990,"byte_end":439033,"line_start":258,"line_end":258,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439038,"byte_end":439041,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439046,"byte_end":439101,"line_start":260,"line_end":260,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439106,"byte_end":439109,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439114,"byte_end":439139,"line_start":262,"line_end":262,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439144,"byte_end":439185,"line_start":263,"line_end":263,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439190,"byte_end":439249,"line_start":264,"line_end":264,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439254,"byte_end":439261,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5305},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440085,"byte_end":440099,"line_start":294,"line_end":294,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"fn <'a> (&'a mut self, buf: &'a mut String) -> ReadToString<'a, Self>","parent":{"krate":0,"index":5294},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439445,"byte_end":439518,"line_start":275,"line_end":275,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439523,"byte_end":439526,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439531,"byte_end":439589,"line_start":277,"line_end":277,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439594,"byte_end":439597,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439602,"byte_end":439616,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439621,"byte_end":439624,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439629,"byte_end":439636,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439641,"byte_end":439682,"line_start":282,"line_end":282,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439687,"byte_end":439731,"line_start":283,"line_end":283,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439736,"byte_end":439739,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439744,"byte_end":439791,"line_start":285,"line_end":285,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439796,"byte_end":439842,"line_start":286,"line_end":286,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439847,"byte_end":439850,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439855,"byte_end":439913,"line_start":288,"line_end":288,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439918,"byte_end":439921,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439926,"byte_end":439951,"line_start":290,"line_end":290,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":439956,"byte_end":440001,"line_start":291,"line_end":291,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440006,"byte_end":440065,"line_start":292,"line_end":292,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440070,"byte_end":440077,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5307},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441426,"byte_end":441431,"line_start":332,"line_end":332,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"fn (self) -> (ReadHalf<Self>, WriteHalf<Self>)","parent":{"krate":0,"index":5294},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440269,"byte_end":440340,"line_start":303,"line_end":303,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440345,"byte_end":440348,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440353,"byte_end":440423,"line_start":305,"line_end":305,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440428,"byte_end":440453,"line_start":306,"line_end":306,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440458,"byte_end":440461,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440466,"byte_end":440480,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440485,"byte_end":440488,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440493,"byte_end":440500,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440505,"byte_end":440546,"line_start":311,"line_end":311,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440551,"byte_end":440601,"line_start":312,"line_end":312,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440606,"byte_end":440609,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440614,"byte_end":440684,"line_start":314,"line_end":314,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440689,"byte_end":440759,"line_start":315,"line_end":315,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440764,"byte_end":440815,"line_start":316,"line_end":316,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440820,"byte_end":440823,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440828,"byte_end":440871,"line_start":318,"line_end":318,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440876,"byte_end":440939,"line_start":319,"line_end":319,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440944,"byte_end":440991,"line_start":320,"line_end":320,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":440996,"byte_end":440999,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441004,"byte_end":441009,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441014,"byte_end":441085,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441090,"byte_end":441142,"line_start":324,"line_end":324,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441147,"byte_end":441199,"line_start":325,"line_end":325,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441204,"byte_end":441209,"line_start":326,"line_end":326,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441214,"byte_end":441217,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441222,"byte_end":441284,"line_start":328,"line_end":328,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441289,"byte_end":441342,"line_start":329,"line_end":329,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441347,"byte_end":441406,"line_start":330,"line_end":330,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441411,"byte_end":441418,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5308},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":442152,"byte_end":442156,"line_start":357,"line_end":357,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"fn (self, limit: u64) -> Take<Self>","parent":{"krate":0,"index":5294},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441559,"byte_end":441629,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441634,"byte_end":441665,"line_start":339,"line_end":339,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441670,"byte_end":441673,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441678,"byte_end":441692,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441697,"byte_end":441700,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441705,"byte_end":441712,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441717,"byte_end":441758,"line_start":344,"line_end":344,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441763,"byte_end":441807,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441812,"byte_end":441815,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441820,"byte_end":441867,"line_start":347,"line_end":347,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441872,"byte_end":441900,"line_start":348,"line_end":348,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441905,"byte_end":441908,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441913,"byte_end":441947,"line_start":350,"line_end":350,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441952,"byte_end":441994,"line_start":351,"line_end":351,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":441999,"byte_end":442002,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":442007,"byte_end":442028,"line_start":353,"line_end":353,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":442033,"byte_end":442068,"line_start":354,"line_end":354,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":442073,"byte_end":442132,"line_start":355,"line_end":355,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":442137,"byte_end":442144,"line_start":356,"line_end":356,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":5311},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":442886,"byte_end":442899,"line_start":380,"line_end":380,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":5312},{"krate":0,"index":5313},{"krate":0,"index":5314},{"krate":0,"index":5316},{"krate":0,"index":5318},{"krate":0,"index":5320}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":442803,"byte_end":442875,"line_start":379,"line_end":379,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5312},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443640,"byte_end":443645,"line_start":403,"line_end":403,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"fn (&mut self) -> Flush<'_, Self>","parent":{"krate":0,"index":5311},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":442918,"byte_end":442983,"line_start":381,"line_end":381,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":442988,"byte_end":442991,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":442996,"byte_end":443010,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443015,"byte_end":443018,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443023,"byte_end":443030,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443035,"byte_end":443076,"line_start":386,"line_end":386,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443081,"byte_end":443130,"line_start":387,"line_end":387,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443135,"byte_end":443172,"line_start":388,"line_end":388,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443177,"byte_end":443180,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443185,"byte_end":443219,"line_start":390,"line_end":390,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443224,"byte_end":443227,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443232,"byte_end":443237,"line_start":392,"line_end":392,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443242,"byte_end":443288,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443293,"byte_end":443360,"line_start":394,"line_end":394,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443365,"byte_end":443408,"line_start":395,"line_end":395,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443413,"byte_end":443456,"line_start":396,"line_end":396,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443461,"byte_end":443493,"line_start":397,"line_end":397,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443498,"byte_end":443503,"line_start":398,"line_end":398,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443508,"byte_end":443511,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443516,"byte_end":443556,"line_start":400,"line_end":400,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443561,"byte_end":443620,"line_start":401,"line_end":401,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443625,"byte_end":443632,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5313},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443818,"byte_end":443823,"line_start":410,"line_end":410,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"fn (&mut self) -> Close<'_, Self>","parent":{"krate":0,"index":5311},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443745,"byte_end":443810,"line_start":409,"line_end":409,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5314},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444129,"byte_end":444134,"line_start":420,"line_end":420,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"fn <'a> (&'a mut self, buf: &'a [u8]) -> Write<'a, Self>","parent":{"krate":0,"index":5311},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443923,"byte_end":443994,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":443999,"byte_end":444002,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444007,"byte_end":444089,"line_start":418,"line_end":418,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444094,"byte_end":444121,"line_start":419,"line_end":419,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5316},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444505,"byte_end":444519,"line_start":431,"line_end":431,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"fn <'a> (&'a mut self, bufs: &'a [IoSlice<'a>]) -> WriteVectored<'a, Self>","parent":{"krate":0,"index":5311},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444261,"byte_end":444347,"line_start":426,"line_end":426,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444352,"byte_end":444370,"line_start":427,"line_end":427,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444375,"byte_end":444378,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444383,"byte_end":444465,"line_start":429,"line_end":429,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444470,"byte_end":444497,"line_start":430,"line_end":430,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5318},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":445326,"byte_end":445335,"line_start":457,"line_end":457,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"fn <'a> (&'a mut self, buf: &'a [u8]) -> WriteAll<'a, Self>","parent":{"krate":0,"index":5311},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444673,"byte_end":444705,"line_start":437,"line_end":437,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444710,"byte_end":444713,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444718,"byte_end":444799,"line_start":439,"line_end":439,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444804,"byte_end":444826,"line_start":440,"line_end":440,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444831,"byte_end":444834,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444839,"byte_end":444917,"line_start":442,"line_end":442,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444922,"byte_end":444925,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444930,"byte_end":444944,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444949,"byte_end":444952,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444957,"byte_end":444964,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":444969,"byte_end":445010,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":445015,"byte_end":445060,"line_start":448,"line_end":448,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":445065,"byte_end":445068,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":445073,"byte_end":445120,"line_start":450,"line_end":450,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":445125,"byte_end":445128,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":445133,"byte_end":445176,"line_start":452,"line_end":452,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":445181,"byte_end":445184,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":445189,"byte_end":445242,"line_start":454,"line_end":454,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":445247,"byte_end":445306,"line_start":455,"line_end":455,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":445311,"byte_end":445318,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5320},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446717,"byte_end":446726,"line_start":501,"line_end":501,"column_start":8,"column_end":17},"name":"into_sink","qualname":"::io::AsyncWriteExt::into_sink","value":"fn <Item> (self) -> IntoSink<Self, Item>","parent":{"krate":0,"index":5311},"children":[],"decl_id":null,"docs":" Allow using an [`AsyncWrite`] as a [`Sink`](futures_sink::Sink)`<Item: AsRef<[u8]>>`.","sig":null,"attributes":[{"value":"/ Allow using an [`AsyncWrite`] as a [`Sink`](futures_sink::Sink)`<Item: AsRef<[u8]>>`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":445810,"byte_end":445899,"line_start":474,"line_end":474,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":445904,"byte_end":445907,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a sink that will write each value passed to it","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":445912,"byte_end":445984,"line_start":476,"line_end":476,"column_start":5,"column_end":77}},{"value":"/ into the underlying writer.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":445989,"byte_end":446020,"line_start":477,"line_end":477,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446025,"byte_end":446028,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given writer, returning a wrapped","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446033,"byte_end":446107,"line_start":479,"line_end":479,"column_start":5,"column_end":79}},{"value":"/ version.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446112,"byte_end":446124,"line_start":480,"line_end":480,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446129,"byte_end":446132,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446137,"byte_end":446151,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446156,"byte_end":446159,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446164,"byte_end":446171,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446176,"byte_end":446217,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/ use futures::io::AsyncWriteExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446222,"byte_end":446257,"line_start":486,"line_end":486,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446262,"byte_end":446305,"line_start":487,"line_end":487,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446310,"byte_end":446313,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok([1, 2, 3]), Ok([4, 5, 6])]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446318,"byte_end":446384,"line_start":489,"line_end":489,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446389,"byte_end":446392,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let mut writer = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446397,"byte_end":446425,"line_start":491,"line_end":491,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446430,"byte_end":446433,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ stream.forward((&mut writer).into_sink()).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446438,"byte_end":446491,"line_start":493,"line_end":493,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446496,"byte_end":446499,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer, vec![1, 2, 3, 4, 5, 6]);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446504,"byte_end":446551,"line_start":495,"line_end":495,"column_start":5,"column_end":52}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446556,"byte_end":446602,"line_start":496,"line_end":496,"column_start":5,"column_end":51}},{"value":"/ # })?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446607,"byte_end":446617,"line_start":497,"line_end":497,"column_start":5,"column_end":15}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446622,"byte_end":446668,"line_start":498,"line_end":498,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446673,"byte_end":446680,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446685,"byte_end":446709,"line_start":500,"line_end":500,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":5324},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446981,"byte_end":446993,"line_start":511,"line_end":511,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":5325}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446899,"byte_end":446970,"line_start":510,"line_end":510,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5325},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":447263,"byte_end":447267,"line_start":517,"line_end":517,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"fn (&mut self, pos: SeekFrom) -> Seek<'_, Self>","parent":{"krate":0,"index":5324},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":447011,"byte_end":447080,"line_start":512,"line_end":512,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":447085,"byte_end":447138,"line_start":513,"line_end":513,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":447143,"byte_end":447146,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":447151,"byte_end":447228,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":447233,"byte_end":447255,"line_start":516,"line_end":516,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":5328},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":447519,"byte_end":447534,"line_start":527,"line_end":527,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":5329},{"krate":0,"index":5331},{"krate":0,"index":5333}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":447434,"byte_end":447508,"line_start":526,"line_end":526,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5329},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":449138,"byte_end":449148,"line_start":569,"line_end":569,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"fn <'a> (&'a mut self, byte: u8, buf: &'a mut Vec<u8>) -> ReadUntil<'a, Self>","parent":{"krate":0,"index":5328},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":447555,"byte_end":447630,"line_start":528,"line_end":528,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":447635,"byte_end":447702,"line_start":529,"line_end":529,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":447707,"byte_end":447804,"line_start":530,"line_end":530,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":447809,"byte_end":447812,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":447817,"byte_end":447887,"line_start":532,"line_end":532,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":447892,"byte_end":447966,"line_start":533,"line_end":533,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":447971,"byte_end":448026,"line_start":534,"line_end":534,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448031,"byte_end":448034,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448039,"byte_end":448117,"line_start":536,"line_end":536,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448122,"byte_end":448149,"line_start":537,"line_end":537,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448154,"byte_end":448157,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448162,"byte_end":448239,"line_start":539,"line_end":539,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448244,"byte_end":448266,"line_start":540,"line_end":540,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448271,"byte_end":448274,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448279,"byte_end":448293,"line_start":542,"line_end":542,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448298,"byte_end":448301,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448306,"byte_end":448313,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448318,"byte_end":448359,"line_start":545,"line_end":545,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448364,"byte_end":448411,"line_start":546,"line_end":546,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448416,"byte_end":448419,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448424,"byte_end":448473,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448478,"byte_end":448503,"line_start":549,"line_end":549,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448508,"byte_end":448511,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448516,"byte_end":448539,"line_start":551,"line_end":551,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448544,"byte_end":448605,"line_start":552,"line_end":552,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448610,"byte_end":448639,"line_start":553,"line_end":553,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448644,"byte_end":448675,"line_start":554,"line_end":554,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448680,"byte_end":448696,"line_start":555,"line_end":555,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448701,"byte_end":448704,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448709,"byte_end":448732,"line_start":557,"line_end":557,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448737,"byte_end":448798,"line_start":558,"line_end":558,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448803,"byte_end":448832,"line_start":559,"line_end":559,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448837,"byte_end":448867,"line_start":560,"line_end":560,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448872,"byte_end":448888,"line_start":561,"line_end":561,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448893,"byte_end":448896,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448901,"byte_end":448924,"line_start":563,"line_end":563,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448929,"byte_end":448990,"line_start":564,"line_end":564,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":448995,"byte_end":449024,"line_start":565,"line_end":565,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":449029,"byte_end":449054,"line_start":566,"line_end":566,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":449059,"byte_end":449118,"line_start":567,"line_end":567,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":449123,"byte_end":449130,"line_start":568,"line_end":568,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5331},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451319,"byte_end":451328,"line_start":630,"line_end":630,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"fn <'a> (&'a mut self, buf: &'a mut String) -> ReadLine<'a, Self>","parent":{"krate":0,"index":5328},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":449337,"byte_end":449412,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":449417,"byte_end":449488,"line_start":580,"line_end":580,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":449493,"byte_end":449588,"line_start":581,"line_end":581,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":449593,"byte_end":449596,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":449601,"byte_end":449671,"line_start":583,"line_end":583,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":449676,"byte_end":449751,"line_start":584,"line_end":584,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":449756,"byte_end":449826,"line_start":585,"line_end":585,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":449831,"byte_end":449841,"line_start":586,"line_end":586,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":449846,"byte_end":449849,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":449854,"byte_end":449932,"line_start":588,"line_end":588,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":449937,"byte_end":449964,"line_start":589,"line_end":589,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":449969,"byte_end":449972,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":449977,"byte_end":450054,"line_start":591,"line_end":591,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450059,"byte_end":450081,"line_start":592,"line_end":592,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450086,"byte_end":450089,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450094,"byte_end":450106,"line_start":594,"line_end":594,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450111,"byte_end":450114,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450119,"byte_end":450192,"line_start":596,"line_end":596,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450197,"byte_end":450270,"line_start":597,"line_end":597,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450275,"byte_end":450349,"line_start":598,"line_end":598,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450354,"byte_end":450410,"line_start":599,"line_end":599,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450415,"byte_end":450418,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450423,"byte_end":450470,"line_start":601,"line_end":601,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450475,"byte_end":450478,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450483,"byte_end":450497,"line_start":603,"line_end":603,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450502,"byte_end":450505,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450510,"byte_end":450517,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450522,"byte_end":450563,"line_start":606,"line_end":606,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450568,"byte_end":450615,"line_start":607,"line_end":607,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450620,"byte_end":450623,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450628,"byte_end":450674,"line_start":609,"line_end":609,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450679,"byte_end":450711,"line_start":610,"line_end":610,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450716,"byte_end":450719,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450724,"byte_end":450747,"line_start":612,"line_end":612,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450752,"byte_end":450806,"line_start":613,"line_end":613,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450811,"byte_end":450840,"line_start":614,"line_end":614,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450845,"byte_end":450874,"line_start":615,"line_end":615,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450879,"byte_end":450895,"line_start":616,"line_end":616,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450900,"byte_end":450903,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450908,"byte_end":450931,"line_start":618,"line_end":618,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450936,"byte_end":450990,"line_start":619,"line_end":619,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":450995,"byte_end":451024,"line_start":620,"line_end":620,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451029,"byte_end":451056,"line_start":621,"line_end":621,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451061,"byte_end":451077,"line_start":622,"line_end":622,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451082,"byte_end":451085,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451090,"byte_end":451113,"line_start":624,"line_end":624,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451118,"byte_end":451172,"line_start":625,"line_end":625,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451177,"byte_end":451206,"line_start":626,"line_end":626,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451211,"byte_end":451235,"line_start":627,"line_end":627,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451240,"byte_end":451299,"line_start":628,"line_end":628,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451304,"byte_end":451311,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5333},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452813,"byte_end":452818,"line_start":668,"line_end":668,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"fn (self) -> Lines<Self>","parent":{"krate":0,"index":5328},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451467,"byte_end":451518,"line_start":636,"line_end":636,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451523,"byte_end":451610,"line_start":637,"line_end":637,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451615,"byte_end":451618,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451623,"byte_end":451689,"line_start":639,"line_end":639,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451694,"byte_end":451776,"line_start":640,"line_end":640,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451781,"byte_end":451841,"line_start":641,"line_end":641,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451846,"byte_end":451849,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451854,"byte_end":451889,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451894,"byte_end":451916,"line_start":644,"line_end":644,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451921,"byte_end":451924,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451929,"byte_end":451941,"line_start":646,"line_end":646,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451946,"byte_end":451949,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":451954,"byte_end":452045,"line_start":648,"line_end":648,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452050,"byte_end":452053,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452058,"byte_end":452120,"line_start":650,"line_end":650,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452125,"byte_end":452128,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452133,"byte_end":452147,"line_start":652,"line_end":652,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452152,"byte_end":452155,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452160,"byte_end":452167,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452172,"byte_end":452213,"line_start":655,"line_end":655,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452218,"byte_end":452265,"line_start":656,"line_end":656,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452270,"byte_end":452305,"line_start":657,"line_end":657,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452310,"byte_end":452313,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452318,"byte_end":452373,"line_start":659,"line_end":659,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452378,"byte_end":452381,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452386,"byte_end":452448,"line_start":661,"line_end":661,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452453,"byte_end":452524,"line_start":662,"line_end":662,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452529,"byte_end":452600,"line_start":663,"line_end":663,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452605,"byte_end":452676,"line_start":664,"line_end":664,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452681,"byte_end":452729,"line_start":665,"line_end":665,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452734,"byte_end":452793,"line_start":666,"line_end":666,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452798,"byte_end":452805,"line_start":667,"line_end":667,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":7892},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":7893},{"krate":0,"index":7998},{"krate":0,"index":8002},{"krate":0,"index":8059}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3571,"byte_end":3596,"line_start":117,"line_end":117,"column_start":5,"column_end":30}},{"value":"! Futures-powered synchronization primitives.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mod.rs","byte_start":8528352,"byte_end":8528399,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mod.rs","byte_start":8528400,"byte_end":8528403,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mod.rs","byte_start":8528404,"byte_end":8528479,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mod.rs","byte_start":8528480,"byte_end":8528537,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7914},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8529348,"byte_end":8529353,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":7916},{"krate":0,"index":7917},{"krate":0,"index":7918}],"decl_id":null,"docs":" A futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8529310,"byte_end":8529336,"line_start":11,"line_end":11,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":7941},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8530682,"byte_end":8530685,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"fn (t: T) -> Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8530632,"byte_end":8530670,"line_start":66,"line_end":66,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":7942},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531117,"byte_end":8531127,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8530871,"byte_end":8530926,"line_start":75,"line_end":75,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8530931,"byte_end":8530934,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8530939,"byte_end":8530953,"line_start":77,"line_end":77,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8530958,"byte_end":8530961,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8530966,"byte_end":8530973,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8530978,"byte_end":8531007,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531012,"byte_end":8531015,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531020,"byte_end":8531050,"line_start":82,"line_end":82,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531055,"byte_end":8531093,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531098,"byte_end":8531105,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7945},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531341,"byte_end":8531349,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn (&self) -> Option<MutexGuard<'_, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531213,"byte_end":8531257,"line_start":91,"line_end":91,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531262,"byte_end":8531265,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531270,"byte_end":8531329,"line_start":93,"line_end":93,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":7946},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531770,"byte_end":8531774,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"fn (&self) -> MutexLockFuture<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531605,"byte_end":8531641,"line_start":103,"line_end":103,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531646,"byte_end":8531649,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531654,"byte_end":8531727,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531732,"byte_end":8531758,"line_start":106,"line_end":106,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":7947},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8532435,"byte_end":8532442,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531925,"byte_end":8531980,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531985,"byte_end":8531988,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531993,"byte_end":8532068,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8532073,"byte_end":8532147,"line_start":117,"line_end":117,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8532152,"byte_end":8532155,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8532160,"byte_end":8532174,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8532179,"byte_end":8532182,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8532187,"byte_end":8532194,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8532199,"byte_end":8532240,"line_start":122,"line_end":122,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8532245,"byte_end":8532274,"line_start":123,"line_end":123,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8532279,"byte_end":8532282,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8532287,"byte_end":8532321,"line_start":125,"line_end":125,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8532326,"byte_end":8532352,"line_start":126,"line_end":126,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8532357,"byte_end":8532397,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8532402,"byte_end":8532411,"line_start":128,"line_end":128,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8532416,"byte_end":8532423,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7950},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8533734,"byte_end":8533749,"line_start":163,"line_end":163,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":7953},{"krate":0,"index":7954}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8533641,"byte_end":8533722,"line_start":162,"line_end":162,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":7969},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8536363,"byte_end":8536373,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":7972}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8536199,"byte_end":8536263,"line_start":239,"line_end":239,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8536264,"byte_end":8536337,"line_start":240,"line_end":240,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8536338,"byte_end":8536351,"line_start":241,"line_end":241,"column_start":1,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/poll.rs","byte_start":5492,"byte_end":5500,"line_start":30,"line_end":30,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/pending.rs","byte_start":6662,"byte_end":6673,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten.rs","byte_start":38751,"byte_end":38758,"line_start":16,"line_end":16,"column_start":11,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5366},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten.rs","byte_start":39035,"byte_end":39042,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten.rs","byte_start":39316,"byte_end":39323,"line_start":40,"line_end":40,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten.rs","byte_start":39476,"byte_end":39483,"line_start":47,"line_end":47,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten_stream.rs","byte_start":40143,"byte_end":40156,"line_start":14,"line_end":14,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5369},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten_stream.rs","byte_start":40385,"byte_end":40398,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten_stream.rs","byte_start":40830,"byte_end":40835,"line_start":43,"line_end":43,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten_stream.rs","byte_start":41534,"byte_end":41547,"line_start":57,"line_end":57,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten_stream.rs","byte_start":41829,"byte_end":41842,"line_start":69,"line_end":69,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":42908,"byte_end":42912,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5391},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44795,"byte_end":44799,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44913,"byte_end":44917,"line_start":78,"line_end":78,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/into_stream.rs","byte_start":45694,"byte_end":45704,"line_start":15,"line_end":15,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5400},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/into_stream.rs","byte_start":45916,"byte_end":45926,"line_start":25,"line_end":25,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/into_stream.rs","byte_start":46251,"byte_end":46261,"line_start":39,"line_end":39,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/map.rs","byte_start":46730,"byte_end":46733,"line_start":14,"line_end":14,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5412},{"krate":0,"index":5415},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/map.rs","byte_start":46973,"byte_end":46976,"line_start":24,"line_end":24,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/map.rs","byte_start":47021,"byte_end":47024,"line_start":26,"line_end":26,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/map.rs","byte_start":47184,"byte_end":47187,"line_start":33,"line_end":33,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/then.rs","byte_start":48019,"byte_end":48023,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5427},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/then.rs","byte_start":48348,"byte_end":48352,"line_start":28,"line_end":28,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/then.rs","byte_start":48562,"byte_end":48566,"line_start":36,"line_end":36,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/inspect.rs","byte_start":49284,"byte_end":49291,"line_start":14,"line_end":14,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5439},{"krate":0,"index":5442},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/inspect.rs","byte_start":49554,"byte_end":49561,"line_start":26,"line_end":26,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/inspect.rs","byte_start":49603,"byte_end":49610,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/inspect.rs","byte_start":49779,"byte_end":49786,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/unit_error.rs","byte_start":50512,"byte_end":50521,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5450},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/unit_error.rs","byte_start":50683,"byte_end":50692,"line_start":21,"line_end":21,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/unit_error.rs","byte_start":50741,"byte_end":50750,"line_start":23,"line_end":23,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/unit_error.rs","byte_start":50853,"byte_end":50862,"line_start":27,"line_end":27,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/never_error.rs","byte_start":51453,"byte_end":51463,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5459},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/never_error.rs","byte_start":51627,"byte_end":51637,"line_start":22,"line_end":22,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/never_error.rs","byte_start":51686,"byte_end":51696,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/never_error.rs","byte_start":51799,"byte_end":51809,"line_start":28,"line_end":28,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/catch_unwind.rs","byte_start":52450,"byte_end":52461,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5468},{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/catch_unwind.rs","byte_start":52652,"byte_end":52663,"line_start":23,"line_end":23,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":53693,"byte_end":53705,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":54019,"byte_end":54031,"line_start":41,"line_end":41,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":54863,"byte_end":54869,"line_start":64,"line_end":64,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":55072,"byte_end":55078,"line_start":72,"line_end":72,"column_start":37,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":55106,"byte_end":55112,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5478},{"krate":0,"index":5481}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":55272,"byte_end":55278,"line_start":79,"line_end":79,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":57394,"byte_end":57400,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":57443,"byte_end":57449,"line_start":33,"line_end":33,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":57707,"byte_end":57712,"line_start":42,"line_end":42,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":57939,"byte_end":57944,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":58040,"byte_end":58045,"line_start":59,"line_end":59,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":58313,"byte_end":58319,"line_start":73,"line_end":73,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":58785,"byte_end":58791,"line_start":90,"line_end":90,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":61332,"byte_end":61337,"line_start":161,"line_end":161,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":61729,"byte_end":61735,"line_start":176,"line_end":176,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":61887,"byte_end":61893,"line_start":186,"line_end":186,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":63151,"byte_end":63156,"line_start":227,"line_end":227,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":65201,"byte_end":65207,"line_start":293,"line_end":293,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":65401,"byte_end":65407,"line_start":305,"line_end":305,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":65835,"byte_end":65843,"line_start":322,"line_end":322,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/chain.rs","byte_start":66584,"byte_end":66589,"line_start":13,"line_end":13,"column_start":48,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/chain.rs","byte_start":66635,"byte_end":66640,"line_start":15,"line_end":15,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/chain.rs","byte_start":66801,"byte_end":66806,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":22489,"byte_end":22490,"line_start":81,"line_end":81,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/and_then.rs","byte_start":84559,"byte_end":84566,"line_start":14,"line_end":14,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5511},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/and_then.rs","byte_start":84917,"byte_end":84924,"line_start":28,"line_end":28,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/and_then.rs","byte_start":85173,"byte_end":85180,"line_start":38,"line_end":38,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/err_into.rs","byte_start":86131,"byte_end":86138,"line_start":15,"line_end":15,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/err_into.rs","byte_start":86164,"byte_end":86171,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5523},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/err_into.rs","byte_start":86392,"byte_end":86399,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/err_into.rs","byte_start":86576,"byte_end":86583,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_sink.rs","byte_start":87390,"byte_end":87401,"line_start":19,"line_end":19,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5534},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_sink.rs","byte_start":87659,"byte_end":87670,"line_start":32,"line_end":32,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_sink.rs","byte_start":87873,"byte_end":87884,"line_start":42,"line_end":42,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_sink.rs","byte_start":88181,"byte_end":88192,"line_start":54,"line_end":54,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_ok.rs","byte_start":89287,"byte_end":89296,"line_start":14,"line_end":14,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_ok.rs","byte_start":89322,"byte_end":89331,"line_start":16,"line_end":16,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5546},{"krate":0,"index":5549},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_ok.rs","byte_start":89588,"byte_end":89597,"line_start":29,"line_end":29,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_ok.rs","byte_start":89780,"byte_end":89789,"line_start":39,"line_end":39,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_err.rs","byte_start":90626,"byte_end":90636,"line_start":14,"line_end":14,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_err.rs","byte_start":90662,"byte_end":90672,"line_start":16,"line_end":16,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5560},{"krate":0,"index":5563},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_err.rs","byte_start":90932,"byte_end":90942,"line_start":29,"line_end":29,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_err.rs","byte_start":91128,"byte_end":91138,"line_start":39,"line_end":39,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/into_future.rs","byte_start":91920,"byte_end":91930,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5571},{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/into_future.rs","byte_start":92132,"byte_end":92142,"line_start":22,"line_end":22,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/into_future.rs","byte_start":92253,"byte_end":92263,"line_start":26,"line_end":26,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_err.rs","byte_start":92884,"byte_end":92890,"line_start":14,"line_end":14,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5583},{"krate":0,"index":5586},{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_err.rs","byte_start":93139,"byte_end":93145,"line_start":24,"line_end":24,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_err.rs","byte_start":93190,"byte_end":93196,"line_start":26,"line_end":26,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_err.rs","byte_start":93358,"byte_end":93364,"line_start":33,"line_end":33,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_ok.rs","byte_start":94281,"byte_end":94286,"line_start":14,"line_end":14,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5597},{"krate":0,"index":5600},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_ok.rs","byte_start":94532,"byte_end":94537,"line_start":24,"line_end":24,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_ok.rs","byte_start":94582,"byte_end":94587,"line_start":26,"line_end":26,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_ok.rs","byte_start":94758,"byte_end":94763,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/or_else.rs","byte_start":95719,"byte_end":95725,"line_start":14,"line_end":14,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5612},{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/or_else.rs","byte_start":96074,"byte_end":96080,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/or_else.rs","byte_start":96326,"byte_end":96332,"line_start":38,"line_end":38,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/try_flatten_stream.rs","byte_start":97398,"byte_end":97414,"line_start":20,"line_end":20,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5615},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/try_flatten_stream.rs","byte_start":97699,"byte_end":97715,"line_start":34,"line_end":34,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/try_flatten_stream.rs","byte_start":97991,"byte_end":98007,"line_start":46,"line_end":46,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/try_flatten_stream.rs","byte_start":98202,"byte_end":98218,"line_start":56,"line_end":56,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/try_flatten_stream.rs","byte_start":98552,"byte_end":98568,"line_start":69,"line_end":69,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/unwrap_or_else.rs","byte_start":99685,"byte_end":99697,"line_start":15,"line_end":15,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5627},{"krate":0,"index":5630},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/unwrap_or_else.rs","byte_start":99964,"byte_end":99976,"line_start":25,"line_end":25,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/unwrap_or_else.rs","byte_start":100018,"byte_end":100030,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/unwrap_or_else.rs","byte_start":100207,"byte_end":100219,"line_start":36,"line_end":36,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_stream_sink.rs","byte_start":101158,"byte_end":101175,"line_start":18,"line_end":18,"column_start":21,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_stream_sink.rs","byte_start":101265,"byte_end":101282,"line_start":25,"line_end":25,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_stream_sink.rs","byte_start":101543,"byte_end":101560,"line_start":37,"line_end":37,"column_start":11,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5632},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_stream_sink.rs","byte_start":101995,"byte_end":102000,"line_start":60,"line_end":60,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_stream_sink.rs","byte_start":102733,"byte_end":102738,"line_start":75,"line_end":75,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_stream_sink.rs","byte_start":103595,"byte_end":103612,"line_start":100,"line_end":100,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_stream_sink.rs","byte_start":103949,"byte_end":103966,"line_start":114,"line_end":114,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_stream_sink.rs","byte_start":104540,"byte_end":104557,"line_start":132,"line_end":132,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/try_chain.rs","byte_start":106603,"byte_end":106611,"line_start":13,"line_end":13,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/try_chain.rs","byte_start":106787,"byte_end":106795,"line_start":22,"line_end":22,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70095,"byte_end":70098,"line_start":73,"line_end":73,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":109815,"byte_end":109819,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":110392,"byte_end":110396,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":110528,"byte_end":110532,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111079,"byte_end":111086,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111637,"byte_end":111644,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111789,"byte_end":111796,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111823,"byte_end":111830,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112578,"byte_end":112587,"line_start":23,"line_end":23,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":113166,"byte_end":113175,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1120},{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":114381,"byte_end":114390,"line_start":81,"line_end":81,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":114606,"byte_end":114615,"line_start":90,"line_end":90,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115925,"byte_end":115937,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5702}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":116012,"byte_end":116024,"line_start":35,"line_end":35,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":116354,"byte_end":116366,"line_start":49,"line_end":49,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":116554,"byte_end":116566,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":116979,"byte_end":116985,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117655,"byte_end":117661,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117803,"byte_end":117809,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118296,"byte_end":118301,"line_start":10,"line_end":10,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118333,"byte_end":118338,"line_start":12,"line_end":12,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118435,"byte_end":118440,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":125181,"byte_end":125190,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":125907,"byte_end":125916,"line_start":44,"line_end":44,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":126579,"byte_end":126586,"line_start":68,"line_end":68,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":128252,"byte_end":128259,"line_start":124,"line_end":124,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":129155,"byte_end":129162,"line_start":155,"line_end":155,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":129632,"byte_end":129638,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":131001,"byte_end":131007,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":131710,"byte_end":131716,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1318}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132253,"byte_end":132262,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":133242,"byte_end":133251,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":133957,"byte_end":133966,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":142315,"byte_end":142324,"line_start":24,"line_end":24,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1405},{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":143040,"byte_end":143049,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":143787,"byte_end":143797,"line_start":72,"line_end":72,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":145557,"byte_end":145567,"line_start":134,"line_end":134,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1432},{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":146971,"byte_end":146981,"line_start":175,"line_end":175,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":147463,"byte_end":147472,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":149178,"byte_end":149187,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1462},{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":150540,"byte_end":150548,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":151518,"byte_end":151526,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1485},{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":152970,"byte_end":152978,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":153555,"byte_end":153561,"line_start":18,"line_end":18,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1511}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":153946,"byte_end":153952,"line_start":30,"line_end":30,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":154333,"byte_end":154339,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":154580,"byte_end":154586,"line_start":52,"line_end":52,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":155015,"byte_end":155021,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":155297,"byte_end":155303,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1532},{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":155745,"byte_end":155751,"line_start":99,"line_end":99,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":156058,"byte_end":156064,"line_start":113,"line_end":113,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":157873,"byte_end":157879,"line_start":169,"line_end":169,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1565},{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":159136,"byte_end":159142,"line_start":209,"line_end":209,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":160853,"byte_end":160859,"line_start":259,"line_end":259,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":161390,"byte_end":161396,"line_start":278,"line_end":278,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1581},{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8455907,"byte_end":8455916,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8455936,"byte_end":8455945,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8124},{"krate":0,"index":6109}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457281,"byte_end":8457292,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6111}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8459168,"byte_end":8459175,"line_start":128,"line_end":128,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6115}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8459358,"byte_end":8459365,"line_start":135,"line_end":135,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8459391,"byte_end":8459400,"line_start":137,"line_end":137,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6119},{"krate":0,"index":6120}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8460366,"byte_end":8460377,"line_start":166,"line_end":166,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6122}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chain.rs","byte_start":205559,"byte_end":205564,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6176},{"krate":0,"index":6179},{"krate":0,"index":1627}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chain.rs","byte_start":205907,"byte_end":205912,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chain.rs","byte_start":206117,"byte_end":206122,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/collect.rs","byte_start":207653,"byte_end":207660,"line_start":16,"line_end":16,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/collect.rs","byte_start":207701,"byte_end":207708,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6191},{"krate":0,"index":6194},{"krate":0,"index":1660},{"krate":0,"index":1661}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/collect.rs","byte_start":208094,"byte_end":208101,"line_start":34,"line_end":34,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1665}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/collect.rs","byte_start":208277,"byte_end":208284,"line_start":43,"line_end":43,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1669},{"krate":0,"index":1670}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/concat.rs","byte_start":209169,"byte_end":209175,"line_start":15,"line_end":15,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/concat.rs","byte_start":209193,"byte_end":209199,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6203},{"krate":0,"index":6206},{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/concat.rs","byte_start":209554,"byte_end":209560,"line_start":33,"line_end":33,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1693},{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/concat.rs","byte_start":210357,"byte_end":210363,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":211034,"byte_end":211043,"line_start":16,"line_end":16,"column_start":27,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":211069,"byte_end":211078,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6215},{"krate":0,"index":6218},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":212471,"byte_end":212480,"line_start":62,"line_end":62,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":212598,"byte_end":212607,"line_start":68,"line_end":68,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":213262,"byte_end":213271,"line_start":92,"line_end":92,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1731},{"krate":0,"index":6220},{"krate":0,"index":6221},{"krate":0,"index":6222},{"krate":0,"index":6223}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":213923,"byte_end":213929,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":214024,"byte_end":214030,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":214422,"byte_end":214428,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6224},{"krate":0,"index":6227},{"krate":0,"index":6229},{"krate":0,"index":6232},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":216057,"byte_end":216063,"line_start":94,"line_end":94,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1777}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":216331,"byte_end":216337,"line_start":104,"line_end":104,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":217846,"byte_end":217852,"line_start":149,"line_end":149,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1790},{"krate":0,"index":6234},{"krate":0,"index":6235},{"krate":0,"index":6236},{"krate":0,"index":6237}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":218536,"byte_end":218545,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":218631,"byte_end":218640,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1821}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":218937,"byte_end":218946,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6238},{"krate":0,"index":6241},{"krate":0,"index":6243},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":220441,"byte_end":220450,"line_start":83,"line_end":83,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":220721,"byte_end":220730,"line_start":93,"line_end":93,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1844}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":222069,"byte_end":222078,"line_start":135,"line_end":135,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":6246},{"krate":0,"index":6247},{"krate":0,"index":6248},{"krate":0,"index":6249}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":222685,"byte_end":222692,"line_start":19,"line_end":19,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":222762,"byte_end":222769,"line_start":26,"line_end":26,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6257},{"krate":0,"index":6260}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":222886,"byte_end":222893,"line_start":34,"line_end":34,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":224194,"byte_end":224201,"line_start":76,"line_end":76,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1875}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":224383,"byte_end":224390,"line_start":86,"line_end":86,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1878},{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":225212,"byte_end":225219,"line_start":113,"line_end":113,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1883},{"krate":0,"index":6263},{"krate":0,"index":6264},{"krate":0,"index":6265},{"krate":0,"index":6266}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fold.rs","byte_start":225814,"byte_end":225818,"line_start":17,"line_end":17,"column_start":45,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fold.rs","byte_start":225873,"byte_end":225877,"line_start":19,"line_end":19,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1917}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fold.rs","byte_start":226233,"byte_end":226237,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6267},{"krate":0,"index":6270},{"krate":0,"index":6272},{"krate":0,"index":6274},{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fold.rs","byte_start":226712,"byte_end":226716,"line_start":54,"line_end":54,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1929}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fold.rs","byte_start":226963,"byte_end":226967,"line_start":64,"line_end":64,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1935},{"krate":0,"index":1936}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/forward.rs","byte_start":228606,"byte_end":228613,"line_start":20,"line_end":20,"column_start":50,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/forward.rs","byte_start":228642,"byte_end":228649,"line_start":22,"line_end":22,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6287},{"krate":0,"index":6290},{"krate":0,"index":6293},{"krate":0,"index":1964},{"krate":0,"index":1965}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/forward.rs","byte_start":229596,"byte_end":229603,"line_start":56,"line_end":56,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1971}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/forward.rs","byte_start":229799,"byte_end":229806,"line_start":66,"line_end":66,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1977},{"krate":0,"index":1978}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each.rs","byte_start":231439,"byte_end":231446,"line_start":16,"line_end":16,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each.rs","byte_start":231532,"byte_end":231539,"line_start":22,"line_end":22,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2010}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each.rs","byte_start":231832,"byte_end":231839,"line_start":35,"line_end":35,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6295},{"krate":0,"index":6298},{"krate":0,"index":6300},{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each.rs","byte_start":232235,"byte_end":232242,"line_start":53,"line_end":53,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each.rs","byte_start":232493,"byte_end":232500,"line_start":63,"line_end":63,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2025},{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":233666,"byte_end":233670,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":233688,"byte_end":233692,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6310},{"krate":0,"index":6313},{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2049}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":235351,"byte_end":235355,"line_start":68,"line_end":68,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2052}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":235453,"byte_end":235457,"line_start":74,"line_end":74,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":236155,"byte_end":236159,"line_start":103,"line_end":103,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2061},{"krate":0,"index":6315},{"krate":0,"index":6316},{"krate":0,"index":6317},{"krate":0,"index":6318}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":236677,"byte_end":236689,"line_start":15,"line_end":15,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":236723,"byte_end":236735,"line_start":17,"line_end":17,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6325},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":239268,"byte_end":239280,"line_start":77,"line_end":77,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":239400,"byte_end":239412,"line_start":83,"line_end":83,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":240242,"byte_end":240249,"line_start":16,"line_end":16,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":240288,"byte_end":240295,"line_start":18,"line_end":18,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2115}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":240514,"byte_end":240521,"line_start":29,"line_end":29,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6328},{"krate":0,"index":6331},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":241908,"byte_end":241915,"line_start":73,"line_end":73,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2127}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":242234,"byte_end":242241,"line_start":89,"line_end":89,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2138}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":242796,"byte_end":242803,"line_start":112,"line_end":112,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2143},{"krate":0,"index":6333},{"krate":0,"index":6334},{"krate":0,"index":6335},{"krate":0,"index":6336}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":243354,"byte_end":243357,"line_start":16,"line_end":16,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":243396,"byte_end":243399,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2170}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":243617,"byte_end":243620,"line_start":29,"line_end":29,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6337},{"krate":0,"index":6340},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":245006,"byte_end":245009,"line_start":73,"line_end":73,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2184}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":245190,"byte_end":245193,"line_start":82,"line_end":82,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2193}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":245732,"byte_end":245735,"line_start":105,"line_end":105,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2199},{"krate":0,"index":6342},{"krate":0,"index":6343},{"krate":0,"index":6344},{"krate":0,"index":6345}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/next.rs","byte_start":246308,"byte_end":246312,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/next.rs","byte_start":246363,"byte_end":246367,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2218}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/next.rs","byte_start":246518,"byte_end":246522,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2221}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/next.rs","byte_start":246661,"byte_end":246665,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2224},{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/select_next_some.rs","byte_start":247314,"byte_end":247328,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/select_next_some.rs","byte_start":247489,"byte_end":247503,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/select_next_some.rs","byte_start":247647,"byte_end":247661,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2246},{"krate":0,"index":2247}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":248783,"byte_end":248791,"line_start":21,"line_end":21,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":248817,"byte_end":248825,"line_start":23,"line_end":23,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6369},{"krate":0,"index":6372},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":251110,"byte_end":251118,"line_start":89,"line_end":89,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2276}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":251260,"byte_end":251268,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":252066,"byte_end":252074,"line_start":122,"line_end":122,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2285},{"krate":0,"index":6374},{"krate":0,"index":6375},{"krate":0,"index":6376},{"krate":0,"index":6377}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":252602,"byte_end":252606,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":252632,"byte_end":252636,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6385},{"krate":0,"index":6388},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":254028,"byte_end":254032,"line_start":62,"line_end":62,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2310}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":254150,"byte_end":254154,"line_start":68,"line_end":68,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":255049,"byte_end":255053,"line_start":100,"line_end":100,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2319},{"krate":0,"index":6390},{"krate":0,"index":6391},{"krate":0,"index":6392},{"krate":0,"index":6393}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":255759,"byte_end":255768,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":255817,"byte_end":255826,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2352}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":256278,"byte_end":256287,"line_start":38,"line_end":38,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6394},{"krate":0,"index":6397},{"krate":0,"index":6399},{"krate":0,"index":6402},{"krate":0,"index":6404},{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":258011,"byte_end":258020,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2366}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":258280,"byte_end":258289,"line_start":102,"line_end":102,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2371},{"krate":0,"index":2372},{"krate":0,"index":2373}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":259948,"byte_end":259957,"line_start":152,"line_end":152,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2379},{"krate":0,"index":6406},{"krate":0,"index":6407},{"krate":0,"index":6408},{"krate":0,"index":6409}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":260584,"byte_end":260588,"line_start":17,"line_end":17,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":260614,"byte_end":260618,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6417},{"krate":0,"index":6420},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261992,"byte_end":261996,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":262979,"byte_end":262983,"line_start":102,"line_end":102,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":263231,"byte_end":263235,"line_start":112,"line_end":112,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2414},{"krate":0,"index":6422},{"krate":0,"index":6423},{"krate":0,"index":6424},{"krate":0,"index":6425}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":263931,"byte_end":263940,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":263989,"byte_end":263998,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":264454,"byte_end":264463,"line_start":38,"line_end":38,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6426},{"krate":0,"index":6429},{"krate":0,"index":6431},{"krate":0,"index":6434},{"krate":0,"index":6436}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":264699,"byte_end":264708,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":266221,"byte_end":266230,"line_start":94,"line_end":94,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":267801,"byte_end":267810,"line_start":146,"line_end":146,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":268178,"byte_end":268187,"line_start":158,"line_end":158,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2478},{"krate":0,"index":6438},{"krate":0,"index":6439},{"krate":0,"index":6440},{"krate":0,"index":6441}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":268792,"byte_end":268796,"line_start":18,"line_end":18,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":268845,"byte_end":268849,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2509}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":269139,"byte_end":269143,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6442},{"krate":0,"index":6445},{"krate":0,"index":6448}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":269279,"byte_end":269283,"line_start":39,"line_end":39,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":270683,"byte_end":270687,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2527}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":270925,"byte_end":270929,"line_start":94,"line_end":94,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":272146,"byte_end":272150,"line_start":133,"line_end":133,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2540},{"krate":0,"index":6450},{"krate":0,"index":6451},{"krate":0,"index":6452},{"krate":0,"index":6453}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":272874,"byte_end":272877,"line_start":19,"line_end":19,"column_start":26,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":273007,"byte_end":273010,"line_start":27,"line_end":27,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6465},{"krate":0,"index":6468},{"krate":0,"index":6471},{"krate":0,"index":6473},{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":274942,"byte_end":274945,"line_start":78,"line_end":78,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2571}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":275136,"byte_end":275139,"line_start":86,"line_end":86,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2575},{"krate":0,"index":2576},{"krate":0,"index":2577}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":277838,"byte_end":277844,"line_start":20,"line_end":20,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":277870,"byte_end":277876,"line_start":22,"line_end":22,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6483},{"krate":0,"index":6485},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2603}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":279607,"byte_end":279613,"line_start":74,"line_end":74,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2608}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":281235,"byte_end":281241,"line_start":121,"line_end":121,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2611}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":281464,"byte_end":281470,"line_start":129,"line_end":129,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2615},{"krate":0,"index":6488},{"krate":0,"index":6489},{"krate":0,"index":6490},{"krate":0,"index":6491}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8461646,"byte_end":8461661,"line_start":23,"line_end":23,"column_start":20,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8461724,"byte_end":8461739,"line_start":28,"line_end":28,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6519}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8462071,"byte_end":8462086,"line_start":41,"line_end":41,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8121},{"krate":0,"index":8119},{"krate":0,"index":6522},{"krate":0,"index":6523},{"krate":0,"index":6524},{"krate":0,"index":6525},{"krate":0,"index":6526}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8463738,"byte_end":8463753,"line_start":94,"line_end":94,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6529},{"krate":0,"index":6530},{"krate":0,"index":6531}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8465217,"byte_end":8465232,"line_start":140,"line_end":140,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6534}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8465516,"byte_end":8465531,"line_start":152,"line_end":152,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6538},{"krate":0,"index":6697},{"krate":0,"index":6698},{"krate":0,"index":6699},{"krate":0,"index":6700}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8466250,"byte_end":8466258,"line_start":23,"line_end":23,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8466343,"byte_end":8466351,"line_start":29,"line_end":29,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6565}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8466698,"byte_end":8466706,"line_start":43,"line_end":43,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8116},{"krate":0,"index":8114},{"krate":0,"index":6568},{"krate":0,"index":6569},{"krate":0,"index":6570},{"krate":0,"index":6571},{"krate":0,"index":6572}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8468280,"byte_end":8468288,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6575},{"krate":0,"index":6576},{"krate":0,"index":6577}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8469817,"byte_end":8469825,"line_start":140,"line_end":140,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6581},{"krate":0,"index":6701},{"krate":0,"index":6702},{"krate":0,"index":6703},{"krate":0,"index":6704}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each_concurrent.rs","byte_start":8470577,"byte_end":8470594,"line_start":20,"line_end":20,"column_start":28,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each_concurrent.rs","byte_start":8470678,"byte_end":8470695,"line_start":25,"line_end":25,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6616}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each_concurrent.rs","byte_start":8471041,"byte_end":8471058,"line_start":39,"line_end":39,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8111},{"krate":0,"index":8109},{"krate":0,"index":8107},{"krate":0,"index":8105},{"krate":0,"index":6621}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each_concurrent.rs","byte_start":8471703,"byte_end":8471720,"line_start":60,"line_end":60,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6626}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each_concurrent.rs","byte_start":8471962,"byte_end":8471979,"line_start":70,"line_end":70,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6631},{"krate":0,"index":6632}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8474300,"byte_end":8474311,"line_start":14,"line_end":14,"column_start":19,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8474334,"byte_end":8474345,"line_start":16,"line_end":16,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6648}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8474771,"byte_end":8474782,"line_start":27,"line_end":27,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6652},{"krate":0,"index":6653}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8475333,"byte_end":8475342,"line_start":51,"line_end":51,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8475390,"byte_end":8475399,"line_start":53,"line_end":53,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6663}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8475899,"byte_end":8475908,"line_start":64,"line_end":64,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6668},{"krate":0,"index":6669},{"krate":0,"index":6670},{"krate":0,"index":6671},{"krate":0,"index":6672}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8477632,"byte_end":8477644,"line_start":113,"line_end":113,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6685}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8477846,"byte_end":8477858,"line_start":121,"line_end":121,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6689}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8478107,"byte_end":8478119,"line_start":128,"line_end":128,"column_start":53,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/catch_unwind.rs","byte_start":282060,"byte_end":282071,"line_start":16,"line_end":16,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6728},{"krate":0,"index":6731},{"krate":0,"index":2635}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/catch_unwind.rs","byte_start":282312,"byte_end":282323,"line_start":25,"line_end":25,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2642}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/catch_unwind.rs","byte_start":283207,"byte_end":283218,"line_start":58,"line_end":58,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2645}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":169654,"byte_end":169655,"line_start":157,"line_end":157,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":313262,"byte_end":313269,"line_start":18,"line_end":18,"column_start":42,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":313318,"byte_end":313325,"line_start":20,"line_end":20,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2791}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":313618,"byte_end":313625,"line_start":33,"line_end":33,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6733},{"krate":0,"index":6736},{"krate":0,"index":6739}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":313761,"byte_end":313768,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2800},{"krate":0,"index":2801},{"krate":0,"index":2802},{"krate":0,"index":2803},{"krate":0,"index":2804}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":315152,"byte_end":315159,"line_start":81,"line_end":81,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2809},{"krate":0,"index":2810},{"krate":0,"index":2811}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":316339,"byte_end":316346,"line_start":118,"line_end":118,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2816}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":316704,"byte_end":316711,"line_start":130,"line_end":130,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2822},{"krate":0,"index":6741},{"krate":0,"index":6742},{"krate":0,"index":6743},{"krate":0,"index":6744}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":317289,"byte_end":317296,"line_start":17,"line_end":17,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":317320,"byte_end":317327,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6754},{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2846}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":318636,"byte_end":318643,"line_start":59,"line_end":59,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2850}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":318822,"byte_end":318829,"line_start":69,"line_end":69,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":2858}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":319354,"byte_end":319361,"line_start":91,"line_end":91,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":6757},{"krate":0,"index":6758},{"krate":0,"index":6759},{"krate":0,"index":6760}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":319943,"byte_end":319952,"line_start":17,"line_end":17,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":319991,"byte_end":320000,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2891}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":320221,"byte_end":320230,"line_start":30,"line_end":30,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6761},{"krate":0,"index":6764}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":320315,"byte_end":320324,"line_start":35,"line_end":35,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2898},{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":2901},{"krate":0,"index":2902}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":321632,"byte_end":321641,"line_start":77,"line_end":77,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2906}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":321819,"byte_end":321828,"line_start":87,"line_end":87,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2910},{"krate":0,"index":2911},{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":322416,"byte_end":322425,"line_start":111,"line_end":111,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2920},{"krate":0,"index":6766},{"krate":0,"index":6767},{"krate":0,"index":6768},{"krate":0,"index":6769}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":323010,"byte_end":323020,"line_start":17,"line_end":17,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":323059,"byte_end":323069,"line_start":19,"line_end":19,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2948}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":323291,"byte_end":323301,"line_start":30,"line_end":30,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6770},{"krate":0,"index":6773}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":323386,"byte_end":323396,"line_start":35,"line_end":35,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2955},{"krate":0,"index":2956},{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":324707,"byte_end":324717,"line_start":77,"line_end":77,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2963}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":324898,"byte_end":324908,"line_start":87,"line_end":87,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2972}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":325503,"byte_end":325513,"line_start":111,"line_end":111,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2977},{"krate":0,"index":6775},{"krate":0,"index":6776},{"krate":0,"index":6777},{"krate":0,"index":6778}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":326012,"byte_end":326022,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6785},{"krate":0,"index":2992},{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":327345,"byte_end":327355,"line_start":56,"line_end":56,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2999}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":327476,"byte_end":327486,"line_start":62,"line_end":62,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3004}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":327925,"byte_end":327935,"line_start":80,"line_end":80,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3008},{"krate":0,"index":6788},{"krate":0,"index":6789},{"krate":0,"index":6790},{"krate":0,"index":6791}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":328441,"byte_end":328446,"line_start":16,"line_end":16,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":328485,"byte_end":328490,"line_start":18,"line_end":18,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3035}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":328707,"byte_end":328712,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6792},{"krate":0,"index":6795},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":330066,"byte_end":330071,"line_start":71,"line_end":71,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3048}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":330256,"byte_end":330261,"line_start":81,"line_end":81,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3058}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":330839,"byte_end":330844,"line_start":105,"line_end":105,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3063},{"krate":0,"index":6797},{"krate":0,"index":6798},{"krate":0,"index":6799},{"krate":0,"index":6800}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":331381,"byte_end":331387,"line_start":16,"line_end":16,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":331426,"byte_end":331432,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3090}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":331650,"byte_end":331656,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6801},{"krate":0,"index":6804},{"krate":0,"index":3094},{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3097},{"krate":0,"index":3098}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":333012,"byte_end":333018,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3103}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":333206,"byte_end":333212,"line_start":81,"line_end":81,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3108},{"krate":0,"index":3109},{"krate":0,"index":3113}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":333794,"byte_end":333800,"line_start":105,"line_end":105,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3118},{"krate":0,"index":6806},{"krate":0,"index":6807},{"krate":0,"index":6808},{"krate":0,"index":6809}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":334416,"byte_end":334422,"line_start":18,"line_end":18,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":334471,"byte_end":334477,"line_start":20,"line_end":20,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3150}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":334769,"byte_end":334775,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6810},{"krate":0,"index":6813},{"krate":0,"index":6816}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":334911,"byte_end":334917,"line_start":39,"line_end":39,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3159},{"krate":0,"index":3160},{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3163}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":336298,"byte_end":336304,"line_start":81,"line_end":81,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3170}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":337549,"byte_end":337555,"line_start":119,"line_end":119,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3175}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":337910,"byte_end":337916,"line_start":131,"line_end":131,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3181},{"krate":0,"index":6818},{"krate":0,"index":6819},{"krate":0,"index":6820},{"krate":0,"index":6821}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_next.rs","byte_start":338471,"byte_end":338478,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_next.rs","byte_start":338532,"byte_end":338539,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3200}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_next.rs","byte_start":338705,"byte_end":338712,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":3203}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_next.rs","byte_start":338854,"byte_end":338861,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3206},{"krate":0,"index":3207}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each.rs","byte_start":339583,"byte_end":339593,"line_start":16,"line_end":16,"column_start":42,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each.rs","byte_start":339642,"byte_end":339652,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3237}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each.rs","byte_start":339948,"byte_end":339958,"line_start":31,"line_end":31,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6830},{"krate":0,"index":6833},{"krate":0,"index":6835},{"krate":0,"index":3242}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each.rs","byte_start":340374,"byte_end":340384,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3247},{"krate":0,"index":3248}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":341730,"byte_end":341739,"line_start":22,"line_end":22,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":341833,"byte_end":341842,"line_start":26,"line_end":26,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3281}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":342238,"byte_end":342247,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6838},{"krate":0,"index":6841},{"krate":0,"index":6843},{"krate":0,"index":6846},{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3288},{"krate":0,"index":3289},{"krate":0,"index":3290}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":343801,"byte_end":343810,"line_start":91,"line_end":91,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3295}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":344079,"byte_end":344088,"line_start":101,"line_end":101,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3300},{"krate":0,"index":3301},{"krate":0,"index":3302}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":345643,"byte_end":345652,"line_start":146,"line_end":146,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3309},{"krate":0,"index":6848},{"krate":0,"index":6849},{"krate":0,"index":6850},{"krate":0,"index":6851}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":346302,"byte_end":346314,"line_start":19,"line_end":19,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":346396,"byte_end":346408,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3342}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":346708,"byte_end":346720,"line_start":36,"line_end":36,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6852},{"krate":0,"index":6855},{"krate":0,"index":6857},{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":348119,"byte_end":348131,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3357}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":348421,"byte_end":348433,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3363},{"krate":0,"index":3364},{"krate":0,"index":3365}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":349854,"byte_end":349866,"line_start":130,"line_end":130,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3371},{"krate":0,"index":6860},{"krate":0,"index":6861},{"krate":0,"index":6862},{"krate":0,"index":6863}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":350431,"byte_end":350441,"line_start":19,"line_end":19,"column_start":20,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":350512,"byte_end":350522,"line_start":26,"line_end":26,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6871},{"krate":0,"index":6874}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":350640,"byte_end":350650,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3394}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":352006,"byte_end":352016,"line_start":77,"line_end":77,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3397}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":352262,"byte_end":352272,"line_start":88,"line_end":88,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3400},{"krate":0,"index":3401}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":353297,"byte_end":353307,"line_start":122,"line_end":122,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3405},{"krate":0,"index":6877},{"krate":0,"index":6878},{"krate":0,"index":6879},{"krate":0,"index":6880}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_collect.rs","byte_start":353916,"byte_end":353926,"line_start":16,"line_end":16,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6890},{"krate":0,"index":6893},{"krate":0,"index":3425},{"krate":0,"index":3426}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_collect.rs","byte_start":354301,"byte_end":354311,"line_start":32,"line_end":32,"column_start":42,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_collect.rs","byte_start":354351,"byte_end":354361,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3433}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_collect.rs","byte_start":354549,"byte_end":354559,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3437},{"krate":0,"index":3438}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_concat.rs","byte_start":355495,"byte_end":355504,"line_start":15,"line_end":15,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_concat.rs","byte_start":355522,"byte_end":355531,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6902},{"krate":0,"index":6905},{"krate":0,"index":3454}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_concat.rs","byte_start":355875,"byte_end":355884,"line_start":33,"line_end":33,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3457},{"krate":0,"index":3458}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_fold.rs","byte_start":357172,"byte_end":357179,"line_start":17,"line_end":17,"column_start":45,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_fold.rs","byte_start":357234,"byte_end":357241,"line_start":19,"line_end":19,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3493}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_fold.rs","byte_start":357600,"byte_end":357607,"line_start":34,"line_end":34,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6907},{"krate":0,"index":6910},{"krate":0,"index":6912},{"krate":0,"index":6914},{"krate":0,"index":3499}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_fold.rs","byte_start":358107,"byte_end":358114,"line_start":54,"line_end":54,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3505}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_fold.rs","byte_start":358380,"byte_end":358387,"line_start":64,"line_end":64,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3511},{"krate":0,"index":3512}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":360769,"byte_end":360781,"line_start":21,"line_end":21,"column_start":54,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":360830,"byte_end":360842,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3546}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":361298,"byte_end":361310,"line_start":39,"line_end":39,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6917}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":361402,"byte_end":361414,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6920},{"krate":0,"index":6922},{"krate":0,"index":6925},{"krate":0,"index":6927},{"krate":0,"index":3555},{"krate":0,"index":3556},{"krate":0,"index":3557},{"krate":0,"index":3558},{"krate":0,"index":3559}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":363124,"byte_end":363136,"line_start":98,"line_end":98,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3564},{"krate":0,"index":3565},{"krate":0,"index":3566}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":364768,"byte_end":364780,"line_start":146,"line_end":146,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3571}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":365159,"byte_end":365171,"line_start":158,"line_end":158,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3578},{"krate":0,"index":6929},{"krate":0,"index":6930},{"krate":0,"index":6931},{"krate":0,"index":6932}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8478850,"byte_end":8478868,"line_start":23,"line_end":23,"column_start":20,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8478918,"byte_end":8478936,"line_start":27,"line_end":27,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8102},{"krate":0,"index":8100},{"krate":0,"index":6958},{"krate":0,"index":6959},{"krate":0,"index":6960},{"krate":0,"index":6961},{"krate":0,"index":6962}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8480601,"byte_end":8480619,"line_start":75,"line_end":75,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6965},{"krate":0,"index":6966}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8481912,"byte_end":8481930,"line_start":111,"line_end":111,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6971},{"krate":0,"index":7034},{"krate":0,"index":7035},{"krate":0,"index":7036},{"krate":0,"index":7037}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8482743,"byte_end":8482763,"line_start":22,"line_end":22,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8482847,"byte_end":8482867,"line_start":27,"line_end":27,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7007}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8483232,"byte_end":8483252,"line_start":41,"line_end":41,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7012}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8483503,"byte_end":8483523,"line_start":51,"line_end":51,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8097},{"krate":0,"index":8095},{"krate":0,"index":8093},{"krate":0,"index":8091},{"krate":0,"index":7017}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8484189,"byte_end":8484209,"line_start":72,"line_end":72,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7022},{"krate":0,"index":7023}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_async_read.rs","byte_start":365845,"byte_end":365858,"line_start":21,"line_end":21,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_async_read.rs","byte_start":366074,"byte_end":366087,"line_start":35,"line_end":35,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3599}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_async_read.rs","byte_start":366341,"byte_end":366354,"line_start":48,"line_end":48,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3602}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_async_read.rs","byte_start":368222,"byte_end":368235,"line_start":103,"line_end":103,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3605},{"krate":0,"index":3606},{"krate":0,"index":3607}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_async_read.rs","byte_start":368897,"byte_end":368910,"line_start":131,"line_end":131,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3610},{"krate":0,"index":3611}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":286649,"byte_end":286650,"line_start":105,"line_end":105,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371028,"byte_end":371032,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371638,"byte_end":371642,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3699},{"krate":0,"index":3700},{"krate":0,"index":3701}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372776,"byte_end":372782,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372809,"byte_end":372815,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3719},{"krate":0,"index":3720},{"krate":0,"index":3721}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":373122,"byte_end":373128,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3724}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/empty.rs","byte_start":373740,"byte_end":373745,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/empty.rs","byte_start":373777,"byte_end":373782,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3743}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/empty.rs","byte_start":373867,"byte_end":373872,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3746},{"krate":0,"index":3747},{"krate":0,"index":3748}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374923,"byte_end":374927,"line_start":31,"line_end":31,"column_start":28,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374947,"byte_end":374951,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7081}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":375032,"byte_end":375036,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3770},{"krate":0,"index":3771},{"krate":0,"index":3772}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":375619,"byte_end":375623,"line_start":59,"line_end":59,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3775}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/pending.rs","byte_start":376233,"byte_end":376240,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/pending.rs","byte_start":376272,"byte_end":376279,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3794}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/pending.rs","byte_start":376364,"byte_end":376371,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3799}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":376896,"byte_end":376902,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":376933,"byte_end":376939,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3817}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377681,"byte_end":377687,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3824},{"krate":0,"index":3825}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":378284,"byte_end":378290,"line_start":15,"line_end":15,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":379035,"byte_end":379041,"line_start":38,"line_end":38,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3849},{"krate":0,"index":3850},{"krate":0,"index":3851},{"krate":0,"index":3852}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":380564,"byte_end":380570,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3856}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":380788,"byte_end":380794,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3860},{"krate":0,"index":3861}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":384214,"byte_end":384220,"line_start":66,"line_end":66,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":384267,"byte_end":384273,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3901}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":384554,"byte_end":384560,"line_start":81,"line_end":81,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7100},{"krate":0,"index":7102},{"krate":0,"index":7104}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":384721,"byte_end":384727,"line_start":87,"line_end":87,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3911}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":384953,"byte_end":384959,"line_start":96,"line_end":96,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3917},{"krate":0,"index":3918}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8487453,"byte_end":8487465,"line_start":19,"line_end":19,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7128}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8487570,"byte_end":8487582,"line_start":25,"line_end":25,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8487613,"byte_end":8487625,"line_start":27,"line_end":27,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7133}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8487748,"byte_end":8487760,"line_start":33,"line_end":33,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7136}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8487930,"byte_end":8487942,"line_start":40,"line_end":40,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8081}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8487999,"byte_end":8488011,"line_start":44,"line_end":44,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7141},{"krate":0,"index":7142}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8490622,"byte_end":8490636,"line_start":101,"line_end":101,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8490662,"byte_end":8490676,"line_start":103,"line_end":103,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7154},{"krate":0,"index":7155},{"krate":0,"index":7156},{"krate":0,"index":7157}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8492300,"byte_end":8492314,"line_start":147,"line_end":147,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7160}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8492432,"byte_end":8492446,"line_start":153,"line_end":153,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7163},{"krate":0,"index":7164},{"krate":0,"index":7165}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8493630,"byte_end":8493644,"line_start":191,"line_end":191,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7168}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8493810,"byte_end":8493824,"line_start":197,"line_end":197,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7171}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/abort.rs","byte_start":8514284,"byte_end":8514295,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7213}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8515375,"byte_end":8515385,"line_start":30,"line_end":30,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7222},{"krate":0,"index":7223},{"krate":0,"index":7224}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8515943,"byte_end":8515953,"line_start":51,"line_end":51,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8516001,"byte_end":8516008,"line_start":53,"line_end":53,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7230},{"krate":0,"index":7231},{"krate":0,"index":7232}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8516272,"byte_end":8516279,"line_start":65,"line_end":65,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8516320,"byte_end":8516330,"line_start":67,"line_end":67,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7238},{"krate":0,"index":7239},{"krate":0,"index":7240}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8516880,"byte_end":8516890,"line_start":88,"line_end":88,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8516938,"byte_end":8516942,"line_start":90,"line_end":90,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7246},{"krate":0,"index":7247},{"krate":0,"index":7248}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8517198,"byte_end":8517202,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/task.rs","byte_start":8518383,"byte_end":8518387,"line_start":35,"line_end":35,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/task.rs","byte_start":8518422,"byte_end":8518426,"line_start":36,"line_end":36,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/task.rs","byte_start":8518458,"byte_end":8518462,"line_start":38,"line_end":38,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7285}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/task.rs","byte_start":8519539,"byte_end":8519543,"line_start":65,"line_end":65,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7288}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/task.rs","byte_start":8519752,"byte_end":8519756,"line_start":72,"line_end":72,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7292}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8521206,"byte_end":8521221,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7324},{"krate":0,"index":7325},{"krate":0,"index":7326}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8523071,"byte_end":8523086,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7329}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496640,"byte_end":8496656,"line_start":69,"line_end":69,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496697,"byte_end":8496713,"line_start":70,"line_end":70,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496742,"byte_end":8496758,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496783,"byte_end":8496799,"line_start":73,"line_end":73,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7346}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496996,"byte_end":8497012,"line_start":82,"line_end":82,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7348}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8498598,"byte_end":8498614,"line_start":114,"line_end":114,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7351}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8499738,"byte_end":8499754,"line_start":145,"line_end":145,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7354}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8499857,"byte_end":8499873,"line_start":151,"line_end":151,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7357},{"krate":0,"index":7358},{"krate":0,"index":7359},{"krate":0,"index":7360},{"krate":0,"index":7361},{"krate":0,"index":7362},{"krate":0,"index":7363},{"krate":0,"index":7364},{"krate":0,"index":7365},{"krate":0,"index":7366}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8506126,"byte_end":8506142,"line_start":310,"line_end":310,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7369},{"krate":0,"index":7370},{"krate":0,"index":7379}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8510315,"byte_end":8510319,"line_start":403,"line_end":403,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7378}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8512191,"byte_end":8512207,"line_start":456,"line_end":456,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7382}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8512354,"byte_end":8512370,"line_start":462,"line_end":462,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7385}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8513809,"byte_end":8513825,"line_start":491,"line_end":491,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":7388}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8514081,"byte_end":8514097,"line_start":501,"line_end":501,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7393}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8524903,"byte_end":8524912,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7416}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525057,"byte_end":8525066,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7419},{"krate":0,"index":7420},{"krate":0,"index":7421},{"krate":0,"index":7422}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8526116,"byte_end":8526125,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7425}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8526238,"byte_end":8526247,"line_start":73,"line_end":73,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7428},{"krate":0,"index":7429}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8527054,"byte_end":8527063,"line_start":98,"line_end":98,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7432}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8528039,"byte_end":8528048,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":7437}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/close.rs","byte_start":394660,"byte_end":394665,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/close.rs","byte_start":394860,"byte_end":394865,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3947}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/close.rs","byte_start":395075,"byte_end":395080,"line_start":29,"line_end":29,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3951},{"krate":0,"index":3952}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":396041,"byte_end":396046,"line_start":32,"line_end":32,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":396074,"byte_end":396079,"line_start":34,"line_end":34,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3968},{"krate":0,"index":3969},{"krate":0,"index":3970},{"krate":0,"index":3971},{"krate":0,"index":3972}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":397244,"byte_end":397250,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7497},{"krate":0,"index":7500},{"krate":0,"index":3995},{"krate":0,"index":3996},{"krate":0,"index":3997},{"krate":0,"index":3998},{"krate":0,"index":3999}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":398389,"byte_end":398395,"line_start":52,"line_end":52,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4003}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":398646,"byte_end":398652,"line_start":61,"line_end":61,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4010},{"krate":0,"index":4011},{"krate":0,"index":4012}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/flush.rs","byte_start":400690,"byte_end":400695,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/flush.rs","byte_start":401046,"byte_end":401051,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4029}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/flush.rs","byte_start":401261,"byte_end":401266,"line_start":33,"line_end":33,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4033},{"krate":0,"index":4034}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":401951,"byte_end":401962,"line_start":15,"line_end":15,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7524},{"krate":0,"index":4054},{"krate":0,"index":4055},{"krate":0,"index":4056},{"krate":0,"index":4057},{"krate":0,"index":4058}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":402983,"byte_end":402994,"line_start":51,"line_end":51,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4063},{"krate":0,"index":7527},{"krate":0,"index":7528},{"krate":0,"index":7529},{"krate":0,"index":7530}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":403204,"byte_end":403215,"line_start":61,"line_end":61,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4068},{"krate":0,"index":4069},{"krate":0,"index":4070}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":403594,"byte_end":403605,"line_start":79,"line_end":79,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4075}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":404192,"byte_end":404202,"line_start":15,"line_end":15,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":404226,"byte_end":404236,"line_start":17,"line_end":17,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7544},{"krate":0,"index":7547},{"krate":0,"index":4096},{"krate":0,"index":4097},{"krate":0,"index":4098},{"krate":0,"index":4099},{"krate":0,"index":4100},{"krate":0,"index":4101}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":405244,"byte_end":405254,"line_start":53,"line_end":53,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4107},{"krate":0,"index":4108},{"krate":0,"index":4110},{"krate":0,"index":4112},{"krate":0,"index":4114}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":406276,"byte_end":406286,"line_start":89,"line_end":89,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4119},{"krate":0,"index":4120},{"krate":0,"index":4121}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":406604,"byte_end":406614,"line_start":104,"line_end":104,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4125}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send.rs","byte_start":407139,"byte_end":407143,"line_start":15,"line_end":15,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send.rs","byte_start":407210,"byte_end":407214,"line_start":17,"line_end":17,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4141}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send.rs","byte_start":407430,"byte_end":407434,"line_start":26,"line_end":26,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4145},{"krate":0,"index":4146}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send_all.rs","byte_start":408854,"byte_end":408861,"line_start":22,"line_end":22,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4173}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send_all.rs","byte_start":409300,"byte_end":409307,"line_start":38,"line_end":38,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send_all.rs","byte_start":409418,"byte_end":409425,"line_start":44,"line_end":44,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4183},{"krate":0,"index":4184}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send_all.rs","byte_start":410318,"byte_end":410325,"line_start":78,"line_end":78,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4190},{"krate":0,"index":4191}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":411953,"byte_end":411957,"line_start":19,"line_end":19,"column_start":37,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":412061,"byte_end":412065,"line_start":25,"line_end":25,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4228}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":412367,"byte_end":412371,"line_start":38,"line_end":38,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7560},{"krate":0,"index":7563},{"krate":0,"index":7565},{"krate":0,"index":4235}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":412930,"byte_end":412934,"line_start":62,"line_end":62,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4243},{"krate":0,"index":4244},{"krate":0,"index":4245}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":413341,"byte_end":413345,"line_start":81,"line_end":81,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4253},{"krate":0,"index":4254},{"krate":0,"index":4255},{"krate":0,"index":4256},{"krate":0,"index":4257}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":414676,"byte_end":414680,"line_start":125,"line_end":125,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4265},{"krate":0,"index":4266},{"krate":0,"index":4267},{"krate":0,"index":4268},{"krate":0,"index":4269}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":416389,"byte_end":416400,"line_start":19,"line_end":19,"column_start":36,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":416501,"byte_end":416512,"line_start":25,"line_end":25,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4308}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":416885,"byte_end":416896,"line_start":40,"line_end":40,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7568},{"krate":0,"index":7571},{"krate":0,"index":7573},{"krate":0,"index":4315},{"krate":0,"index":4316},{"krate":0,"index":4317},{"krate":0,"index":4318},{"krate":0,"index":4319},{"krate":0,"index":4320}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":419152,"byte_end":419163,"line_start":114,"line_end":114,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4327},{"krate":0,"index":4328},{"krate":0,"index":4329}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":419598,"byte_end":419609,"line_start":134,"line_end":134,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4336}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":419858,"byte_end":419869,"line_start":145,"line_end":145,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4343},{"krate":0,"index":4344},{"krate":0,"index":4345},{"krate":0,"index":4346},{"krate":0,"index":4347}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":421439,"byte_end":421445,"line_start":19,"line_end":19,"column_start":33,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":421487,"byte_end":421493,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7586},{"krate":0,"index":7589},{"krate":0,"index":7591},{"krate":0,"index":4368},{"krate":0,"index":4369},{"krate":0,"index":4370},{"krate":0,"index":4371},{"krate":0,"index":4372},{"krate":0,"index":4373}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":423013,"byte_end":423019,"line_start":73,"line_end":73,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4377},{"krate":0,"index":4378},{"krate":0,"index":4379}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":423336,"byte_end":423342,"line_start":85,"line_end":85,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4383}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":423511,"byte_end":423517,"line_start":91,"line_end":91,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4387},{"krate":0,"index":4388},{"krate":0,"index":4389},{"krate":0,"index":4390},{"krate":0,"index":4391}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386764,"byte_end":386765,"line_start":53,"line_end":53,"column_start":41,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426014,"byte_end":426016,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426071,"byte_end":426073,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":453894,"byte_end":453904,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":454341,"byte_end":454351,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4511},{"krate":0,"index":4512},{"krate":0,"index":4513},{"krate":0,"index":4514}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":454868,"byte_end":454878,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4517},{"krate":0,"index":4518},{"krate":0,"index":4519},{"krate":0,"index":4520},{"krate":0,"index":4521}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":455418,"byte_end":455428,"line_start":81,"line_end":81,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4524},{"krate":0,"index":4525},{"krate":0,"index":4526},{"krate":0,"index":4527}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":456177,"byte_end":456187,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4530},{"krate":0,"index":4531},{"krate":0,"index":4532},{"krate":0,"index":4533},{"krate":0,"index":4534}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":456907,"byte_end":456917,"line_start":126,"line_end":126,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4537},{"krate":0,"index":4538}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":457505,"byte_end":457515,"line_start":145,"line_end":145,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4541}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":457654,"byte_end":457664,"line_start":151,"line_end":151,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4544}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":457902,"byte_end":457912,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4547},{"krate":0,"index":4548}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":458123,"byte_end":458133,"line_start":168,"line_end":168,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4551},{"krate":0,"index":4552}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":459821,"byte_end":459830,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7636},{"krate":0,"index":7639},{"krate":0,"index":7641},{"krate":0,"index":4583},{"krate":0,"index":4584},{"krate":0,"index":4585},{"krate":0,"index":4586},{"krate":0,"index":4587},{"krate":0,"index":4588},{"krate":0,"index":4589},{"krate":0,"index":4590}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":461926,"byte_end":461935,"line_start":106,"line_end":106,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4593},{"krate":0,"index":4594}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":463525,"byte_end":463534,"line_start":150,"line_end":150,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4598},{"krate":0,"index":4599}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":464448,"byte_end":464457,"line_start":175,"line_end":175,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4602}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":464770,"byte_end":464779,"line_start":184,"line_end":184,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4605}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":468523,"byte_end":468532,"line_start":36,"line_end":36,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7643},{"krate":0,"index":7646},{"krate":0,"index":4632},{"krate":0,"index":4633},{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":4636},{"krate":0,"index":4637},{"krate":0,"index":4638},{"krate":0,"index":4639}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":470944,"byte_end":470953,"line_start":116,"line_end":116,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4642},{"krate":0,"index":4643},{"krate":0,"index":4645},{"krate":0,"index":4646}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":472330,"byte_end":472339,"line_start":159,"line_end":159,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4649}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":472698,"byte_end":472707,"line_start":169,"line_end":169,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4652}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":473560,"byte_end":473565,"line_start":18,"line_end":18,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":473622,"byte_end":473627,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7648},{"krate":0,"index":7651},{"krate":0,"index":7654},{"krate":0,"index":4680},{"krate":0,"index":4681},{"krate":0,"index":4682},{"krate":0,"index":4683},{"krate":0,"index":4684}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":475127,"byte_end":475132,"line_start":74,"line_end":74,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4688}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":475411,"byte_end":475416,"line_start":87,"line_end":87,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4692},{"krate":0,"index":4693}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":476751,"byte_end":476756,"line_start":133,"line_end":133,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4698},{"krate":0,"index":4699}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/close.rs","byte_start":478028,"byte_end":478033,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/close.rs","byte_start":478086,"byte_end":478091,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4714}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/close.rs","byte_start":478234,"byte_end":478239,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4717},{"krate":0,"index":4718}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479943,"byte_end":479947,"line_start":51,"line_end":51,"column_start":45,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":480038,"byte_end":480042,"line_start":53,"line_end":53,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7674}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":480177,"byte_end":480181,"line_start":57,"line_end":57,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4749},{"krate":0,"index":4750}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481815,"byte_end":481822,"line_start":53,"line_end":53,"column_start":37,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481864,"byte_end":481871,"line_start":55,"line_end":55,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4773}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":482165,"byte_end":482172,"line_start":64,"line_end":64,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4777},{"krate":0,"index":4778}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483997,"byte_end":484003,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4798},{"krate":0,"index":4799},{"krate":0,"index":4800},{"krate":0,"index":4801},{"krate":0,"index":4802},{"krate":0,"index":4803}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":487231,"byte_end":487237,"line_start":150,"line_end":150,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4806}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":487524,"byte_end":487530,"line_start":163,"line_end":163,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4809},{"krate":0,"index":4810}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":488162,"byte_end":488168,"line_start":187,"line_end":187,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4813},{"krate":0,"index":4814}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":489317,"byte_end":489323,"line_start":224,"line_end":224,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7701},{"krate":0,"index":7702},{"krate":0,"index":7703},{"krate":0,"index":7704}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":489398,"byte_end":489404,"line_start":228,"line_end":228,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7705},{"krate":0,"index":7706},{"krate":0,"index":7707},{"krate":0,"index":7708}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":489482,"byte_end":489488,"line_start":232,"line_end":232,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7709},{"krate":0,"index":7710},{"krate":0,"index":7711},{"krate":0,"index":7712}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":489561,"byte_end":489567,"line_start":236,"line_end":236,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7713},{"krate":0,"index":7714},{"krate":0,"index":7715},{"krate":0,"index":7716}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490550,"byte_end":490555,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4835}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490903,"byte_end":490908,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4837},{"krate":0,"index":4838}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":491140,"byte_end":491145,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4840}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/flush.rs","byte_start":491631,"byte_end":491636,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/flush.rs","byte_start":491689,"byte_end":491694,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4857}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/flush.rs","byte_start":491808,"byte_end":491813,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4860},{"krate":0,"index":4861}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/into_sink.rs","byte_start":492722,"byte_end":492730,"line_start":25,"line_end":25,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/into_sink.rs","byte_start":492783,"byte_end":492791,"line_start":27,"line_end":27,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7741},{"krate":0,"index":7744},{"krate":0,"index":4881},{"krate":0,"index":4882},{"krate":0,"index":4883}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/into_sink.rs","byte_start":494046,"byte_end":494054,"line_start":66,"line_end":66,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4887},{"krate":0,"index":4888},{"krate":0,"index":4889},{"krate":0,"index":4890},{"krate":0,"index":4891}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/lines.rs","byte_start":495621,"byte_end":495626,"line_start":19,"line_end":19,"column_start":26,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/lines.rs","byte_start":495656,"byte_end":495661,"line_start":21,"line_end":21,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4907}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/lines.rs","byte_start":495881,"byte_end":495886,"line_start":32,"line_end":32,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4910},{"krate":0,"index":4911}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read.rs","byte_start":496940,"byte_end":496944,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read.rs","byte_start":496996,"byte_end":497000,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4926}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read.rs","byte_start":497165,"byte_end":497169,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4929},{"krate":0,"index":4930}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_vectored.rs","byte_start":497857,"byte_end":497869,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_vectored.rs","byte_start":497921,"byte_end":497933,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4947}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_vectored.rs","byte_start":498112,"byte_end":498124,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4950},{"krate":0,"index":4951}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_exact.rs","byte_start":498794,"byte_end":498803,"line_start":16,"line_end":16,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_exact.rs","byte_start":498855,"byte_end":498864,"line_start":18,"line_end":18,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4967}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_exact.rs","byte_start":499034,"byte_end":499043,"line_start":24,"line_end":24,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4970},{"krate":0,"index":4971}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_line.rs","byte_start":500160,"byte_end":500168,"line_start":20,"line_end":20,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_line.rs","byte_start":500223,"byte_end":500231,"line_start":22,"line_end":22,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4989}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_line.rs","byte_start":501266,"byte_end":501274,"line_start":54,"line_end":54,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4995},{"krate":0,"index":4996}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_end.rs","byte_start":502004,"byte_end":502013,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_end.rs","byte_start":502065,"byte_end":502074,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5012}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_end.rs","byte_start":502355,"byte_end":502360,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5018}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_end.rs","byte_start":503910,"byte_end":503919,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5023},{"krate":0,"index":5024}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_string.rs","byte_start":504767,"byte_end":504779,"line_start":19,"line_end":19,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_string.rs","byte_start":504831,"byte_end":504843,"line_start":21,"line_end":21,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5044}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_string.rs","byte_start":505885,"byte_end":505897,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5050},{"krate":0,"index":5051}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_until.rs","byte_start":506692,"byte_end":506701,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_until.rs","byte_start":506756,"byte_end":506765,"line_start":20,"line_end":20,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5067}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_until.rs","byte_start":507737,"byte_end":507746,"line_start":52,"line_end":52,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5072},{"krate":0,"index":5073}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508945,"byte_end":508951,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5089},{"krate":0,"index":5090}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":509731,"byte_end":509737,"line_start":69,"line_end":69,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5092}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/seek.rs","byte_start":510251,"byte_end":510255,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/seek.rs","byte_start":510307,"byte_end":510311,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5111}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/seek.rs","byte_start":510468,"byte_end":510472,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5114},{"krate":0,"index":5115}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511601,"byte_end":511605,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5131},{"krate":0,"index":5132},{"krate":0,"index":5134},{"krate":0,"index":5135}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":512323,"byte_end":512327,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5137}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/split.rs","byte_start":513335,"byte_end":513343,"line_start":35,"line_end":35,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5162},{"krate":0,"index":5164}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/split.rs","byte_start":513808,"byte_end":513817,"line_start":49,"line_end":49,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5168},{"krate":0,"index":5170},{"krate":0,"index":5172},{"krate":0,"index":5174}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515084,"byte_end":515088,"line_start":18,"line_end":18,"column_start":26,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515116,"byte_end":515120,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7853},{"krate":0,"index":7856},{"krate":0,"index":5197},{"krate":0,"index":5198},{"krate":0,"index":5199},{"krate":0,"index":5200},{"krate":0,"index":5201},{"krate":0,"index":5202},{"krate":0,"index":5203}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":519421,"byte_end":519425,"line_start":167,"line_end":167,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5206}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":520062,"byte_end":520066,"line_start":189,"line_end":189,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5209},{"krate":0,"index":5210}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":521975,"byte_end":521981,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5219},{"krate":0,"index":5220},{"krate":0,"index":5221},{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5224},{"krate":0,"index":5225}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":524084,"byte_end":524090,"line_start":97,"line_end":97,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5229}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":524237,"byte_end":524243,"line_start":103,"line_end":103,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5232}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write.rs","byte_start":524764,"byte_end":524769,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write.rs","byte_start":524822,"byte_end":524827,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5247}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write.rs","byte_start":524989,"byte_end":524994,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5250},{"krate":0,"index":5251}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write_vectored.rs","byte_start":525678,"byte_end":525691,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write_vectored.rs","byte_start":525744,"byte_end":525757,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5268}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write_vectored.rs","byte_start":525930,"byte_end":525943,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5271},{"krate":0,"index":5272}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write_all.rs","byte_start":526610,"byte_end":526618,"line_start":16,"line_end":16,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write_all.rs","byte_start":526671,"byte_end":526679,"line_start":18,"line_end":18,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5288}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write_all.rs","byte_start":526845,"byte_end":526853,"line_start":24,"line_end":24,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5291},{"krate":0,"index":5292}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":442797,"byte_end":442798,"line_start":377,"line_end":377,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446893,"byte_end":446894,"line_start":508,"line_end":508,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":447428,"byte_end":447429,"line_start":524,"line_end":524,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452958,"byte_end":452959,"line_start":675,"line_end":675,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8529488,"byte_end":8529493,"line_start":18,"line_end":18,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7921}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8529826,"byte_end":8529831,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7924}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8529924,"byte_end":8529929,"line_start":34,"line_end":34,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7927}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8530067,"byte_end":8530073,"line_start":45,"line_end":45,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7935},{"krate":0,"index":7936}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8530617,"byte_end":8530622,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7941},{"krate":0,"index":7942}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531198,"byte_end":8531203,"line_start":90,"line_end":90,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7945},{"krate":0,"index":7946},{"krate":0,"index":7947},{"krate":0,"index":7948}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8533921,"byte_end":8533936,"line_start":169,"line_end":169,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7957}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8534446,"byte_end":8534461,"line_start":185,"line_end":185,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7960}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8534578,"byte_end":8534593,"line_start":191,"line_end":191,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7964},{"krate":0,"index":7965}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8535822,"byte_end":8535837,"line_start":227,"line_end":227,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7968}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8536463,"byte_end":8536473,"line_start":246,"line_end":246,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7975}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8536718,"byte_end":8536728,"line_start":255,"line_end":255,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7978}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8537113,"byte_end":8537123,"line_start":267,"line_end":267,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7981},{"krate":0,"index":7982}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8537264,"byte_end":8537274,"line_start":274,"line_end":274,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7985}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8537560,"byte_end":8537565,"line_start":282,"line_end":282,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8537611,"byte_end":8537616,"line_start":283,"line_end":283,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8537783,"byte_end":8537798,"line_start":287,"line_end":287,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8537902,"byte_end":8537917,"line_start":289,"line_end":289,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8538121,"byte_end":8538131,"line_start":293,"line_end":293,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8538181,"byte_end":8538191,"line_start":294,"line_end":294,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8540059,"byte_end":8540064,"line_start":47,"line_end":47,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8540101,"byte_end":8540106,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8540122,"byte_end":8540128,"line_start":50,"line_end":50,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8023},{"krate":0,"index":8024},{"krate":0,"index":8025},{"krate":0,"index":8026}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8545697,"byte_end":8545702,"line_start":186,"line_end":186,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8029}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8545824,"byte_end":8545829,"line_start":192,"line_end":192,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8032}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8546107,"byte_end":8546119,"line_start":202,"line_end":202,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8040}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8546309,"byte_end":8546321,"line_start":210,"line_end":210,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8043}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8546542,"byte_end":8546554,"line_start":217,"line_end":217,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8546886,"byte_end":8546897,"line_start":229,"line_end":229,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8048},{"krate":0,"index":8049}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8547060,"byte_end":8547071,"line_start":236,"line_end":236,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8052}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8547209,"byte_end":8547220,"line_start":242,"line_end":242,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8055}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8547572,"byte_end":8547583,"line_start":251,"line_end":251,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8058}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":1616,"byte_end":1627,"line_start":41,"line_end":41,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":2998,"byte_end":3004,"line_start":91,"line_end":91,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":79}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3080,"byte_end":3086,"line_start":94,"line_end":94,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1590}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/mod.rs","byte_start":164573,"byte_end":164590,"line_start":87,"line_end":87,"column_start":13,"column_end":30},"ref_id":{"krate":0,"index":7175}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3187,"byte_end":3191,"line_start":98,"line_end":98,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3925}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3272,"byte_end":3276,"line_start":102,"line_end":102,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4426}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3287,"byte_end":3292,"line_start":104,"line_end":104,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4472}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3394,"byte_end":3396,"line_start":111,"line_end":111,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":4474}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lib.rs","byte_start":3609,"byte_end":3613,"line_start":118,"line_end":118,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":7892}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/poll.rs","byte_start":5492,"byte_end":5500,"line_start":30,"line_end":30,"column_start":36,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":22},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/async_await/pending.rs","byte_start":6662,"byte_end":6673,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":38},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten.rs","byte_start":38751,"byte_end":38758,"line_start":16,"line_end":16,"column_start":11,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten.rs","byte_start":39035,"byte_end":39042,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":117},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten.rs","byte_start":39316,"byte_end":39323,"line_start":40,"line_end":40,"column_start":27,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":117},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten.rs","byte_start":39476,"byte_end":39483,"line_start":47,"line_end":47,"column_start":22,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":117},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten_stream.rs","byte_start":40143,"byte_end":40156,"line_start":14,"line_end":14,"column_start":19,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten_stream.rs","byte_start":40385,"byte_end":40398,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":146},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten_stream.rs","byte_start":40830,"byte_end":40835,"line_start":43,"line_end":43,"column_start":15,"column_end":20},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":5372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten_stream.rs","byte_start":41534,"byte_end":41547,"line_start":57,"line_end":57,"column_start":27,"column_end":40},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":146},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/flatten_stream.rs","byte_start":41829,"byte_end":41842,"line_start":69,"line_end":69,"column_start":22,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":146},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":42908,"byte_end":42912,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":5385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44795,"byte_end":44799,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":5385},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/fuse.rs","byte_start":44913,"byte_end":44917,"line_start":78,"line_end":78,"column_start":30,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":5385},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/into_stream.rs","byte_start":45694,"byte_end":45704,"line_start":15,"line_end":15,"column_start":19,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":5394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/into_stream.rs","byte_start":45916,"byte_end":45926,"line_start":25,"line_end":25,"column_start":30,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":5394},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/into_stream.rs","byte_start":46251,"byte_end":46261,"line_start":39,"line_end":39,"column_start":35,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":5394},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/map.rs","byte_start":46730,"byte_end":46733,"line_start":14,"line_end":14,"column_start":14,"column_end":17},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":5403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/map.rs","byte_start":46973,"byte_end":46976,"line_start":24,"line_end":24,"column_start":31,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":5403},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/map.rs","byte_start":47021,"byte_end":47024,"line_start":26,"line_end":26,"column_start":33,"column_end":36},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":5403},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/map.rs","byte_start":47184,"byte_end":47187,"line_start":33,"line_end":33,"column_start":28,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":5403},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/then.rs","byte_start":48019,"byte_end":48023,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":5417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/then.rs","byte_start":48348,"byte_end":48352,"line_start":28,"line_end":28,"column_start":37,"column_end":41},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":5417},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/then.rs","byte_start":48562,"byte_end":48566,"line_start":36,"line_end":36,"column_start":32,"column_end":36},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":5417},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/inspect.rs","byte_start":49284,"byte_end":49291,"line_start":14,"line_end":14,"column_start":44,"column_end":51},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":5430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/inspect.rs","byte_start":49554,"byte_end":49561,"line_start":26,"line_end":26,"column_start":40,"column_end":47},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":5430},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/inspect.rs","byte_start":49603,"byte_end":49610,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":5430},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/inspect.rs","byte_start":49779,"byte_end":49786,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":5430},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/unit_error.rs","byte_start":50512,"byte_end":50521,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":5444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/unit_error.rs","byte_start":50683,"byte_end":50692,"line_start":21,"line_end":21,"column_start":28,"column_end":37},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":5444},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/unit_error.rs","byte_start":50741,"byte_end":50750,"line_start":23,"line_end":23,"column_start":40,"column_end":49},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":5444},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/unit_error.rs","byte_start":50853,"byte_end":50862,"line_start":27,"line_end":27,"column_start":25,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":5444},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/never_error.rs","byte_start":51453,"byte_end":51463,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":5453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/never_error.rs","byte_start":51627,"byte_end":51637,"line_start":22,"line_end":22,"column_start":28,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":5453},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/never_error.rs","byte_start":51686,"byte_end":51696,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":5453},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/never_error.rs","byte_start":51799,"byte_end":51809,"line_start":28,"line_end":28,"column_start":25,"column_end":35},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":5453},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/catch_unwind.rs","byte_start":52450,"byte_end":52461,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":5462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/catch_unwind.rs","byte_start":52652,"byte_end":52663,"line_start":23,"line_end":23,"column_start":22,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":5462},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":53693,"byte_end":53705,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":5471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":54019,"byte_end":54031,"line_start":41,"line_end":41,"column_start":36,"column_end":48},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":5471},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":54863,"byte_end":54869,"line_start":64,"line_end":64,"column_start":47,"column_end":53},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":407},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":55072,"byte_end":55078,"line_start":72,"line_end":72,"column_start":37,"column_end":43},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":407},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":55106,"byte_end":55112,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/remote_handle.rs","byte_start":55272,"byte_end":55278,"line_start":79,"line_end":79,"column_start":30,"column_end":36},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":407},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":57394,"byte_end":57400,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":57443,"byte_end":57449,"line_start":33,"line_end":33,"column_start":34,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":57707,"byte_end":57712,"line_start":42,"line_end":42,"column_start":34,"column_end":39},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":57939,"byte_end":57944,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":58040,"byte_end":58045,"line_start":59,"line_end":59,"column_start":27,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":58313,"byte_end":58319,"line_start":73,"line_end":73,"column_start":19,"column_end":25},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":58785,"byte_end":58791,"line_start":90,"line_end":90,"column_start":11,"column_end":17},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":61332,"byte_end":61337,"line_start":161,"line_end":161,"column_start":11,"column_end":16},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":61729,"byte_end":61735,"line_start":176,"line_end":176,"column_start":27,"column_end":33},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":448},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":61887,"byte_end":61893,"line_start":186,"line_end":186,"column_start":22,"column_end":28},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":63151,"byte_end":63156,"line_start":227,"line_end":227,"column_start":23,"column_end":28},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":503},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":65201,"byte_end":65207,"line_start":293,"line_end":293,"column_start":21,"column_end":27},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":65401,"byte_end":65407,"line_start":305,"line_end":305,"column_start":20,"column_end":26},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/shared.rs","byte_start":65835,"byte_end":65843,"line_start":322,"line_end":322,"column_start":18,"column_end":26},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":456},"to":{"krate":18,"index":240}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/chain.rs","byte_start":66584,"byte_end":66589,"line_start":13,"line_end":13,"column_start":48,"column_end":53},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5483},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/chain.rs","byte_start":66635,"byte_end":66640,"line_start":15,"line_end":15,"column_start":24,"column_end":29},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":5483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/chain.rs","byte_start":66801,"byte_end":66806,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":5483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":22489,"byte_end":22490,"line_start":81,"line_end":81,"column_start":31,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":543},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/future/mod.rs","byte_start":22621,"byte_end":22627,"line_start":85,"line_end":85,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":8076},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/and_then.rs","byte_start":84559,"byte_end":84566,"line_start":14,"line_end":14,"column_start":21,"column_end":28},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":5501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/and_then.rs","byte_start":84917,"byte_end":84924,"line_start":28,"line_end":28,"column_start":37,"column_end":44},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":5501},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/and_then.rs","byte_start":85173,"byte_end":85180,"line_start":38,"line_end":38,"column_start":32,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5501},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/err_into.rs","byte_start":86131,"byte_end":86138,"line_start":15,"line_end":15,"column_start":31,"column_end":38},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5514},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/err_into.rs","byte_start":86164,"byte_end":86171,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/err_into.rs","byte_start":86392,"byte_end":86399,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5514},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/err_into.rs","byte_start":86576,"byte_end":86583,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5514},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_sink.rs","byte_start":87390,"byte_end":87401,"line_start":19,"line_end":19,"column_start":15,"column_end":26},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":5526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_sink.rs","byte_start":87659,"byte_end":87670,"line_start":32,"line_end":32,"column_start":30,"column_end":41},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":5526},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_sink.rs","byte_start":87873,"byte_end":87884,"line_start":42,"line_end":42,"column_start":25,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5526},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_sink.rs","byte_start":88181,"byte_end":88192,"line_start":54,"line_end":54,"column_start":36,"column_end":47},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":5526},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_ok.rs","byte_start":89287,"byte_end":89296,"line_start":14,"line_end":14,"column_start":31,"column_end":40},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":5537},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_ok.rs","byte_start":89322,"byte_end":89331,"line_start":16,"line_end":16,"column_start":14,"column_end":23},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":5537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_ok.rs","byte_start":89588,"byte_end":89597,"line_start":29,"line_end":29,"column_start":30,"column_end":39},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":5537},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_ok.rs","byte_start":89780,"byte_end":89789,"line_start":39,"line_end":39,"column_start":25,"column_end":34},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":5537},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_err.rs","byte_start":90626,"byte_end":90636,"line_start":14,"line_end":14,"column_start":31,"column_end":41},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":5551},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_err.rs","byte_start":90662,"byte_end":90672,"line_start":16,"line_end":16,"column_start":14,"column_end":24},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":5551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_err.rs","byte_start":90932,"byte_end":90942,"line_start":29,"line_end":29,"column_start":30,"column_end":40},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5551},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/inspect_err.rs","byte_start":91128,"byte_end":91138,"line_start":39,"line_end":39,"column_start":25,"column_end":35},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5551},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/into_future.rs","byte_start":91920,"byte_end":91930,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":5565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/into_future.rs","byte_start":92132,"byte_end":92142,"line_start":22,"line_end":22,"column_start":52,"column_end":62},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":5565},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/into_future.rs","byte_start":92253,"byte_end":92263,"line_start":26,"line_end":26,"column_start":33,"column_end":43},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5565},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_err.rs","byte_start":92884,"byte_end":92890,"line_start":14,"line_end":14,"column_start":14,"column_end":20},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_err.rs","byte_start":93139,"byte_end":93145,"line_start":24,"line_end":24,"column_start":31,"column_end":37},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5574},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_err.rs","byte_start":93190,"byte_end":93196,"line_start":26,"line_end":26,"column_start":33,"column_end":39},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":5574},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_err.rs","byte_start":93358,"byte_end":93364,"line_start":33,"line_end":33,"column_start":28,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":5574},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_ok.rs","byte_start":94281,"byte_end":94286,"line_start":14,"line_end":14,"column_start":14,"column_end":19},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":5588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_ok.rs","byte_start":94532,"byte_end":94537,"line_start":24,"line_end":24,"column_start":31,"column_end":36},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":5588},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_ok.rs","byte_start":94582,"byte_end":94587,"line_start":26,"line_end":26,"column_start":33,"column_end":38},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5588},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/map_ok.rs","byte_start":94758,"byte_end":94763,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":5588},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/or_else.rs","byte_start":95719,"byte_end":95725,"line_start":14,"line_end":14,"column_start":21,"column_end":27},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":5602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/or_else.rs","byte_start":96074,"byte_end":96080,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":5602},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/or_else.rs","byte_start":96326,"byte_end":96332,"line_start":38,"line_end":38,"column_start":32,"column_end":38},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":5602},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/try_flatten_stream.rs","byte_start":97398,"byte_end":97414,"line_start":20,"line_end":20,"column_start":22,"column_end":38},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/try_flatten_stream.rs","byte_start":97699,"byte_end":97715,"line_start":34,"line_end":34,"column_start":26,"column_end":42},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":881},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/try_flatten_stream.rs","byte_start":97991,"byte_end":98007,"line_start":46,"line_end":46,"column_start":27,"column_end":43},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":881},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/try_flatten_stream.rs","byte_start":98202,"byte_end":98218,"line_start":56,"line_end":56,"column_start":22,"column_end":38},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":881},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/try_flatten_stream.rs","byte_start":98552,"byte_end":98568,"line_start":69,"line_end":69,"column_start":32,"column_end":48},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":881},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/unwrap_or_else.rs","byte_start":99685,"byte_end":99697,"line_start":15,"line_end":15,"column_start":14,"column_end":26},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":5618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/unwrap_or_else.rs","byte_start":99964,"byte_end":99976,"line_start":25,"line_end":25,"column_start":31,"column_end":43},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":5618},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/unwrap_or_else.rs","byte_start":100018,"byte_end":100030,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":5618},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/unwrap_or_else.rs","byte_start":100207,"byte_end":100219,"line_start":36,"line_end":36,"column_start":25,"column_end":37},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":5618},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_stream_sink.rs","byte_start":101158,"byte_end":101175,"line_start":18,"line_end":18,"column_start":21,"column_end":38},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":949},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_stream_sink.rs","byte_start":101265,"byte_end":101282,"line_start":25,"line_end":25,"column_start":26,"column_end":43},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":949},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_stream_sink.rs","byte_start":101543,"byte_end":101560,"line_start":37,"line_end":37,"column_start":11,"column_end":28},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_stream_sink.rs","byte_start":101995,"byte_end":102000,"line_start":60,"line_end":60,"column_start":14,"column_end":19},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":5635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_stream_sink.rs","byte_start":102733,"byte_end":102738,"line_start":75,"line_end":75,"column_start":11,"column_end":16},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":5635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_stream_sink.rs","byte_start":103595,"byte_end":103612,"line_start":100,"line_end":100,"column_start":27,"column_end":44},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":949},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_stream_sink.rs","byte_start":103949,"byte_end":103966,"line_start":114,"line_end":114,"column_start":22,"column_end":39},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":949},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/flatten_stream_sink.rs","byte_start":104540,"byte_end":104557,"line_start":132,"line_end":132,"column_start":32,"column_end":49},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":949},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/try_chain.rs","byte_start":106603,"byte_end":106611,"line_start":13,"line_end":13,"column_start":48,"column_end":56},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":5650},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/try_chain.rs","byte_start":106787,"byte_end":106795,"line_start":22,"line_end":22,"column_start":24,"column_end":32},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":5650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70095,"byte_end":70098,"line_start":73,"line_end":73,"column_start":48,"column_end":51},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1014},"to":{"krate":0,"index":1015}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_future/mod.rs","byte_start":70181,"byte_end":70190,"line_start":76,"line_end":76,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":15,"index":32},"to":{"krate":0,"index":1015}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":109815,"byte_end":109819,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":5668},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":110392,"byte_end":110396,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":5668},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/lazy.rs","byte_start":110528,"byte_end":110532,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":5668},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111079,"byte_end":111086,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":5674},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111637,"byte_end":111644,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":5674},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111789,"byte_end":111796,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":5674},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/pending.rs","byte_start":111823,"byte_end":111830,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":5674},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":112578,"byte_end":112587,"line_start":23,"line_end":23,"column_start":37,"column_end":46},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":5680},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":113166,"byte_end":113175,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":5680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":114381,"byte_end":114390,"line_start":81,"line_end":81,"column_start":35,"column_end":44},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":5680},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/maybe_done.rs","byte_start":114606,"byte_end":114615,"line_start":90,"line_end":90,"column_start":30,"column_end":39},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":5680},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":115925,"byte_end":115937,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":5693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":116012,"byte_end":116024,"line_start":35,"line_end":35,"column_start":28,"column_end":40},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":5693},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":116354,"byte_end":116366,"line_start":49,"line_end":49,"column_start":38,"column_end":50},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":5693},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/option.rs","byte_start":116554,"byte_end":116566,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":5693},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":116979,"byte_end":116985,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1161},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117655,"byte_end":117661,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1161},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/poll_fn.rs","byte_start":117803,"byte_end":117809,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1161},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118296,"byte_end":118301,"line_start":10,"line_end":10,"column_start":19,"column_end":24},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":5705},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118333,"byte_end":118338,"line_start":12,"line_end":12,"column_start":25,"column_end":30},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5705},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/ready.rs","byte_start":118435,"byte_end":118440,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":5705},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":125181,"byte_end":125190,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":5881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":125907,"byte_end":125916,"line_start":44,"line_end":44,"column_start":19,"column_end":28},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5881},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":126579,"byte_end":126586,"line_start":68,"line_end":68,"column_start":24,"column_end":31},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":128252,"byte_end":128259,"line_start":124,"line_end":124,"column_start":20,"column_end":27},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/join_all.rs","byte_start":129155,"byte_end":129162,"line_start":155,"line_end":155,"column_start":37,"column_end":44},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":4676}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":129632,"byte_end":129638,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":5892},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":131001,"byte_end":131007,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":5892},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select.rs","byte_start":131710,"byte_end":131716,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":5892},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":132253,"byte_end":132262,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5900},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":133242,"byte_end":133251,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5900},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_all.rs","byte_start":133957,"byte_end":133966,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":5900},"to":{"krate":2,"index":4676}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":142315,"byte_end":142324,"line_start":24,"line_end":24,"column_start":9,"column_end":18},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":6050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":143040,"byte_end":143049,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":6050},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":143787,"byte_end":143797,"line_start":72,"line_end":72,"column_start":24,"column_end":34},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":145557,"byte_end":145567,"line_start":134,"line_end":134,"column_start":20,"column_end":30},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_join_all.rs","byte_start":146971,"byte_end":146981,"line_start":175,"line_end":175,"column_start":40,"column_end":50},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1422},"to":{"krate":2,"index":4676}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":147463,"byte_end":147472,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":6061},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/try_select.rs","byte_start":149178,"byte_end":149187,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":6061},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":150540,"byte_end":150548,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":6069},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":151518,"byte_end":151526,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":6069},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/select_ok.rs","byte_start":152970,"byte_end":152978,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":6069},"to":{"krate":2,"index":4676}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":153555,"byte_end":153561,"line_start":18,"line_end":18,"column_start":15,"column_end":21},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":6075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":153946,"byte_end":153952,"line_start":30,"line_end":30,"column_start":15,"column_end":21},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":6075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":154333,"byte_end":154339,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":6075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":154580,"byte_end":154586,"line_start":52,"line_end":52,"column_start":23,"column_end":29},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":6075},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":155015,"byte_end":155021,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":6075},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":155297,"byte_end":155303,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":6075},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":155745,"byte_end":155751,"line_start":99,"line_end":99,"column_start":28,"column_end":34},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":6075},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":156058,"byte_end":156064,"line_start":113,"line_end":113,"column_start":33,"column_end":39},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":6075},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":157873,"byte_end":157879,"line_start":169,"line_end":169,"column_start":30,"column_end":36},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":6075},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":159136,"byte_end":159142,"line_start":209,"line_end":209,"column_start":31,"column_end":37},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":6075},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":160853,"byte_end":160859,"line_start":259,"line_end":259,"column_start":30,"column_end":36},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":6075},"to":{"krate":22,"index":25}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/either.rs","byte_start":161390,"byte_end":161396,"line_start":278,"line_end":278,"column_start":33,"column_end":39},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":6075},"to":{"krate":22,"index":27}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8455907,"byte_end":8455916,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":6129},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8455936,"byte_end":8455945,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":6129},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8457281,"byte_end":8457292,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":6143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8459168,"byte_end":8459175,"line_start":128,"line_end":128,"column_start":23,"column_end":30},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":6154},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8459358,"byte_end":8459365,"line_start":135,"line_end":135,"column_start":28,"column_end":35},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":6154},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8459391,"byte_end":8459400,"line_start":137,"line_end":137,"column_start":22,"column_end":31},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":6129},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/future/abortable.rs","byte_start":8460366,"byte_end":8460377,"line_start":166,"line_end":166,"column_start":6,"column_end":17},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":6143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chain.rs","byte_start":205559,"byte_end":205564,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":6167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chain.rs","byte_start":205907,"byte_end":205912,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":6167},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chain.rs","byte_start":206117,"byte_end":206122,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":6167},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/collect.rs","byte_start":207653,"byte_end":207660,"line_start":16,"line_end":16,"column_start":30,"column_end":37},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":6182},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/collect.rs","byte_start":207701,"byte_end":207708,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":6182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/collect.rs","byte_start":208094,"byte_end":208101,"line_start":34,"line_end":34,"column_start":29,"column_end":36},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":6182},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/collect.rs","byte_start":208277,"byte_end":208284,"line_start":43,"line_end":43,"column_start":24,"column_end":31},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":6182},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/concat.rs","byte_start":209169,"byte_end":209175,"line_start":15,"line_end":15,"column_start":36,"column_end":42},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":6196},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/concat.rs","byte_start":209193,"byte_end":209199,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":6196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/concat.rs","byte_start":209554,"byte_end":209560,"line_start":33,"line_end":33,"column_start":21,"column_end":27},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":6196},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/concat.rs","byte_start":210357,"byte_end":210363,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":6196},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":211034,"byte_end":211043,"line_start":16,"line_end":16,"column_start":27,"column_end":36},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":6208},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":211069,"byte_end":211078,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":6208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":212471,"byte_end":212480,"line_start":62,"line_end":62,"column_start":48,"column_end":57},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":6208},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":212598,"byte_end":212607,"line_start":68,"line_end":68,"column_start":29,"column_end":38},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":6208},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/enumerate.rs","byte_start":213262,"byte_end":213271,"line_start":92,"line_end":92,"column_start":30,"column_end":39},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":6208},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":213923,"byte_end":213929,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1747},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":214024,"byte_end":214030,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1747},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":214422,"byte_end":214428,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":216057,"byte_end":216063,"line_start":94,"line_end":94,"column_start":34,"column_end":40},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1747},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":216331,"byte_end":216337,"line_start":104,"line_end":104,"column_start":29,"column_end":35},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1747},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter.rs","byte_start":217846,"byte_end":217852,"line_start":149,"line_end":149,"column_start":38,"column_end":44},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1747},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":218536,"byte_end":218545,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":218631,"byte_end":218640,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":218937,"byte_end":218946,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":220441,"byte_end":220450,"line_start":83,"line_end":83,"column_start":37,"column_end":46},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1806},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":220721,"byte_end":220730,"line_start":93,"line_end":93,"column_start":32,"column_end":41},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1806},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/filter_map.rs","byte_start":222069,"byte_end":222078,"line_start":135,"line_end":135,"column_start":38,"column_end":47},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1806},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":222685,"byte_end":222692,"line_start":19,"line_end":19,"column_start":20,"column_end":27},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":6250},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":222762,"byte_end":222769,"line_start":26,"line_end":26,"column_start":10,"column_end":17},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":6250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":222886,"byte_end":222893,"line_start":34,"line_end":34,"column_start":10,"column_end":17},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":6250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":224194,"byte_end":224201,"line_start":76,"line_end":76,"column_start":26,"column_end":33},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":6250},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":224383,"byte_end":224390,"line_start":86,"line_end":86,"column_start":21,"column_end":28},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":6250},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/flatten.rs","byte_start":225212,"byte_end":225219,"line_start":113,"line_end":113,"column_start":30,"column_end":37},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":6250},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fold.rs","byte_start":225814,"byte_end":225818,"line_start":17,"line_end":17,"column_start":45,"column_end":49},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":1898},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fold.rs","byte_start":225873,"byte_end":225877,"line_start":19,"line_end":19,"column_start":36,"column_end":40},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":1898},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fold.rs","byte_start":226233,"byte_end":226237,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":1898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fold.rs","byte_start":226712,"byte_end":226716,"line_start":54,"line_end":54,"column_start":37,"column_end":41},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":1898},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fold.rs","byte_start":226963,"byte_end":226967,"line_start":64,"line_end":64,"column_start":32,"column_end":36},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1898},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/forward.rs","byte_start":228606,"byte_end":228613,"line_start":20,"line_end":20,"column_start":50,"column_end":57},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":6277},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/forward.rs","byte_start":228642,"byte_end":228649,"line_start":22,"line_end":22,"column_start":17,"column_end":24},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":6277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/forward.rs","byte_start":229596,"byte_end":229603,"line_start":56,"line_end":56,"column_start":39,"column_end":46},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":6277},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/forward.rs","byte_start":229799,"byte_end":229806,"line_start":66,"line_end":66,"column_start":34,"column_end":41},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":6277},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each.rs","byte_start":231439,"byte_end":231446,"line_start":16,"line_end":16,"column_start":28,"column_end":35},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":1995},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each.rs","byte_start":231532,"byte_end":231539,"line_start":22,"line_end":22,"column_start":33,"column_end":40},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":1995},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each.rs","byte_start":231832,"byte_end":231839,"line_start":35,"line_end":35,"column_start":18,"column_end":25},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":1995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each.rs","byte_start":232235,"byte_end":232242,"line_start":53,"line_end":53,"column_start":34,"column_end":41},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":1995},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each.rs","byte_start":232493,"byte_end":232500,"line_start":63,"line_end":63,"column_start":29,"column_end":36},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":1995},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":233666,"byte_end":233670,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":6303},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":233688,"byte_end":233692,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":6303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":235351,"byte_end":235355,"line_start":68,"line_end":68,"column_start":33,"column_end":37},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":6303},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":235453,"byte_end":235457,"line_start":74,"line_end":74,"column_start":28,"column_end":32},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":6303},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/fuse.rs","byte_start":236155,"byte_end":236159,"line_start":103,"line_end":103,"column_start":51,"column_end":55},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":6303},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":236677,"byte_end":236689,"line_start":15,"line_end":15,"column_start":27,"column_end":39},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":6319},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":236723,"byte_end":236735,"line_start":17,"line_end":17,"column_start":26,"column_end":38},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":6319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":239268,"byte_end":239280,"line_start":77,"line_end":77,"column_start":42,"column_end":54},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":6319},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/into_future.rs","byte_start":239400,"byte_end":239412,"line_start":83,"line_end":83,"column_start":37,"column_end":49},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":6319},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":240242,"byte_end":240249,"line_start":16,"line_end":16,"column_start":30,"column_end":37},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2104},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":240288,"byte_end":240295,"line_start":18,"line_end":18,"column_start":28,"column_end":35},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2104},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":240514,"byte_end":240521,"line_start":29,"line_end":29,"column_start":13,"column_end":20},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":241908,"byte_end":241915,"line_start":73,"line_end":73,"column_start":29,"column_end":36},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2104},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":242234,"byte_end":242241,"line_start":89,"line_end":89,"column_start":24,"column_end":31},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2104},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/inspect.rs","byte_start":242796,"byte_end":242803,"line_start":112,"line_end":112,"column_start":33,"column_end":40},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2104},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":243354,"byte_end":243357,"line_start":16,"line_end":16,"column_start":30,"column_end":33},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2159},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":243396,"byte_end":243399,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2159},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":243617,"byte_end":243620,"line_start":29,"line_end":29,"column_start":16,"column_end":19},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":245006,"byte_end":245009,"line_start":73,"line_end":73,"column_start":32,"column_end":35},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2159},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":245190,"byte_end":245193,"line_start":82,"line_end":82,"column_start":27,"column_end":30},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2159},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/map.rs","byte_start":245732,"byte_end":245735,"line_start":105,"line_end":105,"column_start":36,"column_end":39},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2159},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/next.rs","byte_start":246308,"byte_end":246312,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":6346},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/next.rs","byte_start":246363,"byte_end":246367,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":6346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/next.rs","byte_start":246518,"byte_end":246522,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":6346},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/next.rs","byte_start":246661,"byte_end":246665,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":6346},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/select_next_some.rs","byte_start":247314,"byte_end":247328,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":6354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/select_next_some.rs","byte_start":247489,"byte_end":247503,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":6354},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/select_next_some.rs","byte_start":247647,"byte_end":247661,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":6354},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":248783,"byte_end":248791,"line_start":21,"line_end":21,"column_start":36,"column_end":44},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":6362},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":248817,"byte_end":248825,"line_start":23,"line_end":23,"column_start":18,"column_end":26},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":6362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":251110,"byte_end":251118,"line_start":89,"line_end":89,"column_start":34,"column_end":42},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":6362},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":251260,"byte_end":251268,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":6362},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/peek.rs","byte_start":252066,"byte_end":252074,"line_start":122,"line_end":122,"column_start":30,"column_end":38},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":6362},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":252602,"byte_end":252606,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":6378},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":252632,"byte_end":252636,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":6378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":254028,"byte_end":254032,"line_start":62,"line_end":62,"column_start":39,"column_end":43},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":6378},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":254150,"byte_end":254154,"line_start":68,"line_end":68,"column_start":29,"column_end":33},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":6378},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip.rs","byte_start":255049,"byte_end":255053,"line_start":100,"line_end":100,"column_start":30,"column_end":34},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":6378},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":255759,"byte_end":255768,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2335},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":255817,"byte_end":255826,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":2335},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":256278,"byte_end":256287,"line_start":38,"line_end":38,"column_start":18,"column_end":27},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":258011,"byte_end":258020,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2335},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":258280,"byte_end":258289,"line_start":102,"line_end":102,"column_start":29,"column_end":38},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2335},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/skip_while.rs","byte_start":259948,"byte_end":259957,"line_start":152,"line_end":152,"column_start":38,"column_end":47},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2335},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":260584,"byte_end":260588,"line_start":17,"line_end":17,"column_start":27,"column_end":31},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":6410},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":260614,"byte_end":260618,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":6410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":261992,"byte_end":261996,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":6410},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":262979,"byte_end":262983,"line_start":102,"line_end":102,"column_start":26,"column_end":30},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":6410},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take.rs","byte_start":263231,"byte_end":263235,"line_start":112,"line_end":112,"column_start":30,"column_end":34},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":6410},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":263931,"byte_end":263940,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2430},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":263989,"byte_end":263998,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2430},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":264454,"byte_end":264463,"line_start":38,"line_end":38,"column_start":26,"column_end":35},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":264699,"byte_end":264708,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":2430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":266221,"byte_end":266230,"line_start":94,"line_end":94,"column_start":29,"column_end":38},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":2430},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":267801,"byte_end":267810,"line_start":146,"line_end":146,"column_start":34,"column_end":43},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":2430},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/take_while.rs","byte_start":268178,"byte_end":268187,"line_start":158,"line_end":158,"column_start":38,"column_end":47},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":2430},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":268792,"byte_end":268796,"line_start":18,"line_end":18,"column_start":42,"column_end":46},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2494},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":268845,"byte_end":268849,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":2494},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":269139,"byte_end":269143,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":269279,"byte_end":269283,"line_start":39,"line_end":39,"column_start":18,"column_end":22},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":270683,"byte_end":270687,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2494},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":270925,"byte_end":270929,"line_start":94,"line_end":94,"column_start":29,"column_end":33},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2494},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/then.rs","byte_start":272146,"byte_end":272150,"line_start":133,"line_end":133,"column_start":38,"column_end":42},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2494},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":272874,"byte_end":272877,"line_start":19,"line_end":19,"column_start":26,"column_end":29},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":6454},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":273007,"byte_end":273010,"line_start":27,"line_end":27,"column_start":32,"column_end":35},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":6454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":274942,"byte_end":274945,"line_start":78,"line_end":78,"column_start":32,"column_end":35},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6454},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/zip.rs","byte_start":275136,"byte_end":275139,"line_start":86,"line_end":86,"column_start":27,"column_end":30},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":6454},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":277838,"byte_end":277844,"line_start":20,"line_end":20,"column_start":36,"column_end":42},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":6475},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":277870,"byte_end":277876,"line_start":22,"line_end":22,"column_start":18,"column_end":24},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":6475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":279607,"byte_end":279613,"line_start":74,"line_end":74,"column_start":29,"column_end":35},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":6475},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":281235,"byte_end":281241,"line_start":121,"line_end":121,"column_start":39,"column_end":45},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":6475},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/chunks.rs","byte_start":281464,"byte_end":281470,"line_start":129,"line_end":129,"column_start":30,"column_end":36},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":6475},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8461646,"byte_end":8461661,"line_start":23,"line_end":23,"column_start":20,"column_end":35},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":6510},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8461724,"byte_end":8461739,"line_start":28,"line_end":28,"column_start":25,"column_end":40},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":6510},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8462071,"byte_end":8462086,"line_start":41,"line_end":41,"column_start":10,"column_end":25},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":6510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8463738,"byte_end":8463753,"line_start":94,"line_end":94,"column_start":21,"column_end":36},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":6510},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8465217,"byte_end":8465232,"line_start":140,"line_end":140,"column_start":26,"column_end":41},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":6510},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffer_unordered.rs","byte_start":8465516,"byte_end":8465531,"line_start":152,"line_end":152,"column_start":30,"column_end":45},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":6510},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8466250,"byte_end":8466258,"line_start":23,"line_end":23,"column_start":20,"column_end":28},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":6556},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8466343,"byte_end":8466351,"line_start":29,"line_end":29,"column_start":25,"column_end":33},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":6556},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8466698,"byte_end":8466706,"line_start":43,"line_end":43,"column_start":10,"column_end":18},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":6556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8468280,"byte_end":8468288,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6556},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/buffered.rs","byte_start":8469817,"byte_end":8469825,"line_start":140,"line_end":140,"column_start":30,"column_end":38},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6556},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each_concurrent.rs","byte_start":8470577,"byte_end":8470594,"line_start":20,"line_end":20,"column_start":28,"column_end":45},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6600},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each_concurrent.rs","byte_start":8470678,"byte_end":8470695,"line_start":25,"line_end":25,"column_start":33,"column_end":50},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":6600},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each_concurrent.rs","byte_start":8471041,"byte_end":8471058,"line_start":39,"line_end":39,"column_start":18,"column_end":35},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each_concurrent.rs","byte_start":8471703,"byte_end":8471720,"line_start":60,"line_end":60,"column_start":34,"column_end":51},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":6600},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/for_each_concurrent.rs","byte_start":8471962,"byte_end":8471979,"line_start":70,"line_end":70,"column_start":29,"column_end":46},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":6600},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8474300,"byte_end":8474311,"line_start":14,"line_end":14,"column_start":19,"column_end":30},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6705},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8474334,"byte_end":8474345,"line_start":16,"line_end":16,"column_start":16,"column_end":27},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":6705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8474771,"byte_end":8474782,"line_start":27,"line_end":27,"column_start":28,"column_end":39},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6705},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8475333,"byte_end":8475342,"line_start":51,"line_end":51,"column_start":25,"column_end":34},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6712},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8475390,"byte_end":8475399,"line_start":53,"line_end":53,"column_start":35,"column_end":44},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8475899,"byte_end":8475908,"line_start":64,"line_end":64,"column_start":42,"column_end":51},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6712},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8477632,"byte_end":8477644,"line_start":113,"line_end":113,"column_start":30,"column_end":42},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6676},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8477846,"byte_end":8477858,"line_start":121,"line_end":121,"column_start":32,"column_end":44},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6676},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/split.rs","byte_start":8478107,"byte_end":8478119,"line_start":128,"line_end":128,"column_start":53,"column_end":65},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6676},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/catch_unwind.rs","byte_start":282060,"byte_end":282071,"line_start":16,"line_end":16,"column_start":31,"column_end":42},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":6721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/catch_unwind.rs","byte_start":282312,"byte_end":282323,"line_start":25,"line_end":25,"column_start":42,"column_end":53},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6721},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/catch_unwind.rs","byte_start":283207,"byte_end":283218,"line_start":58,"line_end":58,"column_start":52,"column_end":63},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":6721},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":169654,"byte_end":169655,"line_start":157,"line_end":157,"column_start":31,"column_end":32},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":2648},"to":{"krate":0,"index":2649}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/stream/mod.rs","byte_start":169798,"byte_end":169804,"line_start":161,"line_end":161,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":15,"index":68},"to":{"krate":0,"index":2649}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":313262,"byte_end":313269,"line_start":18,"line_end":18,"column_start":42,"column_end":49},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":2776},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":313318,"byte_end":313325,"line_start":20,"line_end":20,"column_start":33,"column_end":40},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":2776},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":313618,"byte_end":313625,"line_start":33,"line_end":33,"column_start":18,"column_end":25},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":2776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":313761,"byte_end":313768,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":2776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":315152,"byte_end":315159,"line_start":81,"line_end":81,"column_start":29,"column_end":36},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":2776},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":316339,"byte_end":316346,"line_start":118,"line_end":118,"column_start":34,"column_end":41},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":2776},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/and_then.rs","byte_start":316704,"byte_end":316711,"line_start":130,"line_end":130,"column_start":38,"column_end":45},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":2776},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":317289,"byte_end":317296,"line_start":17,"line_end":17,"column_start":30,"column_end":37},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":6745},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":317320,"byte_end":317327,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":6745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":318636,"byte_end":318643,"line_start":59,"line_end":59,"column_start":29,"column_end":36},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":6745},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":318822,"byte_end":318829,"line_start":69,"line_end":69,"column_start":24,"column_end":31},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":6745},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/err_into.rs","byte_start":319354,"byte_end":319361,"line_start":91,"line_end":91,"column_start":33,"column_end":40},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":6745},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":319943,"byte_end":319952,"line_start":17,"line_end":17,"column_start":30,"column_end":39},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":2880},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":319991,"byte_end":320000,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":2880},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":320221,"byte_end":320230,"line_start":30,"line_end":30,"column_start":13,"column_end":22},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":2880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":320315,"byte_end":320324,"line_start":35,"line_end":35,"column_start":13,"column_end":22},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":2880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":321632,"byte_end":321641,"line_start":77,"line_end":77,"column_start":29,"column_end":38},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":2880},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":321819,"byte_end":321828,"line_start":87,"line_end":87,"column_start":24,"column_end":33},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":2880},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_ok.rs","byte_start":322416,"byte_end":322425,"line_start":111,"line_end":111,"column_start":33,"column_end":42},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":2880},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":323010,"byte_end":323020,"line_start":17,"line_end":17,"column_start":30,"column_end":40},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":2937},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":323059,"byte_end":323069,"line_start":19,"line_end":19,"column_start":28,"column_end":38},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":2937},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":323291,"byte_end":323301,"line_start":30,"line_end":30,"column_start":13,"column_end":23},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":2937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":323386,"byte_end":323396,"line_start":35,"line_end":35,"column_start":13,"column_end":23},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":2937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":324707,"byte_end":324717,"line_start":77,"line_end":77,"column_start":29,"column_end":39},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":2937},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":324898,"byte_end":324908,"line_start":87,"line_end":87,"column_start":24,"column_end":34},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":2937},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/inspect_err.rs","byte_start":325503,"byte_end":325513,"line_start":111,"line_end":111,"column_start":33,"column_end":43},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":2937},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":326012,"byte_end":326022,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":6779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":327345,"byte_end":327355,"line_start":56,"line_end":56,"column_start":51,"column_end":61},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":6779},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":327476,"byte_end":327486,"line_start":62,"line_end":62,"column_start":32,"column_end":42},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":6779},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_stream.rs","byte_start":327925,"byte_end":327935,"line_start":80,"line_end":80,"column_start":42,"column_end":52},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":6779},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":328441,"byte_end":328446,"line_start":16,"line_end":16,"column_start":30,"column_end":35},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":328485,"byte_end":328490,"line_start":18,"line_end":18,"column_start":28,"column_end":33},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":328707,"byte_end":328712,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":3024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":330066,"byte_end":330071,"line_start":71,"line_end":71,"column_start":32,"column_end":37},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":3024},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":330256,"byte_end":330261,"line_start":81,"line_end":81,"column_start":27,"column_end":32},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":3024},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_ok.rs","byte_start":330839,"byte_end":330844,"line_start":105,"line_end":105,"column_start":33,"column_end":38},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":3024},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":331381,"byte_end":331387,"line_start":16,"line_end":16,"column_start":30,"column_end":36},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":3079},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":331426,"byte_end":331432,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":3079},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":331650,"byte_end":331656,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":3079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":333012,"byte_end":333018,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":3079},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":333206,"byte_end":333212,"line_start":81,"line_end":81,"column_start":27,"column_end":33},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":3079},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/map_err.rs","byte_start":333794,"byte_end":333800,"line_start":105,"line_end":105,"column_start":33,"column_end":39},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":3079},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":334416,"byte_end":334422,"line_start":18,"line_end":18,"column_start":42,"column_end":48},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":3135},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":334471,"byte_end":334477,"line_start":20,"line_end":20,"column_start":33,"column_end":39},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":3135},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":334769,"byte_end":334775,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":3135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":334911,"byte_end":334917,"line_start":39,"line_end":39,"column_start":18,"column_end":24},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":3135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":336298,"byte_end":336304,"line_start":81,"line_end":81,"column_start":29,"column_end":35},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":3135},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":337549,"byte_end":337555,"line_start":119,"line_end":119,"column_start":34,"column_end":40},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":3135},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/or_else.rs","byte_start":337910,"byte_end":337916,"line_start":131,"line_end":131,"column_start":38,"column_end":44},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":3135},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_next.rs","byte_start":338471,"byte_end":338478,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":6822},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_next.rs","byte_start":338532,"byte_end":338539,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":6822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_next.rs","byte_start":338705,"byte_end":338712,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":6822},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_next.rs","byte_start":338854,"byte_end":338861,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":6822},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each.rs","byte_start":339583,"byte_end":339593,"line_start":16,"line_end":16,"column_start":42,"column_end":52},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":3222},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each.rs","byte_start":339642,"byte_end":339652,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":3222},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each.rs","byte_start":339948,"byte_end":339958,"line_start":31,"line_end":31,"column_start":18,"column_end":28},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":3222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each.rs","byte_start":340374,"byte_end":340384,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":3222},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":341730,"byte_end":341739,"line_start":22,"line_end":22,"column_start":28,"column_end":37},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":3265},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":341833,"byte_end":341842,"line_start":26,"line_end":26,"column_start":33,"column_end":42},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":3265},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":342238,"byte_end":342247,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":3265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":343801,"byte_end":343810,"line_start":91,"line_end":91,"column_start":34,"column_end":43},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":3265},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":344079,"byte_end":344088,"line_start":101,"line_end":101,"column_start":29,"column_end":38},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":3265},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter.rs","byte_start":345643,"byte_end":345652,"line_start":146,"line_end":146,"column_start":41,"column_end":50},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":3265},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":346302,"byte_end":346314,"line_start":19,"line_end":19,"column_start":28,"column_end":40},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":3327},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":346396,"byte_end":346408,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":3327},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":346708,"byte_end":346720,"line_start":36,"line_end":36,"column_start":18,"column_end":30},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":3327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":348119,"byte_end":348131,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":3327},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":348421,"byte_end":348433,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":3327},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_filter_map.rs","byte_start":349854,"byte_end":349866,"line_start":130,"line_end":130,"column_start":38,"column_end":50},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":3327},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":350431,"byte_end":350441,"line_start":19,"line_end":19,"column_start":20,"column_end":30},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":6864},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":350512,"byte_end":350522,"line_start":26,"line_end":26,"column_start":10,"column_end":20},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":6864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":350640,"byte_end":350650,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":6864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":352006,"byte_end":352016,"line_start":77,"line_end":77,"column_start":26,"column_end":36},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":6864},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":352262,"byte_end":352272,"line_start":88,"line_end":88,"column_start":21,"column_end":31},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":6864},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_flatten.rs","byte_start":353297,"byte_end":353307,"line_start":122,"line_end":122,"column_start":30,"column_end":40},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":6864},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_collect.rs","byte_start":353916,"byte_end":353926,"line_start":16,"line_end":16,"column_start":33,"column_end":43},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":6881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_collect.rs","byte_start":354301,"byte_end":354311,"line_start":32,"line_end":32,"column_start":42,"column_end":52},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":6881},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_collect.rs","byte_start":354351,"byte_end":354361,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":6881},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_collect.rs","byte_start":354549,"byte_end":354559,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":6881},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_concat.rs","byte_start":355495,"byte_end":355504,"line_start":15,"line_end":15,"column_start":39,"column_end":48},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":6895},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_concat.rs","byte_start":355522,"byte_end":355531,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":6895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_concat.rs","byte_start":355875,"byte_end":355884,"line_start":33,"line_end":33,"column_start":21,"column_end":30},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":6895},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_fold.rs","byte_start":357172,"byte_end":357179,"line_start":17,"line_end":17,"column_start":45,"column_end":52},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":3474},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_fold.rs","byte_start":357234,"byte_end":357241,"line_start":19,"line_end":19,"column_start":36,"column_end":43},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":3474},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_fold.rs","byte_start":357600,"byte_end":357607,"line_start":34,"line_end":34,"column_start":21,"column_end":28},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":3474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_fold.rs","byte_start":358107,"byte_end":358114,"line_start":54,"line_end":54,"column_start":37,"column_end":44},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":3474},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_fold.rs","byte_start":358380,"byte_end":358387,"line_start":64,"line_end":64,"column_start":32,"column_end":39},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":3474},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":360769,"byte_end":360781,"line_start":21,"line_end":21,"column_start":54,"column_end":66},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":3529},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":360830,"byte_end":360842,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":3529},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":361298,"byte_end":361310,"line_start":39,"line_end":39,"column_start":18,"column_end":30},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":3529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":361402,"byte_end":361414,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":3529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":363124,"byte_end":363136,"line_start":98,"line_end":98,"column_start":29,"column_end":41},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":3529},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":364768,"byte_end":364780,"line_start":146,"line_end":146,"column_start":34,"column_end":46},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":3529},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_skip_while.rs","byte_start":365159,"byte_end":365171,"line_start":158,"line_end":158,"column_start":41,"column_end":53},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":3529},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8478850,"byte_end":8478868,"line_start":23,"line_end":23,"column_start":20,"column_end":38},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":7026},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8478918,"byte_end":8478936,"line_start":27,"line_end":27,"column_start":10,"column_end":28},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":7026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8480601,"byte_end":8480619,"line_start":75,"line_end":75,"column_start":21,"column_end":39},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":7026},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8481912,"byte_end":8481930,"line_start":111,"line_end":111,"column_start":33,"column_end":51},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":7026},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8482743,"byte_end":8482763,"line_start":22,"line_end":22,"column_start":28,"column_end":48},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":6991},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8482847,"byte_end":8482867,"line_start":27,"line_end":27,"column_start":33,"column_end":53},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":6991},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8483232,"byte_end":8483252,"line_start":41,"line_end":41,"column_start":34,"column_end":54},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":6991},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8483503,"byte_end":8483523,"line_start":51,"line_end":51,"column_start":18,"column_end":38},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":6991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8484189,"byte_end":8484209,"line_start":72,"line_end":72,"column_start":29,"column_end":49},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":6991},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_async_read.rs","byte_start":365845,"byte_end":365858,"line_start":21,"line_end":21,"column_start":20,"column_end":33},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":7038},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_async_read.rs","byte_start":366074,"byte_end":366087,"line_start":35,"line_end":35,"column_start":10,"column_end":23},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":7038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_async_read.rs","byte_start":366341,"byte_end":366354,"line_start":48,"line_end":48,"column_start":24,"column_end":37},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":7038},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_async_read.rs","byte_start":368222,"byte_end":368235,"line_start":103,"line_end":103,"column_start":25,"column_end":38},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":7038},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/into_async_read.rs","byte_start":368897,"byte_end":368910,"line_start":131,"line_end":131,"column_start":27,"column_end":40},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":7038},"to":{"krate":22,"index":27}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":286649,"byte_end":286650,"line_start":105,"line_end":105,"column_start":46,"column_end":47},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":3614},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/try_stream/mod.rs","byte_start":286731,"byte_end":286740,"line_start":108,"line_end":108,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":15,"index":97},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371028,"byte_end":371032,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":7057},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/iter.rs","byte_start":371638,"byte_end":371642,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":7057},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372776,"byte_end":372782,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":7063},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":372809,"byte_end":372815,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":7063},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/repeat.rs","byte_start":373122,"byte_end":373128,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":7063},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/empty.rs","byte_start":373740,"byte_end":373745,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":7069},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/empty.rs","byte_start":373777,"byte_end":373782,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":7069},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/empty.rs","byte_start":373867,"byte_end":373872,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":7069},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374923,"byte_end":374927,"line_start":31,"line_end":31,"column_start":28,"column_end":32},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":7075},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":374947,"byte_end":374951,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":7075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":375032,"byte_end":375036,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":7075},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/once.rs","byte_start":375619,"byte_end":375623,"line_start":59,"line_end":59,"column_start":35,"column_end":39},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":7075},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/pending.rs","byte_start":376233,"byte_end":376240,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":7084},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/pending.rs","byte_start":376272,"byte_end":376279,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":7084},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/pending.rs","byte_start":376364,"byte_end":376371,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":7084},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":376896,"byte_end":376902,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":3810},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":376933,"byte_end":376939,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":3810},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/poll_fn.rs","byte_start":377681,"byte_end":377687,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":3810},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":378284,"byte_end":378290,"line_start":15,"line_end":15,"column_start":40,"column_end":46},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":7090},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":379035,"byte_end":379041,"line_start":38,"line_end":38,"column_start":16,"column_end":22},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":7090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":380564,"byte_end":380570,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":7090},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select.rs","byte_start":380788,"byte_end":380794,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":7090},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":384214,"byte_end":384220,"line_start":66,"line_end":66,"column_start":34,"column_end":40},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":3886},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":384267,"byte_end":384273,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":3886},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":384554,"byte_end":384560,"line_start":81,"line_end":81,"column_start":17,"column_end":23},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":3886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":384721,"byte_end":384727,"line_start":87,"line_end":87,"column_start":39,"column_end":45},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":3886},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/unfold.rs","byte_start":384953,"byte_end":384959,"line_start":96,"line_end":96,"column_start":34,"column_end":40},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":3886},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8487453,"byte_end":8487465,"line_start":19,"line_end":19,"column_start":23,"column_end":35},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":8084},"to":{"krate":2,"index":1619}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8487570,"byte_end":8487582,"line_start":25,"line_end":25,"column_start":16,"column_end":28},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":8084},"to":{"krate":2,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8487613,"byte_end":8487625,"line_start":27,"line_end":27,"column_start":24,"column_end":36},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":8084},"to":{"krate":2,"index":1656}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8487748,"byte_end":8487760,"line_start":33,"line_end":33,"column_start":17,"column_end":29},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":8084},"to":{"krate":2,"index":1645}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8487930,"byte_end":8487942,"line_start":40,"line_end":40,"column_start":9,"column_end":21},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":8084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8487999,"byte_end":8488011,"line_start":44,"line_end":44,"column_start":20,"column_end":32},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":8084},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8490622,"byte_end":8490636,"line_start":101,"line_end":101,"column_start":27,"column_end":41},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":7144},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8490662,"byte_end":8490676,"line_start":103,"line_end":103,"column_start":19,"column_end":33},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":7144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8492300,"byte_end":8492314,"line_start":147,"line_end":147,"column_start":31,"column_end":45},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":7144},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8492432,"byte_end":8492446,"line_start":153,"line_end":153,"column_start":30,"column_end":44},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":7144},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8493630,"byte_end":8493644,"line_start":191,"line_end":191,"column_start":29,"column_end":43},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":7144},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_ordered.rs","byte_start":8493810,"byte_end":8493824,"line_start":197,"line_end":197,"column_start":41,"column_end":55},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":7144},"to":{"krate":2,"index":4676}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/abort.rs","byte_start":8514284,"byte_end":8514295,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":7210},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8515375,"byte_end":8515385,"line_start":30,"line_end":30,"column_start":28,"column_end":38},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":7442},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8515943,"byte_end":8515953,"line_start":51,"line_end":51,"column_start":33,"column_end":43},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":7442},"to":{"krate":2,"index":4728}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8516001,"byte_end":8516008,"line_start":53,"line_end":53,"column_start":35,"column_end":42},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":7452},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8516272,"byte_end":8516279,"line_start":65,"line_end":65,"column_start":40,"column_end":47},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":7452},"to":{"krate":2,"index":4728}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8516320,"byte_end":8516330,"line_start":67,"line_end":67,"column_start":28,"column_end":38},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":7461},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8516880,"byte_end":8516890,"line_start":88,"line_end":88,"column_start":33,"column_end":43},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":7461},"to":{"krate":2,"index":4728}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8516938,"byte_end":8516942,"line_start":90,"line_end":90,"column_start":35,"column_end":39},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":7471},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/iter.rs","byte_start":8517198,"byte_end":8517202,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":7471},"to":{"krate":2,"index":4728}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/task.rs","byte_start":8518383,"byte_end":8518387,"line_start":35,"line_end":35,"column_start":27,"column_end":31},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":7271},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/task.rs","byte_start":8518422,"byte_end":8518426,"line_start":36,"line_end":36,"column_start":27,"column_end":31},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":7271},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/task.rs","byte_start":8518458,"byte_end":8518462,"line_start":38,"line_end":38,"column_start":23,"column_end":27},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":7271},"to":{"krate":18,"index":240}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/task.rs","byte_start":8519539,"byte_end":8519543,"line_start":65,"line_end":65,"column_start":11,"column_end":15},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":7271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/task.rs","byte_start":8519752,"byte_end":8519756,"line_start":72,"line_end":72,"column_start":20,"column_end":24},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":7271},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8521206,"byte_end":8521221,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":7316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8523071,"byte_end":8523086,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":7316},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496640,"byte_end":8496656,"line_start":69,"line_end":69,"column_start":33,"column_end":49},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":7334},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496697,"byte_end":8496713,"line_start":70,"line_end":70,"column_start":33,"column_end":49},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":7334},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496742,"byte_end":8496758,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":7334},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496783,"byte_end":8496799,"line_start":73,"line_end":73,"column_start":16,"column_end":32},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":7334},"to":{"krate":18,"index":10}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8496996,"byte_end":8497012,"line_start":82,"line_end":82,"column_start":21,"column_end":37},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":7334},"to":{"krate":18,"index":13}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8498598,"byte_end":8498614,"line_start":114,"line_end":114,"column_start":19,"column_end":35},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":7334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8499738,"byte_end":8499754,"line_start":145,"line_end":145,"column_start":31,"column_end":47},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":7334},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8499857,"byte_end":8499873,"line_start":151,"line_end":151,"column_start":11,"column_end":27},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":7334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8506126,"byte_end":8506142,"line_start":310,"line_end":310,"column_start":30,"column_end":46},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":7334},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8510315,"byte_end":8510319,"line_start":403,"line_end":403,"column_start":32,"column_end":36},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":7371},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8512191,"byte_end":8512207,"line_start":456,"line_end":456,"column_start":21,"column_end":37},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":7334},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8512354,"byte_end":8512370,"line_start":462,"line_end":462,"column_start":20,"column_end":36},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":7334},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8513809,"byte_end":8513825,"line_start":491,"line_end":491,"column_start":41,"column_end":57},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":7334},"to":{"krate":2,"index":4676}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/futures_unordered/mod.rs","byte_start":8514081,"byte_end":8514097,"line_start":501,"line_end":501,"column_start":35,"column_end":51},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":7334},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8524903,"byte_end":8524912,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":7411},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8525057,"byte_end":8525066,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":7411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8526116,"byte_end":8526125,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":7411},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8526238,"byte_end":8526247,"line_start":73,"line_end":73,"column_start":37,"column_end":46},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":7411},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8527054,"byte_end":8527063,"line_start":98,"line_end":98,"column_start":42,"column_end":51},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":7411},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/stream/select_all.rs","byte_start":8528039,"byte_end":8528048,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":7411},"to":{"krate":2,"index":4676}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/close.rs","byte_start":394660,"byte_end":394665,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":7480},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/close.rs","byte_start":394860,"byte_end":394865,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":7480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/close.rs","byte_start":395075,"byte_end":395080,"line_start":29,"line_end":29,"column_start":56,"column_end":61},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":7480},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":396041,"byte_end":396046,"line_start":32,"line_end":32,"column_start":19,"column_end":24},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":7491},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/drain.rs","byte_start":396074,"byte_end":396079,"line_start":34,"line_end":34,"column_start":21,"column_end":26},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":7491},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":397244,"byte_end":397250,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":3987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":398389,"byte_end":398395,"line_start":52,"line_end":52,"column_start":40,"column_end":46},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":3987},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/fanout.rs","byte_start":398646,"byte_end":398652,"line_start":61,"line_end":61,"column_start":37,"column_end":43},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":3987},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/flush.rs","byte_start":400690,"byte_end":400695,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":7503},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/flush.rs","byte_start":401046,"byte_end":401051,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":7503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/flush.rs","byte_start":401261,"byte_end":401266,"line_start":33,"line_end":33,"column_start":56,"column_end":61},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":7503},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":401951,"byte_end":401962,"line_start":15,"line_end":15,"column_start":19,"column_end":30},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":7514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":402983,"byte_end":402994,"line_start":51,"line_end":51,"column_start":34,"column_end":45},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":7514},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":403204,"byte_end":403215,"line_start":61,"line_end":61,"column_start":29,"column_end":40},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":7514},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/err_into.rs","byte_start":403594,"byte_end":403605,"line_start":79,"line_end":79,"column_start":34,"column_end":45},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":7514},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":404192,"byte_end":404202,"line_start":15,"line_end":15,"column_start":30,"column_end":40},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":7531},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":404226,"byte_end":404236,"line_start":17,"line_end":17,"column_start":13,"column_end":23},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":7531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":405244,"byte_end":405254,"line_start":53,"line_end":53,"column_start":37,"column_end":47},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":7531},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":406276,"byte_end":406286,"line_start":89,"line_end":89,"column_start":31,"column_end":41},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":7531},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/map_err.rs","byte_start":406604,"byte_end":406614,"line_start":104,"line_end":104,"column_start":41,"column_end":51},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":7531},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send.rs","byte_start":407139,"byte_end":407143,"line_start":15,"line_end":15,"column_start":42,"column_end":46},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":7549},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send.rs","byte_start":407210,"byte_end":407214,"line_start":17,"line_end":17,"column_start":49,"column_end":53},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":7549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send.rs","byte_start":407430,"byte_end":407434,"line_start":26,"line_end":26,"column_start":56,"column_end":60},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":7549},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send_all.rs","byte_start":408854,"byte_end":408861,"line_start":22,"line_end":22,"column_start":29,"column_end":36},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":4163},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send_all.rs","byte_start":409300,"byte_end":409307,"line_start":38,"line_end":38,"column_start":24,"column_end":31},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":4163},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send_all.rs","byte_start":409418,"byte_end":409425,"line_start":44,"line_end":44,"column_start":29,"column_end":36},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":4163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/send_all.rs","byte_start":410318,"byte_end":410325,"line_start":78,"line_end":78,"column_start":36,"column_end":43},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":4163},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":411953,"byte_end":411957,"line_start":19,"line_end":19,"column_start":37,"column_end":41},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":4206},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":412061,"byte_end":412065,"line_start":25,"line_end":25,"column_start":42,"column_end":46},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":4206},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":412367,"byte_end":412371,"line_start":38,"line_end":38,"column_start":27,"column_end":31},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":4206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":412930,"byte_end":412934,"line_start":62,"line_end":62,"column_start":37,"column_end":41},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":4206},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":413341,"byte_end":413345,"line_start":81,"line_end":81,"column_start":30,"column_end":34},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":4206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with.rs","byte_start":414676,"byte_end":414680,"line_start":125,"line_end":125,"column_start":42,"column_end":46},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":4206},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":416389,"byte_end":416400,"line_start":19,"line_end":19,"column_start":36,"column_end":47},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":4285},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":416501,"byte_end":416512,"line_start":25,"line_end":25,"column_start":41,"column_end":52},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":4285},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":416885,"byte_end":416896,"line_start":40,"line_end":40,"column_start":26,"column_end":37},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":4285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":419152,"byte_end":419163,"line_start":114,"line_end":114,"column_start":36,"column_end":47},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":4285},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":419598,"byte_end":419609,"line_start":134,"line_end":134,"column_start":41,"column_end":52},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":4285},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/with_flat_map.rs","byte_start":419858,"byte_end":419869,"line_start":145,"line_end":145,"column_start":38,"column_end":49},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":4285},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":421439,"byte_end":421445,"line_start":19,"line_end":19,"column_start":33,"column_end":39},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":7576},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":421487,"byte_end":421493,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":7576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":423013,"byte_end":423019,"line_start":73,"line_end":73,"column_start":26,"column_end":32},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":7576},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":423336,"byte_end":423342,"line_start":85,"line_end":85,"column_start":31,"column_end":37},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":7576},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/buffer.rs","byte_start":423511,"byte_end":423517,"line_start":91,"line_end":91,"column_start":43,"column_end":49},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":7576},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386764,"byte_end":386765,"line_start":53,"line_end":53,"column_start":41,"column_end":42},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":4394},"to":{"krate":0,"index":4396}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/sink/mod.rs","byte_start":386914,"byte_end":386918,"line_start":57,"line_end":57,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":20,"index":9},"to":{"krate":0,"index":4396}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426014,"byte_end":426016,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":4441},"to":{"krate":0,"index":4444}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426071,"byte_end":426073,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":4443},"to":{"krate":0,"index":4449}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":426152,"byte_end":426157,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":18,"index":10},"to":{"krate":0,"index":4444}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/task/spawn.rs","byte_start":428812,"byte_end":428822,"line_start":95,"line_end":95,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":18,"index":13},"to":{"krate":0,"index":4449}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":453894,"byte_end":453904,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":7599},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":454341,"byte_end":454351,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":7599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":454868,"byte_end":454878,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":7599},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":455418,"byte_end":455428,"line_start":81,"line_end":81,"column_start":24,"column_end":34},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":7599},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":456177,"byte_end":456187,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":7599},"to":{"krate":1,"index":2861}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":456907,"byte_end":456917,"line_start":126,"line_end":126,"column_start":23,"column_end":33},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":7599},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":457505,"byte_end":457515,"line_start":145,"line_end":145,"column_start":22,"column_end":32},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":7599},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":457654,"byte_end":457664,"line_start":151,"line_end":151,"column_start":23,"column_end":33},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":7599},"to":{"krate":22,"index":25}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":457902,"byte_end":457912,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":7599},"to":{"krate":1,"index":2937}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/allow_std.rs","byte_start":458123,"byte_end":458133,"line_start":168,"line_end":168,"column_start":26,"column_end":36},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":7599},"to":{"krate":22,"index":27}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":459821,"byte_end":459830,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":4575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":461926,"byte_end":461935,"line_start":106,"line_end":106,"column_start":34,"column_end":43},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":4575},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":463525,"byte_end":463534,"line_start":150,"line_end":150,"column_start":37,"column_end":46},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":4575},"to":{"krate":22,"index":27}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":464448,"byte_end":464457,"line_start":175,"line_end":175,"column_start":36,"column_end":45},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":4575},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_reader.rs","byte_start":464770,"byte_end":464779,"line_start":184,"line_end":184,"column_start":46,"column_end":55},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":4575},"to":{"krate":22,"index":25}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":468523,"byte_end":468532,"line_start":36,"line_end":36,"column_start":21,"column_end":30},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":4625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":470944,"byte_end":470953,"line_start":116,"line_end":116,"column_start":36,"column_end":45},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":4625},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":472330,"byte_end":472339,"line_start":159,"line_end":159,"column_start":36,"column_end":45},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":4625},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/buf_writer.rs","byte_start":472698,"byte_end":472707,"line_start":169,"line_end":169,"column_start":47,"column_end":56},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":4625},"to":{"krate":22,"index":25}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":473560,"byte_end":473565,"line_start":18,"line_end":18,"column_start":22,"column_end":27},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":4668},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":473622,"byte_end":473627,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":4668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":475127,"byte_end":475132,"line_start":74,"line_end":74,"column_start":27,"column_end":32},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":4668},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":475411,"byte_end":475416,"line_start":87,"line_end":87,"column_start":26,"column_end":31},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":4668},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/chain.rs","byte_start":476751,"byte_end":476756,"line_start":133,"line_end":133,"column_start":29,"column_end":34},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":4668},"to":{"krate":22,"index":27}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/close.rs","byte_start":478028,"byte_end":478033,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":7656},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/close.rs","byte_start":478086,"byte_end":478091,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":7656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/close.rs","byte_start":478234,"byte_end":478239,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":7656},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":479943,"byte_end":479947,"line_start":51,"line_end":51,"column_start":45,"column_end":49},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7664},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":480038,"byte_end":480042,"line_start":53,"line_end":53,"column_start":35,"column_end":39},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy.rs","byte_start":480177,"byte_end":480181,"line_start":57,"line_end":57,"column_start":63,"column_end":67},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7664},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481815,"byte_end":481822,"line_start":53,"line_end":53,"column_start":37,"column_end":44},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":7677},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":481864,"byte_end":481871,"line_start":55,"line_end":55,"column_start":28,"column_end":35},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":7677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/copy_buf.rs","byte_start":482165,"byte_end":482172,"line_start":64,"line_end":64,"column_start":23,"column_end":30},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":7677},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":483997,"byte_end":484003,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":7689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":487231,"byte_end":487237,"line_start":150,"line_end":150,"column_start":23,"column_end":29},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":7689},"to":{"krate":22,"index":25}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":487524,"byte_end":487530,"line_start":163,"line_end":163,"column_start":44,"column_end":50},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":7689},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":488162,"byte_end":488168,"line_start":187,"line_end":187,"column_start":26,"column_end":32},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":7689},"to":{"krate":22,"index":27}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":489317,"byte_end":489323,"line_start":224,"line_end":224,"column_start":21,"column_end":27},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":7689},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":489398,"byte_end":489404,"line_start":228,"line_end":228,"column_start":21,"column_end":27},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":7689},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":489482,"byte_end":489488,"line_start":232,"line_end":232,"column_start":21,"column_end":27},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":7689},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/cursor.rs","byte_start":489561,"byte_end":489567,"line_start":236,"line_end":236,"column_start":21,"column_end":27},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":7689},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490550,"byte_end":490555,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":4831},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":490903,"byte_end":490908,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":4831},"to":{"krate":22,"index":27}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/empty.rs","byte_start":491140,"byte_end":491145,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":4831},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/flush.rs","byte_start":491631,"byte_end":491636,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":7717},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/flush.rs","byte_start":491689,"byte_end":491694,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":7717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/flush.rs","byte_start":491808,"byte_end":491813,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":7717},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/into_sink.rs","byte_start":492722,"byte_end":492730,"line_start":25,"line_end":25,"column_start":32,"column_end":40},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":7732},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/into_sink.rs","byte_start":492783,"byte_end":492791,"line_start":27,"line_end":27,"column_start":40,"column_end":48},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":7732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/into_sink.rs","byte_start":494046,"byte_end":494054,"line_start":66,"line_end":66,"column_start":55,"column_end":63},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":7732},"to":{"krate":20,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/lines.rs","byte_start":495621,"byte_end":495626,"line_start":19,"line_end":19,"column_start":26,"column_end":31},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":7746},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/lines.rs","byte_start":495656,"byte_end":495661,"line_start":21,"line_end":21,"column_start":23,"column_end":28},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":7746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/lines.rs","byte_start":495881,"byte_end":495886,"line_start":32,"line_end":32,"column_start":34,"column_end":39},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":7746},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read.rs","byte_start":496940,"byte_end":496944,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":7755},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read.rs","byte_start":496996,"byte_end":497000,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":7755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read.rs","byte_start":497165,"byte_end":497169,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7755},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_vectored.rs","byte_start":497857,"byte_end":497869,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7764},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_vectored.rs","byte_start":497921,"byte_end":497933,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":7764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_vectored.rs","byte_start":498112,"byte_end":498124,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":7764},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_exact.rs","byte_start":498794,"byte_end":498803,"line_start":16,"line_end":16,"column_start":35,"column_end":44},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":7773},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_exact.rs","byte_start":498855,"byte_end":498864,"line_start":18,"line_end":18,"column_start":41,"column_end":50},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":7773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_exact.rs","byte_start":499034,"byte_end":499043,"line_start":24,"line_end":24,"column_start":48,"column_end":57},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":7773},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_line.rs","byte_start":500160,"byte_end":500168,"line_start":20,"line_end":20,"column_start":35,"column_end":43},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":7782},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_line.rs","byte_start":500223,"byte_end":500231,"line_start":22,"line_end":22,"column_start":44,"column_end":52},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":7782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_line.rs","byte_start":501266,"byte_end":501274,"line_start":54,"line_end":54,"column_start":51,"column_end":59},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":7782},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_end.rs","byte_start":502004,"byte_end":502013,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":7793},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_end.rs","byte_start":502065,"byte_end":502074,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":7793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_end.rs","byte_start":502355,"byte_end":502360,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":5013},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_end.rs","byte_start":503910,"byte_end":503919,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":7793},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_string.rs","byte_start":504767,"byte_end":504779,"line_start":19,"line_end":19,"column_start":35,"column_end":47},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":7803},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_string.rs","byte_start":504831,"byte_end":504843,"line_start":21,"line_end":21,"column_start":41,"column_end":53},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":7803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_to_string.rs","byte_start":505885,"byte_end":505897,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":7803},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_until.rs","byte_start":506692,"byte_end":506701,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":7814},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_until.rs","byte_start":506756,"byte_end":506765,"line_start":20,"line_end":20,"column_start":44,"column_end":53},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":7814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/read_until.rs","byte_start":507737,"byte_end":507746,"line_start":52,"line_end":52,"column_start":51,"column_end":60},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":7814},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":508945,"byte_end":508951,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":5085},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/repeat.rs","byte_start":509731,"byte_end":509737,"line_start":69,"line_end":69,"column_start":21,"column_end":27},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":5085},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/seek.rs","byte_start":510251,"byte_end":510255,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":7825},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/seek.rs","byte_start":510307,"byte_end":510311,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":7825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/seek.rs","byte_start":510468,"byte_end":510472,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":7825},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":511601,"byte_end":511605,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":5127},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/sink.rs","byte_start":512323,"byte_end":512327,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":5127},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/split.rs","byte_start":513335,"byte_end":513343,"line_start":35,"line_end":35,"column_start":34,"column_end":42},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":7834},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/split.rs","byte_start":513808,"byte_end":513817,"line_start":49,"line_end":49,"column_start":36,"column_end":45},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":7840},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515084,"byte_end":515088,"line_start":18,"line_end":18,"column_start":26,"column_end":30},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":7846},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":515116,"byte_end":515120,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":7846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":519421,"byte_end":519425,"line_start":167,"line_end":167,"column_start":34,"column_end":38},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":7846},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/take.rs","byte_start":520062,"byte_end":520066,"line_start":189,"line_end":189,"column_start":40,"column_end":44},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":7846},"to":{"krate":22,"index":27}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":521975,"byte_end":521981,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":7858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":524084,"byte_end":524090,"line_start":97,"line_end":97,"column_start":38,"column_end":44},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":7858},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/window.rs","byte_start":524237,"byte_end":524243,"line_start":103,"line_end":103,"column_start":38,"column_end":44},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":7858},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write.rs","byte_start":524764,"byte_end":524769,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":7865},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write.rs","byte_start":524822,"byte_end":524827,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":7865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write.rs","byte_start":524989,"byte_end":524994,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":7865},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write_vectored.rs","byte_start":525678,"byte_end":525691,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":7874},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write_vectored.rs","byte_start":525744,"byte_end":525757,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":7874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write_vectored.rs","byte_start":525930,"byte_end":525943,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":7874},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write_all.rs","byte_start":526610,"byte_end":526618,"line_start":16,"line_end":16,"column_start":35,"column_end":43},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":7883},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write_all.rs","byte_start":526671,"byte_end":526679,"line_start":18,"line_end":18,"column_start":42,"column_end":50},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":7883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/write_all.rs","byte_start":526845,"byte_end":526853,"line_start":24,"line_end":24,"column_start":49,"column_end":57},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":7883},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":434815,"byte_end":434824,"line_start":128,"line_end":128,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":22,"index":17},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":442797,"byte_end":442798,"line_start":377,"line_end":377,"column_start":46,"column_end":47},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":5310},"to":{"krate":0,"index":5294}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":442901,"byte_end":442911,"line_start":380,"line_end":380,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":22,"index":20},"to":{"krate":0,"index":5311}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446893,"byte_end":446894,"line_start":508,"line_end":508,"column_start":48,"column_end":49},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":5323},"to":{"krate":0,"index":5311}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":446995,"byte_end":447004,"line_start":511,"line_end":511,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":22,"index":25},"to":{"krate":0,"index":5324}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":447428,"byte_end":447429,"line_start":524,"line_end":524,"column_start":46,"column_end":47},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":5327},"to":{"krate":0,"index":5324}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":447536,"byte_end":447548,"line_start":527,"line_end":527,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":22,"index":27},"to":{"krate":0,"index":5328}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/io/mod.rs","byte_start":452958,"byte_end":452959,"line_start":675,"line_end":675,"column_start":52,"column_end":53},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":5335},"to":{"krate":0,"index":5328}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8529488,"byte_end":8529493,"line_start":18,"line_end":18,"column_start":32,"column_end":37},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":7914},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8529826,"byte_end":8529831,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":7914},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8529924,"byte_end":8529929,"line_start":34,"line_end":34,"column_start":30,"column_end":35},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":7914},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8530067,"byte_end":8530073,"line_start":45,"line_end":45,"column_start":6,"column_end":12},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":7928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8530617,"byte_end":8530622,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":7914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8531198,"byte_end":8531203,"line_start":90,"line_end":90,"column_start":17,"column_end":22},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":7914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8533921,"byte_end":8533936,"line_start":169,"line_end":169,"column_start":32,"column_end":47},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":7950},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8534446,"byte_end":8534461,"line_start":185,"line_end":185,"column_start":33,"column_end":48},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":7950},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8534578,"byte_end":8534593,"line_start":191,"line_end":191,"column_start":32,"column_end":47},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":7950},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8535822,"byte_end":8535837,"line_start":227,"line_end":227,"column_start":26,"column_end":41},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":7950},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8536463,"byte_end":8536473,"line_start":246,"line_end":246,"column_start":45,"column_end":55},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":7969},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8536718,"byte_end":8536728,"line_start":255,"line_end":255,"column_start":26,"column_end":36},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":7969},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8537113,"byte_end":8537123,"line_start":267,"line_end":267,"column_start":27,"column_end":37},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":7969},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8537264,"byte_end":8537274,"line_start":274,"line_end":274,"column_start":30,"column_end":40},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":7969},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8537560,"byte_end":8537565,"line_start":282,"line_end":282,"column_start":40,"column_end":45},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":7914},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8537611,"byte_end":8537616,"line_start":283,"line_end":283,"column_start":40,"column_end":45},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":7914},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8537783,"byte_end":8537798,"line_start":287,"line_end":287,"column_start":40,"column_end":55},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":7950},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8537902,"byte_end":8537917,"line_start":289,"line_end":289,"column_start":33,"column_end":48},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":7950},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8538121,"byte_end":8538131,"line_start":293,"line_end":293,"column_start":40,"column_end":50},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":7969},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/mutex.rs","byte_start":8538181,"byte_end":8538191,"line_start":294,"line_end":294,"column_start":40,"column_end":50},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":7969},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8540059,"byte_end":8540064,"line_start":47,"line_end":47,"column_start":31,"column_end":36},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":8066},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8540101,"byte_end":8540106,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":8066},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8540122,"byte_end":8540128,"line_start":50,"line_end":50,"column_start":9,"column_end":15},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":8060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8545697,"byte_end":8545702,"line_start":186,"line_end":186,"column_start":16,"column_end":21},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":8066},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8545824,"byte_end":8545829,"line_start":192,"line_end":192,"column_start":18,"column_end":23},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":8066},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8546107,"byte_end":8546119,"line_start":202,"line_end":202,"column_start":24,"column_end":36},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":8033},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8546309,"byte_end":8546321,"line_start":210,"line_end":210,"column_start":26,"column_end":38},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":8033},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8546542,"byte_end":8546554,"line_start":217,"line_end":217,"column_start":47,"column_end":59},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":8033},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8546886,"byte_end":8546897,"line_start":229,"line_end":229,"column_start":19,"column_end":30},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":8073},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8547060,"byte_end":8547071,"line_start":236,"line_end":236,"column_start":29,"column_end":40},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":8073},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8547209,"byte_end":8547220,"line_start":242,"line_end":242,"column_start":9,"column_end":20},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":8073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.1/src/lock/bilock.rs","byte_start":8547572,"byte_end":8547583,"line_start":251,"line_end":251,"column_start":18,"column_end":29},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":8073},"to":{"krate":2,"index":2076}}]}