{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1","program":"/home/ivan/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_channel","--edition=2018","/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"futures-sink\"","--cfg","feature=\"sink\"","--cfg","feature=\"std\"","-C","metadata=a4ce3674a9bb10f4","-C","extra-filename=-a4ce3674a9bb10f4","--out-dir","/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps","-L","dependency=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps","--extern","futures_core=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libfutures_core-a432bea2d7cd63a6.rmeta","--extern","futures_sink=/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libfutures_sink-f16fe027e602b0d1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ivan/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/ivan/workspace/p2pmsg/p2pmsg-lib/target/rls/debug/deps/libfutures_channel-a4ce3674a9bb10f4.rmeta"},"prelude":{"crate_id":{"name":"futures_channel","disambiguator":[6017684133149773455,9842202736864853890]},"crate_root":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src","external_crates":[{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7827686636389194820,15662552692549508232]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lock.rs","num":2,"id":{"name":"core","disambiguator":[8347428267238659886,10332094417061409504]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1363863465332800457,13848166988694336684]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12137614861726203495,15548133240156816566]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18056567842020430853,9313265962764064672]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17764581655047699045,8969240834890926963]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15105272547384731958,12075926336353145446]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18440455352970948901,15112185841299963639]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1364483041201605089,13268241566818872575]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14006621007583817116,4233624759020785085]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8672076995780005164,5844773395501633050]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[7980643601488589141,11238545750628155236]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[812282429613043422,12768483485645190371]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[16394268894339983760,18168038129299562657]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","num":15,"id":{"name":"futures_core","disambiguator":[12488506343877259468,12744302483260328354]}},{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/sink_impl.rs","num":16,"id":{"name":"futures_sink","disambiguator":[11177315347313063590,10276619660450108214]}}],"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","byte_start":0,"byte_end":1450,"line_start":1,"line_end":42,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","byte_start":0,"byte_end":1450,"line_start":1,"line_end":42,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":34},{"krate":0,"index":249}],"decl_id":null,"docs":" Asynchronous channels.","sig":null,"attributes":[{"value":"! Asynchronous channels.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","byte_start":27,"byte_end":30,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This crate provides channels that can be used to communicate between","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","byte_start":31,"byte_end":103,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"! asynchronous tasks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","byte_start":104,"byte_end":127,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","byte_start":128,"byte_end":131,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! All items of this library are only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","byte_start":132,"byte_end":222,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","byte_start":223,"byte_end":280,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","byte_start":407,"byte_end":495,"line_start":13,"line_end":13,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","byte_start":663,"byte_end":684,"line_start":16,"line_end":16,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::mpsc","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":84},{"krate":0,"index":321},{"krate":0,"index":326},{"krate":0,"index":116},{"krate":0,"index":329},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":340},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":353},{"krate":0,"index":120},{"krate":0,"index":356},{"krate":0,"index":367},{"krate":0,"index":365},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":369},{"krate":0,"index":384},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":387},{"krate":0,"index":400},{"krate":0,"index":398},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":402},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":419},{"krate":0,"index":417},{"krate":0,"index":416},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":176},{"krate":0,"index":186},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":239},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","byte_start":1356,"byte_end":1379,"line_start":38,"line_end":38,"column_start":5,"column_end":28}},{"value":"! A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6778951,"byte_end":6779020,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"! asynchronous tasks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779021,"byte_end":6779044,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779045,"byte_end":6779048,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! Similarly to the `std`, channel creation provides [`Receiver`] and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779049,"byte_end":6779119,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"! [`Sender`] handles. [`Receiver`] implements [`Stream`] and allows a task to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779120,"byte_end":6779199,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"! read values out of the channel. If there is no message to read from the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779200,"byte_end":6779275,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"! channel, the current task will be notified when a new value is sent.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779276,"byte_end":6779348,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"! [`Sender`] implements the `Sink` trait and allows a task to send messages into","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779349,"byte_end":6779431,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"! the channel. If the channel is at capacity, the send will be rejected and","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779432,"byte_end":6779509,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"! the task will be notified when additional capacity is available. In other","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779510,"byte_end":6779587,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"! words, the channel provides backpressure.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779588,"byte_end":6779633,"line_start":11,"line_end":11,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779634,"byte_end":6779637,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Unbounded channels are also available using the `unbounded` constructor.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779638,"byte_end":6779714,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779715,"byte_end":6779718,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! # Disconnection","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779719,"byte_end":6779738,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779739,"byte_end":6779742,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779743,"byte_end":6779809,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"! possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779810,"byte_end":6779890,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"! event of the stream. As such, [`Receiver::poll_next`]","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779891,"byte_end":6779948,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"! will return `Ok(Ready(None))`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779949,"byte_end":6779983,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779984,"byte_end":6779987,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6779988,"byte_end":6780058,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"! be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6780059,"byte_end":6780138,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"! result in an error.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6780139,"byte_end":6780162,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6780163,"byte_end":6780166,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! # Clean Shutdown","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6780167,"byte_end":6780187,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6780188,"byte_end":6780191,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! If the [`Receiver`] is simply dropped, then it is possible for","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6780192,"byte_end":6780258,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"! there to be messages still in the channel that will not be processed. As","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6780259,"byte_end":6780335,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"! such, it is usually desirable to perform a \"clean\" shutdown. To do this, the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6780336,"byte_end":6780416,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"! receiver will first call `close`, which will prevent any further messages to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6780417,"byte_end":6780497,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"! be sent into the channel. Then, the receiver consumes the channel to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6780498,"byte_end":6780570,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"! completion, at which point the receiver can be dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6780571,"byte_end":6780630,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6780631,"byte_end":6780634,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: struct.Sender.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6780635,"byte_end":6780669,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"! [`Receiver`]: struct.Receiver.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6780670,"byte_end":6780708,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"! [`Stream`]: ../../futures_core/stream/trait.Stream.html","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6780709,"byte_end":6780768,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"! [`Receiver::poll_next`]:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6780769,"byte_end":6780797,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"!     ../../futures_core/stream/trait.Stream.html#tymethod.poll_next","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6780798,"byte_end":6780868,"line_start":39,"line_end":39,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":329},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784025,"byte_end":6784031,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"Sender","qualname":"::mpsc::Sender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of a bounded mpsc channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6783877,"byte_end":6783928,"line_start":114,"line_end":114,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6783929,"byte_end":6783932,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6783933,"byte_end":6783996,"line_start":116,"line_end":116,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":336},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784216,"byte_end":6784231,"line_start":124,"line_end":124,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::mpsc::UnboundedSender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of an unbounded mpsc channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784061,"byte_end":6784115,"line_start":120,"line_end":120,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784116,"byte_end":6784119,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784120,"byte_end":6784187,"line_start":122,"line_end":122,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":343},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784494,"byte_end":6784502,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::mpsc::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":345}],"decl_id":null,"docs":" The receiving end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of a bounded mpsc channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784349,"byte_end":6784397,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784398,"byte_end":6784401,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784402,"byte_end":6784465,"line_start":131,"line_end":131,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":349},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784697,"byte_end":6784714,"line_start":141,"line_end":141,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::mpsc::UnboundedReceiver","value":"","parent":null,"children":[],"decl_id":null,"docs":" The receiving end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of an unbounded mpsc channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784545,"byte_end":6784596,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784597,"byte_end":6784600,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784601,"byte_end":6784668,"line_start":139,"line_end":139,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784958,"byte_end":6784967,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"SendError","qualname":"::mpsc::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":357}],"decl_id":null,"docs":" The error type for [`Sender`s](Sender) used as `Sink`s.\n","sig":null,"attributes":[{"value":"/ The error type for [`Sender`s](Sender) used as `Sink`s.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784848,"byte_end":6784907,"line_start":146,"line_end":146,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":369},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6785106,"byte_end":6785118,"line_start":154,"line_end":154,"column_start":12,"column_end":24},"name":"TrySendError","qualname":"::mpsc::TrySendError","value":"TrySendError {  }","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"decl_id":null,"docs":" The error type returned from [`try_send`](Sender::try_send).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_send`](Sender::try_send).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784998,"byte_end":6785062,"line_start":152,"line_end":152,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":122},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6785328,"byte_end":6785340,"line_start":166,"line_end":166,"column_start":12,"column_end":24},"name":"TryRecvError","qualname":"::mpsc::TryRecvError","value":"TryRecvError {  }","parent":null,"children":[{"krate":0,"index":123}],"decl_id":null,"docs":" The error type returned from [`try_next`](Receiver::try_next).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_next`](Receiver::try_next).","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6785250,"byte_end":6785316,"line_start":165,"line_end":165,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6785788,"byte_end":6785795,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"is_full","qualname":"<SendError>::is_full","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns true if this error is a result of the channel being full.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6785707,"byte_end":6785776,"line_start":183,"line_end":183,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6786010,"byte_end":6786025,"line_start":192,"line_end":192,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<SendError>::is_disconnected","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns true if this error is a result of the receiver being dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6785925,"byte_end":6785998,"line_start":191,"line_end":191,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6786848,"byte_end":6786855,"line_start":222,"line_end":222,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns true if this error is a result of the channel being full.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6786767,"byte_end":6786836,"line_start":221,"line_end":221,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6786996,"byte_end":6787011,"line_start":227,"line_end":227,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<TrySendError<T>>::is_disconnected","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns true if this error is a result of the receiver being dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6786911,"byte_end":6786984,"line_start":226,"line_end":226,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6787152,"byte_end":6787162,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6787075,"byte_end":6787140,"line_start":231,"line_end":231,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6787270,"byte_end":6787285,"line_start":237,"line_end":237,"column_start":12,"column_end":27},"name":"into_send_error","qualname":"<TrySendError<T>>::into_send_error","value":"fn (self) -> SendError","parent":null,"children":[],"decl_id":null,"docs":" Drops the message and converts into a `SendError`.\n","sig":null,"attributes":[{"value":"/ Drops the message and converts into a `SendError`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6787204,"byte_end":6787258,"line_start":236,"line_end":236,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":156},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6790244,"byte_end":6790251,"line_start":338,"line_end":338,"column_start":8,"column_end":15},"name":"channel","qualname":"::mpsc::channel","value":"fn <T> (buffer: usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6789618,"byte_end":6789698,"line_start":327,"line_end":327,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6789699,"byte_end":6789702,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ Being bounded, this channel provides backpressure to ensure that the sender","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6789703,"byte_end":6789782,"line_start":329,"line_end":329,"column_start":1,"column_end":80}},{"value":"/ outpaces the receiver by only a limited amount. The channel's capacity is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6789783,"byte_end":6789860,"line_start":330,"line_end":330,"column_start":1,"column_end":78}},{"value":"/ equal to `buffer + num-senders`. In other words, each sender gets a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6789861,"byte_end":6789932,"line_start":331,"line_end":331,"column_start":1,"column_end":72}},{"value":"/ guaranteed slot in the channel capacity, and on top of that there are","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6789933,"byte_end":6790006,"line_start":332,"line_end":332,"column_start":1,"column_end":74}},{"value":"/ `buffer` \"first come, first serve\" slots available to all senders.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6790007,"byte_end":6790077,"line_start":333,"line_end":333,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6790078,"byte_end":6790081,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ The [`Receiver`](Receiver) returned implements the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6790082,"byte_end":6790136,"line_start":335,"line_end":335,"column_start":1,"column_end":55}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait, while [`Sender`](Sender) implements","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6790137,"byte_end":6790224,"line_start":336,"line_end":336,"column_start":1,"column_end":88}},{"value":"/ `Sink`.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6790225,"byte_end":6790236,"line_start":337,"line_end":337,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":158},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6791070,"byte_end":6791079,"line_start":356,"line_end":356,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::mpsc::unbounded","value":"fn <T> () -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6790558,"byte_end":6790634,"line_start":346,"line_end":346,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6790635,"byte_end":6790645,"line_start":347,"line_end":347,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6790646,"byte_end":6790649,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6790650,"byte_end":6790730,"line_start":349,"line_end":349,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6790731,"byte_end":6790810,"line_start":350,"line_end":350,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6790811,"byte_end":6790824,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6790825,"byte_end":6790828,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6790829,"byte_end":6790908,"line_start":353,"line_end":353,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6790909,"byte_end":6790985,"line_start":354,"line_end":354,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6790986,"byte_end":6791062,"line_start":355,"line_end":355,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6799156,"byte_end":6799164,"line_start":600,"line_end":600,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"fn (&mut self, msg: T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender`, returning the message\n if there was an error.\n","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender`, returning the message","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6799043,"byte_end":6799113,"line_start":598,"line_end":598,"column_start":5,"column_end":75}},{"value":"/ if there was an error.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6799118,"byte_end":6799144,"line_start":599,"line_end":599,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6799725,"byte_end":6799735,"line_start":618,"line_end":618,"column_start":12,"column_end":22},"name":"start_send","qualname":"<Sender<T>>::start_send","value":"fn (&mut self, msg: T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6799509,"byte_end":6799543,"line_start":613,"line_end":613,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6799548,"byte_end":6799551,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ This function should only be called after","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6799556,"byte_end":6799601,"line_start":615,"line_end":615,"column_start":5,"column_end":50}},{"value":"/ [`poll_ready`](Sender::poll_ready) has reported that the channel is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6799606,"byte_end":6799677,"line_start":616,"line_end":616,"column_start":5,"column_end":76}},{"value":"/ ready to receive a message.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6799682,"byte_end":6799713,"line_start":617,"line_end":617,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6800363,"byte_end":6800373,"line_start":635,"line_end":635,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the channel to determine if there is guaranteed capacity to send\n at least one item without waiting.","sig":null,"attributes":[{"value":"/ Polls the channel to determine if there is guaranteed capacity to send","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6799852,"byte_end":6799926,"line_start":623,"line_end":623,"column_start":5,"column_end":79}},{"value":"/ at least one item without waiting.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6799931,"byte_end":6799969,"line_start":624,"line_end":624,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6799974,"byte_end":6799977,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6799982,"byte_end":6800000,"line_start":626,"line_end":626,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6800005,"byte_end":6800008,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6800013,"byte_end":6800037,"line_start":628,"line_end":628,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6800042,"byte_end":6800045,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(Ok(_))` if there is sufficient capacity;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6800050,"byte_end":6800109,"line_start":630,"line_end":630,"column_start":5,"column_end":64}},{"value":"/ - `Poll::Pending` if the channel may not have","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6800114,"byte_end":6800163,"line_start":631,"line_end":631,"column_start":5,"column_end":54}},{"value":"/   capacity, in which case the current task is queued to be notified once","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6800168,"byte_end":6800244,"line_start":632,"line_end":632,"column_start":5,"column_end":81}},{"value":"/   capacity is available;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6800249,"byte_end":6800277,"line_start":633,"line_end":633,"column_start":5,"column_end":33}},{"value":"/ - `Poll::Ready(Err(SendError))` if the receiver has been dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6800282,"byte_end":6800351,"line_start":634,"line_end":634,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6800698,"byte_end":6800707,"line_start":646,"line_end":646,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6800617,"byte_end":6800686,"line_start":645,"line_end":645,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6800890,"byte_end":6800903,"line_start":651,"line_end":651,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<Sender<T>>::close_channel","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6800804,"byte_end":6800878,"line_start":650,"line_end":650,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6801119,"byte_end":6801129,"line_start":658,"line_end":658,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<Sender<T>>::disconnect","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6801016,"byte_end":6801107,"line_start":657,"line_end":657,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6801247,"byte_end":6801260,"line_start":663,"line_end":663,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<Sender<T>>::same_receiver","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6801177,"byte_end":6801235,"line_start":662,"line_end":662,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6801541,"byte_end":6801551,"line_start":673,"line_end":673,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<UnboundedSender<T>>::poll_ready","value":"fn (&self, _: &mut Context<'_>) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Check if the channel is ready to receive a message.\n","sig":null,"attributes":[{"value":"/ Check if the channel is ready to receive a message.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6801474,"byte_end":6801529,"line_start":672,"line_end":672,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6801872,"byte_end":6801881,"line_start":684,"line_end":684,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6801791,"byte_end":6801860,"line_start":683,"line_end":683,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6802064,"byte_end":6802077,"line_start":689,"line_end":689,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<UnboundedSender<T>>::close_channel","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6801978,"byte_end":6802052,"line_start":688,"line_end":688,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6802285,"byte_end":6802295,"line_start":696,"line_end":696,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<UnboundedSender<T>>::disconnect","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6802182,"byte_end":6802273,"line_start":695,"line_end":695,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6803012,"byte_end":6803022,"line_start":721,"line_end":721,"column_start":12,"column_end":22},"name":"start_send","qualname":"<UnboundedSender<T>>::start_send","value":"fn (&mut self, msg: T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6802817,"byte_end":6802851,"line_start":717,"line_end":717,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6802856,"byte_end":6802859,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ This method should only be called after `poll_ready` has been used to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6802864,"byte_end":6802937,"line_start":719,"line_end":719,"column_start":5,"column_end":78}},{"value":"/ verify that the channel is ready to receive a message.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6802942,"byte_end":6803000,"line_start":720,"line_end":720,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6803387,"byte_end":6803401,"line_start":731,"line_end":731,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<UnboundedSender<T>>::unbounded_send","value":"fn (&self, msg: T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message along this channel.","sig":null,"attributes":[{"value":"/ Sends a message along this channel.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6803141,"byte_end":6803180,"line_start":726,"line_end":726,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6803185,"byte_end":6803188,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6803193,"byte_end":6803268,"line_start":728,"line_end":728,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6803273,"byte_end":6803349,"line_start":729,"line_end":729,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6803354,"byte_end":6803375,"line_start":730,"line_end":730,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6803560,"byte_end":6803573,"line_start":736,"line_end":736,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<UnboundedSender<T>>::same_receiver","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6803490,"byte_end":6803548,"line_start":735,"line_end":735,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6805765,"byte_end":6805770,"line_start":811,"line_end":811,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6805528,"byte_end":6805592,"line_start":807,"line_end":807,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6805597,"byte_end":6805600,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6805605,"byte_end":6805680,"line_start":809,"line_end":809,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6805685,"byte_end":6805753,"line_start":810,"line_end":810,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6806551,"byte_end":6806559,"line_start":831,"line_end":831,"column_start":12,"column_end":20},"name":"try_next","qualname":"<Receiver<T>>::try_next","value":"fn (&mut self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6806165,"byte_end":6806240,"line_start":823,"line_end":823,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6806245,"byte_end":6806248,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6806253,"byte_end":6806325,"line_start":825,"line_end":825,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6806330,"byte_end":6806404,"line_start":826,"line_end":826,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6806409,"byte_end":6806429,"line_start":827,"line_end":827,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6806434,"byte_end":6806437,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called after `try_next` or `poll_next` has","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6806442,"byte_end":6806516,"line_start":829,"line_end":829,"column_start":5,"column_end":79}},{"value":"/ returned None.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6806521,"byte_end":6806539,"line_start":830,"line_end":830,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6810594,"byte_end":6810599,"line_start":947,"line_end":947,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of the channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of the channel, without dropping it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6810355,"byte_end":6810421,"line_start":943,"line_end":943,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6810426,"byte_end":6810429,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6810434,"byte_end":6810509,"line_start":945,"line_end":945,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6810514,"byte_end":6810582,"line_start":946,"line_end":946,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6811034,"byte_end":6811042,"line_start":959,"line_end":959,"column_start":12,"column_end":20},"name":"try_next","qualname":"<UnboundedReceiver<T>>::try_next","value":"fn (&mut self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6810648,"byte_end":6810723,"line_start":951,"line_end":951,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6810728,"byte_end":6810731,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6810736,"byte_end":6810808,"line_start":953,"line_end":953,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6810813,"byte_end":6810887,"line_start":954,"line_end":954,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6810892,"byte_end":6810912,"line_start":955,"line_end":955,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6810917,"byte_end":6810920,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called after `try_next` or `poll_next` has","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6810925,"byte_end":6810999,"line_start":957,"line_end":957,"column_start":5,"column_end":79}},{"value":"/ returned None.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6811004,"byte_end":6811022,"line_start":958,"line_end":958,"column_start":5,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":249},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::oneshot","value":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":260},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":438},{"krate":0,"index":444},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":278},{"krate":0,"index":283},{"krate":0,"index":447},{"krate":0,"index":458},{"krate":0,"index":457},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":449},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":293},{"krate":0,"index":297}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","byte_start":1402,"byte_end":1427,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"! A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6821905,"byte_end":6821975,"line_start":1,"line_end":1,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":426},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6822445,"byte_end":6822453,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":428}],"decl_id":null,"docs":" A future for a value that will be provided by another asynchronous task.","sig":null,"attributes":[{"value":"/ A future for a value that will be provided by another asynchronous task.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6822219,"byte_end":6822295,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6822296,"byte_end":6822299,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6822300,"byte_end":6822348,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6822349,"byte_end":6822416,"line_start":16,"line_end":16,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":432},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6822629,"byte_end":6822635,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"Sender","qualname":"::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":434}],"decl_id":null,"docs":" A means of transmitting a single value to another task.","sig":null,"attributes":[{"value":"/ A means of transmitting a single value to another task.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6822488,"byte_end":6822547,"line_start":22,"line_end":22,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6822548,"byte_end":6822551,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`] function.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6822552,"byte_end":6822600,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":265},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825516,"byte_end":6825523,"line_start":102,"line_end":102,"column_start":8,"column_end":15},"name":"channel","qualname":"::oneshot::channel","value":"fn <T> () -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new one-shot channel for sending values across asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a new one-shot channel for sending values across asynchronous tasks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6824540,"byte_end":6824620,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6824621,"byte_end":6824624,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This function is similar to Rust's channel constructor found in the standard","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6824625,"byte_end":6824705,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ library. Two halves are returned, the first of which is a `Sender` handle,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6824706,"byte_end":6824784,"line_start":74,"line_end":74,"column_start":1,"column_end":79}},{"value":"/ used to signal the end of a computation and provide its value. The second","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6824785,"byte_end":6824862,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ half is a `Receiver` which implements the `Future` trait, resolving to the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6824863,"byte_end":6824941,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/ value that was given to the `Sender` handle.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6824942,"byte_end":6824990,"line_start":77,"line_end":77,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6824991,"byte_end":6824994,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Each half can be separately owned and sent across tasks.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6824995,"byte_end":6825055,"line_start":79,"line_end":79,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825056,"byte_end":6825059,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825060,"byte_end":6825074,"line_start":81,"line_end":81,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825075,"byte_end":6825078,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825079,"byte_end":6825086,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825087,"byte_end":6825121,"line_start":84,"line_end":84,"column_start":1,"column_end":35}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825122,"byte_end":6825157,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/ use std::thread;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825158,"byte_end":6825178,"line_start":86,"line_end":86,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825179,"byte_end":6825182,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ let (sender, receiver) = oneshot::channel::<i32>();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825183,"byte_end":6825238,"line_start":88,"line_end":88,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825239,"byte_end":6825242,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ # let t =","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825243,"byte_end":6825256,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825257,"byte_end":6825279,"line_start":91,"line_end":91,"column_start":1,"column_end":23}},{"value":"/     let future = receiver.map(|i| {","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825280,"byte_end":6825319,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/         println!(\"got: {:?}\", i);","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825320,"byte_end":6825357,"line_start":93,"line_end":93,"column_start":1,"column_end":38}},{"value":"/     });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825358,"byte_end":6825369,"line_start":94,"line_end":94,"column_start":1,"column_end":12}},{"value":"/     // ...","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825370,"byte_end":6825384,"line_start":95,"line_end":95,"column_start":1,"column_end":15}},{"value":"/ # return future;","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825385,"byte_end":6825405,"line_start":96,"line_end":96,"column_start":1,"column_end":21}},{"value":"/ });","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825406,"byte_end":6825413,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825414,"byte_end":6825417,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ sender.send(3).unwrap();","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825418,"byte_end":6825446,"line_start":99,"line_end":99,"column_start":1,"column_end":29}},{"value":"/ # futures::executor::block_on(t.join().unwrap());","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825447,"byte_end":6825500,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825501,"byte_end":6825508,"line_start":101,"line_end":101,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6834826,"byte_end":6834830,"line_start":341,"line_end":341,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn (self, t: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Completes this oneshot with a successful result.","sig":null,"attributes":[{"value":"/ Completes this oneshot with a successful result.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6834304,"byte_end":6834356,"line_start":331,"line_end":331,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6834361,"byte_end":6834364,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ This function will consume `self` and indicate to the other end, the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6834369,"byte_end":6834441,"line_start":333,"line_end":333,"column_start":5,"column_end":77}},{"value":"/ [`Receiver`](Receiver), that the value provided is the result of the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6834446,"byte_end":6834518,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ computation this represents.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6834523,"byte_end":6834555,"line_start":335,"line_end":335,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6834560,"byte_end":6834563,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If the value is successfully enqueued for the remote end to receive,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6834568,"byte_end":6834640,"line_start":337,"line_end":337,"column_start":5,"column_end":77}},{"value":"/ then `Ok(())` is returned. If the receiving end was dropped before","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6834645,"byte_end":6834715,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ this function was called, however, then `Err` is returned with the value","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6834720,"byte_end":6834796,"line_start":339,"line_end":339,"column_start":5,"column_end":81}},{"value":"/ provided.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6834801,"byte_end":6834814,"line_start":340,"line_end":340,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6835487,"byte_end":6835500,"line_start":357,"line_end":357,"column_start":12,"column_end":25},"name":"poll_canceled","qualname":"<Sender<T>>::poll_canceled","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Polls this `Sender` half to detect whether its associated\n [`Receiver`](Receiver) with has been dropped.","sig":null,"attributes":[{"value":"/ Polls this `Sender` half to detect whether its associated","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6834900,"byte_end":6834961,"line_start":345,"line_end":345,"column_start":5,"column_end":66}},{"value":"/ [`Receiver`](Receiver) with has been dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6834966,"byte_end":6835015,"line_start":346,"line_end":346,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6835020,"byte_end":6835023,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Return values","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6835028,"byte_end":6835047,"line_start":348,"line_end":348,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6835052,"byte_end":6835055,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ If `Ready(())` is returned then the associated `Receiver` has been","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6835060,"byte_end":6835130,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/ dropped, which means any work required for sending should be canceled.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6835135,"byte_end":6835209,"line_start":351,"line_end":351,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6835214,"byte_end":6835217,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ If `Pending` is returned then the associated `Receiver` is still","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6835222,"byte_end":6835290,"line_start":353,"line_end":353,"column_start":5,"column_end":73}},{"value":"/ alive and may be able to receive a message if sent. The current task,","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6835295,"byte_end":6835368,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/ however, is scheduled to receive a notification if the corresponding","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6835373,"byte_end":6835445,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ `Receiver` goes away.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6835450,"byte_end":6835475,"line_start":356,"line_end":356,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6835935,"byte_end":6835946,"line_start":367,"line_end":367,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Sender<T>>::is_canceled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender`'s corresponding `Receiver`\n has been dropped.","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender`'s corresponding `Receiver`","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6835596,"byte_end":6835661,"line_start":361,"line_end":361,"column_start":5,"column_end":70}},{"value":"/ has been dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6835666,"byte_end":6835687,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6835692,"byte_end":6835695,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ Unlike [`poll_canceled`](Sender::poll_canceled), this function does not","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6835700,"byte_end":6835775,"line_start":364,"line_end":364,"column_start":5,"column_end":80}},{"value":"/ enqueue a task for wakeup upon cancellation, but merely reports the","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6835780,"byte_end":6835851,"line_start":365,"line_end":365,"column_start":5,"column_end":76}},{"value":"/ current state, which may be subject to concurrent modification.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6835856,"byte_end":6835923,"line_start":366,"line_end":366,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":447},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836261,"byte_end":6836269,"line_start":381,"line_end":381,"column_start":12,"column_end":20},"name":"Canceled","qualname":"::oneshot::Canceled","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from a [`Receiver`](Receiver) when the corresponding\n [`Sender`](Sender) is dropped.\n","sig":null,"attributes":[{"value":"/ Error returned from a [`Receiver`](Receiver) when the corresponding","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836098,"byte_end":6836169,"line_start":378,"line_end":378,"column_start":1,"column_end":72}},{"value":"/ [`Sender`](Sender) is dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836170,"byte_end":6836204,"line_start":379,"line_end":379,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836877,"byte_end":6836882,"line_start":400,"line_end":400,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close this receiver, preventing any subsequent attempts to\n send to it.","sig":null,"attributes":[{"value":"/ Gracefully close this receiver, preventing any subsequent attempts to","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836505,"byte_end":6836578,"line_start":393,"line_end":393,"column_start":5,"column_end":78}},{"value":"/ send to it.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836583,"byte_end":6836598,"line_start":394,"line_end":394,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836603,"byte_end":6836606,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after this method returns is","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836611,"byte_end":6836678,"line_start":396,"line_end":396,"column_start":5,"column_end":72}},{"value":"/ guaranteed to fail. After calling this method, you can use","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836683,"byte_end":6836745,"line_start":397,"line_end":397,"column_start":5,"column_end":67}},{"value":"/ [`Receiver::poll`](core::future::Future::poll) to determine whether a","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836750,"byte_end":6836823,"line_start":398,"line_end":398,"column_start":5,"column_end":78}},{"value":"/ message had previously been sent.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836828,"byte_end":6836865,"line_start":399,"line_end":399,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6837313,"byte_end":6837321,"line_start":412,"line_end":412,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<Option<T>, Canceled>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message outside of the context of a task.","sig":null,"attributes":[{"value":"/ Attempts to receive a message outside of the context of a task.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836937,"byte_end":6837004,"line_start":404,"line_end":404,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6837009,"byte_end":6837012,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Does not schedule a task wakeup or have any other side effects.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6837017,"byte_end":6837084,"line_start":406,"line_end":406,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6837089,"byte_end":6837092,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ A return value of `None` must be considered immediately stale (out of","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6837097,"byte_end":6837170,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ date) unless [`close`](Receiver::close) has been called first.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6837175,"byte_end":6837241,"line_start":409,"line_end":409,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6837246,"byte_end":6837249,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the sender was dropped.","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6837254,"byte_end":6837301,"line_start":411,"line_end":411,"column_start":5,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lock.rs","byte_start":6776959,"byte_end":6776963,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lock.rs","byte_start":6777000,"byte_end":6777004,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lock.rs","byte_start":6777020,"byte_end":6777024,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lock.rs","byte_start":6777865,"byte_end":6777872,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lock.rs","byte_start":6778125,"byte_end":6778132,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lock.rs","byte_start":6778495,"byte_end":6778502,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/queue.rs","byte_start":6815830,"byte_end":6815835,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/queue.rs","byte_start":6815873,"byte_end":6815878,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/queue.rs","byte_start":6815895,"byte_end":6815899,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/queue.rs","byte_start":6816095,"byte_end":6816100,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/queue.rs","byte_start":6819002,"byte_end":6819007,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/sink_impl.rs","byte_start":6819469,"byte_end":6819475,"line_start":6,"line_end":6,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/sink_impl.rs","byte_start":6820421,"byte_end":6820436,"line_start":45,"line_end":45,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6783858,"byte_end":6783869,"line_start":112,"line_end":112,"column_start":19,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784324,"byte_end":6784339,"line_start":127,"line_end":127,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784823,"byte_end":6784840,"line_start":144,"line_end":144,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6785383,"byte_end":6785392,"line_start":170,"line_end":170,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6785672,"byte_end":6785681,"line_start":180,"line_end":180,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6785691,"byte_end":6785700,"line_start":182,"line_end":182,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6786184,"byte_end":6786196,"line_start":200,"line_end":200,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6786403,"byte_end":6786415,"line_start":208,"line_end":208,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6786717,"byte_end":6786729,"line_start":218,"line_end":218,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6786745,"byte_end":6786757,"line_start":220,"line_end":220,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6787353,"byte_end":6787365,"line_start":242,"line_end":242,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6787522,"byte_end":6787534,"line_start":249,"line_end":249,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6787683,"byte_end":6787695,"line_start":255,"line_end":255,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6789339,"byte_end":6789349,"line_start":310,"line_end":310,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6791837,"byte_end":6791848,"line_start":390,"line_end":390,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6799027,"byte_end":6799033,"line_start":597,"line_end":597,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6801449,"byte_end":6801464,"line_start":671,"line_end":671,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6803772,"byte_end":6803778,"line_start":744,"line_end":744,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6803877,"byte_end":6803892,"line_start":750,"line_end":750,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6804009,"byte_end":6804020,"line_start":756,"line_end":756,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6805220,"byte_end":6805231,"line_start":789,"line_end":789,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6805510,"byte_end":6805518,"line_start":806,"line_end":806,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6809011,"byte_end":6809019,"line_start":895,"line_end":895,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6809051,"byte_end":6809059,"line_start":897,"line_end":897,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6809160,"byte_end":6809168,"line_start":903,"line_end":903,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6810048,"byte_end":6810056,"line_start":930,"line_end":930,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6810328,"byte_end":6810345,"line_start":942,"line_end":942,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6811150,"byte_end":6811167,"line_start":964,"line_end":964,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6811270,"byte_end":6811287,"line_start":970,"line_end":970,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6811523,"byte_end":6811528,"line_start":987,"line_end":987,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6812140,"byte_end":6812145,"line_start":1008,"line_end":1008,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6812182,"byte_end":6812187,"line_start":1009,"line_end":1009,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6822743,"byte_end":6822751,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6822776,"byte_end":6822782,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825748,"byte_end":6825753,"line_start":113,"line_end":113,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6834288,"byte_end":6834294,"line_start":330,"line_end":330,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836023,"byte_end":6836029,"line_start":372,"line_end":372,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836294,"byte_end":6836302,"line_start":383,"line_end":383,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836466,"byte_end":6836474,"line_start":390,"line_end":390,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836487,"byte_end":6836495,"line_start":392,"line_end":392,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6837424,"byte_end":6837432,"line_start":417,"line_end":417,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6837642,"byte_end":6837650,"line_start":428,"line_end":428,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","byte_start":1392,"byte_end":1396,"line_start":39,"line_end":39,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":34}},{"kind":"Mod","span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lib.rs","byte_start":1440,"byte_end":1447,"line_start":41,"line_end":41,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":249}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lock.rs","byte_start":6776959,"byte_end":6776963,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lock.rs","byte_start":6777000,"byte_end":6777004,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lock.rs","byte_start":6777020,"byte_end":6777024,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lock.rs","byte_start":6777865,"byte_end":6777872,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lock.rs","byte_start":6778125,"byte_end":6778132,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/lock.rs","byte_start":6778495,"byte_end":6778502,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/queue.rs","byte_start":6815830,"byte_end":6815835,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":314},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/queue.rs","byte_start":6815873,"byte_end":6815878,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":314},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/queue.rs","byte_start":6815895,"byte_end":6815899,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/queue.rs","byte_start":6816095,"byte_end":6816100,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/queue.rs","byte_start":6819002,"byte_end":6819007,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":314},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/sink_impl.rs","byte_start":6819469,"byte_end":6819475,"line_start":6,"line_end":6,"column_start":21,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":329},"to":{"krate":16,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/sink_impl.rs","byte_start":6820421,"byte_end":6820436,"line_start":45,"line_end":45,"column_start":21,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":336},"to":{"krate":16,"index":9}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6783858,"byte_end":6783869,"line_start":112,"line_end":112,"column_start":19,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784280,"byte_end":6784284,"line_start":126,"line_end":126,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":118}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784287,"byte_end":6784291,"line_start":126,"line_end":126,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":118}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784294,"byte_end":6784299,"line_start":126,"line_end":126,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1593},"to":{"krate":0,"index":118}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784324,"byte_end":6784339,"line_start":127,"line_end":127,"column_start":22,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":336},"to":{"krate":0,"index":118}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6784823,"byte_end":6784840,"line_start":144,"line_end":144,"column_start":19,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":349},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6785383,"byte_end":6785392,"line_start":170,"line_end":170,"column_start":23,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6785672,"byte_end":6785681,"line_start":180,"line_end":180,"column_start":28,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":356},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6785691,"byte_end":6785700,"line_start":182,"line_end":182,"column_start":6,"column_end":15},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6786184,"byte_end":6786196,"line_start":200,"line_end":200,"column_start":24,"column_end":36},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6786403,"byte_end":6786415,"line_start":208,"line_end":208,"column_start":26,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6786717,"byte_end":6786729,"line_start":218,"line_end":218,"column_start":47,"column_end":59},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":369},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6786745,"byte_end":6786757,"line_start":220,"line_end":220,"column_start":9,"column_end":21},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6787353,"byte_end":6787365,"line_start":242,"line_end":242,"column_start":21,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6787522,"byte_end":6787534,"line_start":249,"line_end":249,"column_start":23,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6787683,"byte_end":6787695,"line_start":255,"line_end":255,"column_start":28,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":122},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6789339,"byte_end":6789349,"line_start":310,"line_end":310,"column_start":6,"column_end":16},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6791837,"byte_end":6791848,"line_start":390,"line_end":390,"column_start":9,"column_end":20},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6799027,"byte_end":6799033,"line_start":597,"line_end":597,"column_start":9,"column_end":15},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6801449,"byte_end":6801464,"line_start":671,"line_end":671,"column_start":9,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6803772,"byte_end":6803778,"line_start":744,"line_end":744,"column_start":19,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6803877,"byte_end":6803892,"line_start":750,"line_end":750,"column_start":19,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":336},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6804009,"byte_end":6804020,"line_start":756,"line_end":756,"column_start":19,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6805220,"byte_end":6805231,"line_start":789,"line_end":789,"column_start":18,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6805510,"byte_end":6805518,"line_start":806,"line_end":806,"column_start":9,"column_end":17},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6809011,"byte_end":6809019,"line_start":895,"line_end":895,"column_start":19,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6809051,"byte_end":6809059,"line_start":897,"line_end":897,"column_start":25,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":343},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6809160,"byte_end":6809168,"line_start":903,"line_end":903,"column_start":20,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":343},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6810048,"byte_end":6810056,"line_start":930,"line_end":930,"column_start":18,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6810328,"byte_end":6810345,"line_start":942,"line_end":942,"column_start":9,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6811150,"byte_end":6811167,"line_start":964,"line_end":964,"column_start":25,"column_end":42},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":349},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6811270,"byte_end":6811287,"line_start":970,"line_end":970,"column_start":20,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":349},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6811523,"byte_end":6811528,"line_start":987,"line_end":987,"column_start":9,"column_end":14},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6812140,"byte_end":6812145,"line_start":1008,"line_end":1008,"column_start":31,"column_end":36},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":402},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/mpsc/mod.rs","byte_start":6812182,"byte_end":6812187,"line_start":1009,"line_end":1009,"column_start":31,"column_end":36},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":402},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6822743,"byte_end":6822751,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6822776,"byte_end":6822782,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":432},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6825748,"byte_end":6825753,"line_start":113,"line_end":113,"column_start":9,"column_end":14},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6834288,"byte_end":6834294,"line_start":330,"line_end":330,"column_start":9,"column_end":15},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836023,"byte_end":6836029,"line_start":372,"line_end":372,"column_start":18,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":432},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836294,"byte_end":6836302,"line_start":383,"line_end":383,"column_start":23,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":447},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836466,"byte_end":6836474,"line_start":390,"line_end":390,"column_start":28,"column_end":36},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":447},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6836487,"byte_end":6836495,"line_start":392,"line_end":392,"column_start":9,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6837424,"byte_end":6837432,"line_start":417,"line_end":417,"column_start":20,"column_end":28},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":8076}},{"span":{"file_name":"/home/ivan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.1/src/oneshot.rs","byte_start":6837642,"byte_end":6837650,"line_start":428,"line_end":428,"column_start":18,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":2076}}]}